import{e as i,S as u,r as x}from"./iframe-DKsKIeO_.js";import{g}from"./getBatchActions-BJ240EF4.js";import{s as w,m as E}from"./_storybook-styles-HxjOp6y4.js";import{D as f}from"./DatagridActions-gDMflxoN.js";import{D as S}from"./DatagridPagination-CrrmK_RE.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-CbYSSwGV.js";import{u as h}from"./useExpandedRow-95j4msQg.js";import{u as D}from"./useSelectRows-DurCWAZV.js";import{u as C}from"./useStickyColumn-DE1pFJLc.js";import{u as R}from"./usePrefix-CukEHEiA.js";import{E as H}from"./bucket-6-BDZoIsJJ.js";import{T as b}from"./bucket-18-DCBnxAKD.js";import"./bucket-0-Bkg56oSG.js";import"./bucket-2-BMfBeLco.js";import"./index-zH3n7d5W.js";import"./bucket-7-ZHd8Hq_g.js";import"./bucket-19-CjGrDCAa.js";import"./ComposedModal-B2ovIMVM.js";import"./index-BEhuL1MR.js";import"./index-CDQbx0x2.js";import"./LayerContext-NMcPk0Nw.js";import"./clamp--00YEiB8.js";import"./ButtonSet-B47ramhY.js";import"./InlineLoading-p56X7jsD.js";import"./mergeRefs-D4pwfk3t.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-DEXO-vbF.js";import"./Text-DWkOwfBd.js";import"./utils-BNH49ZRR.js";import"./TableToolbarSearch-gtWb3WuC.js";import"./wrapComponent-BUo4YaXY.js";import"./Search-B5qeZUes.js";import"./FormContext-DnXssUoQ.js";import"./bucket-15-DC9m_l6j.js";import"./Dropdown-mBk2AehQ.js";import"./index-CQX_odjL.js";import"./inheritsLoose-DHKJTbHM.js";import"./MenuItem-C7wXSQ0S.js";import"./useControllableState-DfPh9Ar9.js";import"./useAttachedMenu-BjAAxBze.js";import"./index-D1B3TaZ1.js";import"./index-Ca_0obo9.js";import"./bucket-13-NrRSRe7I.js";import"./useOutsideClick-yet8EmE5.js";import"./OverflowMenuItem-BuZM9I4z.js";import"./useFilterContext-o9TFIe8A.js";import"./bucket-14-D4sfvfzO.js";import"./Pagination-Bc6hqiM6.js";import"./Select-Ylkku1U5.js";import"./SelectItem-47jv1nCC.js";import"./MultiSelect-oe5NxaTz.js";import"./Checkbox-CVRUThck.js";import"./devtools-Bn3omVKL.js";import"./TableRow-5xPbsC76.js";import"./bucket-1-CTMMvGsV.js";import"./TableToolbar-DBlCa349.js";import"./index-Do60dg14.js";import"./ErrorEmptyState-Dm_1Wvjt.js";import"./EmptyState-wViNJKuF.js";import"./EmptyStateV2.deprecated-BpJMV6nf.js";import"./Link-DPOhQJ5Q.js";import"./ErrorIllustration-DQHGJrs8.js";import"./useId-DN3dyYk2.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-XVEeo0Bq.js";import"./NoDataIllustration-CxpZ_fEc.js";import"./NotFoundEmptyState-DCarVAL4.js";import"./NotFoundIllustration-D0ijBfZA.js";import"./index.esm-B9NAOgwl.js";import"./usePreviousValue-CMAapDDk.js";import"./useResizeObserver-CBxb5I5g.js";import"./useIsomorphicEffect-0hnIMifz.js";import"./getFocusableElements-BW7cf991.js";import"./index-KIjfM1LT.js";import"./props-helper-CC7b4v3b.js";import"./useClickOutside-DhQqKS6x.js";import"./AccordionItem--x4dxrtI.js";import"./DatePicker-BNhrw3vx.js";import"./FormGroup-B5HCBD0l.js";import"./NumberInput-BuZdcNXo.js";import"./useNormalizedInputProps-LQxEukKR.js";import"./documentLang-E105Y72C.js";import"./bucket-16-CF33Nm7Q.js";import"./RadioButton-9Z9dZEZL.js";import"./RadioButtonGroup-ngT64JIY.js";import"./usePrefersReducedMotion-DGVUvi25.js";import"./usePresence-gTeZZjwL.js";import"./ActionSet-G6HtkfUk.js";import"./useWindowResize-DFqNbx9a.js";import"./TagSet-DRBAq23W.js";import"./Tag-ByT5Z9aM.js";import"./DefinitionTooltip-62O3uvQ_.js";import"./DismissibleTag-BIVmDsJ-.js";import"./usePortalTarget-Dftb10Sg.js";import"./OperationalTag-dmWZlAvX.js";import"./SkeletonText-BEb1LIUU.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-CnXSbJ17.js";import"./TableSelectRow-CYS7XonB.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,Ht={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const bt=["ExpandableRowStory"];export{e as ExpandableRowStory,bt as __namedExportsOrder,Ht as default};
