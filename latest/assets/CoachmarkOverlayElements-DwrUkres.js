import{r as u,R as t}from"./index-BwDkhjyp.js";import{u as ce}from"./uuidv4-BQrI85uz.js";import{P as o}from"./index-Dk74W0Oi.js";import{c as E,C as se}from"./index-CO-HQMMN.js";import{g as W}from"./devtools-7ohusRRR.js";import{p as k,B as q,a as me}from"./settings-9_3hiHpE.js";import{c as ue}from"./bucket-5-DLUbIH5T.js";import{u as de}from"./useIsomorphicEffect-D7JMtAof.js";import{l as A}from"./lodash-C6Eq4oiK.js";import{S as pe}from"./SteppedAnimatedMedia-B716d7EF.js";import{C as fe}from"./Carousel-hwpbASlj.js";var he=(e=>(e.DEFAULT="default",e))(he||{}),B=(e=>(e.TOOLTIP="tooltip",e.FLOATING="floating",e.FIXED="fixed",e.STACKED="stacked",e))(B||{}),g=(e=>(e.BOTTOM="bottom",e.BOTTOM_LEFT="bottom-left",e.BOTTOM_RIGHT="bottom-right",e.LEFT="left",e.LEFT_TOP="left-top",e.LEFT_BOTTOM="left-bottom",e.RIGHT="right",e.RIGHT_TOP="right-top",e.RIGHT_BOTTOM="right-bottom",e.TOP="top",e.TOP_LEFT="top-left",e.TOP_RIGHT="top-right",e))(g||{});const be=u.createContext(),le=()=>u.useContext(be),ee=`${k.prefix}--coachmark-dragbar`,te=`${k.prefix}--coachmark-overlay`,Q="CoachmarkDragbar",V={closeIconDescription:"Close",onDrag:()=>{},onClose:()=>{},showCloseButton:!0,theme:"light"};let _=t.forwardRef(({a11yKeyboardHandler:e,closeIconDescription:m=V.closeIconDescription,onClose:s=V.onClose,onDrag:n=V.onDrag,showCloseButton:r=V.showCloseButton,theme:l=V.theme,...c},I)=>{const[$,h]=u.useState(!1);u.useEffect(()=>{const v=()=>h(!1);return window.addEventListener("mouseup",v),()=>{window.removeEventListener("mouseup",v)}},[]),u.useEffect(()=>{const v=T=>{n(T.movementX,T.movementY)};return $&&window.addEventListener("mousemove",v),()=>{window.removeEventListener("mousemove",v)}},[$,n]);const y=()=>h(!0);return t.createElement("header",{...c,className:E(ee,`${ee}__${l}`,{}),ref:I,...W(Q)},t.createElement("button",{type:"button",className:`${te}__handle`,onMouseDown:y,onKeyDown:e,title:"Drag Handle"},t.createElement(ue,{size:"16"})),r&&t.createElement(q,{kind:"ghost",size:"sm",renderIcon:se,iconDescription:m,hasIconOnly:!0,className:`${te}--close-btn`,onClick:s}))});_=k.checkComponentEnabled(_,Q);_.displayName=Q;_.propTypes={a11yKeyboardHandler:o.func.isRequired,closeIconDescription:o.string,onClose:o.func,onDrag:o.func,showCloseButton:o.bool,theme:o.oneOf(["light","dark"])};_.__docgenInfo={description:`DO NOT USE. This component is for the exclusive use
of other Onboarding components.`,methods:[],displayName:"CoachmarkDragbar",props:{closeIconDescription:{defaultValue:{value:"'Close'",computed:!1},description:"Tooltip text and aria label for the Close button icon.",type:{name:"string"},required:!1},onClose:{defaultValue:{value:"() => {}",computed:!1},description:"Function to call when the close button is clicked.",type:{name:"func"},required:!1},onDrag:{defaultValue:{value:"() => {}",computed:!1},description:`Function to call when the user clicks and drags the Coachmark.
For internal use only by the parent CoachmarkOverlay.`,type:{name:"func"},required:!1},showCloseButton:{defaultValue:{value:"true",computed:!1},description:'Show/hide the "X" close button.',type:{name:"bool"},required:!1},theme:{defaultValue:{value:"'light'",computed:!1},description:"Determines the theme of the component.",type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]},required:!1},a11yKeyboardHandler:{description:"Handler to manage keyboard interactions with the dragbar.",type:{name:"func"},required:!0}}};const oe=`${k.prefix}--coachmark-header`,ae=`${k.prefix}--coachmark-overlay`,Z="CoachmarkHeader",j={closeIconDescription:"Close",onClose:()=>{},showCloseButton:!0,theme:"light"};let P=t.forwardRef(({closeIconDescription:e=j.closeIconDescription,onClose:m=j.onClose,showCloseButton:s=j.showCloseButton,theme:n=j.theme,...r},l)=>t.createElement("header",{...r,className:E(oe,`${oe}__${n}`),ref:l,...W(Z)},s&&t.createElement("div",{className:`${ae}--close-btn-container`},t.createElement(q,{kind:"ghost",size:"sm",renderIcon:se,iconDescription:e,hasIconOnly:!0,className:`${ae}--close-btn`,onClick:m}))));P=k.checkComponentEnabled(P,Z);P.displayName=Z;P.propTypes={closeIconDescription:o.string,onClose:o.func,showCloseButton:o.bool,theme:o.oneOf(["light","dark"])};P.__docgenInfo={description:`DO NOT USE. This component is for the exclusive use
of other Onboarding components.`,methods:[],displayName:"CoachmarkHeader",props:{closeIconDescription:{defaultValue:{value:"'Close'",computed:!1},description:"Tooltip text and aria label for the Close button icon.",type:{name:"string"},required:!1},onClose:{defaultValue:{value:"() => {}",computed:!1},description:"Function to call when the close button is clicked.",type:{name:"func"},required:!1},showCloseButton:{defaultValue:{value:"true",computed:!1},description:'Show/hide the "X" close button.',type:{name:"bool"},required:!1},theme:{defaultValue:{value:"'light'",computed:!1},description:"Determines the theme of the component.",type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]},required:!1}}};const ge=(e,m)=>{const{width:s,height:n}=e.targetRect,r=24;let l=0,c=0;if(m!==B.TOOLTIP)switch(e.align){case g.TOP:c=s/2;break;case g.TOP_LEFT:c=r;break;case g.TOP_RIGHT:c=s-r;break;case g.BOTTOM:l=n,c=s/2;break;case g.BOTTOM_LEFT:l=n,c=r;break;case g.BOTTOM_RIGHT:l=n,c=s-r;break;case g.LEFT:l=n/2;break;case g.LEFT_TOP:l=r;break;case g.LEFT_BOTTOM:l=n-r;break;case g.RIGHT:l=n/2,c=s;break;case g.RIGHT_TOP:l=r,c=s;break;case g.RIGHT_BOTTOM:l=n-r,c=s;break}return{top:l,left:c}},w=`${k.prefix}--coachmark-overlay`,M="CoachmarkOverlay",ne={kind:B.FLOATING,theme:"light"};let L=u.forwardRef(({children:e,onClose:m,fixedIsVisible:s,className:n,kind:r=ne.kind,theme:l=ne.theme,...c},I)=>{const{winHeight:$,winWidth:h}=ye(),[y,v]=u.useState(!1),T=u.useRef(null),b=le(),D=r===B.TOOLTIP,O=r===B.FLOATING,X=n==null?void 0:n.includes("is-visible"),S=a=>{const{shiftKey:C,key:i}=a;if(i==="Enter"||i===" ")v(p=>!p);else if(y){const p=C?128:32;switch(i){case"ArrowLeft":d(p*-1,0);break;case"ArrowRight":d(p,0);break;case"ArrowUp":d(0,p*-1);break;case"ArrowDown":d(0,p);break}}},x=u.useMemo(()=>{const a={};if((D||O)&&(b.targetRect&&(a.left=b.targetRect.x+window.scrollX,a.top=b.targetRect.y+window.scrollY),a.left&&a.top&&(D&&(a.left=a.left+16,a.top=a.top+16),O))){const C=ge(b,r);a.left=a.left+C.left,a.top=a.top+C.top}return a},[D,O,b,r]);function F(a,C){let i=a,p=C;const G=h-288,U=$-150;return i<0?i=0:i>G&&(i=G),p<0?p=0:p>U&&(p=U),{targetX:i,targetY:p}}function d(a,C){const i=T.current;if(!i)return;const{x:p,y:G}=i.getBoundingClientRect(),{targetX:U,targetY:ie}=F(p+a,G+C);i.style.transform="none",i.style.position="fixed",i.style.left=`${U}px`,i.style.top=`${ie}px`,i.style.bottom="auto"}const f=ce();return de(()=>{var a;if(T.current){const C=(a=T.current)==null?void 0:a.style;Object.keys(x).forEach(i=>{const p=x[i];C.setProperty(i,`${p}px`)})}},[x,T]),t.createElement("div",{...c,className:E(w,`${w}--${r}`,`${w}__${l}`,(D||O)&&`${w}--${b.align}`,s&&`${w}--is-visible`,y&&`${w}--is-dragmode`,n),ref:T,"aria-labelledby":f,tabIndex:-1,...W(M)},O?t.createElement(_,{a11yKeyboardHandler:S,onBlur:()=>v(!1),onDrag:d,theme:l,onClose:m}):t.createElement(P,{onClose:m}),t.createElement("div",{className:`${w}__body`,ref:I,id:f},t.Children.map(e,a=>t.cloneElement(a,{isVisible:X}))))});function re(){const{innerWidth:e,innerHeight:m}=window;return{winWidth:e,winHeight:m}}const ye=()=>{const[e,m]=u.useState(re());return u.useEffect(()=>{function s(){m(re())}return window.addEventListener("resize",s),()=>window.removeEventListener("resize",s)},[]),e};L=k.checkComponentEnabled(L,M);L.displayName=M;L.propTypes={children:o.node.isRequired,className:o.string,fixedIsVisible:o.bool.isRequired,kind:o.oneOf(Object.values(B)),onClose:o.func.isRequired,theme:o.oneOf(["light","dark"])};L.__docgenInfo={description:`DO NOT USE. This component is for the exclusive use
of other Onboarding components.`,methods:[],displayName:"CoachmarkOverlay",props:{kind:{defaultValue:{value:"COACHMARK_OVERLAY_KIND.FLOATING",computed:!0},description:"What kind or style of Coachmark to render.",type:{name:"enum",computed:!0,value:"Object.values(COACHMARK_OVERLAY_KIND)"},required:!1},theme:{defaultValue:{value:"'light'",computed:!1},description:"Determines the theme of the component.",type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]},required:!1},children:{description:`The CoachmarkOverlayElements child components.
Validation is handled in the parent Coachmark component.`,type:{name:"node"},required:!0},className:{description:"Optional class name for this component.",type:{name:"string"},required:!1},fixedIsVisible:{description:`The visibility of CoachmarkOverlay is
managed in the parent Coachmark component.`,type:{name:"bool"},required:!0},onClose:{description:"Function to call when the Coachmark closes.",type:{name:"func"},required:!0}}};const N=`${k.prefix}--coachmark-overlay-element`,K="CoachmarkOverlayElement";let z=t.forwardRef(({button:e,className:m,description:s,title:n,...r},l)=>t.createElement("div",{...r,className:E(N,m,{}),ref:l,...W(K)},t.createElement("div",{className:`${N}__content`},n&&t.createElement("h2",{className:`${N}__title`},n),s&&t.createElement("p",{className:`${N}__body`},s)),e&&t.createElement("div",{className:`${N}__button`},e)));z=k.checkComponentEnabled(z,K);z.displayName=K;z.propTypes={button:o.node,className:o.string,description:o.node.isRequired,title:o.string.isRequired};z.__docgenInfo={description:`Component to be displayed within a CoachmarkOverlayElements container.
Can be used 1 to N number, to display content in a Coachmark's overlay
in a carousel fashion.`,methods:[],displayName:"CoachmarkOverlayElement",props:{button:{description:`An optional button can be rendered below the description.
This can be a link, button, Coachmark button, etc.`,type:{name:"node"},required:!1},className:{description:"Optional class name for this component.",type:{name:"string"},required:!1},description:{description:"The description of the Coachmark.",type:{name:"node"},required:!0},title:{description:"The title of the Coachmark.",type:{name:"string"},required:!0}}};const R=`${k.prefix}--coachmark-overlay-elements`,J="CoachmarkOverlayElements",Y={isVisible:!1,nextButtonText:"Next",previousButtonLabel:"Back",closeButtonLabel:"Got it"};let H=t.forwardRef(({className:e,children:m,isVisible:s=Y.isVisible,media:n,nextButtonText:r=Y.nextButtonText,previousButtonLabel:l=Y.previousButtonLabel,closeButtonLabel:c=Y.closeButtonLabel,...I},$)=>{const h=u.useRef(void 0),y=u.useRef(void 0),[v,T]=u.useState(0),[b,D]=u.useState(0),O=le(),X=d=>{b>0&&d===0&&h.current&&setTimeout(()=>{var f;(f=h.current)==null||f.focus()},1e3),D(d)},S=u.Children.count(m),x=0,F=S-1;return u.useEffect(()=>{h.current&&h.current.focus()},[]),u.useEffect(()=>{setTimeout(()=>{h.current&&s&&h.current.focus()},100)},[s]),O?t.createElement("section",{...I,className:E(R,e,{}),ref:$,...W(J)},n&&(n.render?n.render():t.createElement(pe,{className:`${R}__element-stepped-media`,filePaths:n.filePaths,playStep:b})),S===1?t.createElement(t.Fragment,null,m,c&&t.createElement("div",{className:E(`${R}__footer`,"coachmark-carousel-controls")},t.createElement(q,{size:"sm",...O.closeButtonProps,ref:h},c))):t.createElement(t.Fragment,null,t.createElement(fe,{disableArrowScroll:!0,ref:y,onScroll:d=>{T(d)}},m),t.createElement("div",{className:E(`${R}__footer`)},t.createElement("div",{className:`${R}--controls-progress`},`${b+1} / ${S}`),v>0&&t.createElement(q,{size:"sm",kind:"ghost",title:l,disabled:v===0,onClick:()=>{var f,a;const d=A.clamp(b-1,x,F);(a=(f=y==null?void 0:y.current)==null?void 0:f.scrollToView)==null||a.call(f,d),X(d)}},l),b<F?t.createElement(q,{size:"sm",ref:h,title:r,disabled:v===1,onClick:()=>{var f,a;const d=A.clamp(b+1,x,F);(a=(f=y==null?void 0:y.current)==null?void 0:f.scrollToView)==null||a.call(f,d),X(d)}},r):c&&t.createElement(q,{size:"sm",ref:h,...O.closeButtonProps},c)))):me.warn(`The ${J} is a composable container element which should be used only within the scope of a Coachmark or a CoachmarkFixed component.`)});H=k.checkComponentEnabled(H,J);H.displayName=J;H.propTypes={children:o.node.isRequired,className:o.string,closeButtonLabel:o.string,isVisible:o.bool,media:o.oneOfType([o.shape({render:o.func}),o.shape({filePaths:o.arrayOf(o.string)})]),nextButtonText:o.string,previousButtonLabel:o.string};H.__docgenInfo={description:`Composable container to allow for the displaying of CoachmarkOverlayElement
components in a carousel fashion.`,methods:[],displayName:"CoachmarkOverlayElements",props:{isVisible:{defaultValue:{value:"false",computed:!1},description:`The visibility of CoachmarkOverlayElements is
managed in the parent component.`,type:{name:"bool"},required:!1},nextButtonText:{defaultValue:{value:"'Next'",computed:!1},description:"The label for the Next button.",type:{name:"string"},required:!1},previousButtonLabel:{defaultValue:{value:"'Back'",computed:!1},description:"The label for the Previous button.",type:{name:"string"},required:!1},closeButtonLabel:{defaultValue:{value:"'Got it'",computed:!1},description:"The label for the Close button.",type:{name:"string"},required:!1},children:{description:`CoachmarkOverlayElements should be used with one or many CoachmarkOverlayElement components as children.
@see CoachmarkOverlayElement`,type:{name:"node"},required:!0},className:{description:"Optional class name for this component.",type:{name:"string"},required:!1},media:{description:"The object describing an image in one of two shapes.\nIf a single media element is required, use `{render}`.\nIf a stepped animation is required, use `{filePaths}`.",type:{name:"union",value:[{name:"shape",value:{render:{name:"func",required:!1}}},{name:"shape",value:{filePaths:{name:"arrayOf",value:{name:"string"},required:!1}}}]},required:!1}}};export{he as B,B as C,be as a,L as b,H as c,z as d,P as e,le as u};
