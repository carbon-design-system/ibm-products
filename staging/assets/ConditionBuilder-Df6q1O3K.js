import{e as t,r as b}from"./index-DtHxqM--.js";import{b as sn,d as U,P as n,C as We,p as un,j as ze}from"./index-CGLP8AGt.js";import{T as mn,a as Re,S as pn,V as dn}from"./TimePickerSelect-BnLK8vBK.js";import{g as cn}from"./devtools-DANatd7d.js";import{p as Ke,T as gn,B as Ue}from"./settings-xxMXFJdE.js";import{S as Ee,H as Ie}from"./index-BgSYd2Cc.js";import{L as yn}from"./index-DsU5XOD_.js";import{P as fn,a as vn}from"./index-BeQw6zoj.js";import{a as bn}from"./bucket-18-OZh5kibs.js";import{u as Z}from"./uuidv4-BN2rGLQG.js";import{b as Ze,q as wn}from"./bucket-0-BSIss69h.js";import{S as Je}from"./Search-D0F4D2aG.js";import{N as Tn}from"./NumberInput-D9VcneHP.js";import{T as qn}from"./TextArea-CCmt5G5U.js";import{T as hn}from"./TextInput-B_rQCwG8.js";import{D as Fe,a as ke}from"./DatePicker-Dfl65JiX.js";import{S as Oe}from"./SelectItem-CvSNeuuA.js";import{p as Ye}from"./bucket-17-bIfZ74jY.js";import{C as Cn}from"./bucket-2-6VDW4ZdD.js";import{B as An}from"./bucket-1-txoxJHkm.js";const o=`${Ke.prefix}--condition-builder`,Ne="Non-Hierarchical",z="Hierarchical",ee=(e,a)=>{e&&setTimeout(()=>{var r,i,s,l,u;W((r=e.target.closest('[role="gridcell"]'))==null?void 0:r.querySelector("button"),a),(s=(i=e.target.closest('[role="gridcell"]'))==null?void 0:i.querySelector("button"))==null||s.click(),(u=(l=e.target.closest('[role="gridcell"]'))==null?void 0:l.querySelector("button"))==null||u.focus()},0)},ne=(e,a)=>{setTimeout(()=>{W(e,a)},0)},xe=(e,a,r,i,s,l)=>{e==document.activeElement?a!==r.length-1?ne(r[a+1],l):ne(r[i?0:r.length-1],l):Array.from(r).indexOf(document.activeElement)==-1&&s&&ne(r[0],l)},_e=(e,a,r,i,s,l)=>{e==document.activeElement?ne(a!==0?r[a-1]:r[i?r.length-1:0],l):Array.from(r).indexOf(document.activeElement)==-1&&s&&ne(r[r.length-1],l)},kn=(e,a)=>e[a],oe=e=>e&&e!=="INVALID",W=(e,a)=>{var i,s;const r=(e==null?void 0:e.closest(`.${o}__content-container`))??(e==null?void 0:e.closest(`.${o}__actions-container`));r&&Array.from(r.querySelectorAll('[tabindex="0"]')).map(l=>l==null?void 0:l.setAttribute("tabindex","-1")),e==null||e.setAttribute("tabindex","0"),(s=(i=a.current)==null?void 0:i.querySelector(`.${o}__statement-button`))==null||s.setAttribute("tabindex","1"),e==null||e.focus()},On=(e,a,r)=>r!=null&&r.valueFormatter&&["custom"].includes(e)?r.valueFormatter(a):e==="option"&&a&&typeof a!="string"?(Array.isArray(a)?a:[a]).map(s=>s.label).join(", "):a,Se=(e,a)=>{var r;return(e==null?void 0:e.operator)==="oneOf"||((r=a==null?void 0:a.operators)==null?void 0:r.find(i=>(e==null?void 0:e.operator)===i.id&&i.isMultiSelect))},Qe=(e,a)=>{!e.currentTarget.value&&e.key==="Escape"&&ee(e,a)},Q=({className:e,label:a,hideLabel:r,tooltipAlign:i,renderIcon:s,onClick:l,showToolTip:u,wrapperProps:p,onBlur:c,onFocus:m,onMouseEnter:f,onMouseLeave:T,isInvalid:w,wrapperClassName:y,tabIndex:h,description:v,...q})=>{const d=v||a,g=sn(),I=()=>{const j=q["data-name"]??"";return t.createElement("button",{tabIndex:h!==void 0?h:-1,className:U([e,`${o}__button`,{[`${o}__text-ellipsis`]:u&&!r&&!w},{[`${o}__invalid-input`]:w}]),type:"button",onClick:l,onBlur:c,onFocus:m,onMouseEnter:f,onMouseLeave:T,"data-name":j,...q},s&&t.createElement(s,null),!r&&t.createElement("span",null,a),w&&t.createElement(bn,null))};return r||u||v?t.createElement(gn,{label:d,align:i,className:`${y} ${o}__tooltip ${g}--icon-tooltip`,...p,leaveDelayMs:0},I()):t.createElement(t.Fragment,null,I())};Q.propTypes={className:n.string,hideLabel:n.bool,isInvalid:n.bool,label:n.string,onBlur:n.func,onClick:n.func,onFocus:n.func,onMouseEnter:n.func,onMouseLeave:n.func,renderIcon:n.oneOfType([n.func,n.object]),showToolTip:n.bool,tabIndex:n.number,tooltipAlign:n.string,wrapperClassName:n.string,wrapperProps:n.object};Q.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderButton",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},label:{required:!1,tsType:{name:"string"},description:"label of the button",type:{name:"string"}},hideLabel:{required:!1,tsType:{name:"boolean"},description:"decides if label and tooltip to be hidden",type:{name:"bool"}},tooltipAlign:{required:!1,tsType:{name:"PopoverAlignment"},description:"tooltip position",type:{name:"string"}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:"Optional prop to allow overriding the icon rendering.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"callback triggered on click of add button",type:{name:"func"}},onBlur:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:"mouse events callbacks",type:{name:"func"}},onFocus:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:"",type:{name:"func"}},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"",type:{name:"func"}},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"",type:{name:"func"}},showToolTip:{required:!1,tsType:{name:"boolean"},description:"decides if  tooltip to be shown",type:{name:"bool"}},wrapperProps:{required:!1,tsType:{name:"object"},description:"optional props for tree grid to add role and aria-label to wrapper span",type:{name:"object"}},isInvalid:{required:!1,tsType:{name:"boolean"},description:"boolean to know the updated value in not valid",type:{name:"bool"}},wrapperClassName:{required:!1,tsType:{name:"string"},description:"classname applies to the wrapper of popover",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index",type:{name:"number"}},description:{required:!1,tsType:{name:"string"},description:""}}};const xn={operator:"or",groups:[{groupOperator:"and",statement:"ifAll",id:Z(),conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:Z()}]}]},G=b.createContext({rootState:{groups:[]}}),je=e=>{const[a,r]=b.useState({groups:[]}),[i,s]=b.useState([]),l={rootState:a,setRootState:r,actionState:i,setActionState:s,inputConfig:e.inputConfig,popOverSearchThreshold:e.popOverSearchThreshold,getOptions:e.getOptions,variant:e.variant,translateWithId:e.translateWithId,conditionBuilderRef:e.conditionBuilderRef,statementConfigCustom:e.statementConfigCustom,onAddItem:e.onAddItem};return t.createElement(G.Provider,{value:l},e.children)};je.propTypes={children:n.node.isRequired,conditionBuilderRef:n.object,getOptions:n.func,inputConfig:n.shape({properties:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object]),description:n.string,type:n.oneOf(["text","textarea","number","date","option","time","custom"]).isRequired,config:n.shape({options:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object])})),component:n.func,operators:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired})),long:n.bool})}))}).isRequired,popOverSearchThreshold:n.number.isRequired,translateWithId:n.func,variant:n.string.isRequired};je.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderProvider",props:{rootState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},description:""},setRootState:{required:!1,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}}],raw:"SetStateAction<ConditionBuilderState>"}],raw:"Dispatch<SetStateAction<ConditionBuilderState>>"},description:""},actionState:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:""},setActionState:{required:!1,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"}],raw:"SetStateAction<Action[]>"}],raw:"Dispatch<SetStateAction<Action[]>>"},description:""},onAddItem:{required:!1,tsType:{name:"signature",type:"function",raw:"(config: AddItemConfig) => { preventAdd: boolean }",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  type: AddItemType;
  state: ConditionBuilderState;
  group?: ConditionGroup;
}`,signature:{properties:[{key:"type",value:{name:"union",raw:"'condition' | 'subgroup' | 'group'",elements:[{name:"literal",value:"'condition'"},{name:"literal",value:"'subgroup'"},{name:"literal",value:"'group'"}],required:!0}},{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"group",value:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}}]}},name:"config"}],return:{name:"signature",type:"object",raw:"{ preventAdd: boolean }",signature:{properties:[{key:"preventAdd",value:{name:"boolean",required:!0}}]}}}},description:""},children:{required:!0,tsType:{name:"ReactNode"},description:"Provide the contents of the ConditionBuilder.",type:{name:"node"}},inputConfig:{required:!0,tsType:{name:"signature",type:"object",raw:"{ properties: Property[] }",signature:{properties:[{key:"properties",value:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
} & ConfigType`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}},{key:"description",value:{name:"string",required:!1}},{key:"type",value:{name:"any",required:!1}},{key:"config",value:{name:"any",required:!1}}]}},{name:"union",raw:`| PropertyConfigOption['config']
| PropertyConfigTextArea['config']
| PropertyConfigText['config']
| PropertyConfigNumber['config']
| PropertyConfigDate['config']
| PropertyConfigTime['config']
| PropertyConfigCustom['config']`,elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"PropertyConfigTextArea['config']",raw:"PropertyConfigTextArea['config']"},{name:"PropertyConfigText['config']",raw:"PropertyConfigText['config']"},{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},{name:"intersection",raw:"PropertyConfigDate['config']"},{name:"signature",raw:"PropertyConfigTime['config']"},{name:"signature",raw:"PropertyConfigCustom['config']"}]}]}],raw:"Property[]",required:!0}}]}},description:"This is a mandatory prop that defines the input to the condition builder.",type:{name:"shape",value:{properties:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},description:{name:"string",required:!1},type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'textarea'",computed:!1},{value:"'number'",computed:!1},{value:"'date'",computed:!1},{value:"'option'",computed:!1},{value:"'time'",computed:!1},{value:"'custom'",computed:!1}],required:!0},config:{name:"shape",value:{options:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1}}},required:!1},component:{name:"func",required:!1},operators:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0}}},required:!1},long:{name:"bool",required:!1}},required:!1}}},required:!1}}}},popOverSearchThreshold:{required:!0,tsType:{name:"number"},description:"Provide an mandatory numeric value that will be used to enable search option in the popovers with list.",type:{name:"number"}},getOptions:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  state: ConditionBuilderState,
  condition: Condition
) => Promise<Option[]>`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"},{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}],raw:"Promise<Option[]>"}}},description:`This is an optional callback function that will be triggered when options array is not passed in the inputConfig against a property. 
This can be a asynchronous function that need  to  return a promise, so it will allow to fetch options from API call.
options has to be in valid format
[{
          label: 'label',
          id: 'id',
        },...]`,type:{name:"func"}},variant:{required:!0,tsType:{name:"string"},description:"Provide the condition builder variant: Non-Hierarchical/ Hierarchical",type:{name:"string"}},translateWithId:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: ConditionBuilderTextKeys) => string",signature:{arguments:[{type:{name:"union",raw:`| 'ifText'
| 'unlessText'
| 'excl_if'
| 'and'
| 'or'
| 'is'
| 'ifAll'
| 'ifAny'
| 'unlessAll'
| 'unlessAny'
| 'greater'
| 'greaterEqual'
| 'lower'
| 'lowerEqual'
| 'startsWith'
| 'endsWith'
| 'contains'
| 'oneOf'
| 'before'
| 'after'
| 'between'
| 'addConditionText'
| 'addConditionGroupText'
| 'addSubgroupText'
| 'conditionText'
| 'propertyText'
| 'operatorText'
| 'valueText'
| 'connectorText'
| 'conditionRowText'
| 'conditionRowGroupText'
| 'removeConditionText'
| 'addConditionRowText'
| 'startText'
| 'endText'
| 'clearSearchText'
| 'actionsText'
| 'then'
| 'removeActionText'
| 'addActionText'
| 'invalidText'
| 'invalidNumberWarnText'
| 'conditionBuilderText'
| 'actionSectionText'
| 'conditionHeadingText'
| 'addPropertyText'
| 'addOperatorText'
| 'addValueText'
| 'conditionBuilderHierarchicalText'`,elements:[{name:"literal",value:"'ifText'"},{name:"literal",value:"'unlessText'"},{name:"literal",value:"'excl_if'"},{name:"literal",value:"'and'"},{name:"literal",value:"'or'"},{name:"literal",value:"'is'"},{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"},{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"},{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"literal",value:"'before'"},{name:"literal",value:"'after'"},{name:"literal",value:"'between'"},{name:"literal",value:"'addConditionText'"},{name:"literal",value:"'addConditionGroupText'"},{name:"literal",value:"'addSubgroupText'"},{name:"literal",value:"'conditionText'"},{name:"literal",value:"'propertyText'"},{name:"literal",value:"'operatorText'"},{name:"literal",value:"'valueText'"},{name:"literal",value:"'connectorText'"},{name:"literal",value:"'conditionRowText'"},{name:"literal",value:"'conditionRowGroupText'"},{name:"literal",value:"'removeConditionText'"},{name:"literal",value:"'addConditionRowText'"},{name:"literal",value:"'startText'"},{name:"literal",value:"'endText'"},{name:"literal",value:"'clearSearchText'"},{name:"literal",value:"'actionsText'"},{name:"literal",value:"'then'"},{name:"literal",value:"'removeActionText'"},{name:"literal",value:"'addActionText'"},{name:"literal",value:"'invalidText'"},{name:"literal",value:"'invalidNumberWarnText'"},{name:"literal",value:"'conditionBuilderText'"},{name:"literal",value:"'actionSectionText'"},{name:"literal",value:"'conditionHeadingText'"},{name:"literal",value:"'addPropertyText'"},{name:"literal",value:"'addOperatorText'"},{name:"literal",value:"'addValueText'"},{name:"literal",value:"'conditionBuilderHierarchicalText'"}]},name:"id"}],return:{name:"string"}}},description:`Optional prop if you want to pass translation to the texts used . Otherwise this will the defined defaults.
This callback function will receive the message id and you need to return the corresponding text for that id.
The message key will be one of [   "ifText",   "addConditionText",   "addConditionGroupText",   "addSubgroupText",   "conditionText",   "propertyText",   "operatorText",   "valueText",   "connectorText",   "conditionRowText",   "removeConditionText",   "addConditionRowText",   "startText",   "endText",   "clearSearchText",   "actionsText",   "then",   "removeActionText",   "addActionText",   "invalidText",   "invalidNumberWarnText"
]`,type:{name:"func"}},statementConfigCustom:{required:!1,tsType:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,signature:{properties:[{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}]}],raw:"statementConfig[]"},description:""},conditionBuilderRef:{required:!1,tsType:{name:"ForwardedRef",elements:[{name:"HTMLDivElement"}],raw:"ForwardedRef<HTMLDivElement>"},description:"ref of condition builder",type:{name:"object"}}},composes:["PropsWithChildren"]};const le={ifText:"if",unlessText:"unless",excl_if:"excl.if",and:"and",or:"or",is:"is",ifAll:"if all",ifAny:"if any",unlessAll:"unless all",unlessAny:"unless any",greater:"is greater than",greaterEqual:"is greater than or equal to",lower:"is lower than",lowerEqual:"is lower than or equal to",startsWith:"starts with",endsWith:"ends with",contains:"contains",oneOf:"is one of",before:"is before",after:"is after",between:"is between",addConditionText:"Add condition",addConditionGroupText:"Add condition group",addSubgroupText:"Add subgroup",conditionText:"Condition",propertyText:"Property",operatorText:"Operator",valueText:"Value",connectorText:"Connector",conditionRowText:"Condition row",conditionRowGroupText:"Condition row group",removeConditionText:"Delete condition",addConditionRowText:"Add condition row",startText:"Start",endText:"End",clearSearchText:"Clear search input",actionsText:"Actions",then:"then",removeActionText:"Remove Action",addActionText:"Add action",invalidText:"Incomplete",invalidNumberWarnText:"Invalid number, must be 0 or greater",conditionBuilderText:"Condition Builder",actionSectionText:"Action Section",conditionHeadingText:"Condition",addPropertyText:"Add property",addOperatorText:"Add operator",addValueText:"Add value",conditionBuilderHierarchicalText:"Condition Builder Hierarchical"},F=(e,a)=>{const{translateWithId:r}=b.useContext(G);return e.map(i=>(a!=null&&a[i]&&(i=a[i]),r!=null&&r(i)?r(i):le[i]?le[i]:i))},_n=(e,a,r)=>{var s;(s=document.activeElement.closest(`.${o}__popover`))!=null&&s.querySelector('[role="dialog"]')||Sn(e,a,r)},En=(e,a,r)=>{In(e)||Nn(e,r==null?void 0:r.current,a)},In=e=>!["Escape"].includes(e.key)&&e.target.closest(`.${o}__item-date`),Nn=(e,a,r)=>{var c,m,f,T,w,y;const i=e.key,s=kn(e,"shiftKey"),l=(c=a.querySelector("ul"))==null?void 0:c.dataset.multiSelect,u=(m=a.querySelectorAll('[role="option"]'))==null?void 0:m.length;let p=[];if(i==="Escape"&&(ee(e,r),e.preventDefault(),e.stopPropagation()),u)switch(i){case"ArrowUp":e.preventDefault(),a.querySelectorAll('[role="option"]').forEach((h,v,q)=>{_e(h,v,q,null,null,r)}),Array.from(((f=e.target.closest("ul"))==null?void 0:f.querySelectorAll("li"))??[]).indexOf(e.target)===1&&(a.querySelector(`.${o}__popover-content-wrapper`).scrollTop=0);break;case"ArrowDown":e.preventDefault(),a.querySelectorAll('[role="option"]').forEach((h,v,q)=>{xe(h,v,q,null,null,r)});break;case"Tab":p=[...Array.from(a.querySelectorAll(`.${o}__selectAll-button,[role="searchbox"]`)),a.querySelector('[role="option"]')],p.forEach((h,v,q)=>{s?_e(h,v,q,!0,!0,r):xe(h,v,q,!0,!0,r)}),e.preventDefault();break;case" ":l==="true"&&(document.activeElement.type!=="button"&&((T=document.activeElement)==null||T.click()),e.preventDefault());break;case"Enter":document.activeElement.type!=="button"&&(ee(e,r),(w=document.activeElement)==null||w.click());break}else i==="Enter"&&!s&&document.activeElement.type!=="button"&&(ee(e,r),(y=document.activeElement)==null||y.click())},Sn=(e,a,r)=>{var i,s,l,u,p,c;switch(e.key){case"ArrowRight":if(e.preventDefault(),r==z){let m=Array.from((i=e.target.closest('[role="row"]'))==null?void 0:i.querySelectorAll('[role="gridcell"] button'));if(m.length===1)e.target=e.target.closest('[role="row"]'),Ve(e,a,r);else if(e.target.getAttribute("role")=="row")W(m[0],a);else{let f=m.indexOf(e.target);f<m.length-1&&ne(m[f+1],a)}}else Me(e,a);break;case"ArrowLeft":if(e.preventDefault(),r==z){if(e.target.getAttribute("role")!=="row"){let m=Array.from((s=e.target.closest('[role="row"]'))==null?void 0:s.querySelectorAll('[role="gridcell"] button')),f=m.indexOf(e.target);if(f>0)ne(m[f-1],a);else{let T=e.target.closest('[role="row"]');W(T,a)}}}else Me(e,a);break;case"ArrowUp":case"ArrowDown":e.preventDefault(),r==z?Ve(e,a,r):jn(e,a,r);break;case"Enter":((u=(l=document.activeElement)==null?void 0:l.querySelectorAll("button"))==null?void 0:u.length)===1&&((c=(p=document.activeElement)==null?void 0:p.querySelectorAll("button")[0])==null||c.click());break}},Le=e=>{var a;return Array.from((a=e.current)==null?void 0:a.querySelectorAll('[role="row"]'))},Xe=(e,a)=>Le(a).findIndex(i=>i.contains(e)),jn=(e,a,r)=>{const i=Le(a),s=Xe(e.target,a);en(e,s,i,r,a)},Ve=(e,a,r)=>{const i=Le(a),s=Xe(e.target,a);let l=s;e.target.getAttribute("role")=="row"?(["ArrowDown","ArrowRight"].includes(e.key)?l+=1:e.key==="ArrowUp"&&(l-=1),l<0?l=0:l>=i.length&&(l=i.length-1),l!==s&&W(i[l],a)):en(e,s,i,r,a)},en=(e,a,r,i,s)=>{let l=a;e.key==="ArrowUp"&&(l=a==0?a:a-1),e.key==="ArrowDown"&&(l=a===r.length-1?r.length-1:a+1);const u=r[l],p=e.target.dataset.name;u!=null&&u.querySelector(`[data-name="${p}"]`)?W(u==null?void 0:u.querySelector(`[data-name="${p}"]`),s):i===z&&W(u,s)},Me=(e,a)=>{a.current.querySelectorAll('[role="gridcell"] button').forEach((r,i,s)=>{e.key==="ArrowRight"?xe(r,i,s,null,null,a):_e(r,i,s,null,null,a)})},H=({children:e,className:a,label:r,renderIcon:i,title:s,type:l,showToolTip:u,condition:p,popOverClassName:c,config:m,renderChildren:f,onChange:T,description:w,...y})=>{const h=b.useRef(null),[v,q]=b.useState(!1),{conditionBuilderRef:d,statementConfigCustom:g}=b.useContext(G),I={ifAll:le.ifText,ifAny:le.ifText,unlessAll:le.unlessText,unlessAny:le.unlessText};g==null||g.forEach(C=>{I[C.id]=C.label});const[j,A,E,D,R,V]=F(["invalidText","addConditionText","addPropertyText","addOperatorText","addValueText",r],I),K=()=>{const{property:C,operator:_}=p||{};return r==="INVALID"||y["data-name"]==="propertyField"&&C==="INVALID"||y["data-name"]==="operatorField"&&_==="INVALID"?{propertyLabel:j,isInvalid:!0}:{isInvalid:!1,propertyLabel:y["data-name"]=="valueField"&&l?On(l,r,m):V}},{propertyLabel:S,isInvalid:N}=K();b.useEffect(()=>{if(p){const C=y["data-name"];(p.popoverToOpen&&C!==p.popoverToOpen||C=="valueField"&&l==="option"&&!Se(p,m))&&M(),p.popoverToOpen==C&&ae()}else M()},[p,r]),b.useEffect(()=>{var C;if(v&&h.current){const _=(C=h==null?void 0:h.current)==null?void 0:C.querySelector("input,textarea");_&&setTimeout(()=>_.focus(),0)}},[h,v]);const B=()=>{(y["data-name"]==="propertyField"&&!(p!=null&&p.property)||y["data-name"]==="operatorField"&&!(p!=null&&p.operator)||y["data-name"]==="valueField"&&!(p!=null&&p.value))&&(T==null||T("INVALID"))},M=()=>{v&&B(),q(!1)},ae=()=>q(!0),x=()=>{(e||f)&&q(!v)},O=C=>{En(C,d,h),C.key==="Escape"&&B()},k=C=>{var _;return C&&((_=m==null?void 0:m.operators)==null?void 0:_.find(P=>P.id===C))},L=()=>{var C;return m!=null&&m.operators&&y["data-name"]==="operatorField"?((C=k(S))==null?void 0:C.label)??D:S||(y["data-name"]==="propertyField"?E:y["data-name"]==="operatorField"?D:y["data-name"]==="valueField"?R:A)};return t.createElement(fn,{open:v,isTabTip:!0,role:"gridcell",className:`${c} ${o}__popover`,ref:h,onRequestClose:M},t.createElement(Q,{label:L(),hideLabel:!r,onClick:x,className:a,"aria-haspopup":!0,"aria-expanded":v,renderIcon:i||(r==null?Ze:void 0),showToolTip:u,isInvalid:N,description:w,...y}),v&&t.createElement(vn,{className:`${o}__popover-content-wrapper`,role:"dialog","aria-label":s,onKeyDown:O},t.createElement(yn,null,t.createElement(Ee,null,t.createElement(Ie,{className:`${o}__item__title`},s),t.createElement("div",{className:`${o}__popover-content`},f?f(h):e)))))};H.propTypes={children:n.node,className:n.string,condition:n.object,config:n.object,label:n.oneOfType([n.string,n.array,n.object]),onChange:n.func,popOverClassName:n.string,renderChildren:n.func,renderIcon:n.oneOfType([n.func,n.object]),showToolTip:n.bool,title:n.string,type:n.string};H.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItem",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},label:{required:!1,tsType:{name:"union",raw:"string | Option | Option[]",elements:[{name:"string"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}]},description:"text to be displayed in the field",type:{name:"union",value:[{name:"string"},{name:"array"},{name:"object"}]}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:"Optional prop to allow overriding the icon rendering.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},title:{required:!1,tsType:{name:"string"},description:"title of the popover",type:{name:"string"}},showToolTip:{required:!1,tsType:{name:"boolean"},description:"show tool tip",type:{name:"bool"}},popOverClassName:{required:!1,tsType:{name:"string"},description:"class name for popover",type:{name:"string"}},type:{required:!1,tsType:{name:"string"},description:"input type",type:{name:"string"}},description:{required:!1,tsType:{name:"string"},description:""},condition:{required:!1,tsType:{name:"intersection",raw:"Action & Condition",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}}]},description:"current condition state object",type:{name:"object"}},config:{required:!1,tsType:{name:"union",raw:`| PropertyConfigOption['config']
| PropertyConfigTextArea['config']
| PropertyConfigText['config']
| PropertyConfigNumber['config']
| PropertyConfigDate['config']
| PropertyConfigTime['config']
| PropertyConfigCustom['config']`,elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"PropertyConfigTextArea['config']",raw:"PropertyConfigTextArea['config']"},{name:"PropertyConfigText['config']",raw:"PropertyConfigText['config']"},{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},{name:"intersection",raw:"PropertyConfigDate['config']"},{name:"signature",raw:"PropertyConfigTime['config']"},{name:"signature",raw:"PropertyConfigCustom['config']"}]},description:"this is the config object again the current property from inputConfig",type:{name:"object"}},renderChildren:{required:!1,tsType:{name:"signature",type:"function",raw:"(ref: Ref<HTMLDivElement>) => ReactNode",signature:{arguments:[{type:{name:"Ref",elements:[{name:"HTMLDivElement"}],raw:"Ref<HTMLDivElement>"},name:"ref"}],return:{name:"ReactNode"}}},description:"callback prop that returns the jsx for children",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(val: string) => void",signature:{arguments:[{type:{name:"string"},name:"val"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},tabIndex:{required:!1,tsType:{name:"number"},description:""},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},onFocus:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},onBlur:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},children:{description:"provide the contents of the popover",type:{name:"node"},required:!1}},composes:["PropsWithChildren"]};const te=({conditionState:e={},config:a={},onChange:r})=>{const{popOverSearchThreshold:i}=b.useContext(G),s=b.useRef(null),[l,u]=F(["propertyText","clearSearchText"]),{conditionBuilderRef:p}=b.useContext(G),c=a.options,[m,f]=b.useState(""),T=e.value,w=m?c==null?void 0:c.filter(d=>{var g;return(g=d.label)==null?void 0:g.toLowerCase().includes(m.toLowerCase())}):c;b.useEffect(()=>{var d;if(s.current){const g=(d=s.current)==null?void 0:d.querySelector("input, button,li");g&&g.focus()}},[c]);const y=(d,g)=>{r(g.id,d)},h=d=>{const{value:g}=d.target;f(g)},v=()=>e.label?e.label:l,q=d=>t.createElement("div",{className:`${o}__statement_wrapper`},t.createElement("div",null,d.label," (",d.connector,")"),t.createElement("div",null,d.secondaryLabel));if(c)return t.createElement("div",{className:`${o}__item-option`,ref:s},i&&c.length>i&&t.createElement("div",{className:`${o}__item-option__search`},t.createElement(Je,{size:"sm",labelText:u,closeButtonLabelText:u,onChange:h,onKeyDown:d=>Qe(d,p)})),t.createElement("ul",{"aria-label":v(),role:"listbox"},w==null?void 0:w.map(d=>{const g=T===d.id,I=d.icon;return t.createElement("li",{tabIndex:0,key:d.id,role:"option","aria-selected":g,className:`${o}__item-option__option`,onKeyUp:()=>!1,onClick:j=>y(j,d)},t.createElement("div",{className:`${o}__item-option__option-content`},t.createElement("span",{className:`${o}__item-option__option-label`},I&&t.createElement(I,null),a.isStatement?q(d):d.label),g&&t.createElement(We,{className:`${o}__checkmark`})))})))};te.propTypes={conditionState:n.object,config:n.object,onChange:n.func};te.__docgenInfo={description:"",methods:[],displayName:"ItemOption",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  label?: string;
  value?: string;
}`,signature:{properties:[{key:"label",value:{name:"string",required:!1}},{key:"value",value:{name:"string",required:!1}}]}},description:"current condition object",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},config:{required:!1,tsType:{name:"intersection",raw:`{ options?: option[] | statementConfig[] } & {
  isStatement?: boolean;
}`,elements:[{name:"signature",type:"object",raw:"{ options?: option[] | statementConfig[] }",signature:{properties:[{key:"options",value:{name:"union",raw:"option[] | statementConfig[]",elements:[{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"option[]"},{name:"Array",elements:[{name:"intersection",raw:`Item & {
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,signature:{properties:[{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}]}],raw:"statementConfig[]"}],required:!1}}]}},{name:"signature",type:"object",raw:`{
  isStatement?: boolean;
}`,signature:{properties:[{key:"isStatement",value:{name:"boolean",required:!1}}]}}]},description:"current config object that this property is part of",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string, e: Event) => void",signature:{arguments:[{type:{name:"string"},name:"value"},{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const qe=()=>{const[e,a,r,i,s,l,u,p,c,m,f,T,w,y,h,v,q,d]=F(["ifAll","ifAny","unlessAll","unlessAny","and","or","is","greater","greaterEqual","lower","lowerEqual","startsWith","endsWith","contains","oneOf","before","after","between"]),{statementConfigCustom:g}=b.useContext(G);return{statementConfig:g??[{id:"ifAll",connector:"and",label:e,secondaryLabel:"(a && b)"},{id:"ifAny",connector:"or",label:a,secondaryLabel:"(a || b)"},{id:"unlessAll",connector:"and",label:r,secondaryLabel:"! (a && b)"},{id:"unlessAny",connector:"or",label:i,secondaryLabel:"! (a || b)"}],connectorConfig:[{label:s,id:"and"},{label:l,id:"or"}],operatorConfig:[{label:u,id:"is",type:"all"},{label:p,id:"greater",type:"number"},{label:c,id:"greaterEqual",type:"number"},{label:m,id:"lower",type:"number"},{label:f,id:"lowerEqual",type:"number"},{label:T,id:"startsWith",type:"text,textarea"},{label:w,id:"endsWith",type:"text,textarea"},{label:y,id:"contains",type:"text,textarea"},{label:h,id:"oneOf",type:"option"},{label:v,id:"before",type:"date,time"},{label:q,id:"after",type:"date,time"},{label:d,id:"between",type:"date"}]}},ge=({operator:e,className:a,onChange:r,...i})=>{const{variant:s,conditionBuilderRef:l}=b.useContext(G),[u]=F(["connectorText"]),{connectorConfig:p}=qe(),c=b.useCallback((w,y)=>{y?w.classList.add("hoveredConnector"):w.classList.remove("hoveredConnector")},[]),m=w=>{const y=w==null?void 0:w.currentTarget.closest(".eachGroup");c(y,!0)},f=w=>{const y=w==null?void 0:w.currentTarget.closest(".eachGroup");c(y,!1)},T=(w,y)=>{r==null||r(w),ee(y,l)};return s==z?t.createElement("span",{className:`${a} ${o}__connector--disabled`},t.createElement(Q,{label:e})):t.createElement(H,{label:e,title:u,"data-name":"connectorField",onMouseEnter:m,onMouseLeave:f,onFocus:m,onBlur:f,...i,popOverClassName:a,className:`${o}__connector-button`},t.createElement(te,{config:{options:p},conditionState:{value:e,label:u},onChange:T}))};ge.propTypes={className:n.string,onChange:n.func,operator:n.string};ge.__docgenInfo={description:"",methods:[],displayName:"ConditionConnector",props:{operator:{required:!1,tsType:{name:"string"},description:"string that defines the connector operator (and/or)",type:{name:"string"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(op: string) => void",signature:{arguments:[{type:{name:"string"},name:"op"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}}}};const Pe=({conditionState:e,config:a,onChange:r})=>{var p;const[i]=F(["invalidNumberWarnText"]),s=(c,{value:m})=>{m!==""&&!isNaN(m)&&l(m)?r(`${m} ${a.unit??""}`):r("INVALID")},l=c=>!(a.max!==void 0&&a.min===void 0&&c>a.max||a.min!==void 0&&a.max===void 0&&c<a.min||a.max!==void 0&&a.min!==void 0&&(c>a.max||c<a.min)),u=()=>{var c,m;return((m=(c=e.value)==null?void 0:c.split(" "))==null?void 0:m[0])??""};return t.createElement("div",{className:`${o}__item-number`},t.createElement(Tn,{...a,label:e.property,hideLabel:!0,id:(p=e.property)==null?void 0:p.replace(/\s/g,""),invalidText:i,allowEmpty:!0,onChange:s,defaultValue:u()}))};Pe.propTypes={conditionState:n.object,config:n.object,onChange:n.func};Pe.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemNumber",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"current condition object",type:{name:"object"}},config:{required:!1,tsType:{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},description:"current config object that this property is part of",type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const we=({conditionState:e,onChange:a,config:r,type:i})=>{var l;const s={...r,hideLabel:!0,value:oe(e.value)?e.value:"",id:(l=e.property)==null?void 0:l.replace(/\s/g,""),onChange:u=>{a(u.target.value)},labelText:e.property};return t.createElement("div",{className:`${o}__item-text`},i=="textarea"?t.createElement(qn,{...s}):t.createElement(hn,{...s}))};we.propTypes={conditionState:n.object,config:n.object,onChange:n.func,type:n.string};we.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemText",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"current condition object",type:{name:"object"}},config:{required:!1,tsType:{name:"union",raw:"PropertyConfigText | PropertyConfigTextArea",elements:[{name:"PropertyConfigText"},{name:"PropertyConfigTextArea"}]},description:"config of the current property",type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}},type:{required:!1,tsType:{name:"union",raw:"'textarea' | 'text'",elements:[{name:"literal",value:"'textarea'"},{name:"literal",value:"'text'"}]},description:"current input type",type:{name:"string"}}}};const $e=({conditionState:e,onChange:a,parentRef:r,config:i})=>{const s=b.useRef(null),[l,u]=F(["startText","endText"]),[p,c]=b.useState(),m=i.dateFormat||"m/d/Y",{conditionBuilderRef:f}=b.useContext(G),T=e.operator=="between"||Se(e,i)?"range":"single";b.useEffect(()=>{T==="range"&&c(w(e.value)??void 0)},[]);const w=v=>{var j;const q=(j=s==null?void 0:s.current)==null?void 0:j.calendar;if(!q||!v)return null;const[d,g]=v.split(" - "),I=[];return d&&d!=="INVALID"&&I.push(q.parseDate(d,m)),g&&g!=="INVALID"&&I.push(q.parseDate(g,m)),I.length?I:null},y=(v,q,d)=>{let g=q;T==="range"&&v.length===2&&(g=`${d.formatDate(v[0],m)} - ${d.formatDate(v[1],m)}`),a(g||"INVALID")},h=v=>{var q;if(v.key==="Enter"){const d=(q=s==null?void 0:s.current)==null?void 0:q.calendar;d&&y(d.selectedDates,v.target.value,d),ee(v,f)}};return t.createElement("div",{className:`${o}__item-date `},T=="single"&&t.createElement(Fe,{...i,ref:s,datePickerType:"single",value:e.value,onClose:y,onKeyPress:h,appendTo:r==null?void 0:r.current},t.createElement(ke,{id:"datePicker",placeholder:"dd/mm/yyyy",labelText:e.property})),T=="range"&&t.createElement(Fe,{...i,ref:s,datePickerType:T,onClose:y,onKeyPress:h,value:p,appendTo:r==null?void 0:r.current},t.createElement(ke,{id:"datePickerStart",placeholder:"dd/mm/yyyy",labelText:l}),t.createElement(ke,{id:"datePickerEnd",placeholder:"dd/mm/yyyy",labelText:u})))};$e.propTypes={conditionState:n.object,config:n.object,onChange:n.func,parentRef:n.object};$e.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemDate",props:{conditionState:{description:"current condition object",type:{name:"object"},required:!1},config:{description:"",type:{name:"object"},required:!1},onChange:{description:"callback to update state oin date change",type:{name:"func"},required:!1},parentRef:{description:"reference to the popover node",type:{name:"object"},required:!1}}};const He=({onChange:e,config:a})=>{var T,w;const[r,i]=b.useState(""),[s,l]=b.useState("AM"),[u,p]=b.useState((T=a==null?void 0:a.timeZones)==null?void 0:T[0]);b.useEffect(()=>{const y=`${r??""} ${s??""} ${u??""}`;e(r?y:void 0)},[r,s,u]);const c=y=>{p(y.target.value)},m=y=>{l(y.target.value)},f=y=>{i(y.target.value)};return t.createElement("div",{className:`${o}__item-time`},t.createElement(mn,{id:"time-picker",labelText:"Select a time",onChange:f},t.createElement(Re,{id:"time-picker-day-zone",onChange:m},t.createElement(Oe,{value:"AM",text:"AM"}),t.createElement(Oe,{value:"PM",text:"PM"})),t.createElement(Re,{id:"time-picker-time-zone",onChange:c},(w=a==null?void 0:a.timeZones)==null?void 0:w.map((y,h)=>t.createElement(Oe,{key:h,value:y,text:y})))))};He.propTypes={config:n.object,onChange:n.func};He.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemTime",props:{config:{description:"current config object that this property is part of",type:{name:"object"},required:!1},onChange:{description:"callback to update state oin date change",type:{name:"func"},required:!1}}};const pe=({className:e,onClick:a,addConditionSubGroupHandler:r,showConditionSubGroupPreviewHandler:i,hideConditionSubGroupPreviewHandler:s,showConditionPreviewHandler:l,hideConditionPreviewHandler:u,enableSubGroup:p,buttonLabel:c,tabIndex:m,group:f})=>{const[T,w,y]=F(["addConditionText","addConditionRowText","addSubgroupText"]),{onAddItem:h,rootState:v}=b.useContext(G),q=()=>{const{preventAdd:E}=(h==null?void 0:h({type:"condition",state:v,group:f}))??{};E||(u==null||u(),a())},d=()=>p?{onMouseEnter:l,onMouseLeave:u,onFocus:l,onBlur:u}:{},g=()=>({onMouseEnter:i,onMouseLeave:s,onFocus:i,onBlur:s}),I=()=>{const{preventAdd:E}=(h==null?void 0:h({type:"subgroup",state:v,group:f}))??{};E||r==null||r()},j=()=>c||(p?void 0:w),A=p?{role:"gridcell"}:{};return t.createElement("div",{className:`${e} ${o}__add-button-wrapper`,role:p?"none":"gridcell","aria-label":j()},t.createElement(Q,{renderIcon:wn,onClick:q,...d(),wrapperProps:A,className:`${o}__add-button`,hideLabel:!0,"data-name":"addButton",label:c??T,tabIndex:m,wrapperClassName:`${o}__add-condition-wrapper`}),p&&t.createElement(Q,{renderIcon:Ye,onClick:I,className:U(`${o}__add-condition-sub-group`),hideLabel:!0,label:y,wrapperProps:A,wrapperClassName:`${o}__add-condition-sub-group-wrapper ${o}__gap-left`,...g()}))};pe.propTypes={addConditionSubGroupHandler:n.func,buttonLabel:n.string,className:n.string,enableSubGroup:n.bool,hideConditionPreviewHandler:n.func,hideConditionSubGroupPreviewHandler:n.func,onClick:n.func,showConditionPreviewHandler:n.func,showConditionSubGroupPreviewHandler:n.func,tabIndex:n.number};pe.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderAdd",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"callback triggered on click of add button",type:{name:"func"}},addConditionSubGroupHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},hideConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},showConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},hideConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},enableSubGroup:{required:!1,tsType:{name:"boolean"},description:"boolean to enable sub groups for the tree variant",type:{name:"bool"}},buttonLabel:{required:!1,tsType:{name:"string"},description:"tooltip label for plus button",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index",type:{name:"number"}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:""}}};const he=({conditionState:e={},config:a={},onChange:r})=>{const i=Se(e,a),{popOverSearchThreshold:s,getOptions:l,rootState:u}=b.useContext(G),[p,c]=F(["propertyText","clearSearchText"]),{conditionBuilderRef:m}=b.useContext(G),f=b.useRef(null),[T,w]=b.useState(a.options),[y,h]=b.useState(""),v=T==null?void 0:T.filter(A=>A.label.toLowerCase().includes(y.toLowerCase())),q=Array.isArray(e.value)?e.value:e.value!==void 0?[e.value]:[];b.useEffect(()=>{!T&&l&&(async()=>{const E=await l(u,e);(E==null?void 0:E.length)>0&&Object.keys(E[0]).includes("label")&&Object.keys(E[0]).includes("id")&&w(E)})()},[]),b.useEffect(()=>{if(f.current){const A=f.current.querySelector("input, button,li");A&&(A==null||A.focus())}},[T]);const d=A=>{A.currentTarget.dataset.selectedAll=="false"?r(void 0):r(T)},g=A=>{const{value:E}=A.target;h(E)},I=(A,E,D)=>{const R=q.filter(V=>V!=="INVALID");if(i)if(D){const V=R.filter(K=>K.id!==E.id);r(V.length>0?V:void 0)}else r([...R,E]);else r(E,A);A.target instanceof SVGElement&&A.stopPropagation()},j=()=>e.label?e.label:e.property?e.property:p;return T?t.createElement("div",{className:`${o}__item-option`,ref:f},s&&T.length>s&&t.createElement("div",{className:`${o}__item-option__search`},t.createElement(Je,{size:"sm",labelText:c,closeButtonLabelText:c,onChange:g,onKeyDown:A=>Qe(A,m)})),i&&t.createElement("div",{className:`${o}__multiselectSelectionStatusContainer`},t.createElement("label",null,q.length,"/",T.length," Selected"),t.createElement(Ue,{kind:"ghost",size:"sm","data-selected-all":`${q.length==0}`,onClick:d,className:`${o}__selectAll-button`},q.length==0?"Select all":"Deselect all")),t.createElement("ul",{"aria-label":j(),role:"listbox","data-multi-select":i},v==null?void 0:v.map(A=>{const E=q.map(R=>R.id).includes(A.id),D=A.icon;return t.createElement("li",{tabIndex:0,key:A.id,role:"option","aria-selected":E,className:`${o}__item-option__option`,onKeyUp:()=>!1,onClick:R=>I(R,A,E)},t.createElement("div",{className:`${o}__item-option__option-content`},i?t.createElement(t.Fragment,null,t.createElement("span",{className:`${o}__option-check-box`},E?t.createElement(un,null):t.createElement(Cn,null)),t.createElement("span",{className:`${o}__item-option__option-label`},A.label),D&&t.createElement("span",{className:`${o}__option-icon`},t.createElement(D,null))):t.createElement(t.Fragment,null,t.createElement("span",{className:`${o}__item-option__option-label`},D&&t.createElement(D,null),A.label),E&&t.createElement(We,{className:`${o}__checkmark`}))))}))):t.createElement(pn,null)};he.propTypes={conditionState:n.object,config:n.object,onChange:n.func};he.__docgenInfo={description:"",methods:[],displayName:"ItemOptionForValueField",props:{conditionState:{required:!1,tsType:{name:"intersection",raw:"Condition & { label?: string }",elements:[{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{ label?: string }",signature:{properties:[{key:"label",value:{name:"string",required:!1}}]}}]},description:"current condition object",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},config:{required:!1,tsType:{name:"signature",raw:"PropertyConfigOption['config']"},description:"current config object that this property is part of",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: any, e?: Event) => void",signature:{arguments:[{type:{name:"any"},name:"value"},{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const Te=e=>{const{onRemove:a,onChange:r,condition:i={},conjunction:s,onConnectorOperatorChange:l,isStatement:u,group:p,onStatementChange:c,conditionIndex:m,addConditionHandler:f,addConditionSubGroupHandler:T,aria:w,hideConditionSubGroupPreviewHandler:y,showConditionSubGroupPreviewHandler:h,hideConditionPreviewHandler:v,showConditionPreviewHandler:q,isLastCondition:d}=e,{property:g,value:I,operator:j}=i,{inputConfig:A,variant:E,conditionBuilderRef:D}=b.useContext(G),[R,V]=b.useState(!1),[K,S]=b.useState(!1),[N,B,M,ae,x]=F(["conditionRowText","conditionText","propertyText","operatorText","removeConditionText"]),{statementConfig:O,operatorConfig:k}=qe(),L=$=>{var Y;return((Y=A==null?void 0:A.properties)==null?void 0:Y.find(ln=>ln.id==$))??{}},{icon:C,type:_,config:P,label:X,description:ye}=L(g),fe={text:we,number:Pe,date:$e,time:He,option:he,custom:P==null?void 0:P.component,textarea:we}[_],ve=()=>{S(!0)},se=()=>{S(!1)},be=($,Y)=>{ee(Y,D),c==null||c($)},J=$=>{r({...i,property:$,operator:void 0,value:"",popoverToOpen:oe($)?"operatorField":""})},re=$=>{r({...i,operator:$,value:void 0,popoverToOpen:oe($)?"valueField":""})},ue=$=>{const Y={...i};delete Y.popoverToOpen,r({...Y,value:$})},ie=()=>{V(!0)},me=()=>{V(!1)},tn=($,Y)=>E===z?!0:d($,Y),an=()=>P!=null&&P.operators?P==null?void 0:P.operators:k.filter($=>$.type.indexOf(_)!=-1||$.type=="all"),rn=()=>E==z?{"aria-level":w.level,"aria-posinset":w.posinset,"aria-setsize":w.setsize}:{},on=$=>t.createElement(fe,{conditionState:{property:g,operator:j,value:I},onChange:ue,config:P,"data-name":"valueField",parentRef:$,type:_});return t.createElement("div",{className:U(`${o}__condition-block`,{[`${o}__condition__deletion-preview`]:R},{[`${o}__gap-bottom`]:E==z},{[`${o}__gap ${o}__gap-bottom`]:E==Ne},{[`${o}__condition--interacting`]:K}),role:"row","aria-label":N,...rn(),tabIndex:-1,onMouseEnter:ve,onMouseLeave:se,onBlur:se},s?t.createElement(ge,{className:`${o}__gap`,operator:s,onChange:$=>l==null?void 0:l($)}):"",u&&t.createElement(H,{label:p.statement,title:B,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`,tabIndex:0},t.createElement(te,{conditionState:{value:p.statement,label:B},onChange:be,config:{options:O,isStatement:!0}})),t.createElement(H,{label:X??(i==null?void 0:i.property),title:M,renderIcon:C??void 0,className:`${o}__property-field`,"data-name":"propertyField",condition:i,type:_,description:ye,onChange:J},t.createElement(te,{conditionState:{value:g,label:M},onChange:J,config:{options:A==null?void 0:A.properties}})),oe(g)&&t.createElement(H,{label:j,title:ae,"data-name":"operatorField",condition:i,type:_,config:P,onChange:re},t.createElement(te,{config:{options:an()},conditionState:{value:j,label:ae},onChange:re})),oe(g)&&oe(j)&&t.createElement(H,{label:I,type:_,title:X,showToolTip:!0,"data-name":"valueField",condition:i,config:P,onChange:ue,renderChildren:on}),t.createElement("span",{role:"gridcell","aria-label":x},t.createElement(Q,{hideLabel:!0,label:x,onClick:a,onMouseEnter:ie,onMouseLeave:me,onFocus:ie,onBlur:me,renderIcon:ze,className:`${o}__close-condition`,"data-name":"closeCondition",wrapperClassName:`${o}__close-condition-wrapper`})),tn(m,p.conditions)&&t.createElement(pe,{onClick:()=>{f==null||f(m)},addConditionSubGroupHandler:()=>{T==null||T(m)},showConditionSubGroupPreviewHandler:h,hideConditionSubGroupPreviewHandler:y,enableSubGroup:E==z,showConditionPreviewHandler:q,hideConditionPreviewHandler:v,className:`${o}__gap ${o}__gap-left`,group:p}))};Te.propTypes={addConditionHandler:n.func,addConditionSubGroupHandler:n.func,aria:n.object,condition:n.object,conditionIndex:n.number,conjunction:n.string,group:n.object,hideConditionPreviewHandler:n.func,hideConditionSubGroupPreviewHandler:n.func,isLastCondition:n.func,isStatement:n.bool,onChange:n.func,onConnectorOperatorChange:n.func,onRemove:n.func,onStatementChange:n.func,showConditionPreviewHandler:n.func,showConditionSubGroupPreviewHandler:n.func,state:n.object};Te.__docgenInfo={description:"",methods:[],displayName:"ConditionBlock",props:{condition:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"",type:{name:"object"}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"callback for Remove a condition",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(condition: Condition) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},onConnectorOperatorChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(op: string) => void",signature:{arguments:[{type:{name:"string"},name:"op"}],return:{name:"void"}}},description:"callback to handle the connector(and/or) change",type:{name:"func"}},onStatementChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(v: string) => void",signature:{arguments:[{type:{name:"string"},name:"v"}],return:{name:"void"}}},description:"callback to handle the statement(if/ excl.if) change",type:{name:"func"}},addConditionHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(conditionIndex: number) => void",signature:{arguments:[{type:{name:"number"},name:"conditionIndex"}],return:{name:"void"}}},description:"callback to add a new condition",type:{name:"func"}},addConditionSubGroupHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(conditionIndex: number) => void",signature:{arguments:[{type:{name:"number"},name:"conditionIndex"}],return:{name:"void"}}},description:"callback to add a new condition subgroup",type:{name:"func"}},hideConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for showing sub group preview",type:{name:"func"}},hideConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for showing add condition preview",type:{name:"func"}},conjunction:{required:!1,tsType:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},description:"string that decides to show the condition connector",type:{name:"string"}},isStatement:{required:!1,tsType:{name:"boolean"},description:"boolean that decides to show the statement(if/ excl.if)",type:{name:"bool"}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"object that hold the current group object where is condition is part of",type:{name:"object"}},conditionIndex:{required:!1,tsType:{name:"number"},description:"",type:{name:"number"}},aria:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  level: number;
  posinset: number;
  setsize?: number;
}`,signature:{properties:[{key:"level",value:{name:"number",required:!0}},{key:"posinset",value:{name:"number",required:!0}},{key:"setsize",value:{name:"number",required:!1}}]}},description:"object hold aria attributes",type:{name:"object"}},isLastCondition:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  index: number,
  conditions: (ConditionGroup | Condition)[]
) => void`,signature:{arguments:[{type:{name:"number"},name:"index"},{type:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]"},name:"conditions"}],return:{name:"void"}}},description:"",type:{name:"func"}},state:{description:"object that hold the current condition",type:{name:"object"},required:!1}}};const de=({previewType:e,group:a,colorIndex:r})=>{const[i,s]=b.useState(!1),[l,u,p,c]=F(["valueText","operatorText","propertyText","ifText"]);b.useEffect(()=>{s(!0)},[]);const m=()=>t.createElement("div",{className:`${o}__preview-condition`},t.createElement(H,{label:l,renderIcon:An}),t.createElement(H,{label:u}),t.createElement(H,{label:p}));return t.createElement(t.Fragment,null,e=="newGroup"&&t.createElement(t.Fragment,null,t.createElement("div",{className:U([`${o}__group__row ${o}__group-preview `,{[`${o}__group-preview-animate`]:i}])},t.createElement(H,{className:`${o}__statement-button`,label:a.groupOperator})),t.createElement("div",{"data-color-index":r,"aria-hidden":!0,className:U([`${o}__group ${o}__condition-wrapper ${o}__group-preview ${o}__group-wrapper `,{[`${o}__group-preview-animate`]:i}])},t.createElement("div",{className:`${o}__gap`},t.createElement(H,{className:`${o}__statement-button`,label:c})),m())),e=="subGroup"&&t.createElement("div",{className:U([`${o}__group__row ${o}__group-preview ${o}__gap-bottom`,{[`${o}__group-preview-animate`]:i}])},t.createElement("div",{className:`${o}__condition-block  ${o}__gap`},t.createElement(H,{label:a.groupOperator,className:`${o}__statement-button`,popOverClassName:`${o}__gap`}),t.createElement("div",{className:`${o}__group ${o}__condition-wrapper`},t.createElement(ge,{className:`${o}__gap ${o}__groupConnector`,operator:c}),m()))),e=="condition"&&t.createElement("div",{className:U([`${o}__group__row ${o}__group-preview ${o}__gap-bottom`,{[`${o}__group-preview-animate`]:i}])},t.createElement("div",{className:`${o}__condition-block  ${o}__gap`},t.createElement(H,{label:a.groupOperator,className:`${o}__statement-button`,popOverClassName:`${o}__gap`}),m())))};de.propTypes={colorIndex:n.number,group:n.object,previewType:n.oneOf(["condition","subGroup","newGroup"])};de.__docgenInfo={description:"",methods:[],displayName:"ConditionPreview",props:{previewType:{required:!1,tsType:{name:"union",raw:"'newGroup' | 'subGroup' | 'condition'",elements:[{name:"literal",value:"'newGroup'"},{name:"literal",value:"'subGroup'"},{name:"literal",value:"'condition'"}]},description:"type of review to be displayed",type:{name:"enum",value:[{value:"'condition'",computed:!1},{value:"'subGroup'",computed:!1},{value:"'newGroup'",computed:!1}]}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"current conditional group",type:{name:"object"}},colorIndex:{required:!1,tsType:{name:"number"},description:"index of the color for next group",type:{name:"number"}}}};const Ce=({group:e,aria:a,onRemove:r,onChange:i,className:s})=>{const[l,u,p]=F(["conditionBuilderGroupText","conditionText","conditionBuilderText"]),{statementConfig:c}=qe(),{variant:m,conditionBuilderRef:f}=b.useContext(G),[T,w]=b.useState(-1),[y,h]=b.useState(-1);b.useState(!1);const v=b.useRef(null),q=(x,O,k)=>{var L;if(e&&e.conditions&&e.conditions.length>1)if(m==z?A(O):j(O,k),d(e.conditions,x)){const C=e.conditions.filter(_=>x!==_.id);if((C==null?void 0:C[0]).conditions){const _=C[0];C.splice(0,1,..._==null?void 0:_.conditions)}i==null||i({...e,conditions:C})}else{const C=(L=e==null?void 0:e.conditions)==null?void 0:L.reduce((_,P)=>{const X=P;return X.conditions?_.concat(X.conditions):_},[]);i==null||i({...e,conditions:C})}else r==null||r(O)},d=(x,O)=>x.find(k=>!k.conditions&&k.id!==O),g=(x,O)=>{const k=[...e!=null&&e.conditions?e.conditions.slice(0,O):[],x,...e!=null&&e.conditions?e.conditions.slice(O+1):[]];i==null||i({...e,conditions:k,id:(e==null?void 0:e.id)??Z()})},I=x=>{const O={property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:Z()};i==null||i({...e,conditions:[...e.conditions?e.conditions.slice(0,x+1):[],O,...e.conditions?e.conditions.slice(x+1):[]]})},j=(x,O)=>{var L;const k=(L=x.currentTarget.closest(`.${o}__group`))==null?void 0:L.querySelectorAll('[data-name="closeCondition"]');O==k.length-1?W(k[O-1],f):W(k[O+1],f)},A=x=>{var _,P,X,ye,Ae,fe,ve,se,be;const O=(P=(_=x.currentTarget)==null?void 0:_.closest('[role="row"]'))==null?void 0:P.getAttribute("aria-level"),k=(ye=(X=x.currentTarget)==null?void 0:X.closest('[role="row"]'))==null?void 0:ye.getAttribute("aria-posinset"),L=(Ae=v.current)==null?void 0:Ae.querySelector(`[aria-level="${O}"][aria-posinset="${Number(k)+1}"]`),C=(fe=v.current)==null?void 0:fe.querySelector(`[aria-level="${O}"][aria-posinset="${Number(k)-1}"]`);if(L!=null&&L.classList.contains(`${o}__condition-block`))W(L==null?void 0:L.querySelector('[data-name="closeCondition"]'),f);else if(C!=null&&C.classList.contains(`${o}__condition-block`))W(C==null?void 0:C.querySelector('[data-name="closeCondition"]'),f);else{const J=(ve=v.current)==null?void 0:ve.querySelectorAll(`[aria-level="${Number(O)-1}"][role="row"]`),re=(se=v.current)==null?void 0:se.querySelector(`[aria-level="${Number(O)+1}"][role="row"]`);if(re){const ue={ariaLevel:Number(re.ariaLevel)-1,ariaPosInSet:re.ariaPosInSet};setTimeout(()=>{var me;const ie=(me=v.current)==null?void 0:me.querySelector(`[role="row"][aria-level="${ue.ariaLevel}"][aria-posinset="${ue.ariaPosInSet}"]`);W(ie==null?void 0:ie.querySelector('[data-name="closeCondition"]'),f)},0)}else J!=null&&J.length&&J.length>1&&W((be=J[J.length-2])==null?void 0:be.querySelector('[data-name="closeCondition"]'),f)}},E=x=>{i({...e,conditions:[...e.conditions?e.conditions.slice(0,x+1):[],{statement:"ifAll",groupOperator:"and",conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:Z()}],id:Z()},...e.conditions?e.conditions.slice(x+1):[]]})},D=(x,O)=>x+1>=O.length||O.length-1!=x&&O[x+1].conditions,R=x=>{h(x)},V=()=>{h(-1)},K=x=>{w(x)},S=()=>{w(-1)},N=x=>{var k;const O=(k=c.find(L=>L.id==x))==null?void 0:k.connector;i({...e,groupOperator:O,statement:x})},B=x=>{i({...e,groupOperator:x})},M=()=>{var x;return t.createElement("div",{className:`${s}  eachGroup`},t.createElement("div",{className:`${o}__condition-wrapper`,role:"grid","aria-label":p},(x=e==null?void 0:e.conditions)==null?void 0:x.map((O,k)=>{var L;return t.createElement("div",{key:O.id,className:`${o}__group-wrapper`},t.createElement(Te,{conjunction:k>0?e.groupOperator:void 0,aria:{level:a.level+1,posinset:k+1,setsize:(L=e==null?void 0:e.conditions)==null?void 0:L.length},isStatement:k==0,condition:O,group:e,conditionIndex:k,onChange:C=>{g(C,k)},addConditionHandler:I,onRemove:C=>{q(O.id,C,k)},onConnectorOperatorChange:B,onStatementChange:N,isLastCondition:D}))})))},ae=()=>{var x;return t.createElement("div",{className:`${s} ${o}__condition-wrapper`,role:a.level===1?"rowgroup":void 0,"aria-label":a.level==1?l:void 0,ref:v},t.createElement("div",{tabIndex:0,role:"row","aria-level":a.level,"aria-posinset":a.posinset,"aria-setsize":a.setsize},t.createElement(H,{label:e.statement,title:u,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`},t.createElement(te,{conditionState:{value:e.statement,label:u},onChange:(O,k)=>{ee(k,f),N(O)},config:{options:c,isStatement:!0}}))),(x=e==null?void 0:e.conditions)==null?void 0:x.map((O,k)=>{var L,C;return t.createElement(b.Fragment,{key:O.id},O.conditions?t.createElement("div",{className:U(`${o}__condition-block subgroup  ${o}__gap`,{[`${o}__gap-bottom`]:e&&e.conditions&&e.conditions.length<k+1},{})},t.createElement(ge,{className:`${o}__gap ${o}__gap-bottom ${o}__groupConnector`,operator:e.groupOperator,"aria-hidden":!0}),t.createElement(Ce,{aria:{level:a.level+1,posinset:k+1,setsize:((L=e.conditions)==null?void 0:L.length)??0},className:`${o}__group`,group:O,onChange:_=>{g(_,k)},onRemove:_=>{q(O.id,_,k)}})):t.createElement("div",null,t.createElement(Te,{conjunction:k>0?e.groupOperator:void 0,aria:{level:a.level+1,posinset:k+1,setsize:((C=e.conditions)==null?void 0:C.length)??0},isStatement:!1,condition:O,group:e,conditionIndex:k,addConditionHandler:I,addConditionSubGroupHandler:E,onChange:_=>{g(_,k)},onRemove:_=>{q(O.id,_,k)},onConnectorOperatorChange:B,onStatementChange:N,showConditionSubGroupPreviewHandler:()=>{R(k)},hideConditionSubGroupPreviewHandler:V,showConditionPreviewHandler:()=>{K(k)},hideConditionPreviewHandler:S,isLastCondition:D})),k==y&&t.createElement(de,{previewType:"subGroup",group:e}),k==T&&t.createElement(de,{previewType:"condition",group:e}))}))};return t.createElement(t.Fragment,null,m==z&&ae(),m==Ne&&M())};Ce.propTypes={aria:n.object,className:n.string,group:n.object,onChange:n.func,onRemove:n.func};Ce.__docgenInfo={description:"",methods:[],displayName:"ConditionGroupBuilder",props:{group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"",type:{name:"object"}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"call back to remove the particular group from the state tree",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(group: ConditionGroup) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},name:"group"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},aria:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  level: number;
  posinset: number;
  setsize: number;
}`,signature:{properties:[{key:"level",value:{name:"number",required:!0}},{key:"posinset",value:{name:"number",required:!0}},{key:"setsize",value:{name:"number",required:!0}}]}},description:"object contains the aria attributes",type:{name:"object"}}}};const nn=()=>{const{rootState:e,setRootState:a}=b.useContext(G),[r]=F(["conditionText"]),{connectorConfig:i}=qe(),s=l=>{a({...e,operator:l})};return t.createElement("div",{className:`${o}__group-separator ${o}__group-separator-row`,role:"row",tabIndex:-1,"aria-level":1},t.createElement(H,{label:e.operator,title:r,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`},t.createElement(te,{conditionState:{value:e.operator,label:r},onChange:s,config:{options:i}})))};nn.__docgenInfo={description:"",methods:[],displayName:"GroupConnector"};const De=({actions:e,className:a})=>{const{actionState:r=[],setActionState:i}=b.useContext(G),[s,l]=b.useState(-1),[u,p,c,m,f,T]=F(["actionsText","then","and","removeActionText","addActionText","actionSectionText"]),w=()=>{const d={id:Z(),label:void 0,popoverToOpen:"valueField"};i==null||i([...r,d])},y=(d,g)=>{const j={...e.find(A=>A.id===d),id:r[g].id};i==null||i([...r.slice(0,g),j,...r.slice(g+1)])},h=d=>{i==null||i(r.filter(g=>g.id!==d))},v=d=>{l(d)},q=()=>{l(-1)};return t.createElement("div",{className:a},t.createElement(Ee,{className:`${o}__heading`,level:4},t.createElement(Ie,null,u)),t.createElement("div",{className:`${o}__condition-wrapper`,role:"grid","aria-label":T},r==null?void 0:r.map((d,g)=>t.createElement("div",{key:d.id,role:"row",className:U(`${o}__condition-block ${o}__gap ${o}__gap-bottom`,{[`${o}__condition__deletion-preview`]:s==g})},t.createElement(H,{className:`${o}__statement-button`,tabIndex:0,popOverClassName:`${o}__gap`,label:g===0?p:c}),t.createElement(H,{label:d.label,title:u,condition:d,"data-name":"valueField",type:"option"},t.createElement(he,{conditionState:{value:d.label},onChange:I=>y(I.id,g),config:{options:e}})),t.createElement("span",{role:"gridcell","aria-label":m},t.createElement(Q,{hideLabel:!0,label:m,onClick:()=>h(d.id),onMouseEnter:()=>v(g),onMouseLeave:q,onFocus:()=>v(g),onBlur:q,renderIcon:ze,className:`${o}__close-condition`,"data-name":"closeCondition"})),r.length===g+1&&t.createElement(pe,{onClick:w,className:`${o}__gap ${o}__gap-left`,buttonLabel:f,tabIndex:0}))),r.length===0&&t.createElement(pe,{onClick:w,className:`${o}__gap ${o}__gap-left`,buttonLabel:f,tabIndex:0})))};De.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),className:n.string};De.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderActions",props:{actions:{required:!1,tsType:{name:"union",raw:"Action[] | Option[]",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}]},description:"optional array of object that give the list of actions.",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}}}};const Ge=({startConditionLabel:e,getConditionState:a,getActionsState:r,initialState:i,actions:s})=>{var K;const{rootState:l,setRootState:u,variant:p,actionState:c,onAddItem:m}=b.useContext(G),f=b.useRef(i!=null&&i.state?JSON.parse(JSON.stringify(i==null?void 0:i.state)):null),[T,w]=b.useState(!1),[y,h]=b.useState(!1),[v,q,d]=F(["addConditionGroupText","conditionHeadingText","conditionBuilderHierarchicalText"]),g=()=>{h(!0)},I=()=>{h(!1)};b.useEffect(()=>{var S;(S=l==null?void 0:l.groups)!=null&&S.length?w(!0):w(!1),a&&a(l??{})},[l]),b.useEffect(()=>{r==null||r(c??[])},[c]),b.useEffect(()=>{i!=null&&i.enabledDefault&&(u==null||u(i.state))},[i]);const j=()=>{var S,N;w(!0),(N=(S=f==null?void 0:f.current)==null?void 0:S.groups)!=null&&N.length?(u==null||u(f.current),f.current=null):u==null||u(xn)},A=b.useCallback(S=>{var B;const N=(B=l==null?void 0:l.groups)==null?void 0:B.filter(M=>S!==(M==null?void 0:M.id));u==null||u({...l,groups:l?N:[]}),(N==null?void 0:N.length)===0&&(f.current=null)},[u,l]),E=(S,N)=>{if(l&&l.groups){const B=[...l.groups?l.groups.slice(0,N):[],S,...l.groups?l.groups.slice(N+1):[]];u==null||u({...l,groups:B})}},D=()=>{const{preventAdd:S}=(m==null?void 0:m({type:"group",state:l}))??{};if(!S){const N={statement:"ifAll",groupOperator:"and",id:Z(),conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:Z()}]};u==null||u({...l,groups:l&&l.groups?[...l.groups,N]:[N]})}},R=()=>{var N;return(((N=l==null?void 0:l.groups)==null?void 0:N.length)??0)%5};if(!T)return t.createElement(Ue,{className:`${o}__addConditionText-button`,renderIcon:S=>t.createElement(Ze,{...S}),iconDescription:e,kind:"ghost",size:"sm",onClick:j},e);const V=p===z?{role:"treegrid","aria-label":d}:null;return t.createElement(t.Fragment,null,t.createElement(Ee,{className:`${o}__heading`,level:4},t.createElement(Ie,null,q)),t.createElement("div",{className:`${o}__content-container`,...V},l&&((K=l==null?void 0:l.groups)==null?void 0:K.map((S,N)=>t.createElement("div",{key:S.id,className:`${o}__group-wrapper`},t.createElement(Ce,{className:`${o}__group`,aria:{level:1,posinset:N*2+1,setsize:(l.groups&&l.groups.length*2)??0},group:S,onRemove:()=>{A(S.id)},onChange:B=>{E(B,N)}}),l.groups&&N<l.groups.length-1&&t.createElement(nn,null)))),p==z&&t.createElement("div",{role:"row",tabIndex:-1,"aria-level":1,className:`${o}__add-group`},t.createElement(Q,{renderIcon:Ye,onClick:D,onMouseEnter:g,onMouseLeave:I,onFocus:g,onBlur:I,className:`${o}__add-condition-group `,hideLabel:!0,label:v,wrapperProps:{role:"gridcell","aria-label":v}})),y&&t.createElement(de,{previewType:"newGroup",colorIndex:R(),group:{groupOperator:l==null?void 0:l.operator,id:Z()}})),s&&t.createElement(De,{actions:s,className:`${o}__actions-container`}))};Ge.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),getActionsState:n.func,getConditionState:n.func.isRequired,initialState:n.shape({state:n.shape({groups:n.arrayOf(n.shape({groupOperator:n.string,statement:n.string,conditions:n.arrayOf(n.oneOfType([n.shape({property:n.string,operator:n.string,value:n.oneOfType([n.string,n.arrayOf(n.shape({id:n.string,label:n.string})),n.shape({id:n.string,label:n.string})])}),n.object]))})),operator:n.string}),enabledDefault:n.bool}),startConditionLabel:n.string.isRequired};Ge.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderContent",props:{startConditionLabel:{required:!0,tsType:{name:"string"},description:"",type:{name:"string"}},getConditionState:{required:!0,tsType:{name:"signature",type:"function",raw:"(state: ConditionBuilderState) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"}],return:{name:"void"}}},description:"This is a callback function that returns the updated state",type:{name:"func"}},getActionsState:{required:!1,tsType:{name:"signature",type:"function",raw:"(state: Action[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},name:"state"}],return:{name:"void"}}},description:"callback functions that will provide the updated action state back.",type:{name:"func"}},initialState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  state: ConditionBuilderState;
  enabledDefault?: boolean;
}`,signature:{properties:[{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"enabledDefault",value:{name:"boolean",required:!1}}]}},description:"Optional prop if the condition building need to start from a predefined initial state",type:{name:"shape",value:{state:{name:"shape",value:{groups:{name:"arrayOf",value:{name:"shape",value:{groupOperator:{name:"string",required:!1},statement:{name:"string",required:!1},conditions:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{property:{name:"string",required:!1},operator:{name:"string",required:!1},value:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}},{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}],required:!1}}},{name:"object"}]},required:!1}}},required:!1},operator:{name:"string",required:!1}},required:!1},enabledDefault:{name:"bool",required:!1}}}},actions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:"optional array of object that give the list of actions.",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}}}};const Be="ConditionBuilder";let ce=t.forwardRef(({className:e,inputConfig:a,startConditionLabel:r="Add Condition",popOverSearchThreshold:i,getOptions:s,initialState:l,getConditionState:u,getActionsState:p,variant:c=Ne,actions:m,translateWithId:f,statementConfigCustom:T,onAddItem:w,...y},h)=>{const v=b.useRef(null),q=h||v,d=g=>{_n(g,q,c)};return t.createElement(je,{inputConfig:a,popOverSearchThreshold:i,getOptions:s,variant:c,translateWithId:f,conditionBuilderRef:q,statementConfigCustom:T,onAddItem:w},t.createElement("div",{...y,className:U(o,e,{}),ref:q,...cn(Be)},t.createElement(dn,{className:`${o}__${c}`,onKeyDown:d},t.createElement(Ge,{startConditionLabel:r,getConditionState:u,getActionsState:p,initialState:l,actions:m}))))});ce=Ke.checkComponentEnabled(ce,Be);ce.displayName=Be;ce.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),className:n.string,getActionsState:n.func,getConditionState:n.func.isRequired,getOptions:n.func,initialState:n.shape({state:n.shape({groups:n.arrayOf(n.shape({groupOperator:n.string,statement:n.string,conditions:n.arrayOf(n.oneOfType([n.shape({property:n.string,operator:n.string,value:n.oneOfType([n.string,n.arrayOf(n.shape({id:n.string,label:n.string})),n.shape({id:n.string,label:n.string})])}),n.object]))})),operator:n.string}),enabledDefault:n.bool}),inputConfig:n.shape({properties:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object]),type:n.oneOf(["text","textarea","number","date","option","time","custom"]).isRequired,description:n.string,config:n.shape({options:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object])})),component:n.func,operators:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired})),valueFormatter:n.func})}))}).isRequired,onAddItem:n.func,popOverSearchThreshold:n.number.isRequired,startConditionLabel:n.string,statementConfigCustom:n.arrayOf(n.shape({id:n.string.isRequired,connector:n.oneOf(["and","or"]).isRequired,label:n.string.isRequired,secondaryLabel:n.string})),translateWithId:n.func,variant:n.oneOf(["Non-Hierarchical","Hierarchical"])};ce.__docgenInfo={description:"TODO: A description of the component.",methods:[],displayName:"ConditionBuilder",props:{inputConfig:{required:!0,tsType:{name:"signature",type:"object",raw:"{ properties: Property[] }",signature:{properties:[{key:"properties",value:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
} & ConfigType`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}},{key:"description",value:{name:"string",required:!1}},{key:"type",value:{name:"any",required:!1}},{key:"config",value:{name:"any",required:!1}}]}},{name:"union",raw:`| PropertyConfigOption['config']
| PropertyConfigTextArea['config']
| PropertyConfigText['config']
| PropertyConfigNumber['config']
| PropertyConfigDate['config']
| PropertyConfigTime['config']
| PropertyConfigCustom['config']`,elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"PropertyConfigTextArea['config']",raw:"PropertyConfigTextArea['config']"},{name:"PropertyConfigText['config']",raw:"PropertyConfigText['config']"},{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},{name:"intersection",raw:"PropertyConfigDate['config']"},{name:"signature",raw:"PropertyConfigTime['config']"},{name:"signature",raw:"PropertyConfigCustom['config']"}]}]}],raw:"Property[]",required:!0}}]}},description:"This is a mandatory prop that defines the input to the condition builder.",type:{name:"shape",value:{properties:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'textarea'",computed:!1},{value:"'number'",computed:!1},{value:"'date'",computed:!1},{value:"'option'",computed:!1},{value:"'time'",computed:!1},{value:"'custom'",computed:!1}],required:!0},description:{name:"string",required:!1},config:{name:"shape",value:{options:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1}}},required:!1},component:{name:"func",required:!1},operators:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0}}},required:!1},valueFormatter:{name:"func",required:!1}},required:!1}}},required:!1}}}},initialState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  state: ConditionBuilderState;
  enabledDefault?: boolean;
}`,signature:{properties:[{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"enabledDefault",value:{name:"boolean",required:!1}}]}},description:`Optional prop if you want to pass a saved condition state, pass as "initialState.state".
"initialState.enabledDefault" will populate the builder with the provided initial state before clicking Add Condition button.

 This state should respect the structure of condition state that is available in getConditionState callback`,type:{name:"shape",value:{state:{name:"shape",value:{groups:{name:"arrayOf",value:{name:"shape",value:{groupOperator:{name:"string",required:!1},statement:{name:"string",required:!1},conditions:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{property:{name:"string",required:!1},operator:{name:"string",required:!1},value:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}},{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}],required:!1}}},{name:"object"}]},required:!1}}},required:!1},operator:{name:"string",required:!1}},required:!1},enabledDefault:{name:"bool",required:!1}}}},getActionsState:{required:!1,tsType:{name:"signature",type:"function",raw:"(state: Action[] | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"Action[] | undefined",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},{name:"undefined"}]},name:"state"}],return:{name:"void"}}},description:"This is a callback that gives back the updated action state",type:{name:"func"}},getConditionState:{required:!0,tsType:{name:"signature",type:"function",raw:"(state: ConditionBuilderState | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"ConditionBuilderState | undefined",elements:[{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},{name:"undefined"}]},name:"state"}],return:{name:"void"}}},description:"This is a callback that gives back updated condition state",type:{name:"func"}},getOptions:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  state: ConditionBuilderState,
  condition: Condition
) => Promise<Option[]>`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"},{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}],raw:"Promise<Option[]>"}}},description:`Callback triggered to dynamically fetch options for a property of type 'option'.
This is invoked when no static options array is provided in the input config.
The function should return a Promise that resolves with an array of options in the required format.`,type:{name:"func"}},actions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:"optional array of actions",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},popOverSearchThreshold:{required:!0,tsType:{name:"number"},description:"Provide an mandatory numeric value that will be used to enable search option in the popovers with list.",type:{name:"number"}},startConditionLabel:{required:!1,tsType:{name:"string"},description:"Provide a label to the button that starts condition builder",defaultValue:{value:"'Add Condition'",computed:!1},type:{name:"string"}},variant:{required:!1,tsType:{name:"union",raw:"'Non-Hierarchical' | 'Hierarchical'",elements:[{name:"literal",value:"'Non-Hierarchical'"},{name:"literal",value:"'Hierarchical'"}]},description:"Provide the condition builder variant: Non-Hierarchical/ Hierarchical",defaultValue:{value:"'Non-Hierarchical'",computed:!1},type:{name:"enum",value:[{value:"'Non-Hierarchical'",computed:!1},{value:"'Hierarchical'",computed:!1}]}},translateWithId:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: ConditionBuilderTextKeys) => string",signature:{arguments:[{type:{name:"union",raw:`| 'ifText'
| 'unlessText'
| 'excl_if'
| 'and'
| 'or'
| 'is'
| 'ifAll'
| 'ifAny'
| 'unlessAll'
| 'unlessAny'
| 'greater'
| 'greaterEqual'
| 'lower'
| 'lowerEqual'
| 'startsWith'
| 'endsWith'
| 'contains'
| 'oneOf'
| 'before'
| 'after'
| 'between'
| 'addConditionText'
| 'addConditionGroupText'
| 'addSubgroupText'
| 'conditionText'
| 'propertyText'
| 'operatorText'
| 'valueText'
| 'connectorText'
| 'conditionRowText'
| 'conditionRowGroupText'
| 'removeConditionText'
| 'addConditionRowText'
| 'startText'
| 'endText'
| 'clearSearchText'
| 'actionsText'
| 'then'
| 'removeActionText'
| 'addActionText'
| 'invalidText'
| 'invalidNumberWarnText'
| 'conditionBuilderText'
| 'actionSectionText'
| 'conditionHeadingText'
| 'addPropertyText'
| 'addOperatorText'
| 'addValueText'
| 'conditionBuilderHierarchicalText'`,elements:[{name:"literal",value:"'ifText'"},{name:"literal",value:"'unlessText'"},{name:"literal",value:"'excl_if'"},{name:"literal",value:"'and'"},{name:"literal",value:"'or'"},{name:"literal",value:"'is'"},{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"},{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"},{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"literal",value:"'before'"},{name:"literal",value:"'after'"},{name:"literal",value:"'between'"},{name:"literal",value:"'addConditionText'"},{name:"literal",value:"'addConditionGroupText'"},{name:"literal",value:"'addSubgroupText'"},{name:"literal",value:"'conditionText'"},{name:"literal",value:"'propertyText'"},{name:"literal",value:"'operatorText'"},{name:"literal",value:"'valueText'"},{name:"literal",value:"'connectorText'"},{name:"literal",value:"'conditionRowText'"},{name:"literal",value:"'conditionRowGroupText'"},{name:"literal",value:"'removeConditionText'"},{name:"literal",value:"'addConditionRowText'"},{name:"literal",value:"'startText'"},{name:"literal",value:"'endText'"},{name:"literal",value:"'clearSearchText'"},{name:"literal",value:"'actionsText'"},{name:"literal",value:"'then'"},{name:"literal",value:"'removeActionText'"},{name:"literal",value:"'addActionText'"},{name:"literal",value:"'invalidText'"},{name:"literal",value:"'invalidNumberWarnText'"},{name:"literal",value:"'conditionBuilderText'"},{name:"literal",value:"'actionSectionText'"},{name:"literal",value:"'conditionHeadingText'"},{name:"literal",value:"'addPropertyText'"},{name:"literal",value:"'addOperatorText'"},{name:"literal",value:"'addValueText'"},{name:"literal",value:"'conditionBuilderHierarchicalText'"}]},name:"id"}],return:{name:"string"}}},description:`Optional prop, if you need to pass translations to the texts on the component instead of the defined defaults.
This callback function will receive the message id and you need to return the corresponding text for that id.`,type:{name:"func"}},statementConfigCustom:{required:!1,tsType:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,signature:{properties:[{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}]}],raw:"statementConfig[]"},description:"Optional prop for passing custom configuration for statement option from default op",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},connector:{name:"enum",value:[{value:"'and'",computed:!1},{value:"'or'",computed:!1}],required:!0},label:{name:"string",required:!0},secondaryLabel:{name:"string",required:!1}}}}},onAddItem:{required:!1,tsType:{name:"signature",type:"function",raw:"(config: AddItemConfig) => { preventAdd: boolean }",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  type: AddItemType;
  state: ConditionBuilderState;
  group?: ConditionGroup;
}`,signature:{properties:[{key:"type",value:{name:"union",raw:"'condition' | 'subgroup' | 'group'",elements:[{name:"literal",value:"'condition'"},{name:"literal",value:"'subgroup'"},{name:"literal",value:"'group'"}],required:!0}},{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"group",value:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}}]}},name:"config"}],return:{name:"signature",type:"object",raw:"{ preventAdd: boolean }",signature:{properties:[{key:"preventAdd",value:{name:"boolean",required:!0}}]}}}},description:`this is an optional callback triggered before adding any condition , subgroup or group.
User can optionally perform any validation and can stop add action if they return back {preventAdd:true}`,type:{name:"func"}}}};export{ce as C,z as H,Ne as N};
