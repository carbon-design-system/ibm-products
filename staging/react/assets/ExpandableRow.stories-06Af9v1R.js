import{e as i,S as u,r as x}from"./iframe-DaJ7qZFz.js";import{g}from"./getBatchActions-BbSloPgp.js";import{s as w,m as E}from"./_storybook-styles-CIwNXjpZ.js";import{D as f}from"./DatagridActions-CcbVNrYn.js";import{D as S}from"./DatagridPagination-Bd1j_PON.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-BB26jHLG.js";import{u as h}from"./useExpandedRow-DF8XS4rG.js";import{u as D}from"./useSelectRows-18X0m3aF.js";import{u as C}from"./useStickyColumn-yExFqzA9.js";import{u as R}from"./usePrefix-CwF9PQdZ.js";import{E as H}from"./bucket-6-BJYpAUvA.js";import{T as b}from"./bucket-17-B_zXmHYU.js";import"./bucket-0-CrmspZNA.js";import"./bucket-2-P2R9j-W1.js";import"./index-Z5fLEIA0.js";import"./bucket-18-ByTZLmmx.js";import"./bucket-7-Cb-OIaT0.js";import"./ComposedModal-BzOonGp7.js";import"./index-BEhuL1MR.js";import"./index-BpcqVyGu.js";import"./LayerContext-vGQTArkS.js";import"./clamp--00YEiB8.js";import"./ButtonSet-DJKPI3Nr.js";import"./InlineLoading-DLeNTBnm.js";import"./mergeRefs-91-mP8KM.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-D2fPHIkV.js";import"./Text-DAzzyO_r.js";import"./utils-sYH23xe2.js";import"./TableToolbarSearch-DT4Hw_h2.js";import"./wrapComponent-BwhF63QN.js";import"./Search-C1j5IXK_.js";import"./FormContext-CxwIFKWz.js";import"./bucket-15-CzkBbepc.js";import"./Dropdown-DehTuAds.js";import"./index-BUQhqYck.js";import"./inheritsLoose-DHKJTbHM.js";import"./bucket-19-CTkSN82q.js";import"./MenuItem-XyuHpF2L.js";import"./useControllableState-B4EUufmp.js";import"./useAttachedMenu-CjuWjUj6.js";import"./index-D4mpTMcf.js";import"./index-BR5lI6dj.js";import"./bucket-12-B9hKFMO6.js";import"./useOutsideClick-Cu2grhFH.js";import"./OverflowMenuItem-BdTRLdr9.js";import"./useFilterContext-CgRSX_Dl.js";import"./bucket-14-DXuzSbLU.js";import"./Pagination-C4ioK7zI.js";import"./Select-Be52BdQ6.js";import"./SelectItem-7Acv_LuD.js";import"./MultiSelect-B-k-6OVV.js";import"./Checkbox-JgT7PCYa.js";import"./devtools-fyD2yDo2.js";import"./TableRow-BVu2jI1u.js";import"./bucket-1-BS6eur1g.js";import"./TableToolbar-CkC68ua3.js";import"./index-Aneys0Pd.js";import"./ErrorEmptyState-BdSzZia8.js";import"./EmptyState-CM5V6CpY.js";import"./EmptyStateV2-DptYBUYu.js";import"./Link-BEYL5508.js";import"./props-helper-CIQFiJAN.js";import"./ErrorIllustration-D_n2p4Kc.js";import"./useId-CtFBCo7Z.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-D-bQqg8b.js";import"./NoDataIllustration-rmxnUzJb.js";import"./NotFoundEmptyState-C2nkzLxV.js";import"./NotFoundIllustration-DtvclZTU.js";import"./index.esm-CrR524Ho.js";import"./usePreviousValue-CgrRdUpw.js";import"./useResizeObserver-BSHR1HYJ.js";import"./useIsomorphicEffect-ODhclyWJ.js";import"./getFocusableElements-BW7cf991.js";import"./index-BwEyRhpR.js";import"./useClickOutside-Db0NgZOo.js";import"./AccordionItem-BhmLDKu6.js";import"./DatePicker-BUr2r0lY.js";import"./FormGroup-B2hJAePc.js";import"./NumberInput-DZyvCCBG.js";import"./useNormalizedInputProps-BHISR_Rl.js";import"./documentLang-E105Y72C.js";import"./bucket-16-Dxofq6tm.js";import"./RadioButton-gRg8VN4w.js";import"./RadioButtonGroup-BV801ATA.js";import"./usePrefersReducedMotion-W8OAEwi4.js";import"./usePresence-CKqzmrZ8.js";import"./ActionSet-BTJ2RB7T.js";import"./useWindowResize-FBiPseeK.js";import"./TagSet-DgGPnnpD.js";import"./Tag-CCW5k4jG.js";import"./DefinitionTooltip-DxTvn53E.js";import"./DismissibleTag-CZ0-AC-i.js";import"./usePortalTarget-BTAgzjDA.js";import"./OperationalTag-CwEvQ1Zw.js";import"./SkeletonText-BkPZdxkH.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-DpydXPYJ.js";import"./TableSelectRow-COn66nMO.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,bt={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const Bt=["ExpandableRowStory"];export{e as ExpandableRowStory,Bt as __namedExportsOrder,bt as default};
