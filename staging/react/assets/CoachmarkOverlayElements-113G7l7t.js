import{r as m,e as t,c as C,p as $,B as N,m as se,P as n,O as me}from"./iframe-BfCV3bOI.js";import{u as ue}from"./uuidv4-BN2rGLQG.js";import{g as V}from"./devtools-mGs0wnY2.js";import{m as de}from"./bucket-6-BUNG1ZbU.js";import{u as pe}from"./useIsomorphicEffect-CGC_2bjf.js";import{c as Z}from"./clamp-CsXXRQhr.js";import{C as fe}from"./Carousel-J8drHLz7.js";var he=(e=>(e.DEFAULT="default",e))(he||{}),_=(e=>(e.TOOLTIP="tooltip",e.FLOATING="floating",e.FIXED="fixed",e.STACKED="stacked",e))(_||{}),y=(e=>(e.BOTTOM="bottom",e.BOTTOM_LEFT="bottom-left",e.BOTTOM_RIGHT="bottom-right",e.LEFT="left",e.LEFT_TOP="left-top",e.LEFT_BOTTOM="left-bottom",e.RIGHT="right",e.RIGHT_TOP="right-top",e.RIGHT_BOTTOM="right-bottom",e.TOP="top",e.TOP_LEFT="top-left",e.TOP_RIGHT="top-right",e))(y||{});const ye=m.createContext(null),W=()=>m.useContext(ye),ee=`${$.prefix}--coachmark-dragbar`,te=`${$.prefix}--coachmark-overlay`,ie="CoachmarkDragbar",z={onDrag:()=>{},onClose:()=>{},showCloseButton:!0,theme:"light"},U=t.forwardRef(({a11yKeyboardHandler:e,onClose:d=z.onClose,onDrag:r=z.onDrag,showCloseButton:i=z.showCloseButton,theme:c=z.theme,...s},l)=>{const[v,x]=m.useState(!1);m.useEffect(()=>{const b=()=>x(!1);return window.addEventListener("mouseup",b),()=>{window.removeEventListener("mouseup",b)}},[]),m.useEffect(()=>{const b=p=>{r(p.movementX,p.movementY)};return v&&window.addEventListener("mousemove",b),()=>{window.removeEventListener("mousemove",b)}},[v,r]);const q=()=>x(!0),R=W()?.closeIconDescription;return t.createElement("header",{...s,className:C(ee,`${ee}__${c}`,{}),ref:l,...V(ie)},t.createElement("button",{type:"button",className:`${te}__handle`,onMouseDown:q,onKeyDown:e,title:"Drag Handle"},t.createElement(de,{size:"16"})),i&&t.createElement(N,{kind:"ghost",size:"sm",renderIcon:se,iconDescription:R,hasIconOnly:!0,className:`${te}--close-btn`,onClick:d}))});U.displayName=ie;U.propTypes={a11yKeyboardHandler:n.func.isRequired,onClose:n.func,onDrag:n.func,showCloseButton:n.bool,theme:n.oneOf(["light","dark"])};U.__docgenInfo={description:`DO NOT USE. This component is for the exclusive use
of other Onboarding components.`,methods:[],displayName:"CoachmarkDragbar",props:{a11yKeyboardHandler:{required:!0,tsType:{name:"signature",type:"function",raw:"(event: React.KeyboardEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactKeyboardEvent",raw:"React.KeyboardEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"event"}],return:{name:"void"}}},description:"Handler to manage keyboard interactions with the dragbar.",type:{name:"func"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function to call when the close button is clicked.",defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},onDrag:{required:!1,tsType:{name:"signature",type:"function",raw:"(movementX: number, movementY: number) => void",signature:{arguments:[{type:{name:"number"},name:"movementX"},{type:{name:"number"},name:"movementY"}],return:{name:"void"}}},description:`Function to call when the user clicks and drags the Coachmark.
For internal use only by the parent CoachmarkOverlay.`,defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},showCloseButton:{required:!1,tsType:{name:"boolean"},description:'Show/hide the "X" close button.',defaultValue:{value:"true",computed:!1},type:{name:"bool"}},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Determines the theme of the component.",defaultValue:{value:"'light'",computed:!1},type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]}}}};const ne=`${$.prefix}--coachmark-header`,ae=`${$.prefix}--coachmark-overlay`,le="CoachmarkHeader",M={onClose:()=>{},showCloseButton:!0,theme:"light"},Y=t.forwardRef(({onClose:e=M.onClose,showCloseButton:d=M.showCloseButton,theme:r=M.theme,...i},c)=>{const s=W()?.closeIconDescription;return t.createElement("header",{...i,className:C(ne,`${ne}__${r}`),ref:c,...V(le)},d&&t.createElement("div",{className:`${ae}--close-btn-container`},t.createElement(N,{kind:"ghost",size:"sm",renderIcon:se,iconDescription:s,hasIconOnly:!0,className:`${ae}--close-btn`,onClick:e})))});Y.displayName=le;Y.propTypes={closeIconDescription:n.string,onClose:n.func,showCloseButton:n.bool,theme:n.oneOf(["light","dark"])};Y.__docgenInfo={description:`DO NOT USE. This component is for the exclusive use
of other Onboarding components.`,methods:[],displayName:"CoachmarkHeader",props:{onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function to call when the close button is clicked.",defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},showCloseButton:{required:!1,tsType:{name:"boolean"},description:'Show/hide the "X" close button.',defaultValue:{value:"true",computed:!1},type:{name:"bool"}},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Determines the theme of the component.",defaultValue:{value:"'light'",computed:!1},type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]}},closeIconDescription:{description:"Tooltip text and aria label for the Close button icon.",type:{name:"string"},required:!1}}};const ge=(e,d)=>{const{width:r,height:i}=e.targetRect,c=24;let s=0,l=0;if(d!==_.TOOLTIP)switch(e.align){case y.TOP:l=r/2;break;case y.TOP_LEFT:l=c;break;case y.TOP_RIGHT:l=r-c;break;case y.BOTTOM:s=i,l=r/2;break;case y.BOTTOM_LEFT:s=i,l=c;break;case y.BOTTOM_RIGHT:s=i,l=r-c;break;case y.LEFT:s=i/2;break;case y.LEFT_TOP:s=c;break;case y.LEFT_BOTTOM:s=i-c;break;case y.RIGHT:s=i/2,l=r;break;case y.RIGHT_TOP:s=c,l=r;break;case y.RIGHT_BOTTOM:s=i-c,l=r;break}return{top:s,left:l}},O=`${$.prefix}--coachmark-overlay`,K="CoachmarkOverlay",oe={kind:_.FLOATING,theme:"light"},G=m.forwardRef((e,d)=>{const{children:r,onClose:i,fixedIsVisible:c,className:s,kind:l=oe.kind,theme:v=oe.theme,...x}=e,{winHeight:q,winWidth:R}=ve(),[b,p]=m.useState(!1),T=m.useRef(null),g=W(),B=l===_.TOOLTIP,h=l===_.FLOATING,Q=s?.includes("is-visible"),P=a=>{const{shiftKey:o,key:u}=a;if(u==="Enter"||u===" ")p(f=>!f);else if(b){const f=o?128:32;switch(u){case"ArrowLeft":k(f*-1,0);break;case"ArrowRight":k(f,0);break;case"ArrowUp":k(0,f*-1);break;case"ArrowDown":k(0,f);break}}},D=m.useMemo(()=>{const a={};if((B||h)&&(g?.targetRect&&(a.left=g.targetRect.x+window.scrollX,a.top=g.targetRect.y+window.scrollY),a.left&&a.top&&(B&&(a.left=a.left+16,a.top=a.top+16),h))){const o=ge(g,l);a.left=a.left+o.left,a.top=a.top+o.top}return a},[B,h,g,l]);function S(a,o){let u=a,f=o;const L=R-288,H=q-150;return u<0?u=0:u>L&&(u=L),f<0?f=0:f>H&&(f=H),{targetX:u,targetY:f}}function k(a,o){const u=T.current;if(!u)return;const{x:f,y:L}=u.getBoundingClientRect(),{targetX:H,targetY:ce}=S(f+a,L+o);u.style.transform="none",u.style.position="fixed",u.style.left=`${H}px`,u.style.top=`${ce}px`,u.style.bottom="auto"}const w=ue();return pe(()=>{if(T.current){const a=T.current?.style;Object.keys(D).forEach(o=>{const u=D[o];a.setProperty(o,`${u}px`)})}},[D,T]),t.createElement("div",{...x,className:C(O,`${O}--${l}`,`${O}__${v}`,(B||h)&&g?.align&&`${O}--${g.align}`,c&&`${O}--is-visible`,b&&`${O}--is-dragmode`,s),ref:T,"aria-labelledby":w,tabIndex:-1,...V(K)},h?t.createElement(U,{a11yKeyboardHandler:P,onBlur:()=>p(!1),onDrag:k,theme:v,onClose:i}):t.createElement(Y,{onClose:i}),t.createElement("div",{className:`${O}__body`,ref:d,id:w},t.Children.map(r,a=>t.cloneElement(a,{isVisible:Q}))))});function re(){const{innerWidth:e,innerHeight:d}=window;return{winWidth:e,winHeight:d}}const ve=()=>{const[e,d]=m.useState(re());return m.useEffect(()=>{function r(){d(re())}return window.addEventListener("resize",r),()=>window.removeEventListener("resize",r)},[]),e};G.deprecated={level:"warn",details:`${K} is deprecated.`};G.displayName=K;G.propTypes={children:n.node.isRequired,className:n.string,fixedIsVisible:n.bool.isRequired,kind:n.oneOf(Object.values(_)),onClose:n.func.isRequired,theme:n.oneOf(["light","dark"])};G.__docgenInfo={description:`DO NOT USE. This component is for the exclusive use
of other Onboarding components.`,methods:[],displayName:"CoachmarkOverlay",props:{children:{required:!0,tsType:{name:"ReactNode"},description:`The CoachmarkOverlayElements child components.
Validation is handled in the parent Coachmark component.`,type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Optional class name for this component.",type:{name:"string"}},fixedIsVisible:{required:!0,tsType:{name:"boolean"},description:`The visibility of CoachmarkOverlay is
managed in the parent Coachmark component.`,type:{name:"bool"}},kind:{required:!1,tsType:{name:"COACHMARK_OVERLAY_KIND"},description:"What kind or style of Coachmark to render.",type:{name:"enum",computed:!0,value:"Object.values(COACHMARK_OVERLAY_KIND)"}},onClose:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function to call when the Coachmark closes.",type:{name:"func"}},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Determines the theme of the component.",type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]}}}};const I=`${$.prefix}--coachmark-overlay-element`,A="CoachmarkOverlayElement",j=t.forwardRef(({button:e,className:d,description:r,title:i,...c},s)=>t.createElement("div",{...c,className:C(I,d,{}),ref:s,...V(A)},t.createElement("div",{className:`${I}__content`},i&&t.createElement("h2",{className:`${I}__title`},i),r&&t.createElement("p",{className:`${I}__body`},r)),e&&t.createElement("div",{className:`${I}__button`},e)));j.deprecated={level:"warn",details:`${A} is deprecated.`};j.displayName=A;j.propTypes={button:n.node,className:n.string,description:n.node.isRequired,title:n.string.isRequired};j.__docgenInfo={description:`Component to be displayed within a CoachmarkOverlayElements container.
Can be used 1 to N number, to display content in a Coachmark's overlay
in a carousel fashion.`,methods:[],displayName:"CoachmarkOverlayElement",props:{button:{required:!1,tsType:{name:"ReactNode"},description:`An optional button can be rendered below the description.
This can be a link, button, Coachmark button, etc.`,type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Optional class name for this component.",type:{name:"string"}},description:{required:!0,tsType:{name:"ReactNode"},description:"The description of the Coachmark.",type:{name:"node"}},title:{required:!0,tsType:{name:"string"},description:"The title of the Coachmark.",type:{name:"string"}}}};const F=`${$.prefix}--coachmark-overlay-elements`,X="CoachmarkOverlayElements",E={isVisible:!1,nextButtonText:"Next",previousButtonLabel:"Back",closeButtonLabel:"Got it",onNext:void 0,onBack:void 0,currentStep:0},J=t.forwardRef(({className:e,children:d,isVisible:r=E.isVisible,renderMedia:i,currentStep:c=E.currentStep,nextButtonText:s=E.nextButtonText,previousButtonLabel:l=E.previousButtonLabel,closeButtonLabel:v=E.closeButtonLabel,onNext:x=E.onNext,onBack:q=E.onBack,...R},b)=>{const p=m.useRef(void 0),T=m.useRef(void 0),[g,B]=m.useState(0),[h,Q]=m.useState(c),P=W(),D=o=>{h>0&&o===0&&p.current&&setTimeout(()=>{p.current?.focus()},1e3),Q(o)},S=m.Children.count(d),k=0,w=S-1,a=m.useMemo(()=>i?.({playStep:h}),[h,i]);return m.useEffect(()=>{const o=Z(c,k,w);T?.current?.scrollToView?.(o)},[c]),m.useEffect(()=>{p.current&&p.current.focus()},[]),m.useEffect(()=>{setTimeout(()=>{p.current&&r&&p.current.focus()},100)},[r]),P?t.createElement("section",{...R,className:C(F,e,{}),ref:b,...V(X)},i&&t.createElement("div",{className:`${F}__element-stepped-media`},a),S===1?t.createElement(t.Fragment,null,d,v&&t.createElement("div",{className:C(`${F}__footer`,"coachmark-carousel-controls")},t.createElement(N,{size:"sm",...P.closeButtonProps,ref:p},v))):t.createElement(t.Fragment,null,t.createElement(fe,{ref:T,onScroll:o=>{B(o)}},d),t.createElement("div",{className:C(`${F}__footer`)},t.createElement("div",{className:`${F}--controls-progress`},`${h+1} / ${S}`),g>0&&t.createElement(N,{size:"sm",kind:"ghost",title:l,disabled:g===0,onClick:()=>{const o=Z(h-1,k,w);T?.current?.scrollToView?.(o),D(o),q?.()}},l),h<w?t.createElement(N,{size:"sm",ref:p,title:s,disabled:g===1,onClick:()=>{const o=Z(h+1,k,w);T?.current?.scrollToView?.(o),D(o),x?.()}},s):v&&t.createElement(N,{size:"sm",ref:p,...P.closeButtonProps},v)))):me.warn(`The ${X} is a composable container element which should be used only within the scope of a Coachmark or a CoachmarkFixed component.`)});J.deprecated={level:"warn",details:`${X} is deprecated.`};J.displayName=X;J.propTypes={children:n.node.isRequired,className:n.string,closeButtonLabel:n.string,currentStep:n.number,isVisible:n.bool,nextButtonText:n.string,onBack:n.func,onNext:n.func,previousButtonLabel:n.string,renderMedia:n.func};J.__docgenInfo={description:`Composable container to allow for the displaying of CoachmarkOverlayElement
components in a carousel fashion.`,methods:[],displayName:"CoachmarkOverlayElements",props:{children:{required:!0,tsType:{name:"ReactNode"},description:`CoachmarkOverlayElements should be used with one or many CoachmarkOverlayElement components as children.
@see CoachmarkOverlayElement`,type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Optional class name for this component.",type:{name:"string"}},isVisible:{required:!1,tsType:{name:"boolean"},description:`The visibility of CoachmarkOverlayElements is
managed in the parent component.`,defaultValue:{value:"false",computed:!1},type:{name:"bool"}},renderMedia:{required:!1,tsType:{name:"signature",type:"function",raw:"(params) => ReactNode",signature:{arguments:[{name:"params"}],return:{name:"ReactNode"}}},description:"Optional prop to render any media like images or any animated media.",type:{name:"func"}},nextButtonText:{required:!1,tsType:{name:"string"},description:"The label for the Next button.",defaultValue:{value:"'Next'",computed:!1},type:{name:"string"}},previousButtonLabel:{required:!1,tsType:{name:"string"},description:"The label for the Previous button.",defaultValue:{value:"'Back'",computed:!1},type:{name:"string"}},closeButtonLabel:{required:!1,tsType:{name:"string"},description:"The label for the Close button.",defaultValue:{value:"'Got it'",computed:!1},type:{name:"string"}},onNext:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Callback called when clicking on the Next button.",defaultValue:{value:"undefined",computed:!0},type:{name:"func"}},onBack:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Callback called when clicking on the Previous button.",defaultValue:{value:"undefined",computed:!0},type:{name:"func"}},currentStep:{required:!1,tsType:{name:"number"},description:"Current step of the coachmarks.",defaultValue:{value:"0",computed:!1},type:{name:"number"}}}};export{he as B,ye as C,G as a,_ as b,Y as c,J as d,j as e,W as u};
