import{e as i,S as u,r as x}from"./iframe-C3VsvcP9.js";import{g}from"./getBatchActions-DTtjCMOr.js";import{s as w,m as E}from"./_storybook-styles-C-dPDa-y.js";import{D as f}from"./DatagridActions-9yxxcrZA.js";import{D as S}from"./DatagridPagination-DQiomO6k.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-BWGO2qC4.js";import{u as h}from"./useExpandedRow-wjlmBlkA.js";import{u as D}from"./useSelectRows-C6Rtov5n.js";import{u as C}from"./useStickyColumn-DzCEt4Vl.js";import{u as R}from"./usePrefix-CGQF_ZHQ.js";import{E as H}from"./bucket-6-CZ4baeq2.js";import{T as b}from"./bucket-17-Dgq3jiin.js";import"./bucket-0-qf3IPsyL.js";import"./bucket-2-ClJ42iNs.js";import"./index-2VSnzl5A.js";import"./bucket-18-Ctp_kJlg.js";import"./bucket-7-CawwMIPp.js";import"./ComposedModal-CKf6hdHj.js";import"./index-BEhuL1MR.js";import"./index-BE_xx21s.js";import"./LayerContext-BU_ygKHE.js";import"./clamp--00YEiB8.js";import"./ButtonSet-DWufBl0Z.js";import"./InlineLoading-CTBjshum.js";import"./mergeRefs-91-mP8KM.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-D809mY0y.js";import"./Text-Deo-qbq3.js";import"./utils-DTYRHBXP.js";import"./TableToolbarSearch-BOvJc1mF.js";import"./wrapComponent-DqZ_vTR7.js";import"./Search-CZ7Xq8Hj.js";import"./FormContext-QDgbKXU5.js";import"./bucket-15-7qvePeJD.js";import"./Dropdown-JmpdO0OT.js";import"./index-BwfDabtT.js";import"./inheritsLoose-DHKJTbHM.js";import"./bucket-19-DdtfpNln.js";import"./MenuItem-5zxM7A3O.js";import"./useControllableState-BJB23Zhp.js";import"./useAttachedMenu-BlxDu2aa.js";import"./index-CXD845F9.js";import"./index-DoFt_alO.js";import"./bucket-12-DrtzkUGW.js";import"./useOutsideClick-CD3FvkGX.js";import"./OverflowMenuItem-CzaFxSyE.js";import"./useFilterContext-DWov6dNL.js";import"./bucket-14-BSNImc6g.js";import"./Pagination-Dy2nhI6A.js";import"./Select-YhfyeEH3.js";import"./SelectItem-BMA_tWOw.js";import"./MultiSelect-BOcX-1MQ.js";import"./Checkbox-7GlD-LN-.js";import"./devtools-BjHf0isC.js";import"./TableRow-QlCxZCTa.js";import"./bucket-1-aSxP9hG3.js";import"./TableToolbar-BC0vNkzB.js";import"./index-BEVy0Ul0.js";import"./ErrorEmptyState-u8Laol2X.js";import"./EmptyState-BvBgcN9F.js";import"./props-helper-BrmPtLqI.js";import"./Link-VBwvbQXg.js";import"./EmptyStateV2-D5RVLTjr.js";import"./ErrorIllustration-CS9j6DfM.js";import"./useId-YTeng8i2.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-Bu73g3HU.js";import"./NoDataIllustration-DfWjDa5F.js";import"./NotFoundEmptyState-Dt5Wigi8.js";import"./NotFoundIllustration-B6kP1sV2.js";import"./index.esm-BYoO4Q4F.js";import"./usePreviousValue-Bc_HSeid.js";import"./useResizeObserver-BR_0OKz2.js";import"./useIsomorphicEffect-X37BQc6H.js";import"./getFocusableElements-BW7cf991.js";import"./index-C3eFE35T.js";import"./useClickOutside-CSqqc8w1.js";import"./AccordionItem-BcdTncBK.js";import"./DatePicker-BNMZQ-X_.js";import"./FormGroup-5eRQaJF7.js";import"./NumberInput-CS41rp5O.js";import"./useNormalizedInputProps-CiBIJrsU.js";import"./documentLang-E105Y72C.js";import"./bucket-16-H5ot9CRJ.js";import"./RadioButton-DOtUEVrL.js";import"./RadioButtonGroup-B43pTYvp.js";import"./usePrefersReducedMotion-BQ_NTXri.js";import"./usePresence-B-Qs1Axp.js";import"./ActionSet-ClQ4Ohv5.js";import"./useWindowResize-Swxgy74p.js";import"./TagSet-XD0RiOJj.js";import"./Tag-CkReqKIz.js";import"./DefinitionTooltip-CVPO1WqB.js";import"./DismissibleTag-Cou1xx-O.js";import"./usePortalTarget-BdGFdCd6.js";import"./OperationalTag-CQpXwJM_.js";import"./SkeletonText-bsLCvOuS.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-Fo6DDUD6.js";import"./TableSelectRow-gdt5BjsN.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,bt={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const Bt=["ExpandableRowStory"];export{e as ExpandableRowStory,Bt as __namedExportsOrder,bt as default};
