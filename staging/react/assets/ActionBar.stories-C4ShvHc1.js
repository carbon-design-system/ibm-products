import{e as t,S as c}from"./iframe-B06X_oSn.js";import{D as l}from"./DisplayBox-MG3n403F.js";import{A as a}from"./ActionBar-BWVXCVCu.js";import{a as p}from"./bucket-10-B8TwsbdU.js";import{B as d}from"./bucket-1-bKXnQraS.js";import"./uuidv4-BN2rGLQG.js";import"./props-helper-CTf-A1om.js";import"./index-C-Kp80_u.js";import"./useAttachedMenu-BK1NY8rH.js";import"./mergeRefs-D4pwfk3t.js";import"./bucket-13-Cf4diNHv.js";import"./wrapFocus-BbzW8Hks.js";import"./useOutsideClick-CyPXp_NH.js";import"./OverflowMenuItem-6k5kdran.js";import"./Text-BNZPVZMz.js";import"./useOverflowItems-DMnIHmGw.js";import"./useResizeObserver-CDwlcMV3.js";const m=".ccs-sb--display-box{position:relative;display:inline-block;color:var(--cds-text-helper, #6f6f6f);margin-block-start:3rem;padding-block-start:1rem}.ccs-sb--display-box__indicator{position:absolute;border-block-end:1px solid var(--cds-text-helper, #6f6f6f);inline-size:100%;inset-block-start:0;white-space:nowrap;font-size:var(--cds-helper-text-01-font-size, .75rem);line-height:var(--cds-helper-text-01-line-height, 1.33333);letter-spacing:var(--cds-helper-text-01-letter-spacing, .32px)}.ccs-sb--display-box__message{position:absolute;inset-block-end:.25rem}.sb-main-centered .ccs-sb--display-box__message{inline-size:inherit;text-align:center}.ccs-sb--display-box__indicator--left,.ccs-sb--display-box__indicator--right{position:absolute;block-size:0;border-block-start:.75rem solid var(--cds-text-helper, #6f6f6f);border-inline-end:.25rem solid transparent;border-inline-start:.25rem solid transparent;inline-size:0;inset-block-end:-.75rem}.ccs-sb--display-box__indicator--left{inset-inline-start:-.25rem}.ccs-sb--display-box__indicator--right{inset-inline-end:-.25rem}",{action:b}=__STORYBOOK_MODULE_ACTIONS__,n=i=>Array.from({length:i},(s,e)=>({key:`a-key-${e}`,renderIcon:e%2?o=>t.createElement(p,{size:16,...o}):o=>t.createElement(d,{size:16,...o}),iconDescription:`Action ${e}`,label:`Action ${e}`,onClick:b(`Action ${e}`)})),I={title:"Utilities/ActionBar",component:a,tags:["autodocs"],argTypes:{actions:{control:{type:"select",labels:["None","A few","A lot"]},options:[0,1,2],mapping:[[],n(10),n(20)]},containerWidth:{control:{type:"range",min:20,max:800,step:10}}},parameters:{styles:m,docs:{page:()=>t.createElement(c,{altGuidelinesHref:""})}},decorators:[i=>t.createElement(l,null,i())]},g=i=>{const{containerWidth:s,...e}={...i};return t.createElement("div",{style:{width:s}},t.createElement(a,{...e}))},r=g.bind({});r.args={actions:1,containerWidth:500,overflowAriaLabel:"Open and close additional action bar items list."};r.parameters={...r.parameters,docs:{...r.parameters?.docs,source:{originalSource:`argsIn => {
  const {
    containerWidth,
    ...args
  } = {
    ...argsIn
  };
  return <div style={{
    width: containerWidth
  }}>
      <ActionBar {...args} />
    </div>;
}`,...r.parameters?.docs?.source}}};const T=["Default"];export{r as Default,T as __namedExportsOrder,I as default};
