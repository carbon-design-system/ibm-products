import{r as a,R as c,e as E,U as g,P as l}from"./iframe-B06X_oSn.js";import{d as P}from"./props-helper-CTf-A1om.js";g.merge({"default-portal-target-body":!0,"enable-datagrid-useInlineEdit":!1,"enable-datagrid-useEditableCell":!1,"enable-datagrid-useCustomizeColumns":!1,"ExampleComponent.secondaryIcon":!1,"ExampleComponent.useExample":!1,"enable-test-flag-a":!1,"enable-test-flag-b":!0,enableSidepanelResizer:!1});const i=a.createContext(g);function y({children:e,flags:s={},defaultPortalTargetBody:t=!0,enableDatagridUseInlineEdit:u=!1,enableDatagridUseEditableCell:d=!1,enableDatagridUseCustomizeColumns:r=!1,enableSidepanelResizer:f=!1,enableTestFlagA:C=!1,enableTestFlagB:F=!1}){const n=a.useContext(i),[T,h]=a.useState(n),p={"default-portal-target-body":t,"enable-datagrid-useInlineEdit":u,"enable-datagrid-useEditableCell":d,"enable-datagrid-useCustomizeColumns":r,enableSidepanelResizer:f,"enable-test-flag-a":C,"enable-test-flag-b":F,...s},[v,b]=a.useState(()=>{const o=c(p);return o.mergeWithScope(n),o});if(n!==T){const o=c(p);o.mergeWithScope(n),b(o),h(n)}return S(p,R,o=>{const m=c(o);m.mergeWithScope(n),b(m)}),E.createElement(i.Provider,{value:v},e)}y.propTypes={children:l.node,defaultPortalTargetBody:l.bool,enableDatagridUseCustomizeColumns:l.bool,enableDatagridUseEditableCell:l.bool,enableDatagridUseInlineEdit:l.bool,enableSidepanelResizer:l.bool,enableTestFlagA:l.bool,enableTestFlagB:l.bool,flags:P(l.objectOf(l.bool))};function S(e,s,t){const u=a.useRef(!1),d=a.useRef(t),[r,f]=a.useState(e);s(r,e)||f(e),a.useEffect(()=>{d.current=t}),a.useEffect(()=>{u.current&&d.current(r)},[r]),a.useEffect(()=>{u.current=!0},[])}function q(e){return a.useContext(i).enabled(e)}function z(){return a.useContext(i)}function R(e,s){if(e===s)return!0;for(const t of Object.keys(e))if(e[t]!==s[t])return!1;for(const t of Object.keys(s))if(s[t]!==e[t])return!1;return!0}y.__docgenInfo={description:"Supports an object of feature flag values with the `flags` prop, merging them\nalong with the current `FeatureFlagContext` to provide consumers to check if\na feature flag is enabled or disabled in a given React tree",methods:[],displayName:"FeatureFlags",props:{children:{required:!1,tsType:{name:"ReactNode"},description:"",type:{name:"node"}},flags:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"boolean"}],raw:"Record<string, boolean>"},description:"",defaultValue:{value:"{}",computed:!1},type:{name:"custom",raw:"deprecateProp(\n  PropTypes.objectOf(PropTypes.bool),\n  'The `flags` prop for `FeatureFlag` has been deprecated. Please pass the flags directly as props in camelCase'\n)"}},defaultPortalTargetBody:{required:!1,tsType:{name:"boolean"},description:"Provide the feature flags to enabled or disabled in the current React tree",defaultValue:{value:"true",computed:!1},type:{name:"bool"}},enableDatagridUseInlineEdit:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},enableDatagridUseEditableCell:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},enableDatagridUseCustomizeColumns:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},enableSidepanelResizer:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},enableTestFlagA:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},enableTestFlagB:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}}}};export{y as F,z as a,q as u};
