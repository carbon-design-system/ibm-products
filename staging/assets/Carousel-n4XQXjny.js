import{e as a,r as l}from"./index-DtHxqM--.js";import{d as N,P as s}from"./index-CGLP8AGt.js";import{g as D}from"./devtools-DANatd7d.js";import{p as j}from"./settings-xxMXFJdE.js";import{u as B}from"./useIsomorphicEffect-DztsuiUB.js";const H=`${j.prefix}--carousel__item`,z="CarouselItem",b=a.forwardRef(({children:y,className:w,...p},v)=>a.createElement("div",{...p,className:N(H,w),...D(z),ref:v},y));b.displayName=z;b.propTypes={children:s.node.isRequired,className:s.string};b.__docgenInfo={description:"TODO: A description of the component.",methods:[],displayName:"CarouselItem",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Provide the contents of the CarouselItem.",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}}}};const f=`${j.prefix}--carousel`,F="Carousel",S={disableArrowScroll:!1,onScroll:()=>{},onChangeIsScrollable:()=>{}},I=a.forwardRef((y,w)=>{const{children:p,className:v,disableArrowScroll:R=S.disableArrowScroll,fadedEdgeColor:i,onChangeIsScrollable:T=S.onChangeIsScrollable,onScroll:L=S.onScroll,...K}=y,P=l.useRef(null),r=l.useRef(null),c=l.useRef(null),u=l.useRef(null),C=l.useRef(Array(a.Children.count(p)).fill(l.useRef(null))),E=typeof i=="object"?i==null?void 0:i.left:i,k=typeof i=="object"?i==null?void 0:i.right:i,d=l.useCallback(()=>{var g,W,O;if(!r.current)return;const e=(g=r.current)==null?void 0:g.clientWidth,t=parseInt(`${(W=r.current)==null?void 0:W.scrollLeft}`,10),n=(O=r.current)==null?void 0:O.scrollWidth,o=n-e,m=parseFloat((t/o).toFixed(2))||0;T(n>e),L(m)},[T,L]),q=l.useCallback((e,t)=>{const n=t.left>=e.left,o=t.right<=e.right;return n&&o},[]),x=l.useCallback(()=>{var n;const e=(n=r==null?void 0:r.current)==null?void 0:n.getBoundingClientRect();return C.current.filter(o=>q(e,o.getBoundingClientRect()))},[q]),h=l.useCallback(()=>{var o;const e=(o=r==null?void 0:r.current)==null?void 0:o.getBoundingClientRect(),t=x().map(m=>m.getBoundingClientRect()),n=t.reduce((m,g)=>m+g.width,0);return{containerRect:e,elementRectsInView:t,visibleWidth:n}},[x]),_=l.useCallback(()=>{if(!r.current)return;const{containerRect:e,visibleWidth:t}=h(),n=t>0?t:e==null?void 0:e.width;r.current.scrollLeft+=n},[h]),$=l.useCallback(()=>{if(!r.current)return;const{containerRect:e,elementRectsInView:t,visibleWidth:n}=h(),o=n>0?n-t[0].left:((e==null?void 0:e.width)??0)+((e==null?void 0:e.left)??0);r.current.scrollLeft-=o},[h]),A=l.useCallback(()=>{r.current&&(r.current.scrollLeft=0,d())},[d]),V=l.useCallback(e=>{C.current[e].scrollIntoView()},[]);return l.useEffect(()=>{setTimeout(()=>{d()},0)},[]),l.useEffect(()=>{const e=()=>{r.current&&(r.current.scrollLeft=0,d())};return window.addEventListener("resize",e),()=>window.removeEventListener("resize",e)},[d]),l.useEffect(()=>{const e=()=>{d()},t=r.current;return t==null||t.addEventListener("scrollend",e),()=>t==null?void 0:t.removeEventListener("scrollend",e)},[d]),l.useEffect(()=>{function e(n){n.shiftKey&&(n.stopPropagation(),n.preventDefault(),n.cancelBubble=!1)}const t=r.current;if(t)return t.addEventListener("wheel",e,{passive:!1}),()=>{t.removeEventListener("wheel",e)}},[]),l.useEffect(()=>{function e(n){const{key:o}=n;(o==="ArrowLeft"||o==="ArrowRight")&&R&&(n.stopPropagation(),n.preventDefault(),n.cancelBubble=!1)}const t=P.current;if(t)return t.addEventListener("keydown",e),()=>t.removeEventListener("keydown",e)},[R]),l.useImperativeHandle(w,()=>({scrollNext(){_()},scrollPrev(){$()},scrollReset(){A()},scrollToView(e){V(e)}}),[_,$,A,V]),B(()=>{c!=null&&c.current&&c.current.style&&(c.current.style.background=`linear-gradient(90deg, ${E}, transparent)`)},[c,E]),B(()=>{u!=null&&u.current&&u.current.style&&(u.current.style.background=`linear-gradient(270deg, ${k}, transparent)`)},[u,k]),a.createElement("div",{...K,tabIndex:-1,className:N(f,v),ref:P,...D(F)},a.createElement("div",{className:N(`${f}__elements-container`)},a.createElement("div",{className:`${f}__elements`,ref:r},a.Children.map(p,(e,t)=>a.createElement(b,{key:t,ref:n=>{C.current[t]=n}},e))),E&&a.createElement("div",{ref:c,className:`${f}__elements-container--scrolled`}),k&&a.createElement("div",{ref:u,className:`${f}__elements-container--scroll-max`})))});I.displayName=F;I.propTypes={children:s.node.isRequired,className:s.string,disableArrowScroll:s.bool,fadedEdgeColor:s.oneOfType([s.string,s.shape({left:s.string,right:s.string})]),onChangeIsScrollable:s.func,onScroll:s.func};I.__docgenInfo={description:`The Carousel acts as a scaffold for other Onboarding content.

This component is not intended for general use.

Expected scrolling behavior.
1. Scroll the maximum number of visible items at a time.
2. The left-most item should always be left-aligned in the viewport.

Exception.
1. After scrolling to the last (right-most) item,
     if some of its content remains hidden,
     then nudge it to the right until it is right-aligned.
2. From the right-aligned position, when scrolling left,
     the left-most item should again be left-aligned.`,methods:[{name:"scrollNext",docblock:null,modifiers:[],params:[],returns:null},{name:"scrollPrev",docblock:null,modifiers:[],params:[],returns:null},{name:"scrollReset",docblock:null,modifiers:[],params:[],returns:null},{name:"scrollToView",docblock:null,modifiers:[],params:[{name:"itemNumber",optional:!1,type:null}],returns:null}],displayName:"Carousel",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Provide the contents of the Carousel.",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},disableArrowScroll:{required:!1,tsType:{name:"boolean"},description:`Disables the ability of the Carousel to scroll
use a keyboard's left and right arrow keys.`,type:{name:"bool"}},fadedEdgeColor:{required:!1,tsType:{name:"union",raw:"string | { left: string; right: string }",elements:[{name:"string"},{name:"signature",type:"object",raw:"{ left: string; right: string }",signature:{properties:[{key:"left",value:{name:"string",required:!0}},{key:"right",value:{name:"string",required:!0}}]}}]},description:"Enables the edges of the component to have faded styling.\n\nPass a single string (`$color`) to specify the same color for left and right.\n\nOr pass an object (`{ left: $color1, right: $color2 }`) to specify different colors.",type:{name:"union",value:[{name:"string"},{name:"shape",value:{left:{name:"string",required:!1},right:{name:"string",required:!1}}}]}},onChangeIsScrollable:{required:!1,tsType:{name:"signature",type:"function",raw:"(isScrollable: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"isScrollable"}],return:{name:"void"}}},description:"An optional callback function that returns `true`\nwhen the carousel has enough content to be scrollable,\nand `false` when there is not enough content.",type:{name:"func"}},onScroll:{required:!1,tsType:{name:"signature",type:"function",raw:"(scrollPercent: number) => void",signature:{arguments:[{type:{name:"number"},name:"scrollPercent"}],return:{name:"void"}}},description:`An optional callback function that returns the scroll position as
a value between 0 and 1.`,type:{name:"func"}}}};export{I as C};
