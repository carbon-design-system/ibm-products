import{r as n,R as a}from"./index-BwDkhjyp.js";import{P as t}from"./index-Dk74W0Oi.js";import{c as K}from"./index-C8rbkH0g.js";import{F as me}from"./FormGroup-U0nC7yo_.js";import{G as he}from"./Grid-8YiV6Fu4.js";import{C as U}from"./Column-BcwsXbO0.js";import{F as fe}from"./Form-DdvgvJxN.js";import{T as be}from"./TearsheetShell-Bws0Gs2u.js";import{g as ye}from"./devtools-BXUoVCj7.js";import{l as ge,g as Se,u as Te,a as ve,b as we,c as qe,C as xe,d as Ne}from"./lastIndexInArray-g6ZdHM--.js";import{p as F,a as Re}from"./settings-DI4GKhuL.js";import{u as X}from"./usePreviousValue-Cw-zRxyE.js";const y="CreateTearsheet",k=`${F.prefix}--tearsheet-create`,Z=n.createContext(null),ee=n.createContext(-1);let v=n.forwardRef(({backButtonText:b,cancelButtonText:O,children:m,className:w,experimentalSecondarySubmitText:q,description:_,influencerWidth:$="narrow",initialStep:l,label:A,nextButtonText:B,onClose:g,onRequestSubmit:x,open:c,firstFocusElement:D,slug:N,submitButtonText:S,title:R,verticalPosition:L="normal",...V},T)=>{const[u,e]=n.useState([]),[i,M]=n.useState(!1),[h,s]=n.useState(0),[C,G]=n.useState(!1),[d,f]=n.useState(!1),[W,te]=n.useState(!1),[ne,ae]=n.useState(),[re,se]=n.useState(),[oe,ie]=n.useState(),[r,le]=n.useState([]),[E,ue]=n.useState(1),[j,de]=n.useState(),[z,ce]=n.useState({}),Q=X({currentStep:h,open:c}),pe=n.useRef(null);return n.useEffect(()=>{const o=r.findIndex(Y=>Y.shouldIncludeStep===!0)+1,P=ge(r,"shouldIncludeStep",!0);if(o!==E&&(s(o),ue(o)),P!==j&&de(P),c&&l){const Y=Se(r,l);s(Number(l+Y))}},[E,l,j,c,r]),Te({previousState:Q,currentStep:h,blockClass:k,onMount:oe,firstFocusElement:D}),ve(r.length,y),we({firstIncludedStep:E,previousState:Q,open:c,setCurrentStep:s,stepData:r,initialStep:l,totalSteps:r==null?void 0:r.length,componentName:y}),qe({firstIncludedStep:E,lastIncludedStep:j,stepData:r,onPrevious:ne,onNext:re,isSubmitDisabled:d,setCurrentStep:s,setIsSubmitting:G,setShouldViewAll:M,setLoadingPrevious:te,loadingPrevious:W,onClose:g,onRequestSubmit:x,componentName:y,currentStep:h,shouldViewAll:i,backButtonText:b,cancelButtonText:O,submitButtonText:S,nextButtonText:B,isSubmitting:C,componentBlockClass:k,experimentalSecondarySubmit:z,experimentalSecondarySubmitText:z.labelText?z.labelText:q,setCreateComponentActions:e}),a.createElement(be,{...ye(y),...V,ref:T,actions:u,className:K(k,w),description:_,influencer:a.createElement(xe,{currentStep:h,stepData:r}),influencerWidth:$,label:A,onClose:g,open:c,size:"wide",slug:N,title:R,verticalPosition:L,closeIconDescription:""},a.createElement("div",{className:`${k}__content`,ref:pe},a.createElement(fe,{"aria-label":R},a.createElement(Z.Provider,{value:{currentStep:h,setExperimentalSecondarySubmit:ce,setIsDisabled:f,setOnPrevious:o=>ae(()=>o),setOnNext:o=>se(()=>o),setOnMount:o=>ie(()=>o),setStepData:le,stepData:r}},a.Children.map(m,(o,P)=>a.createElement(ee.Provider,{value:P+1},o))))))});v=F.checkComponentEnabled(v,y);v.displayName=y;v.propTypes={backButtonText:t.string.isRequired,cancelButtonText:t.string.isRequired,children:t.node,className:t.string,description:t.node,experimentalSecondarySubmitText:t.string,firstFocusElement:t.string,influencerWidth:t.oneOf(["narrow","wide"]),initialStep:t.number,label:t.node,nextButtonText:t.string.isRequired,onClose:t.func,onRequestSubmit:t.func.isRequired,open:t.bool,slug:t.node,submitButtonText:t.string.isRequired,title:t.node,verticalPosition:t.oneOf(["normal","lower"])};v.__docgenInfo={description:"",methods:[],displayName:"CreateTearsheet",props:{backButtonText:{required:!0,tsType:{name:"string"},description:"The back button text",type:{name:"string"}},cancelButtonText:{required:!0,tsType:{name:"string"},description:"The cancel button text",type:{name:"string"}},className:{required:!1,tsType:{name:"string"},description:"An optional class or classes to be added to the outermost element.",type:{name:"string"}},experimentalSecondarySubmitText:{required:!1,tsType:{name:"string"},description:"The experimentalSecondary submit button text",type:{name:"string"}},description:{required:!1,tsType:{name:"ReactNode"},description:"A description of the flow, displayed in the header area of the tearsheet.",type:{name:"node"}},firstFocusElement:{required:!1,tsType:{name:"string"},description:"Specifies elements to focus on first on render.",type:{name:"string"}},influencerWidth:{required:!1,tsType:{name:"union",raw:"'narrow' | 'wide'",elements:[{name:"literal",value:"'narrow'"},{name:"literal",value:"'wide'"}]},description:"Used to set the size of the influencer",defaultValue:{value:"'narrow'",computed:!1},type:{name:"enum",value:[{value:"'narrow'",computed:!1},{value:"'wide'",computed:!1}]}},initialStep:{required:!1,tsType:{name:"number"},description:`This can be used to open the component to a step other than the first step.
For example, a create flow was previously in progress, data was saved, and
is now being completed.`,type:{name:"number"}},label:{required:!1,tsType:{name:"ReactNode"},description:`A label for the tearsheet, displayed in the header area of the tearsheet
to maintain context for the tearsheet (e.g. as the title changes from page
to page of a multi-page task).`,type:{name:"node"}},nextButtonText:{required:!0,tsType:{name:"string"},description:"The next button text",type:{name:"string"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"An optional handler that is called when the user closes the tearsheet (by\nclicking the close button, if enabled, or clicking outside, if enabled).\nReturning `false` here prevents the modal from closing.",type:{name:"func"}},onRequestSubmit:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:`Specify a handler for submitting the multi step tearsheet (final step).
This function can _optionally_ return a promise that is either resolved or rejected and the CreateTearsheet will handle the submitting state of the create button.`,type:{name:"func"}},open:{required:!1,tsType:{name:"boolean"},description:"Specifies whether the tearsheet is currently open.",type:{name:"bool"}},slug:{required:!1,tsType:{name:"ReactNode"},description:"**Experimental:** Provide a `Slug` component to be rendered inside the `Tearsheet` component",type:{name:"node"}},submitButtonText:{required:!0,tsType:{name:"string"},description:"The submit button text",type:{name:"string"}},title:{required:!1,tsType:{name:"ReactNode"},description:"The main title of the tearsheet, displayed in the header area.",type:{name:"node"}},verticalPosition:{required:!1,tsType:{name:"union",raw:"'normal' | 'lower'",elements:[{name:"literal",value:"'normal'"},{name:"literal",value:"'lower'"}]},description:`The position of the top of tearsheet in the viewport. The 'normal'
position (the default) is a short distance down from the top of the
viewport, leaving room at the top for a global header bar to show through
from below. The 'lower' position provides a little extra room at the top
to allow an action bar navigation or breadcrumbs to also show through.`,defaultValue:{value:"'normal'",computed:!1},type:{name:"enum",value:[{value:"'normal'",computed:!1},{value:"'lower'",computed:!1}]}},children:{description:"The main content of the tearsheet",type:{name:"node"},required:!1}},composes:["PropsWithChildren"]};const H="CreateTearsheetStep",p=`${F.prefix}--tearsheet-create__step`,J={hasFieldset:!0,includeStep:!0};let I=n.forwardRef(({children:b,className:O,description:m,disableSubmit:w,experimentalSecondarySubmit:q,fieldsetLegendText:_,hasFieldset:$=J.hasFieldset,includeStep:l=J.includeStep,introStep:A,invalid:B,onMount:g,onNext:x,onPrevious:c,secondaryLabel:D,subtitle:N,title:S,...R},L)=>{const V=n.useRef(null),T=L||V,u=T.current,e=n.useContext(Z),i=n.useContext(ee),[M,h]=n.useState(l),s=X({currentStep:e==null?void 0:e.currentStep});Ne({stepsContext:e,stepNumber:i,introStep:!!A,shouldIncludeStep:M,secondaryLabel:D||"",title:S,invalid:!!B}),n.useEffect(()=>{i===(e==null?void 0:e.currentStep)&&(s==null?void 0:s.currentStep)!==(e==null?void 0:e.currentStep)&&(e==null||e.setOnMount(g),e==null||e.setExperimentalSecondarySubmit({...q}))},[g,q,e,i,s==null?void 0:s.currentStep]),n.useEffect(()=>{h(l)},[l,e,S]);const C=(d,f)=>{d!=null&&d.length&&d.forEach(W=>{W.tabIndex=f})};n.useEffect(()=>{const d="button, input, select, textarea, a";if(i!==(e==null?void 0:e.currentStep)){const f=u==null?void 0:u.querySelectorAll(d);C(f,-1)}if(i===(e==null?void 0:e.currentStep)){const f=u==null?void 0:u.querySelectorAll(d);C(f,0),e.setIsDisabled(!!w),e==null||e.setOnNext(x),e==null||e.setOnPrevious(c)}},[e,i,w,x,c,T,u]);const G=()=>{if(m){if(typeof m=="string")return a.createElement("p",{className:`${p}--description`},m);if(n.isValidElement(m))return a.createElement("div",{className:`${p}--description`},m)}return null};return e?a.createElement("div",{ref:T},a.createElement(he,{...R,className:K(p,O,{[`${p}__step--hidden-step`]:i!==(e==null?void 0:e.currentStep),[`${p}__step--visible-step`]:i===(e==null?void 0:e.currentStep)})},a.createElement(U,{xlg:12,lg:12,md:8,sm:4},a.createElement("h4",{className:`${p}--title`},S),N&&a.createElement("h6",{className:`${p}--subtitle`},N),G()),a.createElement(U,{span:100},$?a.createElement(me,{legendText:_,className:`${p}--fieldset`},b):b))):Re.warn(`You have tried using a ${H} component outside of a CreateTearsheet. This is not allowed. ${H}s should always be children of the CreateTearsheet`)});I=F.checkComponentEnabled(I,H);I.propTypes={children:t.node,className:t.string,description:t.node,disableSubmit:t.bool,experimentalSecondarySubmit:t.shape({labelText:t.string,disabled:t.bool,hideSecondarySubmit:t.bool,onClick:t.func}),fieldsetLegendText:t.string.isRequired.if(({hasFieldset:b})=>!!b),hasFieldset:t.bool,includeStep:t.bool,introStep:t.bool,invalid:t.bool,onMount:t.func,onNext:t.func,onPrevious:t.func,secondaryLabel:t.string,subtitle:t.string,title:t.node.isRequired};I.__docgenInfo={description:"",methods:[],displayName:"CreateTearsheetStep",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Content that shows in the tearsheet step",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Sets an optional className to be added to the tearsheet step",type:{name:"string"}},description:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Sets an optional description on the step component",type:{name:"node"}},disableSubmit:{required:!1,tsType:{name:"boolean"},description:"This will conditionally disable the submit button in the multi step Tearsheet",type:{name:"bool"}},experimentalSecondarySubmit:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  labelText?: string;
  disabled?: boolean;
  hideSecondarySubmit?: boolean;
  onClick?: () => void;
}`,signature:{properties:[{key:"labelText",value:{name:"string",required:!1}},{key:"disabled",value:{name:"boolean",required:!1}},{key:"hideSecondarySubmit",value:{name:"boolean",required:!1}},{key:"onClick",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!1}}]}},description:"Configuration options for customizing the behavior of the experimentalSecondary submit button.",type:{name:"shape",value:{labelText:{name:"string",required:!1},disabled:{name:"bool",required:!1},hideSecondarySubmit:{name:"bool",required:!1},onClick:{name:"func",required:!1}}}},includeStep:{required:!1,tsType:{name:"boolean"},description:"This prop is used to help track dynamic steps. If this value is `false` then the step is not included in the visible steps or the ProgressIndicator\nsteps. If this value is `true` then the step will be included in the list of visible steps, as well as being included in the ProgressIndicator step list",defaultValue:{value:"true",computed:!1},type:{name:"bool"}},introStep:{required:!1,tsType:{name:"boolean"},description:"This prop can be used on the first step to mark it as an intro step, which will not render the progress indicator steps",type:{name:"bool"}},invalid:{required:!1,tsType:{name:"boolean"},description:"This optional prop will indicate an error icon on the progress indicator step item",type:{name:"bool"}},onMount:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:`Optional function to be called on initial mount of a step.
For example, this can be used to fetch data that is required on a particular step.`,type:{name:"func"}},onNext:{required:!1,tsType:{name:"signature",type:"function",raw:"() => Promise<void>",signature:{arguments:[],return:{name:"Promise",elements:[{name:"void"}],raw:"Promise<void>"}}},description:`Optional function to be called when you move to the next step.
For example, this can be used to validate input fields before proceeding to the next step.
This function can _optionally_ return a promise that is either resolved or rejected and the CreateTearsheet will handle the submitting state of the next button.`,type:{name:"func"}},onPrevious:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Optional function to be called when you move to the previous step.",type:{name:"func"}},secondaryLabel:{required:!1,tsType:{name:"string"},description:"Sets the optional secondary label on the progress step component",type:{name:"string"}},subtitle:{required:!1,tsType:{name:"string"},description:"Sets an optional subtitle on the step component",type:{name:"string"}},title:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Sets the title text for a tearsheet step",type:{name:"node"}},hasFieldset:{defaultValue:{value:"true",computed:!1},description:"This optional prop will render your form content inside of a fieldset html element\nand is defaulted to true.\nYou can set this prop to `false` if you have multiple fieldset elements or want to control the children of your Full Page's step content.",type:{name:"bool"},required:!1},fieldsetLegendText:{description:"This is the required legend text that appears above a fieldset html element for accessibility purposes.\nYou can set the `hasFieldset` prop to false if you have multiple fieldset elements or want to control the children of your Full Page's step content.\nOtherwise, use CSS to hide/remove this label text.",type:{name:"string"},required:!0}},composes:["PropsWithChildren"]};export{v as C,I as a};
