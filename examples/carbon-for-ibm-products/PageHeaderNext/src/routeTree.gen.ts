/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WithTabsAndTagsRouteImport } from './routes/with-tabs-and-tags'
import { Route as WithHeroImageRouteImport } from './routes/with-hero-image'
import { Route as WithActionsRouteImport } from './routes/with-actions'
import { Route as IndexRouteImport } from './routes/index'

const WithTabsAndTagsRoute = WithTabsAndTagsRouteImport.update({
  id: '/with-tabs-and-tags',
  path: '/with-tabs-and-tags',
  getParentRoute: () => rootRouteImport,
} as any)
const WithHeroImageRoute = WithHeroImageRouteImport.update({
  id: '/with-hero-image',
  path: '/with-hero-image',
  getParentRoute: () => rootRouteImport,
} as any)
const WithActionsRoute = WithActionsRouteImport.update({
  id: '/with-actions',
  path: '/with-actions',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/with-actions': typeof WithActionsRoute
  '/with-hero-image': typeof WithHeroImageRoute
  '/with-tabs-and-tags': typeof WithTabsAndTagsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/with-actions': typeof WithActionsRoute
  '/with-hero-image': typeof WithHeroImageRoute
  '/with-tabs-and-tags': typeof WithTabsAndTagsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/with-actions': typeof WithActionsRoute
  '/with-hero-image': typeof WithHeroImageRoute
  '/with-tabs-and-tags': typeof WithTabsAndTagsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/with-actions' | '/with-hero-image' | '/with-tabs-and-tags'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/with-actions' | '/with-hero-image' | '/with-tabs-and-tags'
  id:
    | '__root__'
    | '/'
    | '/with-actions'
    | '/with-hero-image'
    | '/with-tabs-and-tags'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WithActionsRoute: typeof WithActionsRoute
  WithHeroImageRoute: typeof WithHeroImageRoute
  WithTabsAndTagsRoute: typeof WithTabsAndTagsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/with-tabs-and-tags': {
      id: '/with-tabs-and-tags'
      path: '/with-tabs-and-tags'
      fullPath: '/with-tabs-and-tags'
      preLoaderRoute: typeof WithTabsAndTagsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/with-hero-image': {
      id: '/with-hero-image'
      path: '/with-hero-image'
      fullPath: '/with-hero-image'
      preLoaderRoute: typeof WithHeroImageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/with-actions': {
      id: '/with-actions'
      path: '/with-actions'
      fullPath: '/with-actions'
      preLoaderRoute: typeof WithActionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WithActionsRoute: WithActionsRoute,
  WithHeroImageRoute: WithHeroImageRoute,
  WithTabsAndTagsRoute: WithTabsAndTagsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
