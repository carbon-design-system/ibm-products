import{e as k,m as q}from"./index-DYQz9bQ1.js";import{e as n,r as u,c as T,p as U,w as X,P as t}from"./iframe-B06X_oSn.js";import{T as Y}from"./Toggle-Dn3GwDuT.js";import{S as Z,H as ee}from"./index-Bo2paA6_.js";import{L as te}from"./index-B0VEw6cB.js";import"./documentLang-E105Y72C.js";import{g as ne}from"./devtools-BYTU908B.js";import{u as ae}from"./uuidv4-BN2rGLQG.js";import{u as ie}from"./useControllableState-BBsEvMIb.js";import{u as oe}from"./usePrefersReducedMotion-R7cmgpMo.js";import{L as C}from"./bucket-11-BN5FR3ck.js";import{W as se,a as re}from"./bucket-19-DIBHTWkV.js";const e=`${U.prefix}--options-tile`,R="OptionsTile",le={size:"lg"},_=n.forwardRef((z,P)=>{const{children:b,className:I,enabled:g,invalid:s,invalidText:W,locked:l,lockedText:w,onChange:S,onToggle:D,open:L,size:B=le.size,summary:F,title:H,titleId:M,warn:d,warnText:A,...V}=z,[f,x]=u.useState(!1),[c,p]=ie(L??!1,S),h=u.useRef(null),o=u.useRef(null),j=u.useRef(null),y=M??`${ae()}-title`,G=b!==void 0,$=!s&&!(!s&&d)&&l,N=oe(),J=()=>{if(h.current&&o.current&&!N){p(!0),h.current.open=!0;const{paddingTop:a,paddingBottom:i,height:m}=getComputedStyle(o.current);o.current.animate([{paddingTop:0,paddingBottom:0,height:0,opacity:0,overflow:"hidden"},{paddingTop:a,paddingBottom:i,height:m,opacity:1,overflow:"hidden"}],{duration:Number(q.replace("ms","")),easing:k.entrance.productive})}else p(!0)},K=()=>{if(o.current&&!N){x(!0);const{paddingTop:a,paddingBottom:i,height:m}=getComputedStyle(o.current),r=Number(q.replace("ms","")),v=o.current.animate([{paddingTop:a,paddingBottom:i,height:m,opacity:1},{paddingTop:0,paddingBottom:0,height:0,opacity:0}],{duration:r,easing:k.entrance.productive}),E=()=>{p(!1),x(!1)};setTimeout(()=>{E()},r*.9),v.oncancel=E}else p(!1)},Q=a=>{a.preventDefault(),c?K():J()},O=()=>{let a=null,i=F;s?(a=se,i=W):d?(a=re,i=A):l&&(a=C,i||(i=w));const r=!(s||d||l)&&g===!1,v=T(`${e}__summary`,{[`${e}__summary--closing`]:f,[`${e}__summary--open`]:c,[`${e}__summary--invalid`]:s,[`${e}__summary--warn`]:d,[`${e}__summary--locked`]:l,[`${e}__summary--hidden`]:r});return n.createElement("div",{className:`${e}__heading`},n.createElement(ee,{ref:j,id:y,className:`${e}__title`},H),i&&n.createElement("span",{className:v,"aria-hidden":r},a&&n.createElement(a,{size:16}),n.createElement("span",{className:`${e}__summary-text`},i)))};return n.createElement(Z,{...V,className:T(e,I,`${e}--${B}`,{[`${e}--closing`]:f}),ref:P,...ne(R)},g!==void 0&&n.createElement("div",{className:`${e}__toggle-container`},n.createElement(Y,{id:`${y}-toggle`,className:`${e}__toggle`,toggled:g,"aria-labelledby":y,hideLabel:!0,onToggle:D,size:"sm",disabled:$})),G?n.createElement("details",{className:`${e}__details`,open:c,ref:h},n.createElement("summary",{className:`${e}__header`,onClick:Q},n.createElement(X,{size:16,className:T(`${e}__chevron`,{[`${e}__chevron--open`]:c,[`${e}__chevron--closing`]:f})}),O()),n.createElement("div",{className:`${e}__content`,ref:o},n.createElement(te,null,$&&n.createElement("p",{className:`${e}__locked-text`},n.createElement(C,{size:16}),w),b))):n.createElement("div",{className:`${e}__static-content`},O()))});_.displayName=R;_.propTypes={children:t.node,className:t.string,enabled:t.bool,invalid:t.bool,invalidText:t.string,locked:t.bool,lockedText:t.string,onChange:t.func,onToggle:t.func,open:t.bool,size:t.oneOf(["lg","xl"]),summary:t.string,title:t.oneOfType([t.string,t.node]).isRequired,titleId:t.string,warn:t.bool,warnText:t.string};_.__docgenInfo={description:"",methods:[],displayName:"OptionsTile",props:{children:{required:!1,tsType:{name:"ReactNode"},description:`Provide content to render as expandable OptionsTile. If no children
are present, the OptionsTile will render as its variant.`,type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},enabled:{required:!1,tsType:{name:"boolean"},description:`Whether the toggle is enabled or disabled. If nothing is passed,
no toggle will be rendered.`,type:{name:"bool"}},invalid:{required:!1,tsType:{name:"boolean"},description:"Whether the OptionsTile is in invalid validation state.",type:{name:"bool"}},invalidText:{required:!1,tsType:{name:"string"},description:"Provide a text explaining why the OptionsTile is in invalid state.",type:{name:"string"}},locked:{required:!1,tsType:{name:"boolean"},description:"Whether the OptionsTile is in locked validation state.",type:{name:"bool"}},lockedText:{required:!1,tsType:{name:"string"},description:"Provide a text explaining why the OptionsTile is in locked state.",type:{name:"string"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"value"}],return:{name:"void"}}},description:"A handler for managing the controlled state of open prop. If not passed the open prop will not be honored and an uncontrolled state will be used.",type:{name:"func"}},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"value"}],return:{name:"void"}}},description:`Provide a function which will be called each time the user
interacts with the toggle.`,type:{name:"func"}},open:{required:!1,tsType:{name:"boolean"},description:"For controlled usage of the tile open state. This prop only works when an onChange prop is also passed, otherwise an uncontrolled state is used.",type:{name:"bool"}},size:{required:!1,tsType:{name:"union",raw:"'lg' | 'xl'",elements:[{name:"literal",value:"'lg'"},{name:"literal",value:"'xl'"}]},description:"Define the size of the OptionsTile.",type:{name:"enum",value:[{value:"'lg'",computed:!1},{value:"'xl'",computed:!1}]}},summary:{required:!1,tsType:{name:"string"},description:"Optionally provide a text summarizing the current state of the content.",type:{name:"string"}},title:{required:!0,tsType:{name:"ReactNode"},description:"Provide the title for this OptionsTile. Must not contain any interactive elements.",type:{name:"union",value:[{name:"string"},{name:"node"}]}},titleId:{required:!1,tsType:{name:"string"},description:"Optionally provide an id which should be used for the title.",type:{name:"string"}},warn:{required:!1,tsType:{name:"boolean"},description:"Whether the OptionsTile is in warning validation state.",type:{name:"bool"}},warnText:{required:!1,tsType:{name:"string"},description:"Provide a text explaining why the OptionsTile is in warning state.",type:{name:"string"}}}};export{_ as O};
