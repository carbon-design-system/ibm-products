import{e,r as o}from"./index-CPiZ6Cnx.js";import{b as te,c as N,_ as oe,P as t}from"./index-BPCFiO9b.js";import{F as ie}from"./Form-qGY1F0CA.js";import{S as re,a as ne}from"./SideNavItems-CJrxw0o-.js";import{S as ae}from"./SideNavLinkText-CmKdCaA2.js";import{L as se}from"./Link-DItntcEQ.js";import{p as S,a as le,B as me}from"./settings-41bnSjHp.js";import{g as ce}from"./devtools-Ca6Wku6c.js";import{T as de}from"./TearsheetShell-C1YcUbz9.js";import{p as pe}from"./props-helper-C4WGU-Xx.js";import{S as ue}from"./StoryDocsPage-vEZJbmBv.js";import{C as E}from"./Column-De0GgPoD.js";import{I as he}from"./Notification-DTcS_cJZ.js";import{N as fe}from"./NumberInput-B32JHXD-.js";import{R as D}from"./RadioButton-CQKVrHNr.js";import{R as ge}from"./RadioButtonGroup-DgAqhidy.js";import{T as be}from"./Toggle-BulcM5ZS.js";import{T as L}from"./TextInput-d19WJcLV.js";import{F as Te}from"./FormGroup-BF7c02p3.js";import{G as J}from"./Grid-DcB6NJHk.js";import{a as G}from"./index-B-lxVbXh.js";import{S as ye,s as ve}from"./slug-IBYlTNw_.js";import{A as Ee}from"./index-CT49tSwO.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-B83en7q5.js";import"./index-ZKO_qc5e.js";import"./index-H2wBg9na.js";import"./index-CtW6Lsnp.js";import"./useMatchMedia-BQGBdW8Y.js";import"./events-OVwOsPzJ.js";import"./useResizeObserver-CZKdqPxj.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./ComposedModal-CgRKyN5W.js";import"./index-C_tB4MqD.js";import"./LayerContext-BGhaVt7n.js";import"./ButtonSet-BTIAcY4e.js";import"./InlineLoading-Cst7O9Fk.js";import"./bucket-6-CO2LLwKX.js";import"./mergeRefs-CTUecegF.js";import"./requiredIfGivenPropIsTruthy-CU7JwK8h.js";import"./wrapFocus-Dfrp1CCV.js";import"./DefinitionTooltip-3iCit3mp.js";import"./usePortalTarget-DAnmNO4S.js";import"./feature-flags-CMZHtsao.js";import"./index-BI1fCQHV.js";import"./useFocus-C3l_bJTO.js";import"./usePreviousValue-CSEZflXC.js";import"./useIsomorphicEffect-CqAX3nH-.js";import"./ActionSet-DmJNgN-v.js";import"./index-DblCLej2.js";import"./iframe-DG_HeTRT.js";import"./index-Dytf1aFS.js";import"./index-DrFu-skq.js";import"./story-helper-C7pmvIin.js";import"./Text-DJS5NTiV.js";import"./bucket-9-qDf-0NK_.js";import"./bucket-18-CAzey7tD.js";import"./useNormalizedInputProps-CqoVIYpB.js";import"./FormContext-CgeSXHS1.js";import"./bucket-16-D6LVaITE.js";import"./bucket-0-BYIdRiFw.js";import"./useControllableState-uQXf5Mu5.js";import"./useAnnouncer-Dwt0jqXi.js";import"./v4-CtRu48qb.js";import"./index-GAgccHqf.js";import"./bucket-17-VMH0CKri.js";import"./bucket-10-COvSrTUI.js";const j=e.forwardRef(function(s,l){const a=te(),{children:h,className:c,as:p=se,isActive:b,...u}=s,i=N(`${a}--side-nav__menu-item`,c),m=N({[`${a}--side-nav__link`]:!0,[`${a}--side-nav__link--current`]:b});return e.createElement("li",{className:i},e.createElement(p,oe({},u,{className:m,ref:l}),e.createElement(ae,null,h)))});j.displayName="SideNavMenuItem";j.propTypes={as:t.elementType,children:t.node,className:t.string,href:t.string,isActive:t.bool};const z="EditTearsheet",V=`${S.prefix}--tearsheet-edit`,K=o.createContext(null),Q=o.createContext(0),W={verticalPosition:"normal",influencerWidth:"narrow",sideNavAriaLabel:"Side navigation"};let g=o.forwardRef(({cancelButtonText:r,children:s,className:l,description:a,influencerWidth:h=W.influencerWidth,label:c,onClose:p,open:b,submitButtonText:u,title:i,verticalPosition:m=W.verticalPosition,onRequestSubmit:x,onFormChange:v,sideNavAriaLabel:F=W.sideNavAriaLabel,...w},k)=>{const[q,_]=o.useState(!1),$=async()=>{_(!0);try{await x()}catch(d){console.warn(`${z} submit error: ${d}`)}_(!1)},I=[{key:"edit-action-button-submit",label:u,onClick:()=>$(),loading:q,kind:"primary"},{key:"edit-action-button-cancel",label:r,onClick:p,kind:"ghost"}],[R,P]=o.useState(0),[O,A]=o.useState([]),B=o.useRef(null),C=d=>{P(d),v&&v(d)};function M(){return e.createElement("div",{className:`${V}__side-nav-wrapper`},e.createElement(re,{"aria-label":F,className:`${V}__side-nav`,expanded:!0,isFixedNav:!1},e.createElement(ne,null,O.map((d,T)=>e.createElement(j,{key:T,onClick:()=>C(T),isActive:R===T},d)))))}return e.createElement(de,{...ce(z),...pe(w),actions:I,children:s,className:N(V,l),description:a,influencerPosition:"left",influencerWidth:h,label:c,onClose:p,open:b,size:"wide",title:i,verticalPosition:m,...w,hasCloseIcon:!1,influencer:M(),ref:k},e.createElement("div",{className:`${V}__content`,ref:B,role:"main"},e.createElement(ie,null,e.createElement(K.Provider,{value:{currentForm:R,setFormTitles:A}},e.Children.map(s,(d,T)=>e.createElement(Q.Provider,{value:T},d))))))});g.deprecated={level:"warn",details:"This component is deprecated and will be removed in the next major version."};g=S.checkComponentEnabled(g,z);g.displayName=z;g.propTypes={cancelButtonText:t.string,children:t.node,className:t.string,description:t.node,influencerWidth:t.oneOf(["narrow","wide"]),label:t.node,onClose:t.func,onFormChange:t.func,onRequestSubmit:t.func.isRequired,open:t.bool,sideNavAriaLabel:t.string,submitButtonText:t.string,title:t.node,verticalPosition:t.oneOf(["normal","lower"])};g.__docgenInfo={description:`**This component is deprecated.** <br>
Use Tearsheet with medium to complex edits. See usage guidance for further information.
@deprecated`,methods:[],displayName:"EditTearsheet",props:{cancelButtonText:{required:!1,tsType:{name:"string"},description:"The cancel button text",type:{name:"string"}},children:{required:!1,tsType:{name:"ReactNode"},description:"The main content of the tearsheet",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"An optional class or classes to be added to the outermost element.",type:{name:"string"}},description:{required:!1,tsType:{name:"ReactNode"},description:"A description of the flow, displayed in the header area of the tearsheet.",type:{name:"node"}},influencerWidth:{required:!1,tsType:{name:"union",raw:"'narrow' | 'wide'",elements:[{name:"literal",value:"'narrow'"},{name:"literal",value:"'wide'"}]},description:"Used to set the size of the influencer",defaultValue:{value:"'narrow'",computed:!1},type:{name:"enum",value:[{value:"'narrow'",computed:!1},{value:"'wide'",computed:!1}]}},label:{required:!1,tsType:{name:"ReactNode"},description:`A label for the tearsheet, displayed in the header area of the tearsheet
to maintain context for the tearsheet (e.g. as the title changes from page
to page of a multi-page task).`,type:{name:"node"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => boolean | void",signature:{arguments:[],return:{name:"union",raw:"boolean | void",elements:[{name:"boolean"},{name:"void"}]}}},description:"An optional handler that is called when the user closes the tearsheet (by\nclicking the close button, if enabled, or clicking outside, if enabled).\nReturning `false` here prevents the modal from closing.",type:{name:"func"}},onFormChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(formIndex: number) => number",signature:{arguments:[{type:{name:"number"},name:"formIndex"}],return:{name:"number"}}},description:`An optional handler that is called when a user changes forms via clicking
an influencer nav item.
Returns the index of the selected form.`,type:{name:"func"}},onRequestSubmit:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:`Specify a handler for submitting the tearsheet. Throughout its execution
the submit button will be disabled and include a loading indicator.`,type:{name:"func"}},open:{required:!1,tsType:{name:"boolean"},description:"Specifies whether the tearsheet is currently open.",type:{name:"bool"}},sideNavAriaLabel:{required:!1,tsType:{name:"string"},description:"Specifies the aria label for the SideNav from Carbon UIShell",defaultValue:{value:"'Side navigation'",computed:!1},type:{name:"string"}},submitButtonText:{required:!1,tsType:{name:"string"},description:"The submit button text",type:{name:"string"}},title:{required:!1,tsType:{name:"ReactNode"},description:"The main title of the tearsheet, displayed in the header area.",type:{name:"node"}},verticalPosition:{required:!1,tsType:{name:"union",raw:"'normal' | 'lower'",elements:[{name:"literal",value:"'normal'"},{name:"literal",value:"'lower'"}]},description:`The position of the top of tearsheet in the viewport. The 'normal'
position (the default) is a short distance down from the top of the
viewport, leaving room at the top for a global header bar to show through
from below. The 'lower' position provides a little extra room at the top
to allow an action bar navigation or breadcrumbs to also show through.`,defaultValue:{value:"'normal'",computed:!1},type:{name:"enum",value:[{value:"'normal'",computed:!1},{value:"'lower'",computed:!1}]}}},composes:["PropsWithChildren"]};const xe=({formContext:r,formNumber:s,title:l})=>{o.useEffect(()=>{r&&r.setFormTitles(a=>{if(a[s]!==l){const c=[...a];return c[s]=l,c}return a})},[l,r,s])},Y="EditTearsheetForm",y=`${S.prefix}--tearsheet-edit__form`,we={hasFieldset:!0};let f=o.forwardRef(({children:r,className:s,description:l,fieldsetLegendText:a,hasFieldset:h=we.hasFieldset,subtitle:c,title:p,...b},u)=>{const i=o.useContext(K),m=o.useContext(Q);return xe({formContext:i,formNumber:m,title:p}),i?e.createElement("div",{...b,className:N(y,s,{[`${y}__form--hidden-form`]:m!==(i==null?void 0:i.currentForm),[`${y}__form--visible-form`]:m===(i==null?void 0:i.currentForm)}),ref:u},e.createElement(J,null,e.createElement(E,{xlg:12,lg:12,md:8,sm:4},e.createElement("h4",{className:`${y}--title`},p),c&&e.createElement("h6",{className:`${y}--subtitle`},c),l&&e.createElement("p",{className:`${y}--description`},l)),e.createElement(E,{span:100},h?e.createElement(Te,{legendText:a,className:`${y}--fieldset`},e.createElement(J,null,r)):r))):le.warn(`You have tried using a ${Y} component outside of a EditTearsheet. This is not allowed. ${Y}s should always be children of the EditTearsheet`)});f=S.checkComponentEnabled(f,Y);f.propTypes={children:t.node,className:t.string,description:t.string,fieldsetLegendText:t.string.isRequired.if(({hasFieldset:r})=>!!r),hasFieldset:t.bool,subtitle:t.string,title:t.node.isRequired};f.__docgenInfo={description:"",methods:[],displayName:"EditTearsheetForm",props:{children:{required:!1,tsType:{name:"ReactNode"},description:"Content that shows in the tearsheet form",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Sets an optional className to be added to the tearsheet form",type:{name:"string"}},description:{required:!1,tsType:{name:"string"},description:"Sets an optional description on the form component",type:{name:"string"}},hasFieldset:{required:!1,tsType:{name:"boolean"},description:"This optional prop will render your form content inside of a fieldset html element\nand is defaulted to true.\nYou can set this prop to `false` if you have multiple fieldset elements or want to control the children of your Full Page's form content.",defaultValue:{value:"true",computed:!1},type:{name:"bool"}},subtitle:{required:!1,tsType:{name:"string"},description:"Sets an optional subtitle on the form component",type:{name:"string"}},title:{required:!0,tsType:{name:"ReactNode"},description:"Sets the title text for a tearsheet form",type:{name:"node"}},fieldsetLegendText:{description:"This is the required legend text that appears above a fieldset html element for accessibility purposes.\nYou can set the `hasFieldset` prop to false if you have multiple fieldset elements or want to control the children of your Full Page's form content.\nOtherwise, use CSS to hide/remove this label text.",type:{name:"string"},required:!0}}};const _e=".c4p--tearsheet-edit-multi-form__description{font-size:var(--cds-body-compact-01-font-size, .875rem);font-weight:var(--cds-body-compact-01-font-weight, 400);line-height:var(--cds-body-compact-01-line-height, 1.28572);letter-spacing:var(--cds-body-compact-01-letter-spacing, .16px);padding-block-end:.75rem}p.c4p--tearsheet-edit-multi-form__description:last-of-type{padding-block-end:2rem}.c4p--tearsheet-edit-multi-form__heading{font-weight:600}.c4p--tearsheet-edit-multi-form .c4p--tearsheet__content .cds--form-item{margin-block-end:1rem}.cds--tile-group div{display:flex;flex-wrap:wrap}.c4p--tearsheet-edit-multi-form--custom-tile{block-size:240px;inline-size:280px;margin-inline-end:1rem}.c4p--tearsheet-edit-multi-form--custom-tile .c4p--empty-state__illustration.c4p--empty-state__illustration--lg{block-size:120px;min-inline-size:120px}.c4p--tearsheet-edit-multi-form--custom-tile-label{position:absolute;inset-block-end:1rem;inset-inline-start:1rem}",X=()=>e.createElement(ue,{altGuidelinesHref:"https://pages.github.ibm.com/carbon/ibm-products/patterns/edit-and-update/usage/#tearsheet-edit",blocks:[{story:H,description:"This is used when you have one section per step. This can be created by passing\nin the overall `<EditTearsheet />` component and the `<EditTearsheetForm />`\ncomponent with form items as children:",source:{code:`<EditTearsheet {...props}>
  <EditTearsheetForm
    title="Required title"
    subtitle="Optional subtitle"
    description="Optional description"
    onNext={() => {
      'Optional function';
    }}
  >
    <TextInput
      id="test-1"
      invalidText="A valid value is required"
      labelText="Topic name"
      placeholder="Enter topic name"
    />
  </EditTearsheetForm>
</EditTearsheet>`}},{title:"Using custom components",description:"It is possible to use custom components that return `EditTearsheetForms` in\norder to help reduce the amount of logic in the component that contains the main\n`EditTearsheet`. _It is required that each child of the `EditTearsheet` either\nbe a custom step or a `EditTearsheetForm`_. An example of this could look like\nthe following:",source:{code:`const CreateFormCustom = ({ subtitle, ...rest }) => {
  return (
    <EditTearsheetForm {...rest} subtitle={subtitle} title="Form 1">
      form content here
    </EditTearsheetForm>
  );
};

const CreateComponent = () => {
  return (
    <EditTearsheet {...EditTearsheetProps}>
      <CreateFormCustom subtitle="Custom form subtitle" />
      <EditTearsheetForm
        title="Topic name"
        fieldsetLegendText="Topic information"
        subtitle="This is the unique name used to recognize your topic"
        description="It will also be used by your producers and consumers as part of the
        connection information, so make it something easy to recognize."
      >
        Content for second form
      </EditTearsheetForm>
    </EditTearsheet>
  );
};`}},{title:"Class names",description:"Additionally, to get the preferred styling when including your own children as\nsections, you can utilize the below included class names.\n\n| Class name                                            | Element     | Features                                                   |\n| ----------------------------------------------------- | ----------- | ---------------------------------------------------------- |\n| `#{$pkg-prefix}--create-tearsheet__form--title`       | title       | `productive-heading-04` & `margin-bottom` of `$spacing-05` |\n| `#{$pkg-prefix}--create-tearsheet__form--subtitle`    | subtitle    | `productive-heading-01` & `margin-bottom` of `$spacing-03` |\n| `#{$pkg-prefix}--create-tearsheet__form--description` | description | `body-long-01` & `margin-bottom` of `$spacing-06`          |\n| `#{$pkg-prefix}--create-tearsheet__form--fieldset`    | fieldset    | `margin-bottom` of `$spacing-05` to all children elements  |\n"}]});X.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const U=`${S.prefix}--tearsheet-edit-multi-form`,Z=({cancelButtonText:r,className:s,description:l,influencerWidth:a,label:h,slug:c,submitButtonText:p,title:b})=>{const[u,i]=o.useState(!1),[m,x]=o.useState(!1),[v,F]=o.useState("Topic name here"),[w,k]=o.useState("Topic description here"),[q,_]=o.useState("Topic value here"),[$,I]=o.useState("Location here"),[R,P]=o.useState(1),[O,A]=o.useState("one-day"),[B,C]=o.useState(!1),M=()=>{F(v),k(w),_(q),I($),P(1),A("one-day"),x(!1),C(!1),i(!1)},d=()=>{M(),G("onClose")()},T=async()=>{await new Promise(n=>setTimeout(n,1e3)),i(!1),G("onSubmit")()},ee=()=>{G("handleFormChange")()};return e.createElement("div",null,e.createElement("style",null,`.${U} { opacity: 0 }`,";"),e.createElement(me,{onClick:()=>i(!u)},u?"Close EditTearsheet":"Open EditTearsheet"),e.createElement(g,{influencerWidth:a,label:h,className:N(U,s),submitButtonText:p,cancelButtonText:r,description:l,title:b,open:u,onRequestSubmit:T,onClose:d,onFormChange:ee,slug:c&&ye()},e.createElement(f,{title:"Topic name",fieldsetLegendText:"Topic information",subtitle:"This is the unique name used to recognize your topic",description:`It will also be used by your producers and consumers as part of the
          connection information, so make it something easy to recognize.`},e.createElement(E,{xlg:8,lg:8,md:8,sm:8},e.createElement(L,{labelText:"Topic name",placeholder:"Enter topic name",id:"tearsheet-multi-form-story-text-input-multi-form-1",value:v,onChange:n=>{n.target.value.length&&C(!1),F(n.target.value)},invalid:B,invalidText:"This is a required field",onBlur:()=>{v.length||C(!0)}}),e.createElement(L,{labelText:"Topic description (optional)",id:"tearsheet-multi-form-story-text-input-multi-form-1-input-2",value:w,placeholder:"Enter topic description",onChange:n=>k(n.target.value)}),e.createElement(L,{labelText:"Topic version (optional)",id:"tearsheet-multi-form-story-text-input-multi-form-1-input-3",value:q,placeholder:"Enter topic version",onChange:n=>_(n.target.value)}),m&&e.createElement(he,{kind:"error",title:"Error",subtitle:"Resolve errors to continue",onClose:()=>x(!m)}),e.createElement(be,{className:`${U}__error--toggle`,id:"simulated-error-toggle",size:"sm",labelText:"Simulate error",onToggle:()=>x(!m),toggled:m}))),e.createElement(f,{title:"Location",subtitle:"Custom form subtitle",fieldsetLegendText:"",description:"Custom form description (see storybook implementation for new custom form capability)"},e.createElement(E,{xlg:8,lg:8,md:8,sm:8},e.createElement(L,{value:$,onChange:n=>I(n.target.value),id:"custom-form-input",labelText:"Location",placeholder:"Enter location"}))),e.createElement(f,{title:"Partitions",subtitle:`One or more partitions make up a topic. A partition is an ordered
          list of messages.`,description:`Partitions are distributed across the brokers in order to increase
          the scalability of your topic. You can also use them to distribute
          messages across the members of a consumer group.`,fieldsetLegendText:"Partition information"},e.createElement(E,{xlg:3,lg:3,md:8,sm:4},e.createElement(fe,{id:"carbon-number",min:1,max:100,value:R,label:"Partitions",helperText:"1 partition is sufficient for getting started but, production systems often have more.",invalidText:"Max partitions is 100, min is 1",onChange:n=>P(n.imaginaryTarget.value)}))),e.createElement(f,{title:"Message retention",subtitle:"This is how long messages are retained before they are deleted.",description:`If your messages are not read by a consumer within this time, they
          will be missed.`,fieldsetLegendText:"Message retention scheduling"},e.createElement(E,{xlg:8,lg:8,md:8,sm:8},e.createElement(ge,{legendText:"Message retention",name:"radio-button-group",defaultSelected:O,onChange:n=>A(n),orientation:"vertical"},e.createElement(D,{labelText:"A day",value:"one-day",id:"one-day"}),e.createElement(D,{labelText:"A week",value:"one-week",id:"one-week"}),e.createElement(D,{labelText:"A month",value:"one-month",id:"one-month"}))))))};Z.__docgenInfo={description:"",methods:[],displayName:"MultiFormEditTearsheet"};const Ot={title:"Deprecated/Edit and update/EditTearsheet",component:g,tags:["autodocs"],argTypes:{description:{control:{type:"text"}},label:{control:{type:"text"}},title:{control:{type:"text"}},influencer:{control:{disable:!0}},onClose:{control:{disable:!0}},open:{control:{disable:!0}},...ve()},parameters:{styles:_e,docs:{page:X}},decorators:[r=>e.createElement(Ee,{type:"deprecation-notice",text:e.createElement("div",null,"This component is deprecated and will be removed in the next major version.")},r())]},Ce={title:"Edit topic",description:"Specify details for the topic you want to update",submitButtonText:"Save",cancelButtonText:"Cancel",className:"test-class-name",label:"",influencerWidth:"narrow"},H=Z.bind({});H.storyName="Edit tearsheet";H.args={...Ce};const Bt=["multiFormEditTearsheet"];export{Bt as __namedExportsOrder,Ot as default,H as multiFormEditTearsheet};
