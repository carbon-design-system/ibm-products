import{e as i,S as u,r as x}from"./iframe-6Ea7Lnhj.js";import{g}from"./getBatchActions-BUGz3V9e.js";import{s as w,m as E}from"./_storybook-styles-CQW9oa64.js";import{D as f}from"./DatagridActions-DtbyxzqF.js";import{D as S}from"./DatagridPagination-BVxnZsMw.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-Dww695vK.js";import{u as h}from"./useExpandedRow-B20RyEJu.js";import{u as D}from"./useSelectRows-DVRxYSdF.js";import{u as C}from"./useStickyColumn-C5HAFuFf.js";import{u as R}from"./usePrefix-BPCt7P4R.js";import{E as H}from"./bucket-6-BuyWAmS2.js";import{T as b}from"./bucket-17-BqAcT4u7.js";import"./bucket-0-BdiYAbr0.js";import"./bucket-2-SPcLEvyK.js";import"./index-DRv8Cx3Q.js";import"./bucket-18-PnJVTM1G.js";import"./bucket-7-DDubFi6M.js";import"./ComposedModal-ClCBM6ur.js";import"./index-BEhuL1MR.js";import"./index-B5Rz7fVC.js";import"./LayerContext-CYcSFm8I.js";import"./clamp--00YEiB8.js";import"./ButtonSet-BQOUGgo1.js";import"./InlineLoading-DYP2wGFG.js";import"./mergeRefs-91-mP8KM.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-8mk42Nj3.js";import"./Text-CVT3kS-3.js";import"./utils-DSvpuMUF.js";import"./TableToolbarSearch-B9haTG4V.js";import"./wrapComponent-Br9tHTRf.js";import"./Search-Dtb-kHGZ.js";import"./FormContext-D8Mn8o3U.js";import"./bucket-15-CAEq-59T.js";import"./Dropdown-CJiIVugV.js";import"./index-DegWqaip.js";import"./inheritsLoose-DHKJTbHM.js";import"./bucket-19-B56Rjjwc.js";import"./MenuItem-0vI0bCph.js";import"./useControllableState-sQbf9Uv-.js";import"./useAttachedMenu-DlDWY8of.js";import"./index-C_1lpD7R.js";import"./index-B8GXHlmk.js";import"./bucket-12-DOa0UrGz.js";import"./useOutsideClick-C2JpVKPa.js";import"./OverflowMenuItem-C4qZrH_9.js";import"./useFilterContext-Bvcctoc4.js";import"./bucket-14-BCa3FpXH.js";import"./Pagination-B1POIzdP.js";import"./Select-C-W9fH1i.js";import"./SelectItem-BKg7931i.js";import"./MultiSelect-DlIAEBm-.js";import"./Checkbox-Bhl7pOTE.js";import"./devtools-t5hVrn0E.js";import"./TableRow-CQ08Va_q.js";import"./bucket-1--YU9IgqT.js";import"./TableToolbar-CS8C2llb.js";import"./index-BeeWDbkh.js";import"./ErrorEmptyState-Cc8nx_xR.js";import"./EmptyState-CZj-C2Z_.js";import"./EmptyStateV2-DjecLa_i.js";import"./Link-CmZ5dDmd.js";import"./props-helper-BxLyO66a.js";import"./ErrorIllustration-CgWkJiq1.js";import"./useId-BZQMDDt0.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-ClRlgUrZ.js";import"./NoDataIllustration-BZgOfQqd.js";import"./NotFoundEmptyState-NyR-QLpl.js";import"./NotFoundIllustration-DzeuBZdb.js";import"./index.esm-BVE6nUHW.js";import"./usePreviousValue-DiMdwUAm.js";import"./useResizeObserver-CotxvpG2.js";import"./useIsomorphicEffect-ysnJcn6W.js";import"./getFocusableElements-BW7cf991.js";import"./index-DsGHyTPv.js";import"./useClickOutside-CuY2rVwU.js";import"./AccordionItem-D7_IyILq.js";import"./DatePicker-DHP833ao.js";import"./FormGroup-CjTSc011.js";import"./NumberInput-ChAV0JSA.js";import"./useNormalizedInputProps-mUOGJzSx.js";import"./documentLang-E105Y72C.js";import"./bucket-16-CvJUHKHx.js";import"./RadioButton-Qd_nE-nY.js";import"./RadioButtonGroup-noIwC_Jp.js";import"./usePrefersReducedMotion-Dli3-6Pp.js";import"./usePresence-Dt2KC1z3.js";import"./ActionSet-eDEhiAWN.js";import"./useWindowResize-CWHFMd4f.js";import"./TagSet-CPNei8P8.js";import"./Tag-Dlmz-yFz.js";import"./DefinitionTooltip-B2nUGEgz.js";import"./DismissibleTag-CqdcL7KM.js";import"./usePortalTarget-RdbJmDu1.js";import"./OperationalTag-BmphgG3b.js";import"./SkeletonText-D3QFfIzL.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-BuIncUQJ.js";import"./TableSelectRow-k96HeY78.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,bt={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const Bt=["ExpandableRowStory"];export{e as ExpandableRowStory,Bt as __namedExportsOrder,bt as default};
