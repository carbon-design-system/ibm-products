import{e as t,r as v}from"./index-DzvNrmz8.js";import{b as sn,d as K,P as n,C as We,l as un,w as ze}from"./index-5As4T26e.js";import{T as mn,a as Fe,S as pn,V as cn}from"./TimePickerSelect-ClS2Zbqb.js";import{g as dn}from"./devtools-CskDVa8y.js";import{p as Ke,T as gn,B as Ue}from"./settings-DbzZchXt.js";import{S as xe,H as Ie}from"./index-pOgDNIY8.js";import{L as yn}from"./index-B9LAK09p.js";import{P as fn,a as vn}from"./index-P6UCShJt.js";import{a as bn}from"./bucket-18-D-cwffHE.js";import{u as U}from"./uuidv4-BN2rGLQG.js";import{b as Ze,q as wn}from"./bucket-0-C6v-wDs9.js";import{S as Je}from"./Search-BqckCrhT.js";import{N as hn}from"./NumberInput-B9uXi7jS.js";import{T as Tn}from"./TextArea-C28YPkjZ.js";import{T as qn}from"./TextInput-eyoE_C-N.js";import{D as Re,a as ke}from"./DatePicker-D5zAEtWz.js";import{S as Oe}from"./SelectItem-ibNJWT9t.js";import{p as Ye}from"./bucket-17-F0QcB3Pi.js";import{C as Cn}from"./bucket-2-CdrYWKja.js";import{B as An}from"./bucket-1-BbY-lWHx.js";const o=`${Ke.prefix}--condition-builder`,Ne="Non-Hierarchical",W="Hierarchical",ee=(e,a)=>{e&&setTimeout(()=>{var r,i,s,l,u;V((r=e.target.closest('[role="gridcell"]'))==null?void 0:r.querySelector("button"),a),(s=(i=e.target.closest('[role="gridcell"]'))==null?void 0:i.querySelector("button"))==null||s.click(),(u=(l=e.target.closest('[role="gridcell"]'))==null?void 0:l.querySelector("button"))==null||u.focus()},0)},ne=(e,a)=>{setTimeout(()=>{V(e,a)},0)},_e=(e,a,r,i,s,l)=>{e==document.activeElement?a!==r.length-1?ne(r[a+1],l):ne(r[i?0:r.length-1],l):Array.from(r).indexOf(document.activeElement)==-1&&s&&ne(r[0],l)},Ee=(e,a,r,i,s,l)=>{e==document.activeElement?ne(a!==0?r[a-1]:r[i?r.length-1:0],l):Array.from(r).indexOf(document.activeElement)==-1&&s&&ne(r[r.length-1],l)},kn=(e,a)=>e[a],oe=e=>e&&e!=="INVALID",V=(e,a)=>{var i,s;const r=(e==null?void 0:e.closest(`.${o}__content-container`))??(e==null?void 0:e.closest(`.${o}__actions-container`));r&&Array.from(r.querySelectorAll('[tabindex="0"]')).map(l=>l==null?void 0:l.setAttribute("tabindex","-1")),e==null||e.setAttribute("tabindex","0"),(s=(i=a.current)==null?void 0:i.querySelector(`.${o}__statement-button`))==null||s.setAttribute("tabindex","1"),e==null||e.focus()},On=(e,a,r)=>r!=null&&r.valueFormatter&&["custom"].includes(e)?r.valueFormatter(a):e==="option"&&a&&typeof a!="string"?(Array.isArray(a)?a:[a]).map(s=>s.label).join(", "):a,Se=(e,a)=>{var r;return(e==null?void 0:e.operator)==="oneOf"||((r=a==null?void 0:a.operators)==null?void 0:r.find(i=>(e==null?void 0:e.operator)===i.id&&i.isMultiSelect))},Qe=(e,a)=>{!e.currentTarget.value&&e.key==="Escape"&&ee(e,a)},Q=({className:e,label:a,hideLabel:r,tooltipAlign:i,renderIcon:s,onClick:l,showToolTip:u,wrapperProps:c,onBlur:d,onFocus:m,onMouseEnter:w,onMouseLeave:b,isInvalid:h,wrapperClassName:g,tabIndex:C,description:y,...T})=>{const p=y||a,f=sn(),I=()=>{const P=T["data-name"]??"";return t.createElement("button",{tabIndex:C!==void 0?C:-1,className:K([e,`${o}__button`,{[`${o}__text-ellipsis`]:u&&!r&&!h},{[`${o}__invalid-input`]:h}]),type:"button",onClick:l,onBlur:d,onFocus:m,onMouseEnter:w,onMouseLeave:b,"data-name":P,...T},s&&t.createElement(s,null),!r&&t.createElement("span",null,a),h&&t.createElement(bn,null))};return r||u||y?t.createElement(gn,{label:p,align:i,className:`${g} ${o}__tooltip ${f}--icon-tooltip`,...c,leaveDelayMs:0},I()):t.createElement(t.Fragment,null,I())};Q.propTypes={className:n.string,hideLabel:n.bool,isInvalid:n.bool,label:n.string,onBlur:n.func,onClick:n.func,onFocus:n.func,onMouseEnter:n.func,onMouseLeave:n.func,renderIcon:n.oneOfType([n.func,n.object]),showToolTip:n.bool,tabIndex:n.number,tooltipAlign:n.string,wrapperClassName:n.string,wrapperProps:n.object};Q.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderButton",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},label:{required:!1,tsType:{name:"string"},description:"label of the button",type:{name:"string"}},hideLabel:{required:!1,tsType:{name:"boolean"},description:"decides if label and tooltip to be hidden",type:{name:"bool"}},tooltipAlign:{required:!1,tsType:{name:"PopoverAlignment"},description:"tooltip position",type:{name:"string"}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:"Optional prop to allow overriding the icon rendering.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"callback triggered on click of add button",type:{name:"func"}},onBlur:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:"mouse events callbacks",type:{name:"func"}},onFocus:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:"",type:{name:"func"}},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"",type:{name:"func"}},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"",type:{name:"func"}},showToolTip:{required:!1,tsType:{name:"boolean"},description:"decides if  tooltip to be shown",type:{name:"bool"}},wrapperProps:{required:!1,tsType:{name:"object"},description:"optional props for tree grid to add role and aria-label to wrapper span",type:{name:"object"}},isInvalid:{required:!1,tsType:{name:"boolean"},description:"boolean to know the updated value in not valid",type:{name:"bool"}},wrapperClassName:{required:!1,tsType:{name:"string"},description:"classname applies to the wrapper of popover",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index",type:{name:"number"}},description:{required:!1,tsType:{name:"string"},description:""}}};const _n={operator:"or",groups:[{groupOperator:"and",statement:"ifAll",id:U(),conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:U()}]}]},G=v.createContext({rootState:{groups:[]}}),je=e=>{const[a,r]=v.useState({groups:[]}),[i,s]=v.useState([]),l={rootState:a,setRootState:r,actionState:i,setActionState:s,inputConfig:e.inputConfig,popOverSearchThreshold:e.popOverSearchThreshold,getOptions:e.getOptions,variant:e.variant,translateWithId:e.translateWithId,conditionBuilderRef:e.conditionBuilderRef,statementConfigCustom:e.statementConfigCustom};return t.createElement(G.Provider,{value:l},e.children)};je.propTypes={children:n.node.isRequired,conditionBuilderRef:n.object,getOptions:n.func,inputConfig:n.shape({properties:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object]),description:n.string,type:n.oneOf(["text","textarea","number","date","option","time","custom"]).isRequired,config:n.shape({options:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object])})),component:n.func,operators:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired})),long:n.bool})}))}).isRequired,popOverSearchThreshold:n.number.isRequired,translateWithId:n.func,variant:n.string.isRequired};je.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderProvider",props:{rootState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},description:""},setRootState:{required:!1,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}}],raw:"SetStateAction<ConditionBuilderState>"}],raw:"Dispatch<SetStateAction<ConditionBuilderState>>"},description:""},actionState:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:""},setActionState:{required:!1,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"}],raw:"SetStateAction<Action[]>"}],raw:"Dispatch<SetStateAction<Action[]>>"},description:""},children:{required:!0,tsType:{name:"ReactNode"},description:"Provide the contents of the ConditionBuilder.",type:{name:"node"}},inputConfig:{required:!0,tsType:{name:"signature",type:"object",raw:"{ properties: Property[] }",signature:{properties:[{key:"properties",value:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
} & ConfigType`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}},{key:"description",value:{name:"string",required:!1}},{key:"type",value:{name:"any",required:!1}},{key:"config",value:{name:"any",required:!1}}]}},{name:"union",raw:`| PropertyConfigOption['config']
| PropertyConfigTextArea['config']
| PropertyConfigText['config']
| PropertyConfigNumber['config']
| PropertyConfigDate['config']
| PropertyConfigTime['config']
| PropertyConfigCustom['config']`,elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"PropertyConfigTextArea['config']",raw:"PropertyConfigTextArea['config']"},{name:"PropertyConfigText['config']",raw:"PropertyConfigText['config']"},{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},{name:"intersection",raw:"PropertyConfigDate['config']"},{name:"signature",raw:"PropertyConfigTime['config']"},{name:"signature",raw:"PropertyConfigCustom['config']"}]}]}],raw:"Property[]",required:!0}}]}},description:"This is a mandatory prop that defines the input to the condition builder.",type:{name:"shape",value:{properties:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},description:{name:"string",required:!1},type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'textarea'",computed:!1},{value:"'number'",computed:!1},{value:"'date'",computed:!1},{value:"'option'",computed:!1},{value:"'time'",computed:!1},{value:"'custom'",computed:!1}],required:!0},config:{name:"shape",value:{options:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1}}},required:!1},component:{name:"func",required:!1},operators:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0}}},required:!1},long:{name:"bool",required:!1}},required:!1}}},required:!1}}}},popOverSearchThreshold:{required:!0,tsType:{name:"number"},description:"Provide an mandatory numeric value that will be used to enable search option in the popovers with list.",type:{name:"number"}},getOptions:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  state: ConditionBuilderState,
  condition: Condition
) => Promise<Option[]>`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"},{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}],raw:"Promise<Option[]>"}}},description:`This is an optional callback function that will be triggered when options array is not passed in the inputConfig against a property. 
This can be a asynchronous function that need  to  return a promise, so it will allow to fetch options from API call.
options has to be in valid format
[{
          label: 'label',
          id: 'id',
        },...]`,type:{name:"func"}},variant:{required:!0,tsType:{name:"string"},description:"Provide the condition builder variant: Non-Hierarchical/ Hierarchical",type:{name:"string"}},translateWithId:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: string) => string",signature:{arguments:[{type:{name:"string"},name:"id"}],return:{name:"string"}}},description:`Optional prop if you want to pass translation to the texts used . Otherwise this will the defined defaults.
This callback function will receive the message id and you need to return the corresponding text for that id.
The message key will be one of [   "ifText",   "addConditionText",   "addConditionGroupText",   "addSubgroupText",   "conditionText",   "propertyText",   "operatorText",   "valueText",   "connectorText",   "conditionRowText",   "removeConditionText",   "addConditionRowText",   "startText",   "endText",   "clearSearchText",   "actionsText",   "then",   "removeActionText",   "addActionText",   "invalidText",   "invalidNumberWarnText"
]`,type:{name:"func"}},statementConfigCustom:{required:!1,tsType:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,signature:{properties:[{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}]}],raw:"statementConfig[]"},description:""},conditionBuilderRef:{required:!1,tsType:{name:"ForwardedRef",elements:[{name:"HTMLDivElement"}],raw:"ForwardedRef<HTMLDivElement>"},description:"ref of condition builder",type:{name:"object"}}},composes:["PropsWithChildren"]};const le={ifText:"if",unlessText:"unless",excl_if:"excl.if",and:"and",or:"or",is:"is",ifAll:"if all",ifAny:"if any",unlessAll:"unless all",unlessAny:"unless any",greater:"is greater than",greaterEqual:"is greater than or equal to",lower:"is lower than",lowerEqual:"is lower than or equal to",startsWith:"starts with",endsWith:"ends with",contains:"contains",oneOf:"is one of",before:"is before",after:"is after",between:"is between",addConditionText:"Add condition",addConditionGroupText:"Add condition group",addSubgroupText:"Add subgroup",conditionText:"Condition",propertyText:"Property",operatorText:"Operator",valueText:"Value",connectorText:"Connector",conditionRowText:"Condition row",conditionRowGroupText:"Condition row group",removeConditionText:"Delete condition",addConditionRowText:"Add condition row",startText:"Start",endText:"End",clearSearchText:"Clear search input",actionsText:"Actions",then:"then",removeActionText:"Remove Action",addActionText:"Add action",invalidText:"Incomplete",invalidNumberWarnText:"Invalid number, must be 0 or greater",conditionBuilderText:"Condition Builder",actionSectionText:"Action Section",conditionHeadingText:"Condition",addPropertyText:"Add property",addOperatorText:"Add operator",addValueText:"Add value",conditionBuilderHierarchicalText:"Condition Builder Hierarchical"},M=(e,a)=>{const{translateWithId:r}=v.useContext(G);return e.map(i=>(a!=null&&a[i]&&(i=a[i]),r!=null&&r(i)?r(i):le[i]?le[i]:i))},En=(e,a,r)=>{var s;(s=document.activeElement.closest(`.${o}__popover`))!=null&&s.querySelector('[role="dialog"]')||Sn(e,a,r)},xn=(e,a,r)=>{In(e)||Nn(e,r==null?void 0:r.current,a)},In=e=>!["Escape"].includes(e.key)&&e.target.closest(`.${o}__item-date`),Nn=(e,a,r)=>{var d,m,w,b,h,g;const i=e.key,s=kn(e,"shiftKey"),l=(d=a.querySelector("ul"))==null?void 0:d.dataset.multiSelect,u=(m=a.querySelectorAll('[role="option"]'))==null?void 0:m.length;let c=[];if(i==="Escape"&&(ee(e,r),e.preventDefault(),e.stopPropagation()),u)switch(i){case"ArrowUp":e.preventDefault(),a.querySelectorAll('[role="option"]').forEach((C,y,T)=>{Ee(C,y,T,null,null,r)}),Array.from(((w=e.target.closest("ul"))==null?void 0:w.querySelectorAll("li"))??[]).indexOf(e.target)===1&&(a.querySelector(`.${o}__popover-content-wrapper`).scrollTop=0);break;case"ArrowDown":e.preventDefault(),a.querySelectorAll('[role="option"]').forEach((C,y,T)=>{_e(C,y,T,null,null,r)});break;case"Tab":c=[...Array.from(a.querySelectorAll(`.${o}__selectAll-button,[role="searchbox"]`)),a.querySelector('[role="option"]')],c.forEach((C,y,T)=>{s?Ee(C,y,T,!0,!0,r):_e(C,y,T,!0,!0,r)}),e.preventDefault();break;case" ":l==="true"&&(document.activeElement.type!=="button"&&((b=document.activeElement)==null||b.click()),e.preventDefault());break;case"Enter":document.activeElement.type!=="button"&&(ee(e,r),(h=document.activeElement)==null||h.click());break}else i==="Enter"&&!s&&document.activeElement.type!=="button"&&(ee(e,r),(g=document.activeElement)==null||g.click())},Sn=(e,a,r)=>{var i,s,l,u,c,d;switch(e.key){case"ArrowRight":if(e.preventDefault(),r==W){let m=Array.from((i=e.target.closest('[role="row"]'))==null?void 0:i.querySelectorAll('[role="gridcell"] button'));if(m.length===1)e.target=e.target.closest('[role="row"]'),Me(e,a,r);else if(e.target.getAttribute("role")=="row")V(m[0],a);else{let w=m.indexOf(e.target);w<m.length-1&&ne(m[w+1],a)}}else Ve(e,a);break;case"ArrowLeft":if(e.preventDefault(),r==W){if(e.target.getAttribute("role")!=="row"){let m=Array.from((s=e.target.closest('[role="row"]'))==null?void 0:s.querySelectorAll('[role="gridcell"] button')),w=m.indexOf(e.target);if(w>0)ne(m[w-1],a);else{let b=e.target.closest('[role="row"]');V(b,a)}}}else Ve(e,a);break;case"ArrowUp":case"ArrowDown":e.preventDefault(),r==W?Me(e,a,r):jn(e,a,r);break;case"Enter":((u=(l=document.activeElement)==null?void 0:l.querySelectorAll("button"))==null?void 0:u.length)===1&&((d=(c=document.activeElement)==null?void 0:c.querySelectorAll("button")[0])==null||d.click());break}},Pe=e=>{var a;return Array.from((a=e.current)==null?void 0:a.querySelectorAll('[role="row"]'))},Xe=(e,a)=>Pe(a).findIndex(i=>i.contains(e)),jn=(e,a,r)=>{const i=Pe(a),s=Xe(e.target,a);en(e,s,i,r,a)},Me=(e,a,r)=>{const i=Pe(a),s=Xe(e.target,a);let l=s;e.target.getAttribute("role")=="row"?(["ArrowDown","ArrowRight"].includes(e.key)?l+=1:e.key==="ArrowUp"&&(l-=1),l<0?l=0:l>=i.length&&(l=i.length-1),l!==s&&V(i[l],a)):en(e,s,i,r,a)},en=(e,a,r,i,s)=>{let l=a;e.key==="ArrowUp"&&(l=a==0?a:a-1),e.key==="ArrowDown"&&(l=a===r.length-1?r.length-1:a+1);const u=r[l],c=e.target.dataset.name;u!=null&&u.querySelector(`[data-name="${c}"]`)?V(u==null?void 0:u.querySelector(`[data-name="${c}"]`),s):i===W&&V(u,s)},Ve=(e,a)=>{a.current.querySelectorAll('[role="gridcell"] button').forEach((r,i,s)=>{e.key==="ArrowRight"?_e(r,i,s,null,null,a):Ee(r,i,s,null,null,a)})},H=({children:e,className:a,label:r,renderIcon:i,title:s,type:l,showToolTip:u,condition:c,popOverClassName:d,config:m,renderChildren:w,onChange:b,description:h,...g})=>{const C=v.useRef(null),[y,T]=v.useState(!1),{conditionBuilderRef:p,statementConfigCustom:f}=v.useContext(G),I={ifAll:le.ifText,ifAny:le.ifText,unlessAll:le.unlessText,unlessAny:le.unlessText};f==null||f.forEach(q=>{I[q.id]=q.label});const[P,_,x,D,B,F]=M(["invalidText","addConditionText","addPropertyText","addOperatorText","addValueText",r],I),N=()=>{const{property:q,operator:E}=c||{};return r==="INVALID"||g["data-name"]==="propertyField"&&q==="INVALID"||g["data-name"]==="operatorField"&&E==="INVALID"?{propertyLabel:P,isInvalid:!0}:{isInvalid:!1,propertyLabel:g["data-name"]=="valueField"&&l?On(l,r,m):F}},{propertyLabel:S,isInvalid:R}=N();v.useEffect(()=>{if(c){const q=g["data-name"];(c.popoverToOpen&&q!==c.popoverToOpen||q=="valueField"&&l==="option"&&!Se(c,m))&&Z(),c.popoverToOpen==q&&ae()}else Z()},[c,r]),v.useEffect(()=>{var q;if(y&&C.current){const E=(q=C==null?void 0:C.current)==null?void 0:q.querySelector("input,textarea");E&&setTimeout(()=>E.focus(),0)}},[C,y]);const z=()=>{(g["data-name"]==="propertyField"&&!(c!=null&&c.property)||g["data-name"]==="operatorField"&&!(c!=null&&c.operator)||g["data-name"]==="valueField"&&!(c!=null&&c.value))&&(b==null||b("INVALID"))},Z=()=>{y&&z(),T(!1)},ae=()=>T(!0),O=()=>{(e||w)&&T(!y)},k=q=>{xn(q,p,C),q.key==="Escape"&&z()},A=q=>{var E;return q&&((E=m==null?void 0:m.operators)==null?void 0:E.find(L=>L.id===q))},j=()=>{var q;return m!=null&&m.operators&&g["data-name"]==="operatorField"?((q=A(S))==null?void 0:q.label)??D:S||(g["data-name"]==="propertyField"?x:g["data-name"]==="operatorField"?D:g["data-name"]==="valueField"?B:_)};return t.createElement(fn,{open:y,isTabTip:!0,role:"gridcell",className:`${d} ${o}__popover`,ref:C,onRequestClose:Z},t.createElement(Q,{label:j(),hideLabel:!r,onClick:O,className:a,"aria-haspopup":!0,"aria-expanded":y,renderIcon:i||(r==null?Ze:void 0),showToolTip:u,isInvalid:R,description:h,...g}),y&&t.createElement(vn,{className:`${o}__popover-content-wrapper`,role:"dialog","aria-label":s,onKeyDown:k},t.createElement(yn,null,t.createElement(xe,null,t.createElement(Ie,{className:`${o}__item__title`},s),t.createElement("div",{className:`${o}__popover-content`},w?w(C):e)))))};H.propTypes={children:n.node,className:n.string,condition:n.object,config:n.object,label:n.oneOfType([n.string,n.array,n.object]),onChange:n.func,popOverClassName:n.string,renderChildren:n.func,renderIcon:n.oneOfType([n.func,n.object]),showToolTip:n.bool,title:n.string,type:n.string};H.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItem",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},label:{required:!1,tsType:{name:"union",raw:"string | Option | Option[]",elements:[{name:"string"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}]},description:"text to be displayed in the field",type:{name:"union",value:[{name:"string"},{name:"array"},{name:"object"}]}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:"Optional prop to allow overriding the icon rendering.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},title:{required:!1,tsType:{name:"string"},description:"title of the popover",type:{name:"string"}},showToolTip:{required:!1,tsType:{name:"boolean"},description:"show tool tip",type:{name:"bool"}},popOverClassName:{required:!1,tsType:{name:"string"},description:"class name for popover",type:{name:"string"}},type:{required:!1,tsType:{name:"string"},description:"input type",type:{name:"string"}},description:{required:!1,tsType:{name:"string"},description:""},condition:{required:!1,tsType:{name:"intersection",raw:"Action & Condition",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}}]},description:"current condition state object",type:{name:"object"}},config:{required:!1,tsType:{name:"union",raw:`| PropertyConfigOption['config']
| PropertyConfigTextArea['config']
| PropertyConfigText['config']
| PropertyConfigNumber['config']
| PropertyConfigDate['config']
| PropertyConfigTime['config']
| PropertyConfigCustom['config']`,elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"PropertyConfigTextArea['config']",raw:"PropertyConfigTextArea['config']"},{name:"PropertyConfigText['config']",raw:"PropertyConfigText['config']"},{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},{name:"intersection",raw:"PropertyConfigDate['config']"},{name:"signature",raw:"PropertyConfigTime['config']"},{name:"signature",raw:"PropertyConfigCustom['config']"}]},description:"this is the config object again the current property from inputConfig",type:{name:"object"}},renderChildren:{required:!1,tsType:{name:"signature",type:"function",raw:"(ref: Ref<HTMLDivElement>) => ReactNode",signature:{arguments:[{type:{name:"Ref",elements:[{name:"HTMLDivElement"}],raw:"Ref<HTMLDivElement>"},name:"ref"}],return:{name:"ReactNode"}}},description:"callback prop that returns the jsx for children",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(val: string) => void",signature:{arguments:[{type:{name:"string"},name:"val"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},tabIndex:{required:!1,tsType:{name:"number"},description:""},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},onFocus:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},onBlur:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},children:{description:"provide the contents of the popover",type:{name:"node"},required:!1}},composes:["PropsWithChildren"]};const te=({conditionState:e={},config:a={},onChange:r})=>{const{popOverSearchThreshold:i}=v.useContext(G),s=v.useRef(null),[l,u]=M(["propertyText","clearSearchText"]),{conditionBuilderRef:c}=v.useContext(G),d=a.options,[m,w]=v.useState(""),b=e.value,h=m?d==null?void 0:d.filter(p=>{var f;return(f=p.label)==null?void 0:f.toLowerCase().includes(m.toLowerCase())}):d;v.useEffect(()=>{var p;if(s.current){const f=(p=s.current)==null?void 0:p.querySelector("input, button,li");f&&f.focus()}},[d]);const g=(p,f)=>{r(f.id,p)},C=p=>{const{value:f}=p.target;w(f)},y=()=>e.label?e.label:l,T=p=>t.createElement("div",{className:`${o}__statement_wrapper`},t.createElement("div",null,p.label," (",p.connector,")"),t.createElement("div",null,p.secondaryLabel));if(d)return t.createElement("div",{className:`${o}__item-option`,ref:s},i&&d.length>i&&t.createElement("div",{className:`${o}__item-option__search`},t.createElement(Je,{size:"sm",labelText:u,closeButtonLabelText:u,onChange:C,onKeyDown:p=>Qe(p,c)})),t.createElement("ul",{"aria-label":y(),role:"listbox"},h==null?void 0:h.map(p=>{const f=b===p.id,I=p.icon;return t.createElement("li",{tabIndex:0,key:p.id,role:"option","aria-selected":f,className:`${o}__item-option__option`,onKeyUp:()=>!1,onClick:P=>g(P,p)},t.createElement("div",{className:`${o}__item-option__option-content`},t.createElement("span",{className:`${o}__item-option__option-label`},I&&t.createElement(I,null),a.isStatement?T(p):p.label),f&&t.createElement(We,{className:`${o}__checkmark`})))})))};te.propTypes={conditionState:n.object,config:n.object,onChange:n.func};te.__docgenInfo={description:"",methods:[],displayName:"ItemOption",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  label?: string;
  value?: string;
}`,signature:{properties:[{key:"label",value:{name:"string",required:!1}},{key:"value",value:{name:"string",required:!1}}]}},description:"current condition object",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},config:{required:!1,tsType:{name:"intersection",raw:`{ options?: option[] | statementConfig[] } & {
  isStatement?: boolean;
}`,elements:[{name:"signature",type:"object",raw:"{ options?: option[] | statementConfig[] }",signature:{properties:[{key:"options",value:{name:"union",raw:"option[] | statementConfig[]",elements:[{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"option[]"},{name:"Array",elements:[{name:"intersection",raw:`Item & {
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,signature:{properties:[{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}]}],raw:"statementConfig[]"}],required:!1}}]}},{name:"signature",type:"object",raw:`{
  isStatement?: boolean;
}`,signature:{properties:[{key:"isStatement",value:{name:"boolean",required:!1}}]}}]},description:"current config object that this property is part of",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string, e: Event) => void",signature:{arguments:[{type:{name:"string"},name:"value"},{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const Te=()=>{const[e,a,r,i,s,l,u,c,d,m,w,b,h,g,C,y,T,p]=M(["ifAll","ifAny","unlessAll","unlessAny","and","or","is","greater","greaterEqual","lower","lowerEqual","startsWith","endsWith","contains","oneOf","before","after","between"]),{statementConfigCustom:f}=v.useContext(G);return{statementConfig:f??[{id:"ifAll",connector:"and",label:e,secondaryLabel:"(a && b)"},{id:"ifAny",connector:"or",label:a,secondaryLabel:"(a || b)"},{id:"unlessAll",connector:"and",label:r,secondaryLabel:"! (a && b)"},{id:"unlessAny",connector:"or",label:i,secondaryLabel:"! (a || b)"}],connectorConfig:[{label:s,id:"and"},{label:l,id:"or"}],operatorConfig:[{label:u,id:"is",type:"all"},{label:c,id:"greater",type:"number"},{label:d,id:"greaterEqual",type:"number"},{label:m,id:"lower",type:"number"},{label:w,id:"lowerEqual",type:"number"},{label:b,id:"startsWith",type:"text,textarea"},{label:h,id:"endsWith",type:"text,textarea"},{label:g,id:"contains",type:"text,textarea"},{label:C,id:"oneOf",type:"option"},{label:y,id:"before",type:"date,time"},{label:T,id:"after",type:"date,time"},{label:p,id:"between",type:"date"}]}},ge=({operator:e,className:a,onChange:r,...i})=>{const{variant:s,conditionBuilderRef:l}=v.useContext(G),[u]=M(["connectorText"]),{connectorConfig:c}=Te(),d=v.useCallback((h,g)=>{g?h.classList.add("hoveredConnector"):h.classList.remove("hoveredConnector")},[]),m=h=>{const g=h==null?void 0:h.currentTarget.closest(".eachGroup");d(g,!0)},w=h=>{const g=h==null?void 0:h.currentTarget.closest(".eachGroup");d(g,!1)},b=(h,g)=>{r==null||r(h),ee(g,l)};return s==W?t.createElement("span",{className:`${a} ${o}__connector--disabled`},t.createElement(Q,{label:e})):t.createElement(H,{label:e,title:u,"data-name":"connectorField",onMouseEnter:m,onMouseLeave:w,onFocus:m,onBlur:w,...i,popOverClassName:a,className:`${o}__connector-button`},t.createElement(te,{config:{options:c},conditionState:{value:e,label:u},onChange:b}))};ge.propTypes={className:n.string,onChange:n.func,operator:n.string};ge.__docgenInfo={description:"",methods:[],displayName:"ConditionConnector",props:{operator:{required:!1,tsType:{name:"string"},description:"string that defines the connector operator (and/or)",type:{name:"string"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(op: string) => void",signature:{arguments:[{type:{name:"string"},name:"op"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}}}};const Le=({conditionState:e,config:a,onChange:r})=>{var c;const[i]=M(["invalidNumberWarnText"]),s=(d,{value:m})=>{m!==""&&!isNaN(m)&&l(m)?r(`${m} ${a.unit??""}`):r("INVALID")},l=d=>!(a.max!==void 0&&a.min===void 0&&d>a.max||a.min!==void 0&&a.max===void 0&&d<a.min||a.max!==void 0&&a.min!==void 0&&(d>a.max||d<a.min)),u=()=>{var d,m;return((m=(d=e.value)==null?void 0:d.split(" "))==null?void 0:m[0])??""};return t.createElement("div",{className:`${o}__item-number`},t.createElement(hn,{...a,label:e.property,hideLabel:!0,id:(c=e.property)==null?void 0:c.replace(/\s/g,""),invalidText:i,allowEmpty:!0,onChange:s,defaultValue:u()}))};Le.propTypes={conditionState:n.object,config:n.object,onChange:n.func};Le.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemNumber",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"current condition object",type:{name:"object"}},config:{required:!1,tsType:{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},description:"current config object that this property is part of",type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const we=({conditionState:e,onChange:a,config:r,type:i})=>{var l;const s={...r,hideLabel:!0,value:oe(e.value)?e.value:"",id:(l=e.property)==null?void 0:l.replace(/\s/g,""),onChange:u=>{a(u.target.value)},labelText:e.property};return t.createElement("div",{className:`${o}__item-text`},i=="textarea"?t.createElement(Tn,{...s}):t.createElement(qn,{...s}))};we.propTypes={conditionState:n.object,config:n.object,onChange:n.func,type:n.string};we.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemText",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"current condition object",type:{name:"object"}},config:{required:!1,tsType:{name:"union",raw:"PropertyConfigText | PropertyConfigTextArea",elements:[{name:"PropertyConfigText"},{name:"PropertyConfigTextArea"}]},description:"config of the current property",type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}},type:{required:!1,tsType:{name:"union",raw:"'textarea' | 'text'",elements:[{name:"literal",value:"'textarea'"},{name:"literal",value:"'text'"}]},description:"current input type",type:{name:"string"}}}};const $e=({conditionState:e,onChange:a,parentRef:r,config:i})=>{const s=v.useRef(null),[l,u]=M(["startText","endText"]),[c,d]=v.useState(),m=i.dateFormat||"m/d/Y",{conditionBuilderRef:w}=v.useContext(G),b=e.operator=="between"||Se(e,i)?"range":"single";v.useEffect(()=>{b==="range"&&d(h(e.value)??void 0)},[]);const h=y=>{var P;const T=(P=s==null?void 0:s.current)==null?void 0:P.calendar;if(!T||!y)return null;const[p,f]=y.split(" - "),I=[];return p&&p!=="INVALID"&&I.push(T.parseDate(p,m)),f&&f!=="INVALID"&&I.push(T.parseDate(f,m)),I.length?I:null},g=(y,T,p)=>{let f=T;b==="range"&&y.length===2&&(f=`${p.formatDate(y[0],m)} - ${p.formatDate(y[1],m)}`),a(f||"INVALID")},C=y=>{var T;if(y.key==="Enter"){const p=(T=s==null?void 0:s.current)==null?void 0:T.calendar;p&&g(p.selectedDates,y.target.value,p),ee(y,w)}};return t.createElement("div",{className:`${o}__item-date `},b=="single"&&t.createElement(Re,{...i,ref:s,datePickerType:"single",value:e.value,onClose:g,onKeyPress:C,appendTo:r==null?void 0:r.current},t.createElement(ke,{id:"datePicker",placeholder:"dd/mm/yyyy",labelText:e.property})),b=="range"&&t.createElement(Re,{...i,ref:s,datePickerType:b,onClose:g,onKeyPress:C,value:c,appendTo:r==null?void 0:r.current},t.createElement(ke,{id:"datePickerStart",placeholder:"dd/mm/yyyy",labelText:l}),t.createElement(ke,{id:"datePickerEnd",placeholder:"dd/mm/yyyy",labelText:u})))};$e.propTypes={conditionState:n.object,config:n.object,onChange:n.func,parentRef:n.object};$e.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemDate",props:{conditionState:{description:"current condition object",type:{name:"object"},required:!1},config:{description:"",type:{name:"object"},required:!1},onChange:{description:"callback to update state oin date change",type:{name:"func"},required:!1},parentRef:{description:"reference to the popover node",type:{name:"object"},required:!1}}};const He=({onChange:e,config:a})=>{var b,h;const[r,i]=v.useState(""),[s,l]=v.useState("AM"),[u,c]=v.useState((b=a==null?void 0:a.timeZones)==null?void 0:b[0]);v.useEffect(()=>{const g=`${r??""} ${s??""} ${u??""}`;e(r?g:void 0)},[r,s,u]);const d=g=>{c(g.target.value)},m=g=>{l(g.target.value)},w=g=>{i(g.target.value)};return t.createElement("div",{className:`${o}__item-time`},t.createElement(mn,{id:"time-picker",labelText:"Select a time",onChange:w},t.createElement(Fe,{id:"time-picker-day-zone",onChange:m},t.createElement(Oe,{value:"AM",text:"AM"}),t.createElement(Oe,{value:"PM",text:"PM"})),t.createElement(Fe,{id:"time-picker-time-zone",onChange:d},(h=a==null?void 0:a.timeZones)==null?void 0:h.map((g,C)=>t.createElement(Oe,{key:C,value:g,text:g})))))};He.propTypes={config:n.object,onChange:n.func};He.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemTime",props:{config:{description:"current config object that this property is part of",type:{name:"object"},required:!1},onChange:{description:"callback to update state oin date change",type:{name:"func"},required:!1}}};const pe=({className:e,onClick:a,addConditionSubGroupHandler:r,showConditionSubGroupPreviewHandler:i,hideConditionSubGroupPreviewHandler:s,showConditionPreviewHandler:l,hideConditionPreviewHandler:u,enableSubGroup:c,buttonLabel:d,tabIndex:m})=>{const[w,b,h]=M(["addConditionText","addConditionRowText","addSubgroupText"]),g=()=>{u==null||u(),a()},C=()=>c?{onMouseEnter:l,onMouseLeave:u,onFocus:l,onBlur:u}:{},y=()=>({onMouseEnter:i,onMouseLeave:s,onFocus:i,onBlur:s}),T=()=>d||(c?void 0:b),p=c?{role:"gridcell"}:{};return t.createElement("div",{className:`${e} ${o}__add-button-wrapper`,role:c?"none":"gridcell","aria-label":T()},t.createElement(Q,{renderIcon:wn,onClick:g,...C(),wrapperProps:p,className:`${o}__add-button`,hideLabel:!0,"data-name":"addButton",label:d??w,tabIndex:m,wrapperClassName:`${o}__add-condition-wrapper`}),c&&t.createElement(Q,{renderIcon:Ye,onClick:r,className:K(`${o}__add-condition-sub-group`),hideLabel:!0,label:h,wrapperProps:p,wrapperClassName:`${o}__add-condition-sub-group-wrapper ${o}__gap-left`,...y()}))};pe.propTypes={addConditionSubGroupHandler:n.func,buttonLabel:n.string,className:n.string,enableSubGroup:n.bool,hideConditionPreviewHandler:n.func,hideConditionSubGroupPreviewHandler:n.func,onClick:n.func,showConditionPreviewHandler:n.func,showConditionSubGroupPreviewHandler:n.func,tabIndex:n.number};pe.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderAdd",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"callback triggered on click of add button",type:{name:"func"}},addConditionSubGroupHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},hideConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},showConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},hideConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},enableSubGroup:{required:!1,tsType:{name:"boolean"},description:"boolean to enable sub groups for the tree variant",type:{name:"bool"}},buttonLabel:{required:!1,tsType:{name:"string"},description:"tooltip label for plus button",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index",type:{name:"number"}}}};const qe=({conditionState:e={},config:a={},onChange:r})=>{const i=Se(e,a),{popOverSearchThreshold:s,getOptions:l,rootState:u}=v.useContext(G),[c,d]=M(["propertyText","clearSearchText"]),{conditionBuilderRef:m}=v.useContext(G),w=v.useRef(null),[b,h]=v.useState(a.options),[g,C]=v.useState(""),y=b==null?void 0:b.filter(_=>_.label.toLowerCase().includes(g.toLowerCase())),T=Array.isArray(e.value)?e.value:e.value!==void 0?[e.value]:[];v.useEffect(()=>{!b&&l&&(async()=>{const x=await l(u,e);(x==null?void 0:x.length)>0&&Object.keys(x[0]).includes("label")&&Object.keys(x[0]).includes("id")&&h(x)})()},[]),v.useEffect(()=>{if(w.current){const _=w.current.querySelector("input, button,li");_&&(_==null||_.focus())}},[b]);const p=_=>{_.currentTarget.dataset.selectedAll=="false"?r(void 0):r(b)},f=_=>{const{value:x}=_.target;C(x)},I=(_,x,D)=>{const B=T.filter(F=>F!=="INVALID");if(i)if(D){const F=B.filter(N=>N.id!==x.id);r(F.length>0?F:void 0)}else r([...B,x]);else r(x,_);_.target instanceof SVGElement&&_.stopPropagation()},P=()=>e.label?e.label:e.property?e.property:c;return b?t.createElement("div",{className:`${o}__item-option`,ref:w},s&&b.length>s&&t.createElement("div",{className:`${o}__item-option__search`},t.createElement(Je,{size:"sm",labelText:d,closeButtonLabelText:d,onChange:f,onKeyDown:_=>Qe(_,m)})),i&&t.createElement("div",{className:`${o}__multiselectSelectionStatusContainer`},t.createElement("label",null,T.length,"/",b.length," Selected"),t.createElement(Ue,{kind:"ghost",size:"sm","data-selected-all":`${T.length==0}`,onClick:p,className:`${o}__selectAll-button`},T.length==0?"Select all":"Deselect all")),t.createElement("ul",{"aria-label":P(),role:"listbox","data-multi-select":i},y==null?void 0:y.map(_=>{const x=T.map(B=>B.id).includes(_.id),D=_.icon;return t.createElement("li",{tabIndex:0,key:_.id,role:"option","aria-selected":x,className:`${o}__item-option__option`,onKeyUp:()=>!1,onClick:B=>I(B,_,x)},t.createElement("div",{className:`${o}__item-option__option-content`},i?t.createElement(t.Fragment,null,t.createElement("span",{className:`${o}__option-check-box`},x?t.createElement(un,null):t.createElement(Cn,null)),t.createElement("span",{className:`${o}__item-option__option-label`},_.label),D&&t.createElement("span",{className:`${o}__option-icon`},t.createElement(D,null))):t.createElement(t.Fragment,null,t.createElement("span",{className:`${o}__item-option__option-label`},D&&t.createElement(D,null),_.label),x&&t.createElement(We,{className:`${o}__checkmark`}))))}))):t.createElement(pn,null)};qe.propTypes={conditionState:n.object,config:n.object,onChange:n.func};qe.__docgenInfo={description:"",methods:[],displayName:"ItemOptionForValueField",props:{conditionState:{required:!1,tsType:{name:"intersection",raw:"Condition & { label?: string }",elements:[{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{ label?: string }",signature:{properties:[{key:"label",value:{name:"string",required:!1}}]}}]},description:"current condition object",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},config:{required:!1,tsType:{name:"signature",raw:"PropertyConfigOption['config']"},description:"current config object that this property is part of",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: any, e?: Event) => void",signature:{arguments:[{type:{name:"any"},name:"value"},{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const he=e=>{const{onRemove:a,onChange:r,condition:i={},conjunction:s,onConnectorOperatorChange:l,isStatement:u,group:c,onStatementChange:d,conditionIndex:m,addConditionHandler:w,addConditionSubGroupHandler:b,aria:h,hideConditionSubGroupPreviewHandler:g,showConditionSubGroupPreviewHandler:C,hideConditionPreviewHandler:y,showConditionPreviewHandler:T,isLastCondition:p}=e,{property:f,value:I,operator:P}=i,{inputConfig:_,variant:x,conditionBuilderRef:D}=v.useContext(G),[B,F]=v.useState(!1),[N,S]=v.useState(!1),[R,z,Z,ae,O]=M(["conditionRowText","conditionText","propertyText","operatorText","removeConditionText"]),{statementConfig:k,operatorConfig:A}=Te(),j=$=>{var Y;return((Y=_==null?void 0:_.properties)==null?void 0:Y.find(ln=>ln.id==$))??{}},{icon:q,type:E,config:L,label:X,description:ye}=j(f),fe={text:we,number:Le,date:$e,time:He,option:qe,custom:L==null?void 0:L.component,textarea:we}[E],ve=()=>{S(!0)},se=()=>{S(!1)},be=($,Y)=>{ee(Y,D),d==null||d($)},J=$=>{r({...i,property:$,operator:void 0,value:"",popoverToOpen:oe($)?"operatorField":""})},re=$=>{r({...i,operator:$,value:void 0,popoverToOpen:oe($)?"valueField":""})},ue=$=>{const Y={...i};delete Y.popoverToOpen,r({...Y,value:$})},ie=()=>{F(!0)},me=()=>{F(!1)},tn=($,Y)=>x===W?!0:p($,Y),an=()=>L!=null&&L.operators?L==null?void 0:L.operators:A.filter($=>$.type.indexOf(E)!=-1||$.type=="all"),rn=()=>x==W?{"aria-level":h.level,"aria-posinset":h.posinset,"aria-setsize":h.setsize}:{},on=$=>t.createElement(fe,{conditionState:{property:f,operator:P,value:I},onChange:ue,config:L,"data-name":"valueField",parentRef:$,type:E});return t.createElement("div",{className:K(`${o}__condition-block`,{[`${o}__condition__deletion-preview`]:B},{[`${o}__gap-bottom`]:x==W},{[`${o}__gap ${o}__gap-bottom`]:x==Ne},{[`${o}__condition--interacting`]:N}),role:"row","aria-label":R,...rn(),tabIndex:-1,onMouseEnter:ve,onMouseLeave:se,onBlur:se},s?t.createElement(ge,{className:`${o}__gap`,operator:s,onChange:$=>l==null?void 0:l($)}):"",u&&t.createElement(H,{label:c.statement,title:z,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`,tabIndex:0},t.createElement(te,{conditionState:{value:c.statement,label:z},onChange:be,config:{options:k,isStatement:!0}})),t.createElement(H,{label:X??(i==null?void 0:i.property),title:Z,renderIcon:q??void 0,className:`${o}__property-field`,"data-name":"propertyField",condition:i,type:E,description:ye,onChange:J},t.createElement(te,{conditionState:{value:f,label:Z},onChange:J,config:{options:_==null?void 0:_.properties}})),oe(f)&&t.createElement(H,{label:P,title:ae,"data-name":"operatorField",condition:i,type:E,config:L,onChange:re},t.createElement(te,{config:{options:an()},conditionState:{value:P,label:ae},onChange:re})),oe(f)&&oe(P)&&t.createElement(H,{label:I,type:E,title:X,showToolTip:!0,"data-name":"valueField",condition:i,config:L,onChange:ue,renderChildren:on}),t.createElement("span",{role:"gridcell","aria-label":O},t.createElement(Q,{hideLabel:!0,label:O,onClick:a,onMouseEnter:ie,onMouseLeave:me,onFocus:ie,onBlur:me,renderIcon:ze,className:`${o}__close-condition`,"data-name":"closeCondition",wrapperClassName:`${o}__close-condition-wrapper`})),tn(m,c.conditions)&&t.createElement(pe,{onClick:()=>{w==null||w(m)},addConditionSubGroupHandler:()=>{b==null||b(m)},showConditionSubGroupPreviewHandler:C,hideConditionSubGroupPreviewHandler:g,enableSubGroup:x==W,showConditionPreviewHandler:T,hideConditionPreviewHandler:y,className:`${o}__gap ${o}__gap-left`}))};he.propTypes={addConditionHandler:n.func,addConditionSubGroupHandler:n.func,aria:n.object,condition:n.object,conditionIndex:n.number,conjunction:n.string,group:n.object,hideConditionPreviewHandler:n.func,hideConditionSubGroupPreviewHandler:n.func,isLastCondition:n.func,isStatement:n.bool,onChange:n.func,onConnectorOperatorChange:n.func,onRemove:n.func,onStatementChange:n.func,showConditionPreviewHandler:n.func,showConditionSubGroupPreviewHandler:n.func,state:n.object};he.__docgenInfo={description:"",methods:[],displayName:"ConditionBlock",props:{condition:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"",type:{name:"object"}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"callback for Remove a condition",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(condition: Condition) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},onConnectorOperatorChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(op: string) => void",signature:{arguments:[{type:{name:"string"},name:"op"}],return:{name:"void"}}},description:"callback to handle the connector(and/or) change",type:{name:"func"}},onStatementChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(v: string) => void",signature:{arguments:[{type:{name:"string"},name:"v"}],return:{name:"void"}}},description:"callback to handle the statement(if/ excl.if) change",type:{name:"func"}},addConditionHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(conditionIndex: number) => void",signature:{arguments:[{type:{name:"number"},name:"conditionIndex"}],return:{name:"void"}}},description:"callback to add a new condition",type:{name:"func"}},addConditionSubGroupHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(conditionIndex: number) => void",signature:{arguments:[{type:{name:"number"},name:"conditionIndex"}],return:{name:"void"}}},description:"callback to add a new condition subgroup",type:{name:"func"}},hideConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for showing sub group preview",type:{name:"func"}},hideConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for showing add condition preview",type:{name:"func"}},conjunction:{required:!1,tsType:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},description:"string that decides to show the condition connector",type:{name:"string"}},isStatement:{required:!1,tsType:{name:"boolean"},description:"boolean that decides to show the statement(if/ excl.if)",type:{name:"bool"}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"object that hold the current group object where is condition is part of",type:{name:"object"}},conditionIndex:{required:!1,tsType:{name:"number"},description:"",type:{name:"number"}},aria:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  level: number;
  posinset: number;
  setsize?: number;
}`,signature:{properties:[{key:"level",value:{name:"number",required:!0}},{key:"posinset",value:{name:"number",required:!0}},{key:"setsize",value:{name:"number",required:!1}}]}},description:"object hold aria attributes",type:{name:"object"}},isLastCondition:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  index: number,
  conditions: (ConditionGroup | Condition)[]
) => void`,signature:{arguments:[{type:{name:"number"},name:"index"},{type:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]"},name:"conditions"}],return:{name:"void"}}},description:"",type:{name:"func"}},state:{description:"object that hold the current condition",type:{name:"object"},required:!1}}};const ce=({previewType:e,group:a,colorIndex:r})=>{const[i,s]=v.useState(!1),[l,u,c,d]=M(["valueText","operatorText","propertyText","ifText"]);v.useEffect(()=>{s(!0)},[]);const m=()=>t.createElement("div",{className:`${o}__preview-condition`},t.createElement(H,{label:l,renderIcon:An}),t.createElement(H,{label:u}),t.createElement(H,{label:c}));return t.createElement(t.Fragment,null,e=="newGroup"&&t.createElement(t.Fragment,null,t.createElement("div",{className:K([`${o}__group__row ${o}__group-preview `,{[`${o}__group-preview-animate`]:i}])},t.createElement(H,{className:`${o}__statement-button`,label:a.groupOperator})),t.createElement("div",{"data-color-index":r,"aria-hidden":!0,className:K([`${o}__group ${o}__condition-wrapper ${o}__group-preview ${o}__group-wrapper `,{[`${o}__group-preview-animate`]:i}])},t.createElement("div",{className:`${o}__gap`},t.createElement(H,{className:`${o}__statement-button`,label:d})),m())),e=="subGroup"&&t.createElement("div",{className:K([`${o}__group__row ${o}__group-preview ${o}__gap-bottom`,{[`${o}__group-preview-animate`]:i}])},t.createElement("div",{className:`${o}__condition-block  ${o}__gap`},t.createElement(H,{label:a.groupOperator,className:`${o}__statement-button`,popOverClassName:`${o}__gap`}),t.createElement("div",{className:`${o}__group ${o}__condition-wrapper`},t.createElement(ge,{className:`${o}__gap ${o}__groupConnector`,operator:d}),m()))),e=="condition"&&t.createElement("div",{className:K([`${o}__group__row ${o}__group-preview ${o}__gap-bottom`,{[`${o}__group-preview-animate`]:i}])},t.createElement("div",{className:`${o}__condition-block  ${o}__gap`},t.createElement(H,{label:a.groupOperator,className:`${o}__statement-button`,popOverClassName:`${o}__gap`}),m())))};ce.propTypes={colorIndex:n.number,group:n.object,previewType:n.oneOf(["condition","subGroup","newGroup"])};ce.__docgenInfo={description:"",methods:[],displayName:"ConditionPreview",props:{previewType:{required:!1,tsType:{name:"union",raw:"'newGroup' | 'subGroup' | 'condition'",elements:[{name:"literal",value:"'newGroup'"},{name:"literal",value:"'subGroup'"},{name:"literal",value:"'condition'"}]},description:"type of review to be displayed",type:{name:"enum",value:[{value:"'condition'",computed:!1},{value:"'subGroup'",computed:!1},{value:"'newGroup'",computed:!1}]}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"current conditional group",type:{name:"object"}},colorIndex:{required:!1,tsType:{name:"number"},description:"index of the color for next group",type:{name:"number"}}}};const Ce=({group:e,aria:a,onRemove:r,onChange:i,className:s})=>{const[l,u,c]=M(["conditionBuilderGroupText","conditionText","conditionBuilderText"]),{statementConfig:d}=Te(),{variant:m,conditionBuilderRef:w}=v.useContext(G),[b,h]=v.useState(-1),[g,C]=v.useState(-1);v.useState(!1);const y=v.useRef(null),T=(O,k,A)=>{var j;if(e&&e.conditions&&e.conditions.length>1)if(m==W?_(k):P(k,A),p(e.conditions,O)){const q=e.conditions.filter(E=>O!==E.id);if((q==null?void 0:q[0]).conditions){const E=q[0];q.splice(0,1,...E==null?void 0:E.conditions)}i==null||i({...e,conditions:q})}else{const q=(j=e==null?void 0:e.conditions)==null?void 0:j.reduce((E,L)=>{const X=L;return X.conditions?E.concat(X.conditions):E},[]);i==null||i({...e,conditions:q})}else r==null||r(k)},p=(O,k)=>O.find(A=>!A.conditions&&A.id!==k),f=(O,k)=>{const A=[...e!=null&&e.conditions?e.conditions.slice(0,k):[],O,...e!=null&&e.conditions?e.conditions.slice(k+1):[]];i==null||i({...e,conditions:A,id:(e==null?void 0:e.id)??U()})},I=O=>{const k={property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:U()};i==null||i({...e,conditions:[...e.conditions?e.conditions.slice(0,O+1):[],k,...e.conditions?e.conditions.slice(O+1):[]]})},P=(O,k)=>{var j;const A=(j=O.currentTarget.closest(`.${o}__group`))==null?void 0:j.querySelectorAll('[data-name="closeCondition"]');k==A.length-1?V(A[k-1],w):V(A[k+1],w)},_=O=>{var E,L,X,ye,Ae,fe,ve,se,be;const k=(L=(E=O.currentTarget)==null?void 0:E.closest('[role="row"]'))==null?void 0:L.getAttribute("aria-level"),A=(ye=(X=O.currentTarget)==null?void 0:X.closest('[role="row"]'))==null?void 0:ye.getAttribute("aria-posinset"),j=(Ae=y.current)==null?void 0:Ae.querySelector(`[aria-level="${k}"][aria-posinset="${Number(A)+1}"]`),q=(fe=y.current)==null?void 0:fe.querySelector(`[aria-level="${k}"][aria-posinset="${Number(A)-1}"]`);if(j!=null&&j.classList.contains(`${o}__condition-block`))V(j==null?void 0:j.querySelector('[data-name="closeCondition"]'),w);else if(q!=null&&q.classList.contains(`${o}__condition-block`))V(q==null?void 0:q.querySelector('[data-name="closeCondition"]'),w);else{const J=(ve=y.current)==null?void 0:ve.querySelectorAll(`[aria-level="${Number(k)-1}"][role="row"]`),re=(se=y.current)==null?void 0:se.querySelector(`[aria-level="${Number(k)+1}"][role="row"]`);if(re){const ue={ariaLevel:Number(re.ariaLevel)-1,ariaPosInSet:re.ariaPosInSet};setTimeout(()=>{var me;const ie=(me=y.current)==null?void 0:me.querySelector(`[role="row"][aria-level="${ue.ariaLevel}"][aria-posinset="${ue.ariaPosInSet}"]`);V(ie==null?void 0:ie.querySelector('[data-name="closeCondition"]'),w)},0)}else J!=null&&J.length&&J.length>1&&V((be=J[J.length-2])==null?void 0:be.querySelector('[data-name="closeCondition"]'),w)}},x=O=>{i({...e,conditions:[...e.conditions?e.conditions.slice(0,O+1):[],{statement:"ifAll",groupOperator:"and",conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:U()}],id:U()},...e.conditions?e.conditions.slice(O+1):[]]})},D=(O,k)=>O+1>=k.length||k.length-1!=O&&k[O+1].conditions,B=O=>{C(O)},F=()=>{C(-1)},N=O=>{h(O)},S=()=>{h(-1)},R=O=>{var A;const k=(A=d.find(j=>j.id==O))==null?void 0:A.connector;i({...e,groupOperator:k,statement:O})},z=O=>{i({...e,groupOperator:O})},Z=()=>{var O;return t.createElement("div",{className:`${s}  eachGroup`},t.createElement("div",{className:`${o}__condition-wrapper`,role:"grid","aria-label":c},(O=e==null?void 0:e.conditions)==null?void 0:O.map((k,A)=>{var j;return t.createElement("div",{key:k.id,className:`${o}__group-wrapper`},t.createElement(he,{conjunction:A>0?e.groupOperator:void 0,aria:{level:a.level+1,posinset:A+1,setsize:(j=e==null?void 0:e.conditions)==null?void 0:j.length},isStatement:A==0,condition:k,group:e,conditionIndex:A,onChange:q=>{f(q,A)},addConditionHandler:I,onRemove:q=>{T(k.id,q,A)},onConnectorOperatorChange:z,onStatementChange:R,isLastCondition:D}))})))},ae=()=>{var O;return t.createElement("div",{className:`${s} ${o}__condition-wrapper`,role:a.level===1?"rowgroup":void 0,"aria-label":a.level==1?l:void 0,ref:y},t.createElement("div",{tabIndex:0,role:"row","aria-level":a.level,"aria-posinset":a.posinset,"aria-setsize":a.setsize},t.createElement(H,{label:e.statement,title:u,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`},t.createElement(te,{conditionState:{value:e.statement,label:u},onChange:(k,A)=>{ee(A,w),R(k)},config:{options:d,isStatement:!0}}))),(O=e==null?void 0:e.conditions)==null?void 0:O.map((k,A)=>{var j,q;return t.createElement(v.Fragment,{key:k.id},k.conditions?t.createElement("div",{className:K(`${o}__condition-block subgroup  ${o}__gap`,{[`${o}__gap-bottom`]:e&&e.conditions&&e.conditions.length<A+1},{})},t.createElement(ge,{className:`${o}__gap ${o}__gap-bottom ${o}__groupConnector`,operator:e.groupOperator,"aria-hidden":!0}),t.createElement(Ce,{aria:{level:a.level+1,posinset:A+1,setsize:((j=e.conditions)==null?void 0:j.length)??0},className:`${o}__group`,group:k,onChange:E=>{f(E,A)},onRemove:E=>{T(k.id,E,A)}})):t.createElement("div",null,t.createElement(he,{conjunction:A>0?e.groupOperator:void 0,aria:{level:a.level+1,posinset:A+1,setsize:((q=e.conditions)==null?void 0:q.length)??0},isStatement:!1,condition:k,group:e,conditionIndex:A,addConditionHandler:I,addConditionSubGroupHandler:x,onChange:E=>{f(E,A)},onRemove:E=>{T(k.id,E,A)},onConnectorOperatorChange:z,onStatementChange:R,showConditionSubGroupPreviewHandler:()=>{B(A)},hideConditionSubGroupPreviewHandler:F,showConditionPreviewHandler:()=>{N(A)},hideConditionPreviewHandler:S,isLastCondition:D})),A==g&&t.createElement(ce,{previewType:"subGroup",group:e}),A==b&&t.createElement(ce,{previewType:"condition",group:e}))}))};return t.createElement(t.Fragment,null,m==W&&ae(),m==Ne&&Z())};Ce.propTypes={aria:n.object,className:n.string,group:n.object,onChange:n.func,onRemove:n.func};Ce.__docgenInfo={description:"",methods:[],displayName:"ConditionGroupBuilder",props:{group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"",type:{name:"object"}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"call back to remove the particular group from the state tree",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(group: ConditionGroup) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},name:"group"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},aria:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  level: number;
  posinset: number;
  setsize: number;
}`,signature:{properties:[{key:"level",value:{name:"number",required:!0}},{key:"posinset",value:{name:"number",required:!0}},{key:"setsize",value:{name:"number",required:!0}}]}},description:"object contains the aria attributes",type:{name:"object"}}}};const nn=()=>{const{rootState:e,setRootState:a}=v.useContext(G),[r]=M(["conditionText"]),{connectorConfig:i}=Te(),s=l=>{a({...e,operator:l})};return t.createElement("div",{className:`${o}__group-separator ${o}__group-separator-row`,role:"row",tabIndex:-1,"aria-level":1},t.createElement(H,{label:e.operator,title:r,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`},t.createElement(te,{conditionState:{value:e.operator,label:r},onChange:s,config:{options:i}})))};nn.__docgenInfo={description:"",methods:[],displayName:"GroupConnector"};const De=({actions:e,className:a})=>{const{actionState:r=[],setActionState:i}=v.useContext(G),[s,l]=v.useState(-1),[u,c,d,m,w,b]=M(["actionsText","then","and","removeActionText","addActionText","actionSectionText"]),h=()=>{const p={id:U(),label:void 0,popoverToOpen:"valueField"};i==null||i([...r,p])},g=(p,f)=>{const P={...e.find(_=>_.id===p),id:r[f].id};i==null||i([...r.slice(0,f),P,...r.slice(f+1)])},C=p=>{i==null||i(r.filter(f=>f.id!==p))},y=p=>{l(p)},T=()=>{l(-1)};return t.createElement("div",{className:a},t.createElement(xe,{className:`${o}__heading`,level:4},t.createElement(Ie,null,u)),t.createElement("div",{className:`${o}__condition-wrapper`,role:"grid","aria-label":b},r==null?void 0:r.map((p,f)=>t.createElement("div",{key:p.id,role:"row",className:K(`${o}__condition-block ${o}__gap ${o}__gap-bottom`,{[`${o}__condition__deletion-preview`]:s==f})},t.createElement(H,{className:`${o}__statement-button`,tabIndex:0,popOverClassName:`${o}__gap`,label:f===0?c:d}),t.createElement(H,{label:p.label,title:u,condition:p,"data-name":"valueField",type:"option"},t.createElement(qe,{conditionState:{value:p.label},onChange:I=>g(I.id,f),config:{options:e}})),t.createElement("span",{role:"gridcell","aria-label":m},t.createElement(Q,{hideLabel:!0,label:m,onClick:()=>C(p.id),onMouseEnter:()=>y(f),onMouseLeave:T,onFocus:()=>y(f),onBlur:T,renderIcon:ze,className:`${o}__close-condition`,"data-name":"closeCondition"})),r.length===f+1&&t.createElement(pe,{onClick:h,className:`${o}__gap ${o}__gap-left`,buttonLabel:w,tabIndex:0}))),r.length===0&&t.createElement(pe,{onClick:h,className:`${o}__gap ${o}__gap-left`,buttonLabel:w,tabIndex:0})))};De.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),className:n.string};De.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderActions",props:{actions:{required:!1,tsType:{name:"union",raw:"Action[] | Option[]",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}]},description:"optional array of object that give the list of actions.",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}}}};const Ge=({startConditionLabel:e,getConditionState:a,getActionsState:r,initialState:i,actions:s})=>{var F;const{rootState:l,setRootState:u,variant:c,actionState:d}=v.useContext(G),m=v.useRef(i!=null&&i.state?JSON.parse(JSON.stringify(i==null?void 0:i.state)):null),[w,b]=v.useState(!1),[h,g]=v.useState(!1),[C,y,T]=M(["addConditionGroupText","conditionHeadingText","conditionBuilderHierarchicalText"]),p=()=>{g(!0)},f=()=>{g(!1)};v.useEffect(()=>{var N;(N=l==null?void 0:l.groups)!=null&&N.length?b(!0):b(!1),a&&a(l??{})},[l]),v.useEffect(()=>{r==null||r(d??[])},[d]),v.useEffect(()=>{i!=null&&i.enabledDefault&&(u==null||u(i.state))},[i]);const I=()=>{var N,S;b(!0),(S=(N=m==null?void 0:m.current)==null?void 0:N.groups)!=null&&S.length?(u==null||u(m.current),m.current=null):u==null||u(_n)},P=v.useCallback(N=>{var R;const S=(R=l==null?void 0:l.groups)==null?void 0:R.filter(z=>N!==(z==null?void 0:z.id));u==null||u({...l,groups:l?S:[]}),(S==null?void 0:S.length)===0&&(m.current=null)},[u,l]),_=(N,S)=>{if(l&&l.groups){const R=[...l.groups?l.groups.slice(0,S):[],N,...l.groups?l.groups.slice(S+1):[]];u==null||u({...l,groups:R})}},x=()=>{const N={statement:"ifAll",groupOperator:"and",id:U(),conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:U()}]};u==null||u({...l,groups:l&&l.groups?[...l.groups,N]:[N]})},D=()=>{var S;return(((S=l==null?void 0:l.groups)==null?void 0:S.length)??0)%5};if(!w)return t.createElement(Ue,{className:`${o}__addConditionText-button`,renderIcon:N=>t.createElement(Ze,{...N}),iconDescription:e,kind:"ghost",size:"sm",onClick:I},e);const B=c===W?{role:"treegrid","aria-label":T}:null;return t.createElement(t.Fragment,null,t.createElement(xe,{className:`${o}__heading`,level:4},t.createElement(Ie,null,y)),t.createElement("div",{className:`${o}__content-container`,...B},l&&((F=l==null?void 0:l.groups)==null?void 0:F.map((N,S)=>t.createElement("div",{key:N.id,className:`${o}__group-wrapper`},t.createElement(Ce,{className:`${o}__group`,aria:{level:1,posinset:S*2+1,setsize:(l.groups&&l.groups.length*2)??0},group:N,onRemove:()=>{P(N.id)},onChange:R=>{_(R,S)}}),l.groups&&S<l.groups.length-1&&t.createElement(nn,null)))),c==W&&t.createElement("div",{role:"row",tabIndex:-1,"aria-level":1,className:`${o}__add-group`},t.createElement(Q,{renderIcon:Ye,onClick:x,onMouseEnter:p,onMouseLeave:f,onFocus:p,onBlur:f,className:`${o}__add-condition-group `,hideLabel:!0,label:C,wrapperProps:{role:"gridcell","aria-label":C}})),h&&t.createElement(ce,{previewType:"newGroup",colorIndex:D(),group:{groupOperator:l==null?void 0:l.operator,id:U()}})),s&&t.createElement(De,{actions:s,className:`${o}__actions-container`}))};Ge.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),getActionsState:n.func,getConditionState:n.func.isRequired,initialState:n.shape({state:n.shape({groups:n.arrayOf(n.shape({groupOperator:n.string,statement:n.string,conditions:n.arrayOf(n.oneOfType([n.shape({property:n.string,operator:n.string,value:n.oneOfType([n.string,n.arrayOf(n.shape({id:n.string,label:n.string})),n.shape({id:n.string,label:n.string})])}),n.object]))})),operator:n.string}),enabledDefault:n.bool}),startConditionLabel:n.string.isRequired};Ge.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderContent",props:{startConditionLabel:{required:!0,tsType:{name:"string"},description:"",type:{name:"string"}},getConditionState:{required:!0,tsType:{name:"signature",type:"function",raw:"(state: ConditionBuilderState) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"}],return:{name:"void"}}},description:"This is a callback function that returns the updated state",type:{name:"func"}},getActionsState:{required:!1,tsType:{name:"signature",type:"function",raw:"(state: Action[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},name:"state"}],return:{name:"void"}}},description:"callback functions that will provide the updated action state back.",type:{name:"func"}},initialState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  state: ConditionBuilderState;
  enabledDefault?: boolean;
}`,signature:{properties:[{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"enabledDefault",value:{name:"boolean",required:!1}}]}},description:"Optional prop if the condition building need to start from a predefined initial state",type:{name:"shape",value:{state:{name:"shape",value:{groups:{name:"arrayOf",value:{name:"shape",value:{groupOperator:{name:"string",required:!1},statement:{name:"string",required:!1},conditions:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{property:{name:"string",required:!1},operator:{name:"string",required:!1},value:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}},{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}],required:!1}}},{name:"object"}]},required:!1}}},required:!1},operator:{name:"string",required:!1}},required:!1},enabledDefault:{name:"bool",required:!1}}}},actions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:"optional array of object that give the list of actions.",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}}}};const Be="ConditionBuilder";let de=t.forwardRef(({className:e,inputConfig:a,startConditionLabel:r="Add Condition",popOverSearchThreshold:i,getOptions:s,initialState:l,getConditionState:u,getActionsState:c,variant:d=Ne,actions:m,translateWithId:w,statementConfigCustom:b,...h},g)=>{const C=v.useRef(null),y=g||C,T=p=>{En(p,y,d)};return t.createElement(je,{inputConfig:a,popOverSearchThreshold:i,getOptions:s,variant:d,translateWithId:w,conditionBuilderRef:y,statementConfigCustom:b},t.createElement("div",{...h,className:K(o,e,{}),ref:y,...dn(Be)},t.createElement(cn,{className:`${o}__${d}`,onKeyDown:T},t.createElement(Ge,{startConditionLabel:r,getConditionState:u,getActionsState:c,initialState:l,actions:m}))))});de=Ke.checkComponentEnabled(de,Be);de.displayName=Be;de.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),className:n.string,getActionsState:n.func,getConditionState:n.func.isRequired,getOptions:n.func,initialState:n.shape({state:n.shape({groups:n.arrayOf(n.shape({groupOperator:n.string,statement:n.string,conditions:n.arrayOf(n.oneOfType([n.shape({property:n.string,operator:n.string,value:n.oneOfType([n.string,n.arrayOf(n.shape({id:n.string,label:n.string})),n.shape({id:n.string,label:n.string})])}),n.object]))})),operator:n.string}),enabledDefault:n.bool}),inputConfig:n.shape({properties:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object]),type:n.oneOf(["text","textarea","number","date","option","time","custom"]).isRequired,description:n.string,config:n.shape({options:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object])})),component:n.func,operators:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired})),valueFormatter:n.func})}))}).isRequired,popOverSearchThreshold:n.number.isRequired,startConditionLabel:n.string,statementConfigCustom:n.arrayOf(n.shape({id:n.string.isRequired,connector:n.oneOf(["and","or"]).isRequired,label:n.string.isRequired,secondaryLabel:n.string})),translateWithId:n.func,variant:n.oneOf(["Non-Hierarchical","Hierarchical"])};de.__docgenInfo={description:"TODO: A description of the component.",methods:[],displayName:"ConditionBuilder",props:{inputConfig:{required:!0,tsType:{name:"signature",type:"object",raw:"{ properties: Property[] }",signature:{properties:[{key:"properties",value:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
} & ConfigType`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}},{key:"description",value:{name:"string",required:!1}},{key:"type",value:{name:"any",required:!1}},{key:"config",value:{name:"any",required:!1}}]}},{name:"union",raw:`| PropertyConfigOption['config']
| PropertyConfigTextArea['config']
| PropertyConfigText['config']
| PropertyConfigNumber['config']
| PropertyConfigDate['config']
| PropertyConfigTime['config']
| PropertyConfigCustom['config']`,elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"PropertyConfigTextArea['config']",raw:"PropertyConfigTextArea['config']"},{name:"PropertyConfigText['config']",raw:"PropertyConfigText['config']"},{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},{name:"intersection",raw:"PropertyConfigDate['config']"},{name:"signature",raw:"PropertyConfigTime['config']"},{name:"signature",raw:"PropertyConfigCustom['config']"}]}]}],raw:"Property[]",required:!0}}]}},description:"This is a mandatory prop that defines the input to the condition builder.",type:{name:"shape",value:{properties:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'textarea'",computed:!1},{value:"'number'",computed:!1},{value:"'date'",computed:!1},{value:"'option'",computed:!1},{value:"'time'",computed:!1},{value:"'custom'",computed:!1}],required:!0},description:{name:"string",required:!1},config:{name:"shape",value:{options:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1}}},required:!1},component:{name:"func",required:!1},operators:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0}}},required:!1},valueFormatter:{name:"func",required:!1}},required:!1}}},required:!1}}}},initialState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  state: ConditionBuilderState;
  enabledDefault?: boolean;
}`,signature:{properties:[{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"enabledDefault",value:{name:"boolean",required:!1}}]}},description:`Optional prop if you want to pass a saved condition state, pass as "initialState.state".
"initialState.enabledDefault" will populate the builder with the provided initial state before clicking Add Condition button.

 This state should respect the structure of condition state that is available in getConditionState callback`,type:{name:"shape",value:{state:{name:"shape",value:{groups:{name:"arrayOf",value:{name:"shape",value:{groupOperator:{name:"string",required:!1},statement:{name:"string",required:!1},conditions:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{property:{name:"string",required:!1},operator:{name:"string",required:!1},value:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}},{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}],required:!1}}},{name:"object"}]},required:!1}}},required:!1},operator:{name:"string",required:!1}},required:!1},enabledDefault:{name:"bool",required:!1}}}},getActionsState:{required:!1,tsType:{name:"signature",type:"function",raw:"(state: Action[] | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"Action[] | undefined",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},{name:"undefined"}]},name:"state"}],return:{name:"void"}}},description:"This is a callback that gives back the updated action state",type:{name:"func"}},getConditionState:{required:!0,tsType:{name:"signature",type:"function",raw:"(state: ConditionBuilderState | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"ConditionBuilderState | undefined",elements:[{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},{name:"undefined"}]},name:"state"}],return:{name:"void"}}},description:"This is a callback that gives back updated condition state",type:{name:"func"}},getOptions:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  state: ConditionBuilderState,
  condition: Condition
) => Promise<Option[]>`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"},{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}],raw:"Promise<Option[]>"}}},description:`This is a callback that get triggered when  you want to dynamically fetch options.
 Component call this when the option array is not passed against a property with type as option in the input config.
This is an asynchronous callback that can return a promise , and you need to resolve the promise with options array in the valid format.
You will receive the root condition state and current condition as the 2 arguments.
eg: const getOptions = async (conditionState,condition) => {
  switch (condition.property) {
    case 'continent':
      return new Promise((resolve) => {
        const continents=[{
      label: 'Africa',
      id: 'Africa',
    },...]
          resolve(continents);
      });
      default:
      return [];
  }
};`,type:{name:"func"}},actions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:"optional array of actions",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},popOverSearchThreshold:{required:!0,tsType:{name:"number"},description:"Provide an mandatory numeric value that will be used to enable search option in the popovers with list.",type:{name:"number"}},startConditionLabel:{required:!1,tsType:{name:"string"},description:"Provide a label to the button that starts condition builder",defaultValue:{value:"'Add Condition'",computed:!1},type:{name:"string"}},variant:{required:!1,tsType:{name:"union",raw:"'Non-Hierarchical' | 'Hierarchical'",elements:[{name:"literal",value:"'Non-Hierarchical'"},{name:"literal",value:"'Hierarchical'"}]},description:"Provide the condition builder variant: Non-Hierarchical/ Hierarchical",defaultValue:{value:"'Non-Hierarchical'",computed:!1},type:{name:"enum",value:[{value:"'Non-Hierarchical'",computed:!1},{value:"'Hierarchical'",computed:!1}]}},translateWithId:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: string) => string",signature:{arguments:[{type:{name:"string"},name:"id"}],return:{name:"string"}}},description:`Optional prop, if you need to pass translations to the texts on the component instead of the defined defaults.
This callback function will receive the message id and you need to return the corresponding text for that id.
The message id will be one of [   "ifText","addConditionText",   "addConditionGroupText",   "addSubgroupText",   "conditionText",   "propertyText",   "operatorText",   "valueText",   "connectorText",   "conditionRowText","conditionRowGroupText","conditionBuilderText","actionSectionText",   "removeConditionText",   "addConditionRowText",   "startText",   "endText",   "clearSearchText",   "actionsText",   "then",   "removeActionText",   "addActionText",   "invalidText",  "invalidNumberWarnText"]
]`,type:{name:"func"}},statementConfigCustom:{required:!1,tsType:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,signature:{properties:[{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}]}],raw:"statementConfig[]"},description:"Optional prop for passing custom configuration for statement option from default op",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},connector:{name:"enum",value:[{value:"'and'",computed:!1},{value:"'or'",computed:!1}],required:!0},label:{name:"string",required:!0},secondaryLabel:{name:"string",required:!1}}}}}}};export{de as C,W as H,Ne as N};
