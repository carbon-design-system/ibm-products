import{d as l,P as r}from"./index-5As4T26e.js";import{p as ne,B as E}from"./settings-DbzZchXt.js";import{C as be,M as he,a as ye,b as Ne}from"./ComposedModal-DuX0rG4s.js";import{F as Ee}from"./FlexGrid-SGz1UDZT.js";import{R as ve}from"./Row-DLmrX-g2.js";import{C as K}from"./Column-1L-H8Axx.js";import{P as U,a as X}from"./ProgressIndicator-DKNWUMpg.js";import{e,r as a}from"./index-DzvNrmz8.js";import{c as Y}from"./clamp-CsXXRQhr.js";import{g as Z}from"./devtools-CskDVa8y.js";import{C as ee}from"./Carousel-Cc3QlNR6.js";import{A as te}from"./bucket-0-C6v-wDs9.js";const t=`${ne.prefix}--interstitial-screen`,I=`${t}--internal-header`,Ce=`${t}--internal-body`,w="InterstitialScreen",o={closeIconDescription:"Close",domainName:"",hideProgressIndicator:!1,interstitialAriaLabel:"Interstitial screen",isFullScreen:!1,isOpen:!1,nextButtonLabel:"Next",onClose:()=>{},previousButtonLabel:"Back",productName:"",skipButtonLabel:"",startButtonLabel:"Get started"};let v=e.forwardRef((re,q)=>{const{children:c,className:R,closeIconDescription:ae=o.closeIconDescription,domainName:F=o.domainName,hideProgressIndicator:M=o.hideProgressIndicator,interstitialAriaLabel:A=o.interstitialAriaLabel,isFullScreen:h=o.isFullScreen,isOpen:d=o.isOpen,renderMedia:C,breakpointsWithMedia:p,nextButtonLabel:z=o.nextButtonLabel,onClose:$=o.onClose,previousButtonLabel:O=o.previousButtonLabel,productName:D=o.productName,headerClassName:_,headerTitle:u,startButtonLabel:k=o.startButtonLabel,skipButtonLabel:L=o.skipButtonLabel,...W}=re,se=a.useRef(null),oe=q||se,T=a.useRef(void 0),P=a.useRef(void 0),S=a.useRef(void 0),[le,ie]=a.useState(null),[i,y]=a.useState(0),g=a.Children.toArray(c),m=g.length>1,V=a.useRef(null),f={xlg:(p==null?void 0:p.xlg)||0,lg:(p==null?void 0:p.lg)||0,md:0,sm:0},B={xlg:16-f.xlg,lg:16-f.lg,md:8,sm:4},ce=h?`${t}--full-screen`:`${t}--modal`,j=0,x=g.length-1,b=a.useCallback(()=>{y(0),$()},[$]),G=()=>{var n,s;(s=(n=V.current)==null?void 0:n.scroll)==null||s.call(n,{top:0,behavior:"smooth"})},me=()=>{const n=Y(i-1,j,x);T.current.scrollPrev(),G(),y(n)},de=()=>{const n=Y(i+1,j,x);T.current.scrollNext(),G(),y(n)};a.useEffect(()=>{var n;d||y(0),(n=P.current)==null||n.focus()},[d,i,$]),a.useEffect(()=>{var n;ie(!h&&d?"is-visible":null),(n=S==null?void 0:S.current)==null||n.focus()},[h,d]),a.useEffect(()=>{const n=s=>{const{key:N}=s;N==="Escape"&&b()};return window.addEventListener("keydown",n),()=>window.removeEventListener("keydown",n)},[b]);const pe=a.useMemo(()=>c&&a.Children.count(c)>1?parseFloat((1/(a.Children.count(c)-1)).toFixed(2)):0,[c]);if(!d)return null;const ue=F!==""&&D!==""?" | ":"",ge=n=>e.createElement(be,{...W,preventCloseOnClickOutside:!0,className:l(t,R),size:"lg",onClose:b,open:d,ref:oe,"aria-label":A,...Z(w)},e.createElement(he,{className:l(I,u&&`${I}--has-title`,_),iconDescription:ae},u&&e.createElement("h2",null,u),!M&&e.createElement("div",{className:`${t}--progress`},e.createElement(U,{vertical:!1,currentIndex:i},g.map((s,N)=>{if(a.isValidElement(s))return e.createElement(X,{key:N,label:s.props.stepTitle||"",translateWithId:s.props.translateWithId})})))),e.createElement(ye,{className:Ce},n),e.createElement(Ne,null,J())),fe=n=>e.createElement("div",{...W,className:l(t,R,ce,le),role:"main","aria-label":A,ref:q,...Z(w)},e.createElement("div",{className:l([{[`${t}--container`]:h}])},e.createElement("div",{className:`${t}--header`},F,ue,e.createElement("strong",null,D)),e.createElement("header",{className:l(I,u&&`${I}--has-title`,_)},u&&e.createElement("h2",null,u),!M&&e.createElement("div",{className:`${t}--progress`},e.createElement(U,{vertical:!1,currentIndex:i},g.map((s,N)=>{if(a.isValidElement(s))return e.createElement(X,{key:N,label:s.props.stepTitle||"",translateWithId:s.props.translateWithId})})))),n,J())),H=n=>{const s=n/pe;y(Math.ceil(s))},Q=()=>e.createElement("div",{className:l(`${t}--body`),ref:V,tabIndex:0},C?e.createElement(Ee,{fullWidth:!0,className:l(`${t}--body-grid`)},e.createElement(ve,{className:l(`${t}--body-row`)},e.createElement(K,{xlg:B.xlg,lg:B.lg,md:B.md,sm:B.sm},e.createElement("div",{className:l(`${t}--content`)},m?e.createElement("div",{className:`${t}__carousel`},e.createElement(ee,{disableArrowScroll:!0,ref:T,onScroll:H},c)):g[0])),C&&e.createElement(K,{xlg:f.xlg,lg:f.lg,md:f.md,sm:f.sm,className:l(`${t}--media-container`)},e.createElement("div",{className:`${t}--media`},C&&e.createElement("div",{className:`${t}--stepped-animated-media`},C({playStep:i})))))):e.createElement("div",{className:l(`${t}--content`)},m?e.createElement("div",{className:`${t}__carousel`},e.createElement(ee,{disableArrowScroll:!0,ref:T,onScroll:H},c)):e.createElement("div",null,g[0]))),J=()=>e.createElement("div",{className:`${t}--footer`},m&&L!==""&&e.createElement(E,{className:`${t}--skip-btn`,kind:"ghost",size:"lg",title:L,onClick:b},L),e.createElement("div",{className:`${t}--footer-controls`},m&&i>0&&e.createElement(E,{className:`${t}--prev-btn`,kind:"secondary",size:"lg",title:O,onClick:me},O),m&&i<x&&e.createElement(E,{className:`${t}--next-btn`,renderIcon:te,ref:S,size:"lg",title:z,onClick:de},z),m&&i===x&&e.createElement(E,{className:`${t}--start-btn`,ref:P,renderIcon:te,size:"lg",title:k,onClick:b},k),!m&&e.createElement(E,{className:`${t}--start-btn`,ref:P,size:"lg",title:k,onClick:b},k)));return h?fe(Q()):ge(Q())});v=ne.checkComponentEnabled(v,w);v.displayName=w;v.propTypes={breakpointsWithMedia:r.object,children:r.node.isRequired,className:r.string,closeIconDescription:r.string,domainName:r.string,headerClassName:r.string,headerTitle:r.string,hideProgressIndicator:r.bool,interstitialAriaLabel:r.string,isFullScreen:r.bool,isOpen:r.bool,nextButtonLabel:r.string,onClose:r.func,previousButtonLabel:r.string,productName:r.string,renderMedia:r.func,skipButtonLabel:r.string,startButtonLabel:r.string};v.__docgenInfo={description:`InterstitialScreen can be a full page or an overlay, and are
shown on the first time a user accesses a new experience
(e.g. upon first login or first time opening a page where a
newly purchased capability is presented).`,methods:[],displayName:"InterstitialScreen",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Provide the contents of the InterstitialScreen.",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},closeIconDescription:{required:!1,tsType:{name:"string"},description:"Tooltip text and aria label for the Close button icon.",type:{name:"string"}},domainName:{required:!1,tsType:{name:"string"},description:'The domain this app belongs to, e.g. "IBM Cloud Pak".',type:{name:"string"}},headerClassName:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the <header> element >.",type:{name:"string"}},headerTitle:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the <header> element >.",type:{name:"string"}},hideProgressIndicator:{required:!1,tsType:{name:"boolean"},description:"Optional parameter to hide the progress indicator when multiple steps are used.",type:{name:"bool"}},interstitialAriaLabel:{required:!1,tsType:{name:"string"},description:"The aria label applied to the Interstitial Screen component",type:{name:"string"}},isFullScreen:{required:!1,tsType:{name:"boolean"},description:`Specifies whether the component is shown as a full-screen
experience, else it is shown as a modal by default.`,type:{name:"bool"}},isOpen:{required:!1,tsType:{name:"boolean"},description:"Specifies whether the component is currently open.",type:{name:"bool"}},renderMedia:{required:!1,tsType:{name:"signature",type:"function",raw:"(params) => ReactNode",signature:{arguments:[{name:"params"}],return:{name:"ReactNode"}}},description:"Optional prop to render any media like images or any animated media.",type:{name:"func"}},breakpointsWithMedia:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  xlg?: number;
  lg?: number;
}`,signature:{properties:[{key:"xlg",value:{name:"number",required:!1}},{key:"lg",value:{name:"number",required:!1}}]}},description:`optional prop to specify breakpoints when media is rendered through renderMedia
Breakpoints are used to set the media content column size as well as the remainder for the main content areas column size.
Medium and small breakpoints will be set to 0 internally to focus on the main content area.`,type:{name:"object"}},nextButtonLabel:{required:!1,tsType:{name:"string"},description:"The label for the Next button.",type:{name:"string"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function to call when the close button is clicked.",type:{name:"func"}},previousButtonLabel:{required:!1,tsType:{name:"string"},description:"The label for the Previous button.",type:{name:"string"}},productName:{required:!1,tsType:{name:"string"},description:'The name of this app, e.g. "QRadar".',type:{name:"string"}},skipButtonLabel:{required:!1,tsType:{name:"string"},description:"The label for the skip button.",type:{name:"string"}},startButtonLabel:{required:!1,tsType:{name:"string"},description:"The label for the start button.",type:{name:"string"}}},composes:["PropsWithChildren"]};export{v as I};
