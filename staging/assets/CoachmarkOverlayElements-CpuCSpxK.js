import{r as m,e as t}from"./index-DxDX2vOa.js";import{u as ce}from"./uuidv4-BQrI85uz.js";import{c as E,C as re,P as n}from"./index-B_euquWE.js";import{g as X}from"./devtools-BlxCaI1L.js";import{p as v,B,a as ue}from"./settings-0ThqPtR3.js";import{c as me}from"./bucket-5-nfnHYhtc.js";import{u as de}from"./useIsomorphicEffect-BPCmBl9Y.js";import{l as A}from"./lodash-C6Eq4oiK.js";import{S as pe}from"./SteppedAnimatedMedia-CCRxZAru.js";import{C as fe}from"./Carousel-CwCpn3uR.js";var he=(e=>(e.DEFAULT="default",e))(he||{}),P=(e=>(e.TOOLTIP="tooltip",e.FLOATING="floating",e.FIXED="fixed",e.STACKED="stacked",e))(P||{}),g=(e=>(e.BOTTOM="bottom",e.BOTTOM_LEFT="bottom-left",e.BOTTOM_RIGHT="bottom-right",e.LEFT="left",e.LEFT_TOP="left-top",e.LEFT_BOTTOM="left-bottom",e.RIGHT="right",e.RIGHT_TOP="right-top",e.RIGHT_BOTTOM="right-bottom",e.TOP="top",e.TOP_LEFT="top-left",e.TOP_RIGHT="top-right",e))(g||{});const ye=m.createContext(),le=()=>m.useContext(ye),ee=`${v.prefix}--coachmark-dragbar`,te=`${v.prefix}--coachmark-overlay`,Q="CoachmarkDragbar",R={closeIconDescription:"Close",onDrag:()=>{},onClose:()=>{},showCloseButton:!0,theme:"light"};let I=t.forwardRef(({a11yKeyboardHandler:e,closeIconDescription:d=R.closeIconDescription,onClose:l=R.onClose,onDrag:a=R.onDrag,showCloseButton:s=R.showCloseButton,theme:i=R.theme,...p},k)=>{const[$,D]=m.useState(!1);m.useEffect(()=>{const f=()=>D(!1);return window.addEventListener("mouseup",f),()=>{window.removeEventListener("mouseup",f)}},[]),m.useEffect(()=>{const f=b=>{a(b.movementX,b.movementY)};return $&&window.addEventListener("mousemove",f),()=>{window.removeEventListener("mousemove",f)}},[$,a]);const h=()=>D(!0);return t.createElement("header",{...p,className:E(ee,`${ee}__${i}`,{}),ref:k,...X(Q)},t.createElement("button",{type:"button",className:`${te}__handle`,onMouseDown:h,onKeyDown:e,title:"Drag Handle"},t.createElement(me,{size:"16"})),s&&t.createElement(B,{kind:"ghost",size:"sm",renderIcon:re,iconDescription:d,hasIconOnly:!0,className:`${te}--close-btn`,onClick:l}))});I=v.checkComponentEnabled(I,Q);I.displayName=Q;I.propTypes={a11yKeyboardHandler:n.func.isRequired,closeIconDescription:n.string,onClose:n.func,onDrag:n.func,showCloseButton:n.bool,theme:n.oneOf(["light","dark"])};I.__docgenInfo={description:`DO NOT USE. This component is for the exclusive use
of other Onboarding components.`,methods:[],displayName:"CoachmarkDragbar",props:{closeIconDescription:{defaultValue:{value:"'Close'",computed:!1},description:"Tooltip text and aria label for the Close button icon.",type:{name:"string"},required:!1},onClose:{defaultValue:{value:"() => {}",computed:!1},description:"Function to call when the close button is clicked.",type:{name:"func"},required:!1},onDrag:{defaultValue:{value:"() => {}",computed:!1},description:`Function to call when the user clicks and drags the Coachmark.
For internal use only by the parent CoachmarkOverlay.`,type:{name:"func"},required:!1},showCloseButton:{defaultValue:{value:"true",computed:!1},description:'Show/hide the "X" close button.',type:{name:"bool"},required:!1},theme:{defaultValue:{value:"'light'",computed:!1},description:"Determines the theme of the component.",type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]},required:!1},a11yKeyboardHandler:{description:"Handler to manage keyboard interactions with the dragbar.",type:{name:"func"},required:!0}}};const oe=`${v.prefix}--coachmark-header`,ne=`${v.prefix}--coachmark-overlay`,Z="CoachmarkHeader",j={closeIconDescription:"Close",onClose:()=>{},showCloseButton:!0,theme:"light"};let S=t.forwardRef(({closeIconDescription:e=j.closeIconDescription,onClose:d=j.onClose,showCloseButton:l=j.showCloseButton,theme:a=j.theme,...s},i)=>t.createElement("header",{...s,className:E(oe,`${oe}__${a}`),ref:i,...X(Z)},l&&t.createElement("div",{className:`${ne}--close-btn-container`},t.createElement(B,{kind:"ghost",size:"sm",renderIcon:re,iconDescription:e,hasIconOnly:!0,className:`${ne}--close-btn`,onClick:d}))));S=v.checkComponentEnabled(S,Z);S.displayName=Z;S.propTypes={closeIconDescription:n.string,onClose:n.func,showCloseButton:n.bool,theme:n.oneOf(["light","dark"])};S.__docgenInfo={description:`DO NOT USE. This component is for the exclusive use
of other Onboarding components.`,methods:[],displayName:"CoachmarkHeader",props:{closeIconDescription:{defaultValue:{value:"'Close'",computed:!1},description:"Tooltip text and aria label for the Close button icon.",type:{name:"string"},required:!1},onClose:{defaultValue:{value:"() => {}",computed:!1},description:"Function to call when the close button is clicked.",type:{name:"func"},required:!1},showCloseButton:{defaultValue:{value:"true",computed:!1},description:'Show/hide the "X" close button.',type:{name:"bool"},required:!1},theme:{defaultValue:{value:"'light'",computed:!1},description:"Determines the theme of the component.",type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]},required:!1}}};const ge=(e,d)=>{const{width:l,height:a}=e.targetRect,s=24;let i=0,p=0;if(d!==P.TOOLTIP)switch(e.align){case g.TOP:p=l/2;break;case g.TOP_LEFT:p=s;break;case g.TOP_RIGHT:p=l-s;break;case g.BOTTOM:i=a,p=l/2;break;case g.BOTTOM_LEFT:i=a,p=s;break;case g.BOTTOM_RIGHT:i=a,p=l-s;break;case g.LEFT:i=a/2;break;case g.LEFT_TOP:i=s;break;case g.LEFT_BOTTOM:i=a-s;break;case g.RIGHT:i=a/2,p=l;break;case g.RIGHT_TOP:i=s,p=l;break;case g.RIGHT_BOTTOM:i=a-s,p=l;break}return{top:i,left:p}},w=`${v.prefix}--coachmark-overlay`,K="CoachmarkOverlay",ae={kind:P.FLOATING,theme:"light"};let z=m.forwardRef(({children:e,onClose:d,fixedIsVisible:l,className:a,kind:s=ae.kind,theme:i=ae.theme,...p},k)=>{const{winHeight:$,winWidth:D}=be(),[h,f]=m.useState(!1),b=m.useRef(null),T=le(),y=s===P.TOOLTIP,O=s===P.FLOATING,F=a==null?void 0:a.includes("is-visible"),N=r=>{const{shiftKey:u,key:o}=r;if(o==="Enter"||o===" ")f(c=>!c);else if(h){const c=u?128:32;switch(o){case"ArrowLeft":C(c*-1,0);break;case"ArrowRight":C(c,0);break;case"ArrowUp":C(0,c*-1);break;case"ArrowDown":C(0,c);break}}},x=m.useMemo(()=>{const r={};if((y||O)&&(T.targetRect&&(r.left=T.targetRect.x+window.scrollX,r.top=T.targetRect.y+window.scrollY),r.left&&r.top&&(y&&(r.left=r.left+16,r.top=r.top+16),O))){const u=ge(T,s);r.left=r.left+u.left,r.top=r.top+u.top}return r},[y,O,T,s]);function V(r,u){let o=r,c=u;const G=D-288,U=$-150;return o<0?o=0:o>G&&(o=G),c<0?c=0:c>U&&(c=U),{targetX:o,targetY:c}}function C(r,u){const o=b.current;if(!o)return;const{x:c,y:G}=o.getBoundingClientRect(),{targetX:U,targetY:ie}=V(c+r,G+u);o.style.transform="none",o.style.position="fixed",o.style.left=`${U}px`,o.style.top=`${ie}px`,o.style.bottom="auto"}const _=ce();return de(()=>{var r;if(b.current){const u=(r=b.current)==null?void 0:r.style;Object.keys(x).forEach(o=>{const c=x[o];u.setProperty(o,`${c}px`)})}},[x,b]),t.createElement("div",{...p,className:E(w,`${w}--${s}`,`${w}__${i}`,(y||O)&&`${w}--${T.align}`,l&&`${w}--is-visible`,h&&`${w}--is-dragmode`,a),ref:b,"aria-labelledby":_,tabIndex:-1,...X(K)},O?t.createElement(I,{a11yKeyboardHandler:N,onBlur:()=>f(!1),onDrag:C,theme:i,onClose:d}):t.createElement(S,{onClose:d}),t.createElement("div",{className:`${w}__body`,ref:k,id:_},t.Children.map(e,r=>t.cloneElement(r,{isVisible:F}))))});function se(){const{innerWidth:e,innerHeight:d}=window;return{winWidth:e,winHeight:d}}const be=()=>{const[e,d]=m.useState(se());return m.useEffect(()=>{function l(){d(se())}return window.addEventListener("resize",l),()=>window.removeEventListener("resize",l)},[]),e};z=v.checkComponentEnabled(z,K);z.displayName=K;z.propTypes={children:n.node.isRequired,className:n.string,fixedIsVisible:n.bool.isRequired,kind:n.oneOf(Object.values(P)),onClose:n.func.isRequired,theme:n.oneOf(["light","dark"])};z.__docgenInfo={description:`DO NOT USE. This component is for the exclusive use
of other Onboarding components.`,methods:[],displayName:"CoachmarkOverlay",props:{kind:{defaultValue:{value:"COACHMARK_OVERLAY_KIND.FLOATING",computed:!0},description:"What kind or style of Coachmark to render.",type:{name:"enum",computed:!0,value:"Object.values(COACHMARK_OVERLAY_KIND)"},required:!1},theme:{defaultValue:{value:"'light'",computed:!1},description:"Determines the theme of the component.",type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]},required:!1},children:{description:`The CoachmarkOverlayElements child components.
Validation is handled in the parent Coachmark component.`,type:{name:"node"},required:!0},className:{description:"Optional class name for this component.",type:{name:"string"},required:!1},fixedIsVisible:{description:`The visibility of CoachmarkOverlay is
managed in the parent Coachmark component.`,type:{name:"bool"},required:!0},onClose:{description:"Function to call when the Coachmark closes.",type:{name:"func"},required:!0}}};const L=`${v.prefix}--coachmark-overlay-element`,M="CoachmarkOverlayElement";let H=t.forwardRef(({button:e,className:d,description:l,title:a,...s},i)=>t.createElement("div",{...s,className:E(L,d,{}),ref:i,...X(M)},t.createElement("div",{className:`${L}__content`},a&&t.createElement("h2",{className:`${L}__title`},a),l&&t.createElement("p",{className:`${L}__body`},l)),e&&t.createElement("div",{className:`${L}__button`},e)));H=v.checkComponentEnabled(H,M);H.displayName=M;H.propTypes={button:n.node,className:n.string,description:n.node.isRequired,title:n.string.isRequired};H.__docgenInfo={description:`Component to be displayed within a CoachmarkOverlayElements container.
Can be used 1 to N number, to display content in a Coachmark's overlay
in a carousel fashion.`,methods:[],displayName:"CoachmarkOverlayElement",props:{button:{description:`An optional button can be rendered below the description.
This can be a link, button, Coachmark button, etc.`,type:{name:"node"},required:!1},className:{description:"Optional class name for this component.",type:{name:"string"},required:!1},description:{description:"The description of the Coachmark.",type:{name:"node"},required:!0},title:{description:"The title of the Coachmark.",type:{name:"string"},required:!0}}};const q=`${v.prefix}--coachmark-overlay-elements`,J="CoachmarkOverlayElements",Y={isVisible:!1,nextButtonText:"Next",previousButtonLabel:"Back",closeButtonLabel:"Got it"};let W=t.forwardRef(({className:e,children:d,isVisible:l=Y.isVisible,media:a,renderMedia:s,nextButtonText:i=Y.nextButtonText,previousButtonLabel:p=Y.previousButtonLabel,closeButtonLabel:k=Y.closeButtonLabel,...$},D)=>{const h=m.useRef(void 0),f=m.useRef(void 0),[b,T]=m.useState(0),[y,O]=m.useState(0),F=le(),N=a||s,x=u=>{y>0&&u===0&&h.current&&setTimeout(()=>{var o;(o=h.current)==null||o.focus()},1e3),O(u)},V=m.Children.count(d),C=0,_=V-1,r=m.useMemo(()=>s==null?void 0:s({playStep:y}),[y,s]);return m.useEffect(()=>{h.current&&h.current.focus()},[]),m.useEffect(()=>{setTimeout(()=>{h.current&&l&&h.current.focus()},100)},[l]),F?t.createElement("section",{...$,className:E(q,e,{}),ref:D,...X(J)},N&&(a==null?void 0:a.render)&&a.render(),N&&(a==null?void 0:a.filePaths)&&t.createElement(pe,{className:`${q}__element-stepped-media`,filePaths:a.filePaths,playStep:y}),N&&s&&t.createElement("div",{className:`${q}__element-stepped-media`},r),V===1?t.createElement(t.Fragment,null,d,k&&t.createElement("div",{className:E(`${q}__footer`,"coachmark-carousel-controls")},t.createElement(B,{size:"sm",...F.closeButtonProps,ref:h},k))):t.createElement(t.Fragment,null,t.createElement(fe,{disableArrowScroll:!0,ref:f,onScroll:u=>{T(u)}},d),t.createElement("div",{className:E(`${q}__footer`)},t.createElement("div",{className:`${q}--controls-progress`},`${y+1} / ${V}`),b>0&&t.createElement(B,{size:"sm",kind:"ghost",title:p,disabled:b===0,onClick:()=>{var o,c;const u=A.clamp(y-1,C,_);(c=(o=f==null?void 0:f.current)==null?void 0:o.scrollToView)==null||c.call(o,u),x(u)}},p),y<_?t.createElement(B,{size:"sm",ref:h,title:i,disabled:b===1,onClick:()=>{var o,c;const u=A.clamp(y+1,C,_);(c=(o=f==null?void 0:f.current)==null?void 0:o.scrollToView)==null||c.call(o,u),x(u)}},i):k&&t.createElement(B,{size:"sm",ref:h,...F.closeButtonProps},k)))):ue.warn(`The ${J} is a composable container element which should be used only within the scope of a Coachmark or a CoachmarkFixed component.`)});W=v.checkComponentEnabled(W,J);W.displayName=J;W.propTypes={children:n.node.isRequired,className:n.string,closeButtonLabel:n.string,isVisible:n.bool,media:n.oneOfType([n.shape({render:n.func}),n.shape({filePaths:n.arrayOf(n.string)})]),nextButtonText:n.string,previousButtonLabel:n.string,renderMedia:n.func};W.__docgenInfo={description:`Composable container to allow for the displaying of CoachmarkOverlayElement
components in a carousel fashion.`,methods:[],displayName:"CoachmarkOverlayElements",props:{isVisible:{defaultValue:{value:"false",computed:!1},description:`The visibility of CoachmarkOverlayElements is
managed in the parent component.`,type:{name:"bool"},required:!1},nextButtonText:{defaultValue:{value:"'Next'",computed:!1},description:"The label for the Next button.",type:{name:"string"},required:!1},previousButtonLabel:{defaultValue:{value:"'Back'",computed:!1},description:"The label for the Previous button.",type:{name:"string"},required:!1},closeButtonLabel:{defaultValue:{value:"'Got it'",computed:!1},description:"The label for the Close button.",type:{name:"string"},required:!1},children:{description:`CoachmarkOverlayElements should be used with one or many CoachmarkOverlayElement components as children.
@see CoachmarkOverlayElement`,type:{name:"node"},required:!0},className:{description:"Optional class name for this component.",type:{name:"string"},required:!1},media:{description:"The object describing an image in one of two shapes.\nIf a single media element is required, use `{render}`.\nIf a stepped animation is required, use `{filePaths}`.\n@deprecated please use the `renderMedia` prop",type:{name:"union",value:[{name:"shape",value:{render:{name:"func",required:!1}}},{name:"shape",value:{filePaths:{name:"arrayOf",value:{name:"string"},required:!1}}}]},required:!1},renderMedia:{description:"Optional prop to render any media like images or animated media.",type:{name:"func"},required:!1}}};export{he as B,P as C,ye as a,z as b,W as c,H as d,S as e,le as u};
