import{e as t,c as R,p,B as d,P as e}from"./iframe-BIFZhnVI.js";import{C as N,M as S,a as w,b as v}from"./ComposedModal-BRvJkANc.js";import{F as x}from"./Form-3TQYYKsy.js";import{g as k}from"./devtools-CwY7Nwoz.js";import{u as E}from"./usePortalTarget-BsUxYanV.js";const i="CreateModal",o=`${p.prefix}--create-modal`;let r=t.forwardRef((m,c)=>{const{className:u,children:h,onRequestClose:s,onRequestSubmit:y,open:f,title:a,subtitle:n,description:l,secondaryButtonText:b,portalTarget:T,primaryButtonText:g,disableSubmit:q,selectorPrimaryFocus:C,...M}=m;return E(T)(t.createElement(N,{...M,selectorPrimaryFocus:C,className:R(o,u),open:f,ref:c,"aria-label":a,size:"sm",preventCloseOnClickOutside:!0,onClose:()=>(s?.(),!1),...k(i)},t.createElement(S,{title:a,titleClassName:`${o}__title`},n&&t.createElement("p",{className:`${o}__subtitle`},n)),t.createElement(w,{hasForm:!0},l&&t.createElement("p",{className:`${o}__description`},l),t.createElement(x,{className:`${o}__form`,"aria-label":a},h)),t.createElement(v,null,t.createElement(d,{type:"button",kind:"secondary",onClick:s},b),t.createElement(d,{type:"submit",kind:"primary",onClick:y,disabled:q},g))))});r=p.checkComponentEnabled(r,i);r.propTypes={children:e.node,className:e.string,description:e.node.isRequired,disableSubmit:e.bool,onRequestClose:e.func,onRequestSubmit:e.func,open:e.bool,portalTarget:e.node,primaryButtonText:e.string.isRequired,secondaryButtonText:e.string.isRequired,selectorPrimaryFocus:e.string.isRequired,subtitle:e.node,title:e.node.isRequired};r.displayName=i;r.__docgenInfo={description:`The \`CreateModal\` component provides a way for a user to quickly generate a new
resource. It is triggered by a userâ€™s action, appears on top of the main page
content, and is persistent until dismissed. The purpose of this modal should be
immediately apparent to the user, with a clear and obvious path to completion.`,methods:[],displayName:"CreateModal",props:{className:{required:!1,tsType:{name:"string"},description:"Specify an optional className to be applied to the modal root node",type:{name:"string"}},open:{required:!1,tsType:{name:"boolean"},description:"Specifies whether the CreateModal is open or not.",type:{name:"bool"}},title:{required:!0,tsType:{name:"ReactNode"},description:"The title of the CreateModal is usually the product or service name.",type:{name:"node"}},subtitle:{required:!1,tsType:{name:"ReactNode"},description:"The subtitle of the CreateModal is optional and serves to provide more information about the modal.",type:{name:"node"}},description:{required:!0,tsType:{name:"ReactNode"},description:"The description of the CreateModal serves to provide more information about the modal.",type:{name:"node"}},secondaryButtonText:{required:!0,tsType:{name:"string"},description:"Specifies the secondary button's text in the modal.",type:{name:"string"}},portalTarget:{required:!1,tsType:{name:"ReactNode"},description:"The DOM node the tearsheet should be rendered within. Defaults to document.body.",type:{name:"node"}},primaryButtonText:{required:!0,tsType:{name:"string"},description:"Specifies the primary button's text in the modal.",type:{name:"string"}},disableSubmit:{required:!1,tsType:{name:"boolean"},description:"Specifies a boolean for disabling or enabling the primary button. This is important for form validation\nReturning `true` prevents the primary button from being clicked until required fields are completed.",type:{name:"bool"}},selectorPrimaryFocus:{required:!0,tsType:{name:"string"},description:"Specifies which DOM element in the form should be focused.",type:{name:"string"}},children:{description:"Children refers to all form items within a form inside of the modal's body.",type:{name:"node"},required:!1},onRequestClose:{description:`Specifies an optional handler which is called when the CreateModal
is closed.`,type:{name:"func"},required:!1},onRequestSubmit:{description:`Specifies an optional handler which is called when the CreateModal
primary button is pressed.`,type:{name:"func"},required:!1}},composes:["PropsWithChildren"]};export{r as C};
