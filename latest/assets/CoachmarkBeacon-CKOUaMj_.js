import{P as o}from"./index-Dk74W0Oi.js";import{R as e}from"./index-BwDkhjyp.js";import{c as u}from"./index-CQ0F2wkl.js";import{g as d}from"./devtools-Bz70ioU6.js";import{p as c}from"./settings-xiNX1vM3.js";import{u as f}from"./CoachmarkOverlayElements-Bqrc-vO0.js";const t=`${c.prefix}--coachmark-beacon`,r="CoachmarkBeacon",h={kind:"default"};let a=e.forwardRef(({label:n,className:l,kind:m=h.kind,...i},p)=>{const s=f();return s?e.createElement("span",{...i,className:u(t,`${t}-${m}`,l),ref:p,...d(r),role:"tooltip"},e.createElement("button",{tabIndex:0,type:"button",...s.buttonProps,className:`${t}__target`},e.createElement("svg",{className:`${t}__center`,"aria-label":n},e.createElement("title",null,n),e.createElement("circle",{r:1,cx:38,cy:38})))):e.createElement("div",null,"CoachmarkBeacon is to be use exclusively within the target prop of Coachmark")});a=c.checkComponentEnabled(a,r);a.displayName=r;a.propTypes={className:o.string,kind:o.oneOf(["default"]),label:o.string.isRequired};a.__docgenInfo={description:"Use beacon for the target prop of a Coachmark component.",methods:[],displayName:"CoachmarkBeacon",props:{kind:{defaultValue:{value:"'default'",computed:!1},description:`What style of beacon.
BEACON_KIND is an exported enum from the Coachmark and can be used for this value.
@see {@link BEACON_KIND}`,type:{name:"enum",value:[{value:"'default'",computed:!1}]},required:!1},className:{description:"Optional class name for this component.",type:{name:"string"},required:!1},label:{description:"The aria label.",type:{name:"string"},required:!0}}};export{a as C};
