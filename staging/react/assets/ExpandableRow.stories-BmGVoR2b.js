import{e as i,S as u,r as x}from"./iframe-Cff_uvRq.js";import{g}from"./getBatchActions-bmHgj9Nk.js";import{s as w,m as E}from"./_storybook-styles-DoDUiXs9.js";import{D as f}from"./DatagridActions-BBmzZw19.js";import{D as S}from"./DatagridPagination-D-T-GEtw.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-BsKXOQhy.js";import{u as h}from"./useExpandedRow-B3KjpFGr.js";import{u as D}from"./useSelectRows-CejnUYwD.js";import{u as C}from"./useStickyColumn-CKVh2UOR.js";import{u as R}from"./usePrefix-B5ikK56s.js";import{E as H}from"./bucket-6-Bvs71sA4.js";import{T as b}from"./bucket-18-DKBL0two.js";import"./bucket-0-BHUvdcmU.js";import"./bucket-2-DFOEsNXn.js";import"./index-A0BY4CbF.js";import"./bucket-7-BBQiCCMO.js";import"./bucket-19-rzwpXw_n.js";import"./ComposedModal-CLMfRped.js";import"./index-BEhuL1MR.js";import"./index-BbMc6LY2.js";import"./LayerContext-aHU3kOUM.js";import"./clamp--00YEiB8.js";import"./ButtonSet-BsWxyNA0.js";import"./InlineLoading-Xj1uHorY.js";import"./mergeRefs-D4pwfk3t.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-C0YgiTtk.js";import"./Text-BeripsbQ.js";import"./utils-DxZkHSRU.js";import"./TableToolbarSearch-CMcNT0bV.js";import"./wrapComponent-CVCUSENg.js";import"./Search-BvuodLuk.js";import"./FormContext-Bz91-0Aj.js";import"./bucket-15-CPqQg4NJ.js";import"./Dropdown-DvdXtL-Z.js";import"./index-DPBR-kvc.js";import"./inheritsLoose-DHKJTbHM.js";import"./MenuItem-DD03fVLn.js";import"./useControllableState-Ch9LF6fw.js";import"./useAttachedMenu-DpgeAf5_.js";import"./index-BZcBv8El.js";import"./index-Bb_U4bQM.js";import"./bucket-13-BlWKUG9u.js";import"./useOutsideClick-ogqAkNhv.js";import"./OverflowMenuItem-DzcA6dIy.js";import"./useFilterContext-BPGPM2fu.js";import"./bucket-14-BS7hPKin.js";import"./Pagination-CWQA21zn.js";import"./Select-DggTCVP-.js";import"./SelectItem-DHgzbuIU.js";import"./MultiSelect-BOGN5svO.js";import"./Checkbox-BB_T_On_.js";import"./devtools-CBto78fy.js";import"./TableRow-BhNSqxZo.js";import"./bucket-1-Cn2Vz24_.js";import"./TableToolbar-D6iB3_vq.js";import"./index-zgZhWPlI.js";import"./ErrorEmptyState-CGcUWn7O.js";import"./EmptyState-DgZd044g.js";import"./EmptyStateV2.deprecated-D7X5CUrb.js";import"./Link-BiS54jbp.js";import"./ErrorIllustration-C3iaufbG.js";import"./useId-QkOHumEp.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-DGuOpy4Z.js";import"./NoDataIllustration-C1SQ5hMp.js";import"./NotFoundEmptyState-BqQxw90R.js";import"./NotFoundIllustration-CA56_qWn.js";import"./index.esm-D88yBwuJ.js";import"./usePreviousValue-CRGd6dk3.js";import"./useResizeObserver-BVjEDJaE.js";import"./useIsomorphicEffect-Dc9ng1CU.js";import"./getFocusableElements-BW7cf991.js";import"./index-DfVNWw9q.js";import"./props-helper-BGCgvcot.js";import"./useClickOutside-D_ffJB1P.js";import"./AccordionItem-Z1gAU3Jl.js";import"./DatePicker-D6zSzG4c.js";import"./FormGroup-D6wjMItX.js";import"./NumberInput-BfXXC_uh.js";import"./useNormalizedInputProps-BM2ZcbR9.js";import"./documentLang-E105Y72C.js";import"./bucket-16-DYaMwKSM.js";import"./RadioButton-rc8OeF9C.js";import"./RadioButtonGroup-C4nRYsc2.js";import"./usePrefersReducedMotion-DdXGT2yu.js";import"./usePresence-DoPIX10u.js";import"./ActionSet-Dwek2kBo.js";import"./useWindowResize-BGm2n6oI.js";import"./TagSet-DVrsmARa.js";import"./Tag-wjfQ9aRE.js";import"./DefinitionTooltip-C-WJpm3J.js";import"./DismissibleTag-C3Le-g1Y.js";import"./usePortalTarget-Bg_OfAIC.js";import"./OperationalTag-BfbVw8PI.js";import"./SkeletonText-DpJZDqeY.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-CxmEXPfI.js";import"./TableSelectRow-B8_IWBq6.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,Ht={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const bt=["ExpandableRowStory"];export{e as ExpandableRowStory,bt as __namedExportsOrder,Ht as default};
