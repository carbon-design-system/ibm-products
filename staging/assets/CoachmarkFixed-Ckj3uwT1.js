import{e as r,r as e}from"./index-DtHxqM--.js";import{C as A,a as B,b as L}from"./CoachmarkOverlayElements-C4A3WGMu.js";import{C as M}from"./CoachmarkTagline-C_ZGh03W.js";import{d as b,P as s}from"./index-C360Eztx.js";import{r as K}from"./index-DgLvjnYm.js";import{g as H}from"./devtools-XPxnGn1y.js";import{p as w}from"./settings-CFkY3W_8.js";import{u as U}from"./usePrefersReducedMotion-DvL5kgOM.js";import{u as W}from"./useIsomorphicEffect-DztsuiUB.js";const T=`${w.prefix}--coachmark`,x=`${T}-fixed`,E=`${T}-overlay`,f="CoachmarkFixed",d={onClose:()=>{},theme:"light",tagline:""};let i=r.forwardRef(({children:R,className:q,onClose:p=d.onClose,portalTarget:c,tagline:O=d.tagline,theme:h=d.theme,...S},P)=>{const F=e.useRef(null),t=e.useRef(null),[n,o]=e.useState(!1),[g,y]=e.useState(!1),[I,D]=e.useState(),[N,V]=e.useState({x:0,y:0}),[m,C]=e.useState(!1),k=U();W(()=>{t.current=c?(document==null?void 0:document.querySelector(c))??(document==null?void 0:document.querySelector("body")):document==null?void 0:document.querySelector("body")},[c]);const l=e.useCallback(()=>{k?o(!1):C(!1)},[k]),_=a=>{a.propertyName==="transform"&&!m&&(o(!1),p())},v=a=>{D(a.target.getBoundingClientRect()),V({x:a.target.offsetLeft,y:a.target.offsetTop}),o(!1),y(!0)},u=e.useCallback(a=>{a.key==="Escape"&&l()},[l]);e.useEffect(()=>(document.addEventListener("keydown",u,!1),()=>{document.removeEventListener("keydown",u,!1)}),[u]);const $={buttonProps:{"aria-expanded":n,tabIndex:0,onClick:v,onDoubleClick:v},closeButtonProps:{onClick:l},targetRect:I,targetOffset:N,isOpen:n,tacos:"tacos"};return e.useEffect(()=>{g&&(y(!1),o(!0))},[g]),e.useEffect(()=>{C(n)},[n]),e.useEffect(()=>()=>o(!1),[]),r.createElement(A.Provider,{value:$},r.createElement("div",{...S,className:b(x,`${x}__${h}`,q),ref:P,...H(f)},r.createElement(M,{title:O,onClose:p}),n&&(t==null?void 0:t.current)&&K.createPortal(r.createElement(B,{ref:F,fixedIsVisible:m,kind:L.FIXED,onClose:l,onTransitionEnd:_,theme:h,className:b(m&&`${E}--is-visible`,E)},R),t==null?void 0:t.current)))});i=w.checkComponentEnabled(i,f);i.displayName=f;i.propTypes={children:s.node.isRequired,className:s.string,onClose:s.func,portalTarget:s.string,tagline:s.string.isRequired,theme:s.oneOf(["light","dark"])};i.__docgenInfo={description:`Fixed coachmarks are used to call out specific functionality or concepts
within the UI that may not be intuitive but are important for the
user to gain understanding of the product's main value and discover new use cases.
This variant allows the a coachmark overlay to be displayed by interacting with the tagline.`,methods:[],displayName:"CoachmarkFixed",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"CoachmarkFixed should use a single CoachmarkOverlayElements component as a child.",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Optional class name for this component.",type:{name:"string"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function to call when the Coachmark closes.",defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},portalTarget:{required:!1,tsType:{name:"string"},description:`By default, the Coachmark will be appended to the end of \`document.body\`.
The Coachmark will remain persistent as the user navigates the app until
the user closes the Coachmark.

Alternatively, the app developer can tightly couple the Coachmark to a DOM
element or other component by specifying a CSS selector. The Coachmark will
remain visible as long as that element remains visible or mounted. When the
element is hidden or component is unmounted, the Coachmark will disappear.`,type:{name:"string"}},tagline:{required:!1,tsType:{name:"string"},description:"The tagline title which will be fixed to the bottom right of the window and will serve as the display trigger.",defaultValue:{value:"''",computed:!1},type:{name:"string"}},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Determines the theme of the component.",defaultValue:{value:"'light'",computed:!1},type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]}}}};export{i as C};
