import{p as Me,u as sn,e as t,N as un,c as K,P as e,r as m,W as mn,X as dn,C as We,B as ze,G as pn,H as cn,n as Ze}from"./iframe-DaJ7qZFz.js";import{T as gn,a as Ge,S as yn,V as fn}from"./TimePickerSelect-DsoB8Kts.js";import{g as vn}from"./devtools-fyD2yDo2.js";import{S as he,H as qe}from"./index-Aneys0Pd.js";import{L as bn}from"./index-BpcqVyGu.js";import{a as wn}from"./bucket-19-CTkSN82q.js";import{u as U}from"./uuidv4-BN2rGLQG.js";import{A as Ke,q as Tn}from"./bucket-0-CrmspZNA.js";import{S as Ue}from"./Search-C1j5IXK_.js";import{N as Cn}from"./NumberInput-DZyvCCBG.js";import{T as hn}from"./TextArea-BD9LkPhX.js";import{T as qn}from"./TextInput-B4NuogqA.js";import{D as Be,a as be}from"./DatePicker-BUr2r0lY.js";import{S as we}from"./SelectItem-7Acv_LuD.js";import{W as Ye}from"./bucket-17-B_zXmHYU.js";import{B as An}from"./bucket-1-BS6eur1g.js";const a=`${Me.prefix}--condition-builder`,Ae="Non-Hierarchical",W="Hierarchical",X=(n,r)=>{if(n){const i=n.target,o=n.target.closest('[role="row"]'),s=n.target.closest('[role="gridcell"]')?.querySelector("button").dataset.name;setTimeout(()=>{const l=o.querySelector(`button[data-name="${s}"]`);M(l,r),document.contains(i)&&(n.target.closest('[role="gridcell"]')?.querySelector("button")?.click(),n.target.closest('[role="gridcell"]')?.querySelector("button")?.focus())},0)}},Q=(n,r)=>{setTimeout(()=>{M(n,r)},0)},Te=(n,r,i,o,s,l)=>{n==document.activeElement?r!==i.length-1?Q(i[r+1],l):Q(i[o?0:i.length-1],l):Array.from(i).indexOf(document.activeElement)==-1&&s&&Q(i[0],l)},Ce=(n,r,i,o,s,l)=>{n==document.activeElement?Q(r!==0?i[r-1]:i[o?i.length-1:0],l):Array.from(i).indexOf(document.activeElement)==-1&&s&&Q(i[i.length-1],l)},kn=(n,r)=>n[r],ae=n=>n&&n!=="INVALID",M=(n,r)=>{const i=n?.closest(`.${a}__content-container`)??n?.closest(`.${a}__actions-container`);i&&Array.from(i.querySelectorAll('[tabindex="0"]')).map(o=>o?.setAttribute("tabindex","-1")),n?.setAttribute("tabindex","0"),r.current?.querySelector(`.${a}__statement-button`)?.setAttribute("tabindex","1"),n?.focus()},On=(n,r,i)=>i?.valueFormatter&&["custom"].includes(n)?i.valueFormatter(r):n==="option"&&r&&typeof r!="string"?(Array.isArray(r)?r:[r]).map(s=>s.label).join(", "):r,ke=(n,r)=>n?.operator==="oneOf"||r?.operators?.find(i=>n?.operator===i.id&&i.isMultiSelect),Je=(n,r,i)=>{!n.currentTarget.value&&n.key==="Escape"&&(X(n,r),i?.())},J=({className:n,label:r,hideLabel:i,tooltipAlign:o,renderIcon:s,onClick:l,showToolTip:b,wrapperProps:p,onBlur:w,onFocus:d,onMouseEnter:g,onMouseLeave:A,isInvalid:h,wrapperClassName:T,tabIndex:O,description:C,...v})=>{const q=C||r,u=sn(),x=()=>{const E=v["data-name"]??"";return t.createElement("button",{tabIndex:O!==void 0?O:-1,className:K([n,`${a}__button`,{[`${a}__text-ellipsis`]:b&&!i&&!h},{[`${a}__invalid-input`]:h}]),type:"button",onClick:l,onBlur:w,onFocus:d,onMouseEnter:g,onMouseLeave:A,"data-name":E,...v},s&&t.createElement(s,null),!i&&t.createElement("span",null,r),h&&t.createElement(wn,null))};return i||b||C?t.createElement(un,{label:q,align:o,className:`${T} ${a}__tooltip ${u}--icon-tooltip`,...p,leaveDelayMs:0},x()):t.createElement(t.Fragment,null,x())};J.propTypes={className:e.string,hideLabel:e.bool,isInvalid:e.bool,label:e.string,onBlur:e.func,onClick:e.func,onFocus:e.func,onMouseEnter:e.func,onMouseLeave:e.func,renderIcon:e.oneOfType([e.func,e.object]),showToolTip:e.bool,tabIndex:e.number,tooltipAlign:e.string,wrapperClassName:e.string,wrapperProps:e.object};J.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderButton",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},label:{required:!1,tsType:{name:"string"},description:"label of the button",type:{name:"string"}},hideLabel:{required:!1,tsType:{name:"boolean"},description:"decides if label and tooltip to be hidden",type:{name:"bool"}},tooltipAlign:{required:!1,tsType:{name:"PopoverAlignment"},description:"tooltip position",type:{name:"string"}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:"Optional prop to allow overriding the icon rendering.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"callback triggered on click of add button",type:{name:"func"}},onBlur:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:"mouse events callbacks",type:{name:"func"}},onFocus:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:"",type:{name:"func"}},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"",type:{name:"func"}},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"",type:{name:"func"}},showToolTip:{required:!1,tsType:{name:"boolean"},description:"decides if  tooltip to be shown",type:{name:"bool"}},wrapperProps:{required:!1,tsType:{name:"object"},description:"optional props for tree grid to add role and aria-label to wrapper span",type:{name:"object"}},isInvalid:{required:!1,tsType:{name:"boolean"},description:"boolean to know the updated value in not valid",type:{name:"bool"}},wrapperClassName:{required:!1,tsType:{name:"string"},description:"classname applies to the wrapper of popover",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index",type:{name:"number"}},description:{required:!1,tsType:{name:"string"},description:""}}};const xn={operator:"or",groups:[{groupOperator:"and",statement:"ifAll",id:U(),conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:U()}]}]},D=m.createContext({rootState:{groups:[]}}),Oe=n=>{const[r,i]=m.useState({groups:[]}),[o,s]=m.useState([]),l={rootState:r,setRootState:i,actionState:o,setActionState:s,inputConfig:n.inputConfig,popOverSearchThreshold:n.popOverSearchThreshold,getOptions:n.getOptions,variant:n.variant,translateWithId:n.translateWithId,conditionBuilderRef:n.conditionBuilderRef,statementConfigCustom:n.statementConfigCustom,onAddItem:n.onAddItem};return t.createElement(D.Provider,{value:l},n.children)};Oe.propTypes={children:e.node.isRequired,conditionBuilderRef:e.object,getOptions:e.func,inputConfig:e.shape({properties:e.arrayOf(e.shape({id:e.string.isRequired,label:e.string.isRequired,icon:e.oneOfType([e.func,e.object]),description:e.string,type:e.oneOf(["text","textarea","number","date","option","time","custom"]).isRequired,config:e.shape({options:e.arrayOf(e.shape({id:e.string.isRequired,label:e.string.isRequired,icon:e.oneOfType([e.func,e.object])})),component:e.func,operators:e.arrayOf(e.shape({id:e.string.isRequired,label:e.string.isRequired})),long:e.bool})}))}).isRequired,popOverSearchThreshold:e.number.isRequired,translateWithId:e.func,variant:e.string.isRequired};Oe.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderProvider",props:{rootState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},description:""},setRootState:{required:!1,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}}],raw:"SetStateAction<ConditionBuilderState>"}],raw:"Dispatch<SetStateAction<ConditionBuilderState>>"},description:""},actionState:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:""},setActionState:{required:!1,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"}],raw:"SetStateAction<Action[]>"}],raw:"Dispatch<SetStateAction<Action[]>>"},description:""},onAddItem:{required:!1,tsType:{name:"signature",type:"function",raw:"(config: AddItemConfig) => { preventAdd: boolean }",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  type: AddItemType;
  state: ConditionBuilderState;
  group?: ConditionGroup;
}`,signature:{properties:[{key:"type",value:{name:"union",raw:"'condition' | 'subgroup' | 'group'",elements:[{name:"literal",value:"'condition'"},{name:"literal",value:"'subgroup'"},{name:"literal",value:"'group'"}],required:!0}},{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"group",value:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}}]}},name:"config"}],return:{name:"signature",type:"object",raw:"{ preventAdd: boolean }",signature:{properties:[{key:"preventAdd",value:{name:"boolean",required:!0}}]}}}},description:""},children:{required:!0,tsType:{name:"ReactNode"},description:"Provide the contents of the ConditionBuilder.",type:{name:"node"}},inputConfig:{required:!0,tsType:{name:"signature",type:"object",raw:"{ properties: Property[] }",signature:{properties:[{key:"properties",value:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
} & ConfigType`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}},{key:"description",value:{name:"string",required:!1}},{key:"type",value:{name:"any",required:!1}},{key:"config",value:{name:"any",required:!1}}]}},{name:"union",raw:`| PropertyConfigOption['config']
| PropertyConfigTextArea['config']
| PropertyConfigText['config']
| PropertyConfigNumber['config']
| PropertyConfigDate['config']
| PropertyConfigTime['config']
| PropertyConfigCustom['config']`,elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"PropertyConfigTextArea['config']",raw:"PropertyConfigTextArea['config']"},{name:"PropertyConfigText['config']",raw:"PropertyConfigText['config']"},{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},{name:"intersection",raw:"PropertyConfigDate['config']"},{name:"signature",raw:"PropertyConfigTime['config']"},{name:"signature",raw:"PropertyConfigCustom['config']"}]}]}],raw:"Property[]",required:!0}}]}},description:"This is a mandatory prop that defines the input to the condition builder.",type:{name:"shape",value:{properties:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},description:{name:"string",required:!1},type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'textarea'",computed:!1},{value:"'number'",computed:!1},{value:"'date'",computed:!1},{value:"'option'",computed:!1},{value:"'time'",computed:!1},{value:"'custom'",computed:!1}],required:!0},config:{name:"shape",value:{options:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1}}},required:!1},component:{name:"func",required:!1},operators:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0}}},required:!1},long:{name:"bool",required:!1}},required:!1}}},required:!1}}}},popOverSearchThreshold:{required:!0,tsType:{name:"number"},description:"Provide an mandatory numeric value that will be used to enable search option in the popovers with list.",type:{name:"number"}},getOptions:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  state: ConditionBuilderState,
  condition: Condition
) => Promise<Option[]>`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"},{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}],raw:"Promise<Option[]>"}}},description:`This is an optional callback function that will be triggered when options array is not passed in the inputConfig against a property. 
This can be a asynchronous function that need  to  return a promise, so it will allow to fetch options from API call.
options has to be in valid format
[{
          label: 'label',
          id: 'id',
        },...]`,type:{name:"func"}},variant:{required:!0,tsType:{name:"string"},description:"Provide the condition builder variant: Non-Hierarchical/ Hierarchical",type:{name:"string"}},translateWithId:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: ConditionBuilderTextKeys) => string",signature:{arguments:[{type:{name:"union",raw:`| 'ifText'
| 'unlessText'
| 'excl_if'
| 'and'
| 'or'
| 'is'
| 'ifAll'
| 'ifAny'
| 'unlessAll'
| 'unlessAny'
| 'greater'
| 'greaterEqual'
| 'lower'
| 'lowerEqual'
| 'startsWith'
| 'endsWith'
| 'contains'
| 'oneOf'
| 'before'
| 'after'
| 'between'
| 'addConditionText'
| 'addConditionGroupText'
| 'addSubgroupText'
| 'conditionText'
| 'propertyText'
| 'operatorText'
| 'valueText'
| 'connectorText'
| 'conditionRowText'
| 'conditionRowGroupText'
| 'removeConditionText'
| 'addConditionRowText'
| 'startText'
| 'endText'
| 'clearSearchText'
| 'actionsText'
| 'then'
| 'removeActionText'
| 'addActionText'
| 'invalidText'
| 'invalidNumberWarnText'
| 'conditionBuilderText'
| 'actionSectionText'
| 'conditionHeadingText'
| 'addPropertyText'
| 'addOperatorText'
| 'addValueText'
| 'conditionBuilderHierarchicalText'`,elements:[{name:"literal",value:"'ifText'"},{name:"literal",value:"'unlessText'"},{name:"literal",value:"'excl_if'"},{name:"literal",value:"'and'"},{name:"literal",value:"'or'"},{name:"literal",value:"'is'"},{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"},{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"},{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"literal",value:"'before'"},{name:"literal",value:"'after'"},{name:"literal",value:"'between'"},{name:"literal",value:"'addConditionText'"},{name:"literal",value:"'addConditionGroupText'"},{name:"literal",value:"'addSubgroupText'"},{name:"literal",value:"'conditionText'"},{name:"literal",value:"'propertyText'"},{name:"literal",value:"'operatorText'"},{name:"literal",value:"'valueText'"},{name:"literal",value:"'connectorText'"},{name:"literal",value:"'conditionRowText'"},{name:"literal",value:"'conditionRowGroupText'"},{name:"literal",value:"'removeConditionText'"},{name:"literal",value:"'addConditionRowText'"},{name:"literal",value:"'startText'"},{name:"literal",value:"'endText'"},{name:"literal",value:"'clearSearchText'"},{name:"literal",value:"'actionsText'"},{name:"literal",value:"'then'"},{name:"literal",value:"'removeActionText'"},{name:"literal",value:"'addActionText'"},{name:"literal",value:"'invalidText'"},{name:"literal",value:"'invalidNumberWarnText'"},{name:"literal",value:"'conditionBuilderText'"},{name:"literal",value:"'actionSectionText'"},{name:"literal",value:"'conditionHeadingText'"},{name:"literal",value:"'addPropertyText'"},{name:"literal",value:"'addOperatorText'"},{name:"literal",value:"'addValueText'"},{name:"literal",value:"'conditionBuilderHierarchicalText'"}]},name:"id"}],return:{name:"string"}}},description:`Optional prop if you want to pass translation to the texts used . Otherwise this will the defined defaults.
This callback function will receive the message id and you need to return the corresponding text for that id.
The message key will be one of [   "ifText",   "addConditionText",   "addConditionGroupText",   "addSubgroupText",   "conditionText",   "propertyText",   "operatorText",   "valueText",   "connectorText",   "conditionRowText",   "removeConditionText",   "addConditionRowText",   "startText",   "endText",   "clearSearchText",   "actionsText",   "then",   "removeActionText",   "addActionText",   "invalidText",   "invalidNumberWarnText"
]`,type:{name:"func"}},statementConfigCustom:{required:!1,tsType:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,signature:{properties:[{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}]}],raw:"statementConfig[]"},description:""},conditionBuilderRef:{required:!1,tsType:{name:"ForwardedRef",elements:[{name:"HTMLDivElement"}],raw:"ForwardedRef<HTMLDivElement>"},description:"ref of condition builder",type:{name:"object"}}},composes:["PropsWithChildren"]};const re={ifText:"if",unlessText:"unless",excl_if:"excl.if",and:"and",or:"or",is:"is",ifAll:"if all",ifAny:"if any",unlessAll:"unless all",unlessAny:"unless any",greater:"is greater than",greaterEqual:"is greater than or equal to",lower:"is lower than",lowerEqual:"is lower than or equal to",startsWith:"starts with",endsWith:"ends with",contains:"contains",oneOf:"is one of",before:"is before",after:"is after",between:"is between",addConditionText:"Add condition",addConditionGroupText:"Add condition group",addSubgroupText:"Add subgroup",conditionText:"Condition",propertyText:"Property",operatorText:"Operator",valueText:"Value",connectorText:"Connector",conditionRowText:"Condition row",conditionRowGroupText:"Condition row group",removeConditionText:"Delete condition",addConditionRowText:"Add condition row",startText:"Start",endText:"End",clearSearchText:"Clear search input",actionsText:"Actions",then:"then",removeActionText:"Remove Action",addActionText:"Add action",invalidText:"Incomplete",invalidNumberWarnText:"Invalid number, must be 0 or greater",conditionBuilderText:"Condition Builder",actionSectionText:"Action Section",conditionHeadingText:"Condition",addPropertyText:"Add property",addOperatorText:"Add operator",addValueText:"Add value",conditionBuilderHierarchicalText:"Condition Builder Hierarchical"},G=(n,r)=>{const{translateWithId:i}=m.useContext(D);return n.map(o=>(r?.[o]&&(o=r[o]),i?.(o)&&i?.(o)!==o?i(o):re[o]?re[o]:o))},_n=(n,r,i)=>{document.activeElement.closest(`.${a}__popover`)?.querySelector('[role="dialog"]')||Nn(n,r,i)},En=(n,r,i,o)=>{In(n)||Sn(n,i?.current,r,o)},In=n=>!["Escape"].includes(n.key)&&n.target.closest(`.${a}__item-date`),Sn=(n,r,i,o)=>{const s=n.key,l=kn(n,"shiftKey"),b=r.querySelector("ul")?.dataset.multiSelect,p=r.querySelectorAll('[role="option"]')?.length;let w=[];if(s==="Escape"&&(o?.(),X(n,i),n.preventDefault(),n.stopPropagation()),p)switch(s){case"ArrowUp":n.preventDefault(),r.querySelectorAll('[role="option"]').forEach((d,g,A)=>{Ce(d,g,A,null,null,i)}),Array.from(n.target.closest("ul")?.querySelectorAll("li")??[]).indexOf(n.target)===1&&(r.querySelector(`.${a}__popover-content-wrapper`).scrollTop=0);break;case"ArrowDown":n.preventDefault(),r.querySelectorAll('[role="option"]').forEach((d,g,A)=>{Te(d,g,A,null,null,i)});break;case"Tab":w=[...Array.from(r.querySelectorAll(`.${a}__selectAll-button,[role="searchbox"]`)),r.querySelector('[role="option"]')],w.forEach((d,g,A)=>{l?Ce(d,g,A,!0,!0,i):Te(d,g,A,!0,!0,i)}),n.preventDefault();break;case" ":b==="true"&&(document.activeElement.type!=="button"&&document.activeElement?.click(),n.preventDefault());break;case"Enter":document.activeElement.type!=="button"&&(X(n,i),document.activeElement?.click());break}else s==="Enter"&&!l&&document.activeElement.type!=="button"&&(o?.(),X(n,i))},Nn=(n,r,i)=>{switch(n.key){case"ArrowRight":if(n.preventDefault(),i==W){let o=Array.from(n.target.closest('[role="row"]')?.querySelectorAll('[role="gridcell"] button'));if(o.length===1)n.target=n.target.closest('[role="row"]'),Fe(n,r,i);else if(n.target.getAttribute("role")=="row")M(o[0],r);else{let s=o.indexOf(n.target);s<o.length-1&&Q(o[s+1],r)}}else Ve(n,r);break;case"ArrowLeft":if(n.preventDefault(),i==W){if(n.target.getAttribute("role")!=="row"){let o=Array.from(n.target.closest('[role="row"]')?.querySelectorAll('[role="gridcell"] button')),s=o.indexOf(n.target);if(s>0)Q(o[s-1],r);else{let l=n.target.closest('[role="row"]');M(l,r)}}}else Ve(n,r);break;case"ArrowUp":case"ArrowDown":n.preventDefault(),i==W?Fe(n,r,i):jn(n,r,i);break;case"Enter":document.activeElement?.querySelectorAll("button")?.length===1&&document.activeElement?.querySelectorAll("button")[0]?.click();break}},xe=n=>Array.from(n.current?.querySelectorAll('[role="row"]')),Xe=(n,r)=>xe(r).findIndex(o=>o.contains(n)),jn=(n,r,i)=>{const o=xe(r),s=Xe(n.target,r);Qe(n,s,o,i,r)},Fe=(n,r,i)=>{const o=xe(r),s=Xe(n.target,r);let l=s;n.target.getAttribute("role")=="row"?(["ArrowDown","ArrowRight"].includes(n.key)?l+=1:n.key==="ArrowUp"&&(l-=1),l<0?l=0:l>=o.length&&(l=o.length-1),l!==s&&M(o[l],r)):Qe(n,s,o,i,r)},Qe=(n,r,i,o,s)=>{let l=r;n.key==="ArrowUp"&&(l=r==0?r:r-1),n.key==="ArrowDown"&&(l=r===i.length-1?i.length-1:r+1);const b=i[l],p=n.target.dataset.name;b?.querySelector(`[data-name="${p}"]`)?M(b?.querySelector(`[data-name="${p}"]`),s):o===W&&M(b,s)},Ve=(n,r)=>{r.current.querySelectorAll('[role="gridcell"] button').forEach((i,o,s)=>{n.key==="ArrowRight"?Te(i,o,s,null,null,r):Ce(i,o,s,null,null,r)})},Pn=(n,r,i)=>{const o=m.useRef(null);m.useEffect(()=>{o.current=i},[i]),m.useEffect(()=>{const s="current"in n?n.current:n;if(!s)return;const l=b=>{o.current&&o.current(b)};return s.addEventListener(r,l),()=>{s.removeEventListener(r,l)}},[n,r])},$=({children:n,className:r,label:i,renderIcon:o,title:s,type:l,showToolTip:b,condition:p,popOverClassName:w,config:d,renderChildren:g,onChange:A,description:h,...T})=>{const O=m.useRef(null),[C,v]=m.useState(!1),{conditionBuilderRef:q,statementConfigCustom:u}=m.useContext(D),x={ifAll:re.ifText,ifAny:re.ifText,unlessAll:re.unlessText,unlessAny:re.unlessText};u?.forEach(f=>{x[f.id]=f.label});const[E,P,k,I,R,H]=G(["invalidText","addConditionText","addPropertyText","addOperatorText","addValueText",i],x),S=f=>f&&d?.operators?.find(_=>_.id===f),N=()=>{const{property:f,operator:_}=p||{};return i==="INVALID"||T["data-name"]==="propertyField"&&f==="INVALID"||T["data-name"]==="operatorField"&&_==="INVALID"?{propertyLabel:E,isInvalid:!0}:T["data-name"]=="operatorField"&&l=="custom"?{isInvalid:!1,propertyLabel:S(i)?.id}:{isInvalid:!1,propertyLabel:T["data-name"]=="valueField"&&l?On(l,i,d):H}},{propertyLabel:B,isInvalid:ne}=N();m.useEffect(()=>{if(p){const f=T["data-name"];(p.popoverToOpen&&f!==p.popoverToOpen||f=="valueField"&&l==="option"&&!ke(p,d))&&F(),p.popoverToOpen==f&&setTimeout(()=>{te()})}else F()},[p,i]),m.useEffect(()=>{if(C&&O.current){const f=O?.current?.querySelector("input,textarea");f&&setTimeout(()=>f.focus(),0)}},[O,C]),Pn(O,"focusout",f=>{const _=f,L=_.relatedTarget,V=O.current;if(!V)return;const Z=!V.contains(L),oe=V.contains(_.target),ve=_.target?.closest(".flatpickr-calendar");(Z||!oe)&&!ve&&F()});const Y=()=>{(T["data-name"]==="propertyField"&&!p?.property||T["data-name"]==="operatorField"&&!p?.operator||T["data-name"]==="valueField"&&!p?.value)&&A?.("INVALID")},F=()=>{C&&Y(),v(!1)},te=()=>v(!0),ie=()=>{(n||g)&&v(!C)},c=f=>{En(f,q,O,F),f.key==="Escape"&&Y()},y=()=>d?.operators&&T["data-name"]==="operatorField"?S(B)?.label??I:B||(T["data-name"]==="propertyField"?k:T["data-name"]==="operatorField"?I:T["data-name"]==="valueField"?R:P);return t.createElement(mn,{open:C,isTabTip:!0,role:"gridcell",className:`${w} ${a}__popover`,ref:O,onRequestClose:F},t.createElement(J,{label:y(),hideLabel:!i,onClick:ie,className:r,"aria-haspopup":!0,"aria-expanded":C,renderIcon:o||(i==null?Ke:void 0),showToolTip:b,isInvalid:ne,description:h,...T}),C&&t.createElement(dn,{className:`${a}__popover-content-wrapper`,role:"dialog","aria-label":s,onKeyDown:c},t.createElement(bn,null,t.createElement(he,null,t.createElement(qe,{className:`${a}__item__title`},s),t.createElement("div",{className:`${a}__popover-content`},g?g(O,F):n)))))};$.propTypes={children:e.node,className:e.string,condition:e.object,config:e.object,label:e.oneOfType([e.string,e.array,e.object]),onChange:e.func,popOverClassName:e.string,renderChildren:e.func,renderIcon:e.oneOfType([e.func,e.object]),showToolTip:e.bool,title:e.string,type:e.string};$.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItem",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},label:{required:!1,tsType:{name:"union",raw:"string | Option | Option[]",elements:[{name:"string"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}]},description:"text to be displayed in the field",type:{name:"union",value:[{name:"string"},{name:"array"},{name:"object"}]}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:"Optional prop to allow overriding the icon rendering.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},title:{required:!1,tsType:{name:"string"},description:"title of the popover",type:{name:"string"}},showToolTip:{required:!1,tsType:{name:"boolean"},description:"show tool tip",type:{name:"bool"}},popOverClassName:{required:!1,tsType:{name:"string"},description:"class name for popover",type:{name:"string"}},type:{required:!1,tsType:{name:"string"},description:"input type",type:{name:"string"}},description:{required:!1,tsType:{name:"string"},description:""},condition:{required:!1,tsType:{name:"intersection",raw:"Action & Condition",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}}]},description:"current condition state object",type:{name:"object"}},config:{required:!1,tsType:{name:"union",raw:`| PropertyConfigOption['config']
| PropertyConfigTextArea['config']
| PropertyConfigText['config']
| PropertyConfigNumber['config']
| PropertyConfigDate['config']
| PropertyConfigTime['config']
| PropertyConfigCustom['config']`,elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"PropertyConfigTextArea['config']",raw:"PropertyConfigTextArea['config']"},{name:"PropertyConfigText['config']",raw:"PropertyConfigText['config']"},{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},{name:"intersection",raw:"PropertyConfigDate['config']"},{name:"signature",raw:"PropertyConfigTime['config']"},{name:"signature",raw:"PropertyConfigCustom['config']"}]},description:"this is the config object again the current property from inputConfig",type:{name:"object"}},renderChildren:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  ref: Ref<HTMLDivElement | null>,
  closePopover: () => void
) => ReactNode`,signature:{arguments:[{type:{name:"Ref",elements:[{name:"union",raw:"HTMLDivElement | null",elements:[{name:"HTMLDivElement"},{name:"null"}]}],raw:"Ref<HTMLDivElement | null>"},name:"ref"},{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"closePopover"}],return:{name:"ReactNode"}}},description:"callback prop that returns the jsx for children",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(val: string) => void",signature:{arguments:[{type:{name:"string"},name:"val"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},tabIndex:{required:!1,tsType:{name:"number"},description:""},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},onFocus:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},onBlur:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},children:{description:"provide the contents of the popover",type:{name:"node"},required:!1}},composes:["PropsWithChildren"]};const ee=({conditionState:n={},config:r={},onChange:i,closePopover:o})=>{const{popOverSearchThreshold:s}=m.useContext(D),l=m.useRef(null),[b,p]=G(["propertyText","clearSearchText"]),{conditionBuilderRef:w}=m.useContext(D),d=r?.options,[g,A]=m.useState(""),h=n.value,T=g?d?.filter(u=>u.label?.toLowerCase().includes(g.toLowerCase())):d;m.useEffect(()=>{if(l.current){const u=l.current?.querySelector("input, button,li");u&&u.focus()}},[d]);const O=(u,x)=>{i(x.id,u)},C=u=>{const{value:x}=u.target;A(x)},v=()=>n.label?n.label:b,q=u=>t.createElement("div",{className:`${a}__statement_wrapper`},t.createElement("div",null,u.label," (",u.connector,")"),t.createElement("div",null,u.secondaryLabel));if(d)return t.createElement("div",{className:`${a}__item-option`,ref:l},s&&d.length>s&&t.createElement("div",{className:`${a}__item-option__search`},t.createElement(Ue,{size:"sm",labelText:p,closeButtonLabelText:p,onChange:C,onKeyDown:u=>{Je(u,w,o)}})),t.createElement("ul",{"aria-label":v(),role:"listbox"},T?.map(u=>{const x=h===u.id,E=u.icon;return t.createElement("li",{tabIndex:0,key:u.id,role:"option","aria-selected":x,className:`${a}__item-option__option`,onKeyUp:()=>!1,onClick:P=>O(P,u)},t.createElement("div",{className:`${a}__item-option__option-content`},t.createElement("span",{className:`${a}__item-option__option-label`},E&&t.createElement(E,null),r?.isStatement?q(u):u.label),x&&t.createElement(We,{className:`${a}__checkmark`})))})))};ee.propTypes={conditionState:e.object,config:e.object,onChange:e.func};ee.__docgenInfo={description:"",methods:[],displayName:"ItemOption",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  label?: string;
  value?: string;
}`,signature:{properties:[{key:"label",value:{name:"string",required:!1}},{key:"value",value:{name:"string",required:!1}}]}},description:"current condition object",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},config:{required:!1,tsType:{name:"intersection",raw:`{ options?: option[] | statementConfig[] } & {
  isStatement?: boolean;
}`,elements:[{name:"signature",type:"object",raw:"{ options?: option[] | statementConfig[] }",signature:{properties:[{key:"options",value:{name:"union",raw:"option[] | statementConfig[]",elements:[{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"option[]"},{name:"Array",elements:[{name:"intersection",raw:`Item & {
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,signature:{properties:[{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}]}],raw:"statementConfig[]"}],required:!1}}]}},{name:"signature",type:"object",raw:`{
  isStatement?: boolean;
}`,signature:{properties:[{key:"isStatement",value:{name:"boolean",required:!1}}]}}]},description:"current config object that this property is part of",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string, e: Event) => void",signature:{arguments:[{type:{name:"string"},name:"value"},{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}},closePopover:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};const ge=()=>{const[n,r,i,o,s,l,b,p,w,d,g,A,h,T,O,C,v,q]=G(["ifAll","ifAny","unlessAll","unlessAny","and","or","is","greater","greaterEqual","lower","lowerEqual","startsWith","endsWith","contains","oneOf","before","after","between"]),{statementConfigCustom:u}=m.useContext(D);return{statementConfig:u??[{id:"ifAll",connector:"and",label:n,secondaryLabel:"(a && b)"},{id:"ifAny",connector:"or",label:r,secondaryLabel:"(a || b)"},{id:"unlessAll",connector:"and",label:i,secondaryLabel:"! (a && b)"},{id:"unlessAny",connector:"or",label:o,secondaryLabel:"! (a || b)"}],connectorConfig:[{label:s,id:"and"},{label:l,id:"or"}],operatorConfig:[{label:b,id:"is",type:"all"},{label:p,id:"greater",type:"number"},{label:w,id:"greaterEqual",type:"number"},{label:d,id:"lower",type:"number"},{label:g,id:"lowerEqual",type:"number"},{label:A,id:"startsWith",type:"text,textarea"},{label:h,id:"endsWith",type:"text,textarea"},{label:T,id:"contains",type:"text,textarea"},{label:O,id:"oneOf",type:"option"},{label:C,id:"before",type:"date,time"},{label:v,id:"after",type:"date,time"},{label:q,id:"between",type:"date"}]}},me=({operator:n,className:r,onChange:i,...o})=>{const{variant:s,conditionBuilderRef:l}=m.useContext(D),[b]=G(["connectorText"]),{connectorConfig:p}=ge(),w=m.useCallback((h,T)=>{T?h.classList.add("hoveredConnector"):h.classList.remove("hoveredConnector")},[]),d=h=>{const T=h?.currentTarget.closest(".eachGroup");w(T,!0)},g=h=>{const T=h?.currentTarget.closest(".eachGroup");w(T,!1)},A=(h,T)=>{i?.(h),X(T,l)};return s==W?t.createElement("span",{className:`${r} ${a}__connector--disabled`},t.createElement(J,{label:n})):t.createElement($,{label:n,title:b,"data-name":"connectorField",onMouseEnter:d,onMouseLeave:g,onFocus:d,onBlur:g,...o,popOverClassName:r,className:`${a}__connector-button`},t.createElement(ee,{config:{options:p},conditionState:{value:n,label:b},onChange:A}))};me.propTypes={className:e.string,onChange:e.func,operator:e.string};me.__docgenInfo={description:"",methods:[],displayName:"ConditionConnector",props:{operator:{required:!1,tsType:{name:"string"},description:"string that defines the connector operator (and/or)",type:{name:"string"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(op: string) => void",signature:{arguments:[{type:{name:"string"},name:"op"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}}}};const _e=({conditionState:n,config:r,onChange:i})=>{const[o]=G(["invalidNumberWarnText"]),s=(p,{value:w})=>{w!==""&&!isNaN(w)&&l(w)?i(r?.unit?`${w} ${r.unit}`:String(w)):i("INVALID")},l=p=>{if(!r)return!0;const{min:w,max:d}=r;return!(d!==void 0&&w===void 0&&p>d||w!==void 0&&d===void 0&&p<w||w!==void 0&&d!==void 0&&(p<w||p>d))},b=()=>n.value?.split(" ")?.[0]??"";return t.createElement("div",{className:`${a}__item-number`},t.createElement(Cn,{...r,label:n.property,hideLabel:!0,id:n.property?.replace(/\s/g,""),invalidText:o,allowEmpty:!0,onChange:s,defaultValue:b()}))};_e.propTypes={conditionState:e.object,config:e.object,onChange:e.func};_e.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemNumber",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"current condition object",type:{name:"object"}},config:{required:!1,tsType:{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},description:"current config object that this property is part of",type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const pe=({conditionState:n,onChange:r,config:i,type:o})=>{const s={...i,hideLabel:!0,value:ae(n.value)?n.value:"",id:n.property?.replace(/\s/g,""),onChange:l=>{r(l.target.value)},labelText:n.property};return t.createElement("div",{className:`${a}__item-text`},o=="textarea"?t.createElement(hn,{...s}):t.createElement(qn,{...s}))};pe.propTypes={conditionState:e.object,config:e.object,onChange:e.func,type:e.string};pe.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemText",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"current condition object",type:{name:"object"}},config:{required:!1,tsType:{name:"union",raw:"PropertyConfigText | PropertyConfigTextArea",elements:[{name:"PropertyConfigText"},{name:"PropertyConfigTextArea"}]},description:"config of the current property",type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}},type:{required:!1,tsType:{name:"union",raw:"'textarea' | 'text'",elements:[{name:"literal",value:"'textarea'"},{name:"literal",value:"'text'"}]},description:"current input type",type:{name:"string"}}}};const Ee=({conditionState:n,onChange:r,parentRef:i,config:o})=>{const s=m.useRef(null),[l,b]=G(["startText","endText"]),[p,w]=m.useState(),d=o?.dateFormat||"m/d/Y",{conditionBuilderRef:g}=m.useContext(D),A=n.operator=="between"||ke(n,o)?"range":"single";m.useEffect(()=>{A==="range"&&w(h(n.value)??void 0)},[]);const h=C=>{const v=s?.current?.calendar;if(!v||!C)return null;const[q,u]=C.split(" - "),x=[];return q&&q!=="INVALID"&&x.push(v.parseDate(q,d)),u&&u!=="INVALID"&&x.push(v.parseDate(u,d)),x.length?x:null},T=(C,v,q)=>{let u=v;A==="range"&&C.length===2&&(u=`${q.formatDate(C[0],d)} - ${q.formatDate(C[1],d)}`),r(u||"INVALID")},O=C=>{if(C.key==="Enter"){const v=s?.current?.calendar;v&&T(v.selectedDates,C.target.value,v),X(C,g)}};return t.createElement("div",{className:`${a}__item-date `},A=="single"&&t.createElement(Be,{...o,ref:s,datePickerType:"single",value:n.value,onClose:T,onKeyPress:O,appendTo:i?.current},t.createElement(be,{id:"datePicker",placeholder:"dd/mm/yyyy",labelText:n.property})),A=="range"&&t.createElement(Be,{...o,ref:s,datePickerType:A,onClose:T,onKeyPress:O,value:p,appendTo:i?.current},t.createElement(be,{id:"datePickerStart",placeholder:"dd/mm/yyyy",labelText:l}),t.createElement(be,{id:"datePickerEnd",placeholder:"dd/mm/yyyy",labelText:b})))};Ee.propTypes={conditionState:e.object,config:e.object,onChange:e.func,parentRef:e.object};Ee.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemDate",props:{conditionState:{description:"current condition object",type:{name:"object"},required:!1},config:{description:"",type:{name:"object"},required:!1},onChange:{description:"callback to update state oin date change",type:{name:"func"},required:!1},parentRef:{description:"reference to the popover node",type:{name:"object"},required:!1}}};const Ie=({onChange:n,config:r,conditionState:i})=>{const o=v=>{const q={time:0,dayZone:1,timeZone:2};return i.value!=="INVALID"?i.value?.split(" ")[q[v]]??void 0:void 0},s=o("time"),l=o("dayZone"),b=o("timeZone"),[p,w]=m.useState(s),[d,g]=m.useState(l??"AM"),[A,h]=m.useState(b??r?.timeZones?.[0]);m.useEffect(()=>{const v=`${p??""} ${d??""} ${A??""}`;n(p?v:"INVALID")},[p,d,A]);const T=v=>{h(v.target.value)},O=v=>{g(v.target.value)},C=v=>{w(v.target.value)};return t.createElement("div",{className:`${a}__item-time`},t.createElement(gn,{defaultValue:s,id:"time-picker",labelText:"Select a time",onChange:C},t.createElement(Ge,{id:"time-picker-day-zone",defaultValue:l,onChange:O},t.createElement(we,{value:"AM",text:"AM"}),t.createElement(we,{value:"PM",text:"PM"})),t.createElement(Ge,{id:"time-picker-time-zone",defaultValue:b,onChange:T},r?.timeZones?.map((v,q)=>t.createElement(we,{key:q,value:v,text:v})))))};Ie.propTypes={conditionState:e.object,config:e.object,onChange:e.func};Ie.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemTime",props:{conditionState:{description:"current condition object",type:{name:"object"},required:!1},config:{description:"current config object that this property is part of",type:{name:"object"},required:!1},onChange:{description:"callback to update state oin date change",type:{name:"func"},required:!1}}};const le=({className:n,onClick:r,addConditionSubGroupHandler:i,showConditionSubGroupPreviewHandler:o,hideConditionSubGroupPreviewHandler:s,showConditionPreviewHandler:l,hideConditionPreviewHandler:b,enableSubGroup:p,buttonLabel:w,tabIndex:d,group:g})=>{const[A,h,T]=G(["addConditionText","addConditionRowText","addSubgroupText"]),{onAddItem:O,rootState:C}=m.useContext(D),v=()=>{const{preventAdd:k}=O?.({type:"condition",state:C,group:g})??{};k||(b?.(),r())},q=()=>p?{onMouseEnter:l,onMouseLeave:b,onFocus:l,onBlur:b}:{},u=()=>({onMouseEnter:o,onMouseLeave:s,onFocus:o,onBlur:s}),x=()=>{const{preventAdd:k}=O?.({type:"subgroup",state:C,group:g})??{};k||i?.()},E=()=>w||(p?void 0:h),P=p?{role:"gridcell"}:{};return t.createElement("div",{className:`${n} ${a}__add-button-wrapper`,role:p?"none":"gridcell","aria-label":E()},t.createElement(J,{renderIcon:Tn,onClick:v,...q(),wrapperProps:P,className:`${a}__add-button`,hideLabel:!0,"data-name":"addButton",label:w??A,tabIndex:d,wrapperClassName:`${a}__add-condition-wrapper`}),p&&t.createElement(J,{renderIcon:Ye,onClick:x,className:K(`${a}__add-condition-sub-group`),hideLabel:!0,label:T,wrapperProps:P,wrapperClassName:`${a}__add-condition-sub-group-wrapper ${a}__gap-left`,...u()}))};le.propTypes={addConditionSubGroupHandler:e.func,buttonLabel:e.string,className:e.string,enableSubGroup:e.bool,hideConditionPreviewHandler:e.func,hideConditionSubGroupPreviewHandler:e.func,onClick:e.func,showConditionPreviewHandler:e.func,showConditionSubGroupPreviewHandler:e.func,tabIndex:e.number};le.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderAdd",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"callback triggered on click of add button",type:{name:"func"}},addConditionSubGroupHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},hideConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},showConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},hideConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},enableSubGroup:{required:!1,tsType:{name:"boolean"},description:"boolean to enable sub groups for the tree variant",type:{name:"bool"}},buttonLabel:{required:!1,tsType:{name:"string"},description:"tooltip label for plus button",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index",type:{name:"number"}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:""}}};const ye=({conditionState:n={},config:r={},onChange:i,closePopover:o})=>{const s=ke(n,r),{popOverSearchThreshold:l,getOptions:b,rootState:p}=m.useContext(D),[w,d]=G(["propertyText","clearSearchText"]),{conditionBuilderRef:g}=m.useContext(D),A=m.useRef(null),[h,T]=m.useState(r?.options),[O,C]=m.useState(""),v=h?.filter(k=>k.label.toLowerCase().includes(O.toLowerCase())),q=Array.isArray(n.value)?n.value:n.value!==void 0?[n.value]:[];m.useEffect(()=>{!h&&b&&(async()=>{const I=await b(p,n);I?.length>0&&Object.keys(I[0]).includes("label")&&Object.keys(I[0]).includes("id")&&T(I)})()},[]),m.useEffect(()=>{if(A.current){const k=A.current.querySelector("input, button,li");k&&k?.focus()}},[h]);const u=k=>{k.currentTarget.dataset.selectedAll=="false"?i(void 0):i(h)},x=k=>{const{value:I}=k.target;C(I)},E=(k,I,R)=>{const H=q.filter(S=>S!=="INVALID");if(s)if(R){const S=H.filter(N=>N.id!==I.id);i(S.length>0?S:void 0)}else i([...H,I]);else i(I,k);k.target instanceof SVGElement&&k.stopPropagation()},P=()=>n.label?n.label:n.property?n.property:w;return h?t.createElement("div",{className:`${a}__item-option`,ref:A},l&&h.length>l&&t.createElement("div",{className:`${a}__item-option__search`},t.createElement(Ue,{size:"sm",labelText:d,closeButtonLabelText:d,onChange:x,onKeyDown:k=>{Je(k,g,o)}})),s&&t.createElement("div",{className:`${a}__multiselectSelectionStatusContainer`},t.createElement("label",null,q.length,"/",h.length," Selected"),t.createElement(ze,{kind:"ghost",size:"sm","data-selected-all":`${q.length==0}`,onClick:u,className:`${a}__selectAll-button`},q.length==0?"Select all":"Deselect all")),t.createElement("ul",{"aria-label":P(),role:"listbox","data-multi-select":s},v?.map(k=>{const I=q.map(H=>H.id).includes(k.id),R=k.icon;return t.createElement("li",{tabIndex:0,key:k.id,role:"option","aria-selected":I,className:`${a}__item-option__option`,onKeyUp:()=>!1,onClick:H=>E(H,k,I)},t.createElement("div",{className:`${a}__item-option__option-content`},s?t.createElement(t.Fragment,null,t.createElement("span",{className:`${a}__option-check-box`},I?t.createElement(pn,null):t.createElement(cn,null)),t.createElement("span",{className:`${a}__item-option__option-label`},k.label),R&&t.createElement("span",{className:`${a}__option-icon`},t.createElement(R,null))):t.createElement(t.Fragment,null,t.createElement("span",{className:`${a}__item-option__option-label`},R&&t.createElement(R,null),k.label),I&&t.createElement(We,{className:`${a}__checkmark`}))))}))):t.createElement(yn,null)};ye.propTypes={conditionState:e.object,config:e.object,onChange:e.func};ye.__docgenInfo={description:"",methods:[],displayName:"ItemOptionForValueField",props:{conditionState:{required:!1,tsType:{name:"intersection",raw:"Condition & { label?: string }",elements:[{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{ label?: string }",signature:{properties:[{key:"label",value:{name:"string",required:!1}}]}}]},description:"current condition object",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},config:{required:!1,tsType:{name:"signature",raw:"PropertyConfigOption['config']"},description:"current config object that this property is part of",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: any, e?: Event) => void",signature:{arguments:[{type:{name:"any"},name:"value"},{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}},closePopover:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};const ce=n=>{const{onRemove:r,onChange:i,condition:o={},conjunction:s,onConnectorOperatorChange:l,isStatement:b,group:p,onStatementChange:w,conditionIndex:d,addConditionHandler:g,addConditionSubGroupHandler:A,aria:h,hideConditionSubGroupPreviewHandler:T,showConditionSubGroupPreviewHandler:O,hideConditionPreviewHandler:C,showConditionPreviewHandler:v,isLastCondition:q}=n,{property:u,value:x,operator:E}=o,{inputConfig:P,variant:k,conditionBuilderRef:I}=m.useContext(D),[R,H]=m.useState(!1),[S,N]=m.useState(!1),[B,ne,Y,F,te]=G(["conditionRowText","conditionText","propertyText","operatorText","removeConditionText"]),{statementConfig:ie,operatorConfig:c}=ge(),y=j=>P?.properties?.find(z=>z.id==j)??{},{icon:f,type:_,config:L,label:V,description:Z}=y(u),de={text:pe,number:_e,date:Ee,time:Ie,option:ye,custom:L?.component,textarea:pe}[_],ve=()=>{N(!0)},Pe=()=>{N(!1)},nn=(j,z)=>{X(z,I),w?.(j)},Le=j=>{i({...o,property:j,operator:void 0,value:"",popoverToOpen:ae(j)?"operatorField":""})},$e=j=>{i({...o,operator:j,value:void 0,popoverToOpen:ae(j)?"valueField":""})},He=j=>{const z={...o};delete z.popoverToOpen,i({...z,value:j})},De=()=>{H(!0)},Re=()=>{H(!1)},tn=(j,z)=>k===W?!0:q(j,z),an=()=>L?.operators?L?.operators:c.filter(j=>j.type.indexOf(_)!=-1||j.type=="all"),rn=()=>k==W?{"aria-level":h.level,"aria-posinset":h.posinset,"aria-setsize":h.setsize}:{},on=(j,z)=>t.createElement(de,{conditionState:{property:u,operator:E,value:x},onChange:He,config:L,"data-name":"valueField",parentRef:j,type:_,closePopover:z}),ln=(j,z)=>t.createElement(ee,{conditionState:{value:u,label:Y},onChange:Le,config:{options:P?.properties},closePopover:z});return t.createElement("div",{className:K(`${a}__condition-block`,{[`${a}__condition__deletion-preview`]:R},{[`${a}__gap-bottom`]:k==W},{[`${a}__gap ${a}__gap-bottom`]:k==Ae},{[`${a}__condition--interacting`]:S}),role:"row","aria-label":B,...rn(),tabIndex:-1,onMouseEnter:ve,onMouseLeave:Pe,onBlur:Pe},s?t.createElement(me,{className:`${a}__gap`,operator:s,onChange:j=>l?.(j)}):"",b&&t.createElement($,{label:p.statement,title:ne,"data-name":"connectorField",popOverClassName:`${a}__gap`,className:`${a}__statement-button`,tabIndex:0},t.createElement(ee,{conditionState:{value:p.statement,label:ne},onChange:nn,config:{options:ie,isStatement:!0}})),t.createElement($,{label:V??o?.property,title:Y,renderIcon:f??void 0,className:`${a}__property-field`,"data-name":"propertyField",condition:o,type:_,description:Z,onChange:Le,renderChildren:ln}),ae(u)&&t.createElement($,{label:E,title:F,"data-name":"operatorField",condition:o,type:_,config:L,onChange:$e},t.createElement(ee,{config:{options:an()},conditionState:{value:E,label:F},onChange:$e})),ae(u)&&ae(E)&&t.createElement($,{label:x,type:_,title:V,showToolTip:!0,"data-name":"valueField",condition:o,config:L,onChange:He,renderChildren:on}),t.createElement("span",{role:"gridcell","aria-label":te},t.createElement(J,{hideLabel:!0,label:te,onClick:r,onMouseEnter:De,onMouseLeave:Re,onFocus:De,onBlur:Re,renderIcon:Ze,className:`${a}__close-condition`,"data-name":"closeCondition",wrapperClassName:`${a}__close-condition-wrapper`})),tn(d,p.conditions)&&t.createElement(le,{onClick:()=>{g?.(d)},addConditionSubGroupHandler:()=>{A?.(d)},showConditionSubGroupPreviewHandler:O,hideConditionSubGroupPreviewHandler:T,enableSubGroup:k==W,showConditionPreviewHandler:v,hideConditionPreviewHandler:C,className:`${a}__gap ${a}__gap-left`,group:p}))};ce.propTypes={addConditionHandler:e.func,addConditionSubGroupHandler:e.func,aria:e.object,condition:e.object,conditionIndex:e.number,conjunction:e.string,group:e.object,hideConditionPreviewHandler:e.func,hideConditionSubGroupPreviewHandler:e.func,isLastCondition:e.func,isStatement:e.bool,onChange:e.func,onConnectorOperatorChange:e.func,onRemove:e.func,onStatementChange:e.func,showConditionPreviewHandler:e.func,showConditionSubGroupPreviewHandler:e.func,state:e.object};ce.__docgenInfo={description:"",methods:[],displayName:"ConditionBlock",props:{condition:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"",type:{name:"object"}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"callback for Remove a condition",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(condition: Condition) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},onConnectorOperatorChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(op: string) => void",signature:{arguments:[{type:{name:"string"},name:"op"}],return:{name:"void"}}},description:"callback to handle the connector(and/or) change",type:{name:"func"}},onStatementChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(v: string) => void",signature:{arguments:[{type:{name:"string"},name:"v"}],return:{name:"void"}}},description:"callback to handle the statement(if/ excl.if) change",type:{name:"func"}},addConditionHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(conditionIndex: number) => void",signature:{arguments:[{type:{name:"number"},name:"conditionIndex"}],return:{name:"void"}}},description:"callback to add a new condition",type:{name:"func"}},addConditionSubGroupHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(conditionIndex: number) => void",signature:{arguments:[{type:{name:"number"},name:"conditionIndex"}],return:{name:"void"}}},description:"callback to add a new condition subgroup",type:{name:"func"}},hideConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for showing sub group preview",type:{name:"func"}},hideConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for showing add condition preview",type:{name:"func"}},conjunction:{required:!1,tsType:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},description:"string that decides to show the condition connector",type:{name:"string"}},isStatement:{required:!1,tsType:{name:"boolean"},description:"boolean that decides to show the statement(if/ excl.if)",type:{name:"bool"}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"object that hold the current group object where is condition is part of",type:{name:"object"}},conditionIndex:{required:!1,tsType:{name:"number"},description:"",type:{name:"number"}},aria:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  level: number;
  posinset: number;
  setsize?: number;
}`,signature:{properties:[{key:"level",value:{name:"number",required:!0}},{key:"posinset",value:{name:"number",required:!0}},{key:"setsize",value:{name:"number",required:!1}}]}},description:"object hold aria attributes",type:{name:"object"}},isLastCondition:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  index: number,
  conditions: (ConditionGroup | Condition)[]
) => void`,signature:{arguments:[{type:{name:"number"},name:"index"},{type:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]"},name:"conditions"}],return:{name:"void"}}},description:"",type:{name:"func"}},state:{description:"object that hold the current condition",type:{name:"object"},required:!1}}};const se=({previewType:n,group:r,colorIndex:i,className:o})=>{const[s,l]=m.useState(!1),[b,p,w,d]=G(["valueText","operatorText","propertyText","ifText"]);m.useEffect(()=>{l(!0)},[]);const g=()=>t.createElement("div",{className:`${a}__preview-condition`},t.createElement($,{label:b,renderIcon:An}),t.createElement($,{label:p}),t.createElement($,{label:w}));return t.createElement(t.Fragment,null,n=="newGroup"&&t.createElement(t.Fragment,null,t.createElement("div",{className:K([`${a}__group__row ${a}__group-preview ${o}`,{[`${a}__group-preview-animate`]:s}])},t.createElement($,{className:`${a}__statement-button`,label:r.groupOperator})),t.createElement("div",{"data-color-index":i,"aria-hidden":!0,className:K([`${a}__group  ${a}__condition-wrapper ${a}__group-preview ${a}__group-wrapper ${o}`,{[`${a}__group-preview-animate`]:s}])},t.createElement("div",{className:`${a}__gap`},t.createElement($,{className:`${a}__statement-button`,label:d})),g())),n=="subGroup"&&t.createElement("div",{className:K([`${a}__group__row ${a}__group-preview ${a}__gap-bottom`,{[`${a}__group-preview-animate`]:s}])},t.createElement("div",{className:`${a}__condition-block  ${a}__gap`},t.createElement($,{label:r.groupOperator,className:`${a}__statement-button`,popOverClassName:`${a}__gap`}),t.createElement("div",{className:`${a}__group ${a}__condition-wrapper`},t.createElement(me,{className:`${a}__gap ${a}__groupConnector`,operator:d}),g()))),n=="condition"&&t.createElement("div",{className:K([`${a}__group__row ${a}__group-preview ${a}__gap-bottom`,{[`${a}__group-preview-animate`]:s}])},t.createElement("div",{className:`${a}__condition-block  ${a}__gap`},t.createElement($,{label:r.groupOperator,className:`${a}__statement-button`,popOverClassName:`${a}__gap`}),g())))};se.propTypes={className:e.string,colorIndex:e.number,group:e.object,previewType:e.oneOf(["condition","subGroup","newGroup"])};se.__docgenInfo={description:"",methods:[],displayName:"ConditionPreview",props:{previewType:{required:!1,tsType:{name:"union",raw:"'newGroup' | 'subGroup' | 'condition'",elements:[{name:"literal",value:"'newGroup'"},{name:"literal",value:"'subGroup'"},{name:"literal",value:"'condition'"}]},description:"type of review to be displayed",type:{name:"enum",value:[{value:"'condition'",computed:!1},{value:"'subGroup'",computed:!1},{value:"'newGroup'",computed:!1}]}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"current conditional group",type:{name:"object"}},colorIndex:{required:!1,tsType:{name:"number"},description:"index of the color for next group",type:{name:"number"}},className:{required:!1,tsType:{name:"string"},description:"",type:{name:"string"}}}};const fe=({group:n,aria:r,onRemove:i,onChange:o,className:s})=>{const[l,b,p]=G(["conditionBuilderGroupText","conditionText","conditionBuilderText"]),{statementConfig:w}=ge(),{variant:d,conditionBuilderRef:g}=m.useContext(D),[A,h]=m.useState(-1),[T,O]=m.useState(-1);m.useState(!1);const C=m.useRef(null),v=m.useRef(null);m.useEffect(()=>{typeof g!="function"&&g?.current&&(v.current=q(g.current))},[g]),m.useEffect(()=>{const c=v.current;let y=!1;if(c instanceof Window||c===document.body||c===document.documentElement)y=window.innerHeight+window.scrollY>=document.body.scrollHeight;else if(v.current){const f=v.current;y=f.scrollTop+f.clientHeight>=f.scrollHeight}(A||T)&&y&&v.current?.scrollBy(0,-1)},[A,T]);const q=c=>{for(;c&&c!==document.body;){const f=getComputedStyle(c).overflowY;if((f==="auto"||f==="scroll"||f==="overlay")&&c.scrollHeight>c.clientHeight)return c;c=c.parentElement}return window},u=(c,y,f)=>{if(n&&n.conditions&&n.conditions.length>1)if(d==W?I(y):k(y,f),x(n.conditions,c)){const _=n.conditions.filter(L=>c!==L.id);if((_?.[0]).conditions){const L=_[0];_.splice(0,1,...L?.conditions)}o?.({...n,conditions:_})}else{const _=n?.conditions?.reduce((L,V)=>{const Z=V;return Z.conditions?L.concat(Z.conditions):L},[]);o?.({...n,conditions:_})}else i?.(y)},x=(c,y)=>c.find(f=>!f.conditions&&f.id!==y),E=(c,y)=>{const f=[...n?.conditions?n.conditions.slice(0,y):[],c,...n?.conditions?n.conditions.slice(y+1):[]];o?.({...n,conditions:f,id:n?.id??U()})},P=c=>{const y={property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:U()};o?.({...n,conditions:[...n.conditions?n.conditions.slice(0,c+1):[],y,...n.conditions?n.conditions.slice(c+1):[]]})},k=(c,y)=>{const f=c.currentTarget.closest(`.${a}__group`)?.querySelectorAll('[data-name="closeCondition"]');y==f.length-1?M(f[y-1],g):M(f[y+1],g)},I=c=>{const y=c.currentTarget?.closest('[role="row"]')?.getAttribute("aria-level"),f=c.currentTarget?.closest('[role="row"]')?.getAttribute("aria-posinset"),_=C.current?.querySelector(`[aria-level="${y}"][aria-posinset="${Number(f)+1}"]`),L=C.current?.querySelector(`[aria-level="${y}"][aria-posinset="${Number(f)-1}"]`);if(_?.classList.contains(`${a}__condition-block`))M(_?.querySelector('[data-name="closeCondition"]'),g);else if(L?.classList.contains(`${a}__condition-block`))M(L?.querySelector('[data-name="closeCondition"]'),g);else{const V=C.current?.querySelectorAll(`[aria-level="${Number(y)-1}"][role="row"]`),Z=C.current?.querySelector(`[aria-level="${Number(y)+1}"][role="row"]`);if(Z){const oe={ariaLevel:Number(Z.ariaLevel)-1,ariaPosInSet:Z.ariaPosInSet};setTimeout(()=>{const de=C.current?.querySelector(`[role="row"][aria-level="${oe.ariaLevel}"][aria-posinset="${oe.ariaPosInSet}"]`);M(de?.querySelector('[data-name="closeCondition"]'),g)},0)}else V?.length&&V.length>1&&M(V[V.length-2]?.querySelector('[data-name="closeCondition"]'),g)}},R=c=>{o({...n,conditions:[...n.conditions?n.conditions.slice(0,c+1):[],{statement:"ifAll",groupOperator:"and",conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:U()}],id:U()},...n.conditions?n.conditions.slice(c+1):[]]})},H=(c,y)=>c+1>=y.length||y.length-1!=c&&y[c+1].conditions,S=c=>{O(c)},N=()=>{O(-1)},B=c=>{h(c)},ne=()=>{h(-1)},Y=c=>{const y=w.find(f=>f.id==c)?.connector;o({...n,groupOperator:y,statement:c})},F=c=>{o({...n,groupOperator:c})},te=()=>t.createElement("div",{className:`${s}  eachGroup`},t.createElement("div",{className:`${a}__condition-wrapper`,role:"grid","aria-label":p},n?.conditions?.map((c,y)=>t.createElement("div",{key:c.id,className:`${a}__group-wrapper`},t.createElement(ce,{conjunction:y>0?n.groupOperator:void 0,aria:{level:r.level+1,posinset:y+1,setsize:n?.conditions?.length},isStatement:y==0,condition:c,group:n,conditionIndex:y,onChange:f=>{E(f,y)},addConditionHandler:P,onRemove:f=>{u(c.id,f,y)},onConnectorOperatorChange:F,onStatementChange:Y,isLastCondition:H}))))),ie=()=>t.createElement("div",{className:`${s} ${a}__condition-wrapper`,role:r.level===1?"rowgroup":void 0,"aria-label":r.level==1?l:void 0,ref:C},t.createElement("div",{tabIndex:0,role:"row","aria-level":r.level,"aria-posinset":r.posinset,"aria-setsize":r.setsize},t.createElement($,{label:n.statement,title:b,"data-name":"connectorField",popOverClassName:`${a}__gap`,className:`${a}__statement-button`},t.createElement(ee,{conditionState:{value:n.statement,label:b},onChange:(c,y)=>{X(y,g),Y(c)},config:{options:w,isStatement:!0}}))),n?.conditions?.map((c,y)=>t.createElement(m.Fragment,{key:c.id},c.conditions?t.createElement("div",{className:K(`${a}__condition-block subgroup  ${a}__gap`,{[`${a}__gap-bottom`]:n&&n.conditions&&n.conditions.length<y+1},{})},t.createElement(me,{className:`${a}__gap ${a}__gap-bottom ${a}__groupConnector`,operator:n.groupOperator,"aria-hidden":!0}),t.createElement(fe,{aria:{level:r.level+1,posinset:y+1,setsize:n.conditions?.length??0},className:`${a}__group`,group:c,onChange:f=>{E(f,y)},onRemove:f=>{u(c.id,f,y)}})):t.createElement("div",null,t.createElement(ce,{conjunction:y>0?n.groupOperator:void 0,aria:{level:r.level+1,posinset:y+1,setsize:n.conditions?.length??0},isStatement:!1,condition:c,group:n,conditionIndex:y,addConditionHandler:P,addConditionSubGroupHandler:R,onChange:f=>{E(f,y)},onRemove:f=>{u(c.id,f,y)},onConnectorOperatorChange:F,onStatementChange:Y,showConditionSubGroupPreviewHandler:()=>{S(y)},hideConditionSubGroupPreviewHandler:N,showConditionPreviewHandler:()=>{B(y)},hideConditionPreviewHandler:ne,isLastCondition:H})),y===T&&t.createElement(se,{previewType:"subGroup",group:n}),y===A&&t.createElement(se,{previewType:"condition",group:n}))));return t.createElement(t.Fragment,null,d==W&&ie(),d==Ae&&te())};fe.propTypes={aria:e.object,className:e.string,group:e.object,onChange:e.func,onRemove:e.func};fe.__docgenInfo={description:"",methods:[],displayName:"ConditionGroupBuilder",props:{group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"",type:{name:"object"}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"call back to remove the particular group from the state tree",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(group: ConditionGroup) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},name:"group"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},aria:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  level: number;
  posinset: number;
  setsize: number;
}`,signature:{properties:[{key:"level",value:{name:"number",required:!0}},{key:"posinset",value:{name:"number",required:!0}},{key:"setsize",value:{name:"number",required:!0}}]}},description:"object contains the aria attributes",type:{name:"object"}}}};const en=()=>{const{rootState:n,setRootState:r}=m.useContext(D),[i]=G(["conditionText"]),{connectorConfig:o}=ge(),s=l=>{r({...n,operator:l})};return t.createElement("div",{className:`${a}__group-separator ${a}__group-separator-row`,role:"row",tabIndex:-1,"aria-level":1},t.createElement($,{label:n.operator,title:i,"data-name":"connectorField",popOverClassName:`${a}__gap`,className:`${a}__statement-button`},t.createElement(ee,{conditionState:{value:n.operator,label:i},onChange:s,config:{options:o}})))};en.__docgenInfo={description:"",methods:[],displayName:"GroupConnector"};const Se=({actions:n,className:r})=>{const{actionState:i=[],setActionState:o}=m.useContext(D),[s,l]=m.useState(-1),[b,p,w,d,g,A]=G(["actionsText","then","and","removeActionText","addActionText","actionSectionText"]),h=()=>{const q={id:U(),label:void 0,popoverToOpen:"valueField"};o?.([...i,q])},T=(q,u)=>{const E={...n.find(P=>P.id===q),id:i[u].id};o?.([...i.slice(0,u),E,...i.slice(u+1)])},O=q=>{o?.(i.filter(u=>u.id!==q))},C=q=>{l(q)},v=()=>{l(-1)};return t.createElement("div",{className:r},t.createElement(he,{className:`${a}__heading`,level:4},t.createElement(qe,null,b)),t.createElement("div",{className:`${a}__condition-wrapper`,role:"grid","aria-label":A},i?.map((q,u)=>t.createElement("div",{key:q.id,role:"row",className:K(`${a}__condition-block ${a}__gap ${a}__gap-bottom`,{[`${a}__condition__deletion-preview`]:s==u})},t.createElement($,{className:`${a}__statement-button`,tabIndex:0,popOverClassName:`${a}__gap`,label:u===0?p:w}),t.createElement($,{label:q.label,title:b,condition:q,"data-name":"valueField",type:"option"},t.createElement(ye,{conditionState:{value:q.label},onChange:x=>T(x.id,u),config:{options:n}})),t.createElement("span",{role:"gridcell","aria-label":d},t.createElement(J,{hideLabel:!0,label:d,onClick:()=>O(q.id),onMouseEnter:()=>C(u),onMouseLeave:v,onFocus:()=>C(u),onBlur:v,renderIcon:Ze,className:`${a}__close-condition`,"data-name":"closeCondition"})),i.length===u+1&&t.createElement(le,{onClick:h,className:`${a}__gap ${a}__gap-left`,buttonLabel:g,tabIndex:0}))),i.length===0&&t.createElement(le,{onClick:h,className:`${a}__gap ${a}__gap-left`,buttonLabel:g,tabIndex:0})))};Se.propTypes={actions:e.arrayOf(e.shape({id:e.oneOfType([e.string,e.number]).isRequired,label:e.string.isRequired})),className:e.string};Se.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderActions",props:{actions:{required:!1,tsType:{name:"union",raw:"Action[] | Option[]",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}]},description:"optional array of object that give the list of actions.",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}}}};const Ne=({startConditionLabel:n,getConditionState:r,getActionsState:i,initialState:o,actions:s})=>{const{rootState:l,setRootState:b,variant:p,actionState:w,onAddItem:d}=m.useContext(D),g=m.useRef(o?.state?JSON.parse(JSON.stringify(o?.state)):null),[A,h]=m.useState(!1),[T,O]=m.useState(!1),[C,v,q]=G(["addConditionGroupText","conditionHeadingText","conditionBuilderHierarchicalText"]),u=()=>{O(!0)},x=()=>{O(!1)};m.useEffect(()=>{l?.groups?.length?h(!0):h(!1),r&&r(l??{})},[l]),m.useEffect(()=>{i?.(w??[])},[w]),m.useEffect(()=>{o?.enabledDefault&&b?.(o.state)},[o]);const E=()=>{h(!0),g?.current?.groups?.length?(b?.(g.current),g.current=null):b?.(xn)},P=m.useCallback(S=>{const N=l?.groups?.filter(B=>S!==B?.id);b?.({...l,groups:l?N:[]}),N?.length===0&&(g.current=null)},[b,l]),k=(S,N)=>{if(l&&l.groups){const B=[...l.groups?l.groups.slice(0,N):[],S,...l.groups?l.groups.slice(N+1):[]];b?.({...l,groups:B})}},I=()=>{const{preventAdd:S}=d?.({type:"group",state:l})??{};if(!S){const N={statement:"ifAll",groupOperator:"and",id:U(),conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:U()}]};b?.({...l,groups:l&&l.groups?[...l.groups,N]:[N]})}},R=()=>(l?.groups?.length??0)%5;if(!A)return t.createElement(ze,{className:`${a}__addConditionText-button`,renderIcon:S=>t.createElement(Ke,{...S}),iconDescription:n,kind:"ghost",size:"sm",onClick:E},n);const H=p===W?{role:"treegrid","aria-label":q}:null;return t.createElement(t.Fragment,null,t.createElement(he,{className:`${a}__heading`,level:4},t.createElement(qe,null,v)),t.createElement("div",{className:`${a}__content-container`,...H},l&&l?.groups?.map((S,N)=>t.createElement("div",{key:S.id,className:`${a}__group-wrapper`},t.createElement(fe,{className:`${a}__group`,aria:{level:1,posinset:N*2+1,setsize:(l.groups&&l.groups.length*2)??0},group:S,onRemove:()=>{P(S.id)},onChange:B=>{k(B,N)}}),l.groups&&N<l.groups.length-1&&t.createElement(en,null))),p==W&&t.createElement("div",{role:"row",tabIndex:-1,"aria-level":1,className:`${a}__add-group`},t.createElement(J,{renderIcon:Ye,onClick:I,onMouseEnter:u,onMouseLeave:x,onFocus:u,onBlur:x,className:`${a}__add-condition-group `,hideLabel:!0,label:C,wrapperProps:{role:"gridcell","aria-label":C}})),t.createElement(se,{previewType:"newGroup",colorIndex:R(),className:T?`${a}__visible`:`${a}__hidden`,group:{groupOperator:l?.operator,id:U()}})),s&&t.createElement(Se,{actions:s,className:`${a}__actions-container`}))};Ne.propTypes={actions:e.arrayOf(e.shape({id:e.oneOfType([e.string,e.number]).isRequired,label:e.string.isRequired})),getActionsState:e.func,getConditionState:e.func.isRequired,initialState:e.shape({state:e.shape({groups:e.arrayOf(e.shape({groupOperator:e.string,statement:e.string,conditions:e.arrayOf(e.oneOfType([e.shape({property:e.string,operator:e.string,value:e.oneOfType([e.string,e.arrayOf(e.shape({id:e.string,label:e.string})),e.shape({id:e.string,label:e.string})])}),e.object]))})),operator:e.string}),enabledDefault:e.bool}),startConditionLabel:e.string.isRequired};Ne.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderContent",props:{startConditionLabel:{required:!0,tsType:{name:"string"},description:"",type:{name:"string"}},getConditionState:{required:!0,tsType:{name:"signature",type:"function",raw:"(state: ConditionBuilderState) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"}],return:{name:"void"}}},description:"This is a callback function that returns the updated state",type:{name:"func"}},getActionsState:{required:!1,tsType:{name:"signature",type:"function",raw:"(state: Action[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},name:"state"}],return:{name:"void"}}},description:"callback functions that will provide the updated action state back.",type:{name:"func"}},initialState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  state: ConditionBuilderState;
  enabledDefault?: boolean;
}`,signature:{properties:[{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"enabledDefault",value:{name:"boolean",required:!1}}]}},description:"Optional prop if the condition building need to start from a predefined initial state",type:{name:"shape",value:{state:{name:"shape",value:{groups:{name:"arrayOf",value:{name:"shape",value:{groupOperator:{name:"string",required:!1},statement:{name:"string",required:!1},conditions:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{property:{name:"string",required:!1},operator:{name:"string",required:!1},value:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}},{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}],required:!1}}},{name:"object"}]},required:!1}}},required:!1},operator:{name:"string",required:!1}},required:!1},enabledDefault:{name:"bool",required:!1}}}},actions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:"optional array of object that give the list of actions.",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}}}};const je="ConditionBuilder";let ue=t.forwardRef(({className:n,inputConfig:r,startConditionLabel:i="Add Condition",popOverSearchThreshold:o,getOptions:s,initialState:l,getConditionState:b,getActionsState:p,variant:w=Ae,actions:d,translateWithId:g,statementConfigCustom:A,onAddItem:h,...T},O)=>{const C=m.useRef(null),v=O||C,q=u=>{_n(u,v,w)};return t.createElement(Oe,{inputConfig:r,popOverSearchThreshold:o,getOptions:s,variant:w,translateWithId:g,conditionBuilderRef:v,statementConfigCustom:A,onAddItem:h},t.createElement("div",{...T,className:K(a,n,{}),ref:v,...vn(je)},t.createElement(fn,{className:`${a}__${w}`,onKeyDown:q},t.createElement(Ne,{startConditionLabel:i,getConditionState:b,getActionsState:p,initialState:l,actions:d}))))});ue=Me.checkComponentEnabled(ue,je);ue.displayName=je;ue.propTypes={actions:e.arrayOf(e.shape({id:e.oneOfType([e.string,e.number]).isRequired,label:e.string.isRequired})),className:e.string,getActionsState:e.func,getConditionState:e.func.isRequired,getOptions:e.func,initialState:e.shape({state:e.shape({groups:e.arrayOf(e.shape({groupOperator:e.string,statement:e.string,conditions:e.arrayOf(e.oneOfType([e.shape({property:e.string,operator:e.string,value:e.oneOfType([e.string,e.arrayOf(e.shape({id:e.string,label:e.string})),e.shape({id:e.string,label:e.string})])}),e.object]))})),operator:e.string}),enabledDefault:e.bool}),inputConfig:e.shape({properties:e.arrayOf(e.shape({id:e.string.isRequired,label:e.string.isRequired,icon:e.oneOfType([e.func,e.object]),type:e.oneOf(["text","textarea","number","date","option","time","custom"]).isRequired,description:e.string,config:e.shape({options:e.arrayOf(e.shape({id:e.string.isRequired,label:e.string.isRequired,icon:e.oneOfType([e.func,e.object])})),component:e.func,operators:e.arrayOf(e.shape({id:e.string.isRequired,label:e.string.isRequired})),valueFormatter:e.func})}))}).isRequired,onAddItem:e.func,popOverSearchThreshold:e.number.isRequired,startConditionLabel:e.string,statementConfigCustom:e.arrayOf(e.shape({id:e.string.isRequired,connector:e.oneOf(["and","or"]).isRequired,label:e.string.isRequired,secondaryLabel:e.string})),translateWithId:e.func,variant:e.oneOf(["Non-Hierarchical","Hierarchical"])};ue.__docgenInfo={description:"TODO: A description of the component.",methods:[],displayName:"ConditionBuilder",props:{inputConfig:{required:!0,tsType:{name:"signature",type:"object",raw:"{ properties: Property[] }",signature:{properties:[{key:"properties",value:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
} & ConfigType`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}},{key:"description",value:{name:"string",required:!1}},{key:"type",value:{name:"any",required:!1}},{key:"config",value:{name:"any",required:!1}}]}},{name:"union",raw:`| PropertyConfigOption['config']
| PropertyConfigTextArea['config']
| PropertyConfigText['config']
| PropertyConfigNumber['config']
| PropertyConfigDate['config']
| PropertyConfigTime['config']
| PropertyConfigCustom['config']`,elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"PropertyConfigTextArea['config']",raw:"PropertyConfigTextArea['config']"},{name:"PropertyConfigText['config']",raw:"PropertyConfigText['config']"},{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},{name:"intersection",raw:"PropertyConfigDate['config']"},{name:"signature",raw:"PropertyConfigTime['config']"},{name:"signature",raw:"PropertyConfigCustom['config']"}]}]}],raw:"Property[]",required:!0}}]}},description:"This is a mandatory prop that defines the input to the condition builder.",type:{name:"shape",value:{properties:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'textarea'",computed:!1},{value:"'number'",computed:!1},{value:"'date'",computed:!1},{value:"'option'",computed:!1},{value:"'time'",computed:!1},{value:"'custom'",computed:!1}],required:!0},description:{name:"string",required:!1},config:{name:"shape",value:{options:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1}}},required:!1},component:{name:"func",required:!1},operators:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0}}},required:!1},valueFormatter:{name:"func",required:!1}},required:!1}}},required:!1}}}},initialState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  state: ConditionBuilderState;
  enabledDefault?: boolean;
}`,signature:{properties:[{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"enabledDefault",value:{name:"boolean",required:!1}}]}},description:`Optional prop if you want to pass a saved condition state, pass as "initialState.state".
"initialState.enabledDefault" will populate the builder with the provided initial state before clicking Add Condition button.

 This state should respect the structure of condition state that is available in getConditionState callback`,type:{name:"shape",value:{state:{name:"shape",value:{groups:{name:"arrayOf",value:{name:"shape",value:{groupOperator:{name:"string",required:!1},statement:{name:"string",required:!1},conditions:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{property:{name:"string",required:!1},operator:{name:"string",required:!1},value:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}},{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}],required:!1}}},{name:"object"}]},required:!1}}},required:!1},operator:{name:"string",required:!1}},required:!1},enabledDefault:{name:"bool",required:!1}}}},getActionsState:{required:!1,tsType:{name:"signature",type:"function",raw:"(state: Action[] | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"Action[] | undefined",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},{name:"undefined"}]},name:"state"}],return:{name:"void"}}},description:"This is a callback that gives back the updated action state",type:{name:"func"}},getConditionState:{required:!0,tsType:{name:"signature",type:"function",raw:"(state: ConditionBuilderState | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"ConditionBuilderState | undefined",elements:[{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},{name:"undefined"}]},name:"state"}],return:{name:"void"}}},description:"This is a callback that gives back updated condition state",type:{name:"func"}},getOptions:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  state: ConditionBuilderState,
  condition: Condition
) => Promise<Option[]>`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"},{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}],raw:"Promise<Option[]>"}}},description:`Callback triggered to dynamically fetch options for a property of type 'option'.
This is invoked when no static options array is provided in the input config.
The function should return a Promise that resolves with an array of options in the required format.`,type:{name:"func"}},actions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:"optional array of actions",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},popOverSearchThreshold:{required:!0,tsType:{name:"number"},description:"Provide an mandatory numeric value that will be used to enable search option in the popovers with list.",type:{name:"number"}},startConditionLabel:{required:!1,tsType:{name:"string"},description:"Provide a label to the button that starts condition builder",defaultValue:{value:"'Add Condition'",computed:!1},type:{name:"string"}},variant:{required:!1,tsType:{name:"union",raw:"'Non-Hierarchical' | 'Hierarchical'",elements:[{name:"literal",value:"'Non-Hierarchical'"},{name:"literal",value:"'Hierarchical'"}]},description:"Provide the condition builder variant: Non-Hierarchical/ Hierarchical",defaultValue:{value:"'Non-Hierarchical'",computed:!1},type:{name:"enum",value:[{value:"'Non-Hierarchical'",computed:!1},{value:"'Hierarchical'",computed:!1}]}},translateWithId:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: ConditionBuilderTextKeys) => string",signature:{arguments:[{type:{name:"union",raw:`| 'ifText'
| 'unlessText'
| 'excl_if'
| 'and'
| 'or'
| 'is'
| 'ifAll'
| 'ifAny'
| 'unlessAll'
| 'unlessAny'
| 'greater'
| 'greaterEqual'
| 'lower'
| 'lowerEqual'
| 'startsWith'
| 'endsWith'
| 'contains'
| 'oneOf'
| 'before'
| 'after'
| 'between'
| 'addConditionText'
| 'addConditionGroupText'
| 'addSubgroupText'
| 'conditionText'
| 'propertyText'
| 'operatorText'
| 'valueText'
| 'connectorText'
| 'conditionRowText'
| 'conditionRowGroupText'
| 'removeConditionText'
| 'addConditionRowText'
| 'startText'
| 'endText'
| 'clearSearchText'
| 'actionsText'
| 'then'
| 'removeActionText'
| 'addActionText'
| 'invalidText'
| 'invalidNumberWarnText'
| 'conditionBuilderText'
| 'actionSectionText'
| 'conditionHeadingText'
| 'addPropertyText'
| 'addOperatorText'
| 'addValueText'
| 'conditionBuilderHierarchicalText'`,elements:[{name:"literal",value:"'ifText'"},{name:"literal",value:"'unlessText'"},{name:"literal",value:"'excl_if'"},{name:"literal",value:"'and'"},{name:"literal",value:"'or'"},{name:"literal",value:"'is'"},{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"},{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"},{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"literal",value:"'before'"},{name:"literal",value:"'after'"},{name:"literal",value:"'between'"},{name:"literal",value:"'addConditionText'"},{name:"literal",value:"'addConditionGroupText'"},{name:"literal",value:"'addSubgroupText'"},{name:"literal",value:"'conditionText'"},{name:"literal",value:"'propertyText'"},{name:"literal",value:"'operatorText'"},{name:"literal",value:"'valueText'"},{name:"literal",value:"'connectorText'"},{name:"literal",value:"'conditionRowText'"},{name:"literal",value:"'conditionRowGroupText'"},{name:"literal",value:"'removeConditionText'"},{name:"literal",value:"'addConditionRowText'"},{name:"literal",value:"'startText'"},{name:"literal",value:"'endText'"},{name:"literal",value:"'clearSearchText'"},{name:"literal",value:"'actionsText'"},{name:"literal",value:"'then'"},{name:"literal",value:"'removeActionText'"},{name:"literal",value:"'addActionText'"},{name:"literal",value:"'invalidText'"},{name:"literal",value:"'invalidNumberWarnText'"},{name:"literal",value:"'conditionBuilderText'"},{name:"literal",value:"'actionSectionText'"},{name:"literal",value:"'conditionHeadingText'"},{name:"literal",value:"'addPropertyText'"},{name:"literal",value:"'addOperatorText'"},{name:"literal",value:"'addValueText'"},{name:"literal",value:"'conditionBuilderHierarchicalText'"}]},name:"id"}],return:{name:"string"}}},description:`Optional prop, if you need to pass translations to the texts on the component instead of the defined defaults.
This callback function will receive the message id and you need to return the corresponding text for that id.`,type:{name:"func"}},statementConfigCustom:{required:!1,tsType:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,signature:{properties:[{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}]}],raw:"statementConfig[]"},description:"Optional prop for passing custom configuration for statement option from default op",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},connector:{name:"enum",value:[{value:"'and'",computed:!1},{value:"'or'",computed:!1}],required:!0},label:{name:"string",required:!0},secondaryLabel:{name:"string",required:!1}}}}},onAddItem:{required:!1,tsType:{name:"signature",type:"function",raw:"(config: AddItemConfig) => { preventAdd: boolean }",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  type: AddItemType;
  state: ConditionBuilderState;
  group?: ConditionGroup;
}`,signature:{properties:[{key:"type",value:{name:"union",raw:"'condition' | 'subgroup' | 'group'",elements:[{name:"literal",value:"'condition'"},{name:"literal",value:"'subgroup'"},{name:"literal",value:"'group'"}],required:!0}},{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"group",value:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}}]}},name:"config"}],return:{name:"signature",type:"object",raw:"{ preventAdd: boolean }",signature:{properties:[{key:"preventAdd",value:{name:"boolean",required:!0}}]}}}},description:`this is an optional callback triggered before adding any condition , subgroup or group.
User can optionally perform any validation and can stop add action if they return back {preventAdd:true}`,type:{name:"func"}}}};export{ue as C,W as H,Ae as N};
