import{e as a}from"./index-CPiZ6Cnx.js";import{c as u,P as e}from"./index-BPCFiO9b.js";import{p as f,B as o}from"./settings-41bnSjHp.js";import{L as g}from"./Link-BmRyJrPM.js";import{g as x}from"./devtools-Ca6Wku6c.js";import"./props-helper-C4WGU-Xx.js";import{S as _}from"./index-DtQVt1M7.js";import{E as w}from"./EmptyStateV2-CLfnSPcH.js";const i=`${f.prefix}--empty-state`,$="EmptyStateContent",d=({action:t,link:n,headingAs:c,size:m,subtitle:p,title:s})=>a.createElement("div",{className:`${i}__content`},a.createElement(_,{as:c,className:u(`${i}__header`,{[`${i}__header--small`]:m==="sm"})},s),p&&a.createElement("p",{className:u(`${i}__subtitle`,{[`${i}__subtitle--small`]:m==="sm"})},p),(t==null?void 0:t.text)&&(t==null?void 0:t.onClick)&&a.createElement(o,{...t,className:`${i}__action-button`,kind:t.kind||"tertiary",onClick:t.onClick,renderIcon:t.renderIcon||null,size:"sm"},t.text),(n==null?void 0:n.text)&&(n==null?void 0:n.href)&&a.createElement(g,{...n,className:`${i}__link`,href:n.href},n.text));d.displayName=$;d.propTypes={action:e.shape({...o.propTypes,iconDescription:e.string,kind:e.oneOf(["primary","secondary","tertiary"]),renderIcon:e.oneOfType([e.func,e.object]),onClick:o.propTypes.onClick,text:e.string}),headingAs:e.elementType,link:e.shape({...g.propTypes,text:e.oneOfType([e.string,e.node]),href:e.string}),size:e.oneOf(["lg","sm"]),subtitle:e.oneOfType([e.string,e.node]),title:e.oneOfType([e.string,e.node]).isRequired};d.__docgenInfo={description:"",methods:[],displayName:"EmptyStateContent",props:{action:{description:"Empty state action button",type:{name:"shape",value:{iconDescription:{name:"string",required:!1},kind:{name:"enum",value:[{value:"'primary'",computed:!1},{value:"'secondary'",computed:!1},{value:"'tertiary'",computed:!1}],required:!1},renderIcon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},onClick:{name:"custom",raw:"Button.propTypes.onClick",required:!1},text:{name:"string",required:!1}}},required:!1},headingAs:{description:"Empty state headingAs allows you to customize the type of heading element",type:{name:"elementType"},required:!1},link:{description:"Empty state link object",type:{name:"shape",value:{text:{name:"union",value:[{name:"string"},{name:"node"}],required:!1},href:{name:"string",required:!1}}},required:!1},size:{description:"Empty state size",type:{name:"enum",value:[{value:"'lg'",computed:!1},{value:"'sm'",computed:!1}]},required:!1},subtitle:{description:"Empty state subtitle",type:{name:"union",value:[{name:"string"},{name:"node"}]},required:!1},title:{description:"Empty state title",type:{name:"union",value:[{name:"string"},{name:"node"}]},required:!0}}};const r=`${f.prefix}--empty-state`,h="EmptyState",y={position:"top",size:"lg",headingAs:"h3"};let l=a.forwardRef(({v2:t=!1,...n},c)=>{if(t)return a.createElement(w,{...n});const{action:m,className:p,illustration:s,illustrationDescription:T,illustrationPosition:q=y.position,link:b,size:v=y.size,headingAs:E=y.headingAs,subtitle:k,title:C,...N}=n;return a.createElement("div",{...N,className:u(r,`${r}-type--default`,p,{[`${r}-position--${q}`]:!!s}),ref:c,...x(h)},s&&a.createElement("img",{src:s,alt:T,className:u([`${r}__illustration`,`${r}__illustration--${v}`]),"aria-hidden":"true"}),a.createElement(d,{action:m,link:b,size:v,headingAs:E,subtitle:k,title:C??""}))});l=f.checkComponentEnabled(l,h);l.propTypes={action:e.shape({...o.propTypes,kind:e.oneOf(["primary","secondary","tertiary"]),renderIcon:e.oneOfType([e.func,e.object]),onClick:o.propTypes.onClick,text:e.string}),className:e.string,headingAs:e.elementType,illustration:e.string,illustrationDescription:e.string.isRequired.if(({illustration:t})=>t),illustrationPosition:e.oneOf(["top","right","bottom","left"]),link:e.shape({...g.propTypes,text:e.oneOfType([e.string,e.node]),href:e.string}),size:e.oneOf(["lg","sm"]),subtitle:e.oneOfType([e.string,e.node]),title:e.oneOfType([e.string,e.node]).isRequired,v2:e.bool};l.displayName=h;l.__docgenInfo={description:"The `EmptyState` component follows the Carbon guidelines for empty states with some added specifications around illustration usage. For additional usage guidelines and documentation please refer to the links above.",methods:[],displayName:"EmptyState",props:{action:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  kind?: 'primary' | 'secondary' | 'tertiary';
  renderIcon?: CarbonIconType;
  onClick?: ButtonProps<React.ElementType>['onClick'];
  text?: string;
}`,signature:{properties:[{key:"kind",value:{name:"union",raw:"'primary' | 'secondary' | 'tertiary'",elements:[{name:"literal",value:"'primary'"},{name:"literal",value:"'secondary'"},{name:"literal",value:"'tertiary'"}],required:!1}},{key:"renderIcon",value:{name:"CarbonIconType",required:!1}},{key:"onClick",value:{name:"ButtonProps['onClick']",raw:"ButtonProps<React.ElementType>['onClick']",required:!1}},{key:"text",value:{name:"string",required:!1}}]}},description:"Empty state action button",type:{name:"shape",value:{kind:{name:"enum",value:[{value:"'primary'",computed:!1},{value:"'secondary'",computed:!1},{value:"'tertiary'",computed:!1}],required:!1},renderIcon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},onClick:{name:"custom",raw:"Button.propTypes.onClick",required:!1},text:{name:"string",required:!1}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},illustration:{required:!1,tsType:{name:"string"},description:"Empty state illustration, specify the `src` for a provided illustration to be displayed. In the case of requiring a light and dark illustration of your own, simply pass the corresponding illustration based on the current theme of your application.\nFor example: `illustration={appTheme === 'dark' ? darkIllustration : lightIllustration}`",type:{name:"string"}},illustrationDescription:{required:!0,tsType:{name:"string"},description:"The alt text for empty state svg images. If not provided , title will be used.",type:{name:"string"}},illustrationPosition:{required:!1,tsType:{name:"union",raw:"'top' | 'right' | 'bottom' | 'left'",elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'left'"}]},description:"Designates the position of the illustration relative to the content",type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'right'",computed:!1},{value:"'bottom'",computed:!1},{value:"'left'",computed:!1}]}},link:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  text?: string | ReactNode;
  href?: string;
}`,signature:{properties:[{key:"text",value:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}],required:!1}},{key:"href",value:{name:"string",required:!1}}]}},description:"Empty state link object",type:{name:"shape",value:{text:{name:"union",value:[{name:"string"},{name:"node"}],required:!1},href:{name:"string",required:!1}}}},headingAs:{required:!1,tsType:{name:"union",raw:"(() => ReactNode) | string | ElementType",elements:[{name:"unknown"},{name:"string"},{name:"ElementType"}]},description:"Empty state headingAs allows you to customize the type of heading element",type:{name:"elementType"}},size:{required:!1,tsType:{name:"union",raw:"'lg' | 'sm'",elements:[{name:"literal",value:"'lg'"},{name:"literal",value:"'sm'"}]},description:"Empty state size",type:{name:"enum",value:[{value:"'lg'",computed:!1},{value:"'sm'",computed:!1}]}},subtitle:{required:!1,tsType:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}]},description:"Empty state subtitle",type:{name:"union",value:[{name:"string"},{name:"node"}]}},title:{required:!0,tsType:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}]},description:"Empty state title",type:{name:"union",value:[{name:"string"},{name:"node"}]}},v2:{required:!1,tsType:{name:"boolean"},description:`Designates which version of the EmptyState component is being used.
Refer to V2 documentation separately.`,defaultValue:{value:"false",computed:!1},type:{name:"bool"}}}};export{d as E,l as a,y as d};
