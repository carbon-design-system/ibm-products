import{e}from"./index-BOZkNhcz.js";import{b as oe}from"./index--clQM3eT.js";import{G as re}from"./Grid-D2-CuTqT.js";import{C as te}from"./Column-DDtOIyjn.js";import{T as ne,a as ae,b as ce,A as ie,c as se}from"./index-CKq6Ewiq.js";import{S as le}from"./StoryDocsPage-CSGBKR-8.js";import{a as n}from"./chunk-D5ZWXAHU-DlerbUHg.js";import{P as J}from"./ProductiveCard-CkZOYWuS.js";import{e as de}from"./bucket-9-C6VBS02H.js";import{a as me}from"./bucket-6-B5NNCZ27.js";import{T as Q}from"./bucket-17-Dbz5FtJu.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-hBZdtWkn.js";import"./index-2uioG_CI.js";import"./index-YZUn1U4D.js";import"./settings-BYgtfLKl.js";import"./events-OVwOsPzJ.js";import"./index-k6DjlwLo.js";import"./iframe-CFrrarbq.js";import"./index-CO8sV34W.js";import"./index-ogSvIofg.js";import"./story-helper-DEC8H8IF.js";import"./v4-CtRu48qb.js";import"./devtools-BSXGZlBP.js";import"./props-helper-BNocl_Zr.js";import"./Card-8A-NkwsR.js";import"./MenuItem-BSeNOHR5.js";import"./useControllableState-BHFQnaNh.js";import"./useAttachedMenu-BS0JXRSz.js";import"./Text-C-NQiyV2.js";import"./bucket-2-rFuAlaTW.js";import"./index-0E3e6jj2.js";import"./mergeRefs-CTUecegF.js";import"./bucket-12-BQFRxjkG.js";import"./wrapFocus-DuCohhwL.js";import"./index-_87NmGAs.js";import"./LayerContext-DxTbsTfh.js";const ue="#root{inline-size:100%}.productive-card-stories__graph{border:10px solid var(--cds-border-subtle-01, #c6c6c6);margin:0 auto 1.5rem;block-size:100px;border-block-end:0;border-inline-end-color:var(--cds-support-success, #24a148);border-inline-start-color:var(--cds-support-error, #da1e28);border-start-end-radius:110px;border-start-start-radius:110px;inline-size:200px}.productive-card-stories__visually-hidden{position:absolute;overflow:hidden;padding:0;border:0;block-size:1px;clip:rect(0,0,0,0);inline-size:1px;visibility:inherit;white-space:nowrap}",V=()=>e.createElement(le,{blocks:[{story:u},{story:m},{story:a},{story:s},{story:d},{story:g},{story:p},{story:c},{story:i},{story:l},{title:"With AI label",description:"An AI Label is intended for any scenario where something is being generated by AI to reinforce AI transparency, accountability, and explainability at the UI level.",source:{language:"html",code:`
          <ProductiveCard
  onClick={() => {}}
  onKeyDown={() => {}}
  primaryButtonText="Ghost button"
  decorator={<AILabel>...</AILabel> || true}
  title="Title"
>
  <React.Fragment key=".0">
    <div className="graph" />
    <p>
      Productive content text
    </p>
    <p>
      Productive content text
    </p>
  </React.Fragment>
</ProductiveCard>
          `}},{description:"Clickable tiles only accept a boolean value of true for the decorator property.",source:{language:"html",code:`
          <ProductiveCard
  onClick={() => {}}
  onKeyDown={() => {}}
  primaryButtonText="Ghost button"
  decorator={true}
  title="Title"
>
  <React.Fragment key=".0">
    <div className="graph" />
    <p>
      Productive content text
    </p>
    <p>
      Productive content text
    </p>
  </React.Fragment>
</ProductiveCard>
          `}}]});V.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const z="productive-card-stories",pe=o=>{switch(o){case 1:return e.createElement(ie,{className:"decorator-container",size:"xs"},e.createElement(se,null,e.createElement("div",null,e.createElement("p",{className:"secondary"},"AI Explained"),e.createElement("h1",null,"84%"),e.createElement("p",{className:"secondary bold"},"Confidence score"),e.createElement("p",{className:"secondary"},"This is not really Lorem Ipsum but the spell checker did not like the previous text with it's non-words which is why this unwieldy sentence, should one choose to call it that, here."),e.createElement("hr",null),e.createElement("p",{className:"secondary"},"Model type"),e.createElement("p",{className:"bold"},"Foundation model"))));case 2:return e.createElement(ne,null,e.createElement(ae,{label:"Additional information"},e.createElement(de,null)),e.createElement(ce,null,e.createElement("p",null,"Custom content here")));default:return}},Xe={title:"IBM Products/Components/Cards/ProductiveCard",component:J,tags:["autodocs"],parameters:{styles:ue,docs:{page:V}},argTypes:{columnSizeSm:{control:{type:"select"},options:[4,8,12,16]},columnSizeMd:{control:{type:"select"},options:[4,8,12,16]},columnSizeLg:{control:{type:"select"},options:[4,8,12,16]},slug:{control:{type:"select",labels:{0:"No AI slug",1:"with AI Slug"},default:0},options:[!1,!0]},decorator:{control:{type:"select",labels:{0:"No AI label",1:"with AI label",2:"With non AI Label component",3:"with hollow AI label (boolean)"},default:0},options:[0,1,2,3]}},decorators:[o=>{const S=oe();return e.createElement("div",{className:`${S}--grid card-story`},o())}]},r={title:"Title",columnSizeSm:4,columnSizeMd:8,columnSizeLg:4,children:e.createElement(e.Fragment,null,e.createElement("div",{className:`${z}__graph`},e.createElement("span",{className:`${z}__visually-hidden`},"graph showing progress")),e.createElement("p",null,"Productive content text"),e.createElement("p",null,"Productive content text")),actionIcons:[{id:"1",icon:o=>e.createElement(me,{size:16,...o}),onClick:n("on click"),iconDescription:"Edit"},{id:"2",icon:o=>e.createElement(Q,{size:16,...o}),onClick:n("on click"),iconDescription:"Delete"}]},t=o=>{const{children:S,columnSizeSm:X,columnSizeMd:Y,columnSizeLg:Z,decorator:h,...ee}=o;return e.createElement(re,null,e.createElement(te,{sm:X,md:Y,lg:Z},e.createElement(J,{...ee,decorator:h&&(h===3||pe(h))},S)))},a=t.bind({});a.args={...r};const c=t.bind({});c.args={...r,description:"caption"};const i=t.bind({});i.args={...r,label:"Label"};const s=t.bind({});s.args={...r,title:"",label:"Label",actionsPlacement:"bottom",primaryButtonText:"Read more"};const l=t.bind({});l.args={...r,iconDescription:"Option",overflowAriaLabel:"Overflow menu",overflowActions:[{id:"1",itemText:"Edit",onClick:n("on click"),onKeyDown:n("on keydown")},{id:"2",itemText:"Delete",onClick:n("on click"),onKeyDown:n("on keydown")}]};const d=t.bind({});d.args={...r,primaryButtonText:"Read more"};const m=t.bind({});m.args={...r,primaryButtonText:"Read more",actionsPlacement:"bottom",title:"",label:"Label"};const u=t.bind({});u.args={...r,onClick:n("on click"),onKeyDown:n("on keydown"),primaryButtonText:"Read more",actionIcons:[]};const p=t.bind({});p.args={...r,primaryButtonText:"Read more",primaryButtonHref:"#"};const g=t.bind({});g.args={...r,primaryButtonPlacement:"top",primaryButtonText:"Read more",primaryButtonIcon:o=>e.createElement(Q,{size:16,...o}),primaryButtonDisabled:!0};var C,b,y;a.parameters={...a.parameters,docs:{...(C=a.parameters)==null?void 0:C.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ProductiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ProductiveCard>
      </Column>
    </Grid>;
}`,...(y=(b=a.parameters)==null?void 0:b.docs)==null?void 0:y.source}}};var v,P,f;c.parameters={...c.parameters,docs:{...(v=c.parameters)==null?void 0:v.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ProductiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ProductiveCard>
      </Column>
    </Grid>;
}`,...(f=(P=c.parameters)==null?void 0:P.docs)==null?void 0:f.source}}};var L,x,E;i.parameters={...i.parameters,docs:{...(L=i.parameters)==null?void 0:L.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ProductiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ProductiveCard>
      </Column>
    </Grid>;
}`,...(E=(x=i.parameters)==null?void 0:x.docs)==null?void 0:E.source}}};var w,D,G;s.parameters={...s.parameters,docs:{...(w=s.parameters)==null?void 0:w.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ProductiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ProductiveCard>
      </Column>
    </Grid>;
}`,...(G=(D=s.parameters)==null?void 0:D.docs)==null?void 0:G.source}}};var k,B,M;l.parameters={...l.parameters,docs:{...(k=l.parameters)==null?void 0:k.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ProductiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ProductiveCard>
      </Column>
    </Grid>;
}`,...(M=(B=l.parameters)==null?void 0:B.docs)==null?void 0:M.source}}};var A,I,T;d.parameters={...d.parameters,docs:{...(A=d.parameters)==null?void 0:A.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ProductiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ProductiveCard>
      </Column>
    </Grid>;
}`,...(T=(I=d.parameters)==null?void 0:I.docs)==null?void 0:T.source}}};var N,_,W;m.parameters={...m.parameters,docs:{...(N=m.parameters)==null?void 0:N.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ProductiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ProductiveCard>
      </Column>
    </Grid>;
}`,...(W=(_=m.parameters)==null?void 0:_.docs)==null?void 0:W.source}}};var R,O,F;u.parameters={...u.parameters,docs:{...(R=u.parameters)==null?void 0:R.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ProductiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ProductiveCard>
      </Column>
    </Grid>;
}`,...(F=(O=u.parameters)==null?void 0:O.docs)==null?void 0:F.source}}};var K,H,$;p.parameters={...p.parameters,docs:{...(K=p.parameters)==null?void 0:K.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ProductiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ProductiveCard>
      </Column>
    </Grid>;
}`,...($=(H=p.parameters)==null?void 0:H.docs)==null?void 0:$.source}}};var U,j,q;g.parameters={...g.parameters,docs:{...(U=g.parameters)==null?void 0:U.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ProductiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ProductiveCard>
      </Column>
    </Grid>;
}`,...(q=(j=g.parameters)==null?void 0:j.docs)==null?void 0:q.source}}};const Ye=["Default","WithCaption","WithLabel","LabelOnly","WithOverflow","SupplementalBottomBar","ComplexBottomBar","Clickable","WithButtonHref","WithActionGhostButton"];export{u as Clickable,m as ComplexBottomBar,a as Default,s as LabelOnly,d as SupplementalBottomBar,g as WithActionGhostButton,p as WithButtonHref,c as WithCaption,i as WithLabel,l as WithOverflow,Ye as __namedExportsOrder,Xe as default};
