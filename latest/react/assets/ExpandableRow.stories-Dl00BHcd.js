import{e as i,S as u,r as x}from"./iframe-BlQ-LkYW.js";import{g}from"./getBatchActions-CPWKwg1Q.js";import{s as w,m as E}from"./_storybook-styles-CVByPx4P.js";import{D as f}from"./DatagridActions-rp_PS2EP.js";import{D as S}from"./DatagridPagination-BLPg-9LM.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-CnxV8z7J.js";import{u as h}from"./useExpandedRow-vHpfruXw.js";import{u as D}from"./useSelectRows-41OVCwd5.js";import{u as C}from"./useStickyColumn-LptrHT6Y.js";import{u as R}from"./usePrefix-CPqhYRS6.js";import{E as H}from"./bucket-6-C4pRq2Bl.js";import{T as b}from"./bucket-17-CcHsRNDR.js";import"./bucket-0-6Q7N9SpP.js";import"./bucket-2-BDIkUbzC.js";import"./index-CgaasdUn.js";import"./bucket-18-Bl8QDCbK.js";import"./bucket-7-DldHT251.js";import"./ComposedModal-CtswQ6eu.js";import"./index-BEhuL1MR.js";import"./index-DZN9_q_B.js";import"./LayerContext-BvuXYV0V.js";import"./clamp--00YEiB8.js";import"./ButtonSet-BLtxr1g9.js";import"./InlineLoading-BiPU-E2v.js";import"./mergeRefs-91-mP8KM.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-C2HPB9zJ.js";import"./Text-DSSpV4WJ.js";import"./utils-BevHIbez.js";import"./TableToolbarSearch-DhPhQlSt.js";import"./wrapComponent-BDK0h1Zk.js";import"./Search-KyKbUvD4.js";import"./FormContext-DkhQXZ0G.js";import"./bucket-15-CM_J5Vvb.js";import"./Dropdown-BvmhsKBp.js";import"./index-CXYHyzp2.js";import"./inheritsLoose-DHKJTbHM.js";import"./bucket-19-Ds7BYjit.js";import"./MenuItem-Cde_w9Z-.js";import"./useControllableState-C05qBH-j.js";import"./useAttachedMenu-BakFN8R8.js";import"./index-CFF1FOUA.js";import"./index-VNwEaoKl.js";import"./bucket-12-DYGdvqH1.js";import"./useOutsideClick-DRiKtgqC.js";import"./OverflowMenuItem-ByvfIQCP.js";import"./useFilterContext-hthDLudy.js";import"./bucket-14-DLbuTogh.js";import"./Pagination-DuhC2SEM.js";import"./Select-PlQrN08w.js";import"./SelectItem-ipEXQ9_P.js";import"./MultiSelect-B_rQyAfc.js";import"./Checkbox-KCN2jQ_S.js";import"./devtools-BJZSxg-N.js";import"./TableRow-BYIk4P8t.js";import"./bucket-1-DU5MGOmF.js";import"./TableToolbar-BKBISmpj.js";import"./index-DNGc5teW.js";import"./ErrorEmptyState-DN0qShT7.js";import"./EmptyState-UEgZGf8z.js";import"./EmptyStateV2.deprecated-CJfAaoaS.js";import"./Link-CMYINvP1.js";import"./ErrorIllustration-D8EqFHGf.js";import"./useId-C2_b1b81.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-Ct01DPXx.js";import"./NoDataIllustration-D99JvkUc.js";import"./NotFoundEmptyState-CExQFyMc.js";import"./NotFoundIllustration-B0zRLUCn.js";import"./index.esm-B2BF8_Xw.js";import"./usePreviousValue-BfWd4m5G.js";import"./useResizeObserver-w8n_UuuT.js";import"./useIsomorphicEffect-BIhftj2z.js";import"./getFocusableElements-BW7cf991.js";import"./index-DwBZIlXB.js";import"./props-helper-DmAPJ46T.js";import"./useClickOutside-j6p6RzvJ.js";import"./AccordionItem-BhtMrcrS.js";import"./DatePicker-DamDW6cE.js";import"./FormGroup-B1IMtc-E.js";import"./NumberInput-bpDngU1O.js";import"./useNormalizedInputProps-Dz70CF1S.js";import"./documentLang-E105Y72C.js";import"./bucket-16-D881Un-v.js";import"./RadioButton-zRgIFODd.js";import"./RadioButtonGroup-eRaykhRX.js";import"./usePrefersReducedMotion-C1fBtu2H.js";import"./usePresence-tZhDiWEQ.js";import"./ActionSet-DxtE6QvT.js";import"./useWindowResize-DGjBxvCI.js";import"./TagSet-Dhe0S5N8.js";import"./Tag-CsYb8P2P.js";import"./DefinitionTooltip-Ch2quHzY.js";import"./DismissibleTag-Da7z3e6w.js";import"./usePortalTarget-a9acdh7P.js";import"./OperationalTag-BUphsu11.js";import"./SkeletonText-DEkHw7eg.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-BBFnW6rv.js";import"./TableSelectRow-JZBhanNh.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,bt={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const Bt=["ExpandableRowStory"];export{e as ExpandableRowStory,Bt as __namedExportsOrder,bt as default};
