import{e as i,S as u,r as x}from"./iframe-BIFZhnVI.js";import{g}from"./getBatchActions-DToJZjjE.js";import{s as w,m as E}from"./_storybook-styles-BfIyjn8_.js";import{D as f}from"./DatagridActions-DBkBhiJd.js";import{D as S}from"./DatagridPagination-DQ2-cFj_.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-D5qrL6yy.js";import{u as h}from"./useExpandedRow-7RHY9gu9.js";import{u as D}from"./useSelectRows-BfgOkMyy.js";import{u as C}from"./useStickyColumn-D9XnW8Cy.js";import{u as R}from"./usePrefix-DmF3YAi8.js";import{E as H}from"./bucket-6-D78KEThR.js";import{T as b}from"./bucket-17-k5VeaHnj.js";import"./bucket-0-DCpLKNHt.js";import"./bucket-2-CqoFS1Sx.js";import"./index-f5OplNpe.js";import"./bucket-18-gGZYZqnV.js";import"./bucket-7-BZOQq6pn.js";import"./ComposedModal-BRvJkANc.js";import"./index-BEhuL1MR.js";import"./index-YsSTEGS5.js";import"./LayerContext-F4WW4Vix.js";import"./clamp--00YEiB8.js";import"./ButtonSet-BoMgkE12.js";import"./InlineLoading-D2bFvRJo.js";import"./mergeRefs-91-mP8KM.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-Cv59NQgU.js";import"./Text-De_FGo-w.js";import"./utils-Dr8OqWgi.js";import"./TableToolbarSearch-DVVHyzNw.js";import"./wrapComponent-kYzNr5sH.js";import"./Search-DEL4HtAI.js";import"./FormContext-CFAm_7fa.js";import"./bucket-15-DlwXdW_V.js";import"./Dropdown-DEWyiB4Z.js";import"./index-DGan2qnv.js";import"./inheritsLoose-DHKJTbHM.js";import"./bucket-19-BZJlF_R9.js";import"./MenuItem-DIiYNEEd.js";import"./useControllableState-BX4U6x41.js";import"./useAttachedMenu-C5NN-QeW.js";import"./index-C3kjPWmu.js";import"./index-B07VMW4b.js";import"./bucket-12-Dw8KRV1d.js";import"./useOutsideClick-BnL9xlTI.js";import"./OverflowMenuItem-B0PP6aBA.js";import"./useFilterContext-gSxb74Y3.js";import"./bucket-14-CaGhjY69.js";import"./Pagination-D6Slj1AE.js";import"./Select-CfUVGuGE.js";import"./SelectItem-Bff0K9Wo.js";import"./MultiSelect-CWe0g1Uo.js";import"./Checkbox-DDtP4ZQv.js";import"./devtools-CwY7Nwoz.js";import"./TableRow-B6VPz9a-.js";import"./bucket-1-CXEoC0iP.js";import"./TableToolbar-T-iysOV6.js";import"./index-Cadwwfc1.js";import"./ErrorEmptyState-CbL2u_XG.js";import"./EmptyState-Coy_-JQD.js";import"./EmptyStateV2-C0zlLdVw.js";import"./Link-D35FEmIt.js";import"./props-helper-DjmSBFn9.js";import"./ErrorIllustration--hNj3dSx.js";import"./useId-C3GxNxEZ.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-PpjlCL-m.js";import"./NoDataIllustration-D8JES9HQ.js";import"./NotFoundEmptyState-BXqnSAGu.js";import"./NotFoundIllustration-kgt-4xOe.js";import"./index.esm-BkTKBd1Q.js";import"./usePreviousValue-CmKce-sY.js";import"./useResizeObserver-BEXCT2dX.js";import"./useIsomorphicEffect-BtioHI2r.js";import"./getFocusableElements-BW7cf991.js";import"./index-DEXbOqQ6.js";import"./useClickOutside-BAzBLvYA.js";import"./AccordionItem-DUCphrnj.js";import"./DatePicker-r9P7J_vL.js";import"./FormGroup-OjAZbJ3E.js";import"./NumberInput-B58ny9xU.js";import"./useNormalizedInputProps-DQpAPIMf.js";import"./documentLang-E105Y72C.js";import"./bucket-16-VXRgqweq.js";import"./RadioButton-BC5PUZAl.js";import"./RadioButtonGroup-CdXWCA6g.js";import"./usePrefersReducedMotion-CJIZ4eYS.js";import"./usePresence-DPgtSzPE.js";import"./ActionSet-CJUwVbYk.js";import"./useWindowResize-C_XlvzvM.js";import"./TagSet-Cog8SJk6.js";import"./Tag-Dt3sXznE.js";import"./DefinitionTooltip-CFqcVxyo.js";import"./DismissibleTag-DZT3OLx0.js";import"./usePortalTarget-BsUxYanV.js";import"./OperationalTag-D498OLpq.js";import"./SkeletonText-nu44_sil.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-Bb7bB3G3.js";import"./TableSelectRow-DfJpQmv8.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,bt={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const Bt=["ExpandableRowStory"];export{e as ExpandableRowStory,Bt as __namedExportsOrder,bt as default};
