# Creates and pushes release tag, then creates release notes from the changelogs.
# Creates PR to merge changelog and version bump updates from release to main branch
name: Create github tag and PR

on:
  workflow_dispatch:
    inputs:
      tag:
        # Recently published version
        required: true
        description: 'release tag (ie. v2.46.0-rc.0)'
        type: string
        default: 'v2.46.0-rc.0'
      previous-tag:
        # Previous release tag to grab changelogs from
        # To pick the previous tag:
        # - If published tag is the first release candidate, choose the previous full release tag.
        # - If published tag is a subsequent release candidate, choose the previous release candidate.
        # - If published tag is a full release, choose the previous full release tag.
        required: true
        description: 'previous release tag (ie. v2.45.0)'
        type: string
        default: 'v2.45.0'
      create-pr:
        # set to true to create PR to merge changes from release to `main` branch
        required: true
        description: 'Create PR?'
        type: boolean
        default: true

jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    if: github.event.inputs.create-pr == 'true'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: '0'

      # https://github.com/actions/checkout#push-a-commit-using-the-built-in-token
      - run: |
          git config --global user.email ${{ secrets.CARBON_BOT_EMAIL }}
          git config --global user.name ${{ secrets.CARBON_BOT_NAME }}

      # Create a new branch off the release branch for the PR, we do this to ensure the release branch
      # is not affected
      - name: Create branch
        run: |
          git checkout -b chore/${{ github.event.inputs.tag }}-release
          git push origin chore/${{ github.event.inputs.tag }}-release
      # Create PR with the new branch
      - name: Create Pull Request
        run: |
          gh pr create -B main -H chore/${{ github.event.inputs.tag }}-release --title 'chore(release): ${{ github.event.inputs.tag }}' --body 'Automated release PR for ${{ github.event.inputs.tag }}
            **Checklist**
            - [ ] Verify package version bumps are accurate
            - [ ] Verify CI passes as expected'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # This job creates the git tag for the release (ie. v2.47.0)
  create-release-tag:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: '0'
          token: ${{ secrets.GH_TOKEN_LERNA }} # https://github.com/lerna/lerna/issues/1957

      # https://github.com/actions/checkout#push-a-commit-using-the-built-in-token
      - run: |
          git config --global user.email ${{ secrets.CARBON_BOT_EMAIL }}
          git config --global user.name ${{ secrets.CARBON_BOT_NAME }}
      - name: Create tag and push
        run: |
          git tag -a ${{ github.event.inputs.tag }} -m "Release ${{ github.event.inputs.tag }}"
          git push origin ${{ github.event.inputs.tag }}

  # This job creates the release with the git tag pushed from job above with the corresponding
  # release notes from the previous version to current
  create-release:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: create-release-tag
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: '0'
      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '20.x'
          registry-url: https://registry.npmjs.org
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install

      # Generate the changelog with the local 'get-changelog.js' script and output to 'changelog.txt' file
      - name: Run changelog script
        id: run-changelog
        run: |
          node ./scripts/get-changelog.js -f ${{ github.event.inputs.previous-tag }} -t ${{ github.event.inputs.tag }} >> changelog.txt

      # Creates the release with the generated changelog
      - uses: ncipollo/release-action@v1
        with:
          tag: '${{ github.event.inputs.tag }}'
          name: '${{ github.event.inputs.tag }}'
          prerelease: true
          bodyFile: './changelog.txt'
