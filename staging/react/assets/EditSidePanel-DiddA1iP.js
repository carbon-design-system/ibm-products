import{e as i,c as C,p as _,P as e}from"./iframe-DKsKIeO_.js";import{F as k}from"./Form-B0Mw3yPK.js";import{g as E}from"./devtools-Bn3omVKL.js";import{u as O}from"./uuidv4-BN2rGLQG.js";import{S as D}from"./SidePanel-DF1Wn0Ci.js";const t=`${_.prefix}--edit-side-panel`,l="EditSidePanel",n=i.forwardRef(({children:d,className:p,disableSubmit:m,id:u,formTitle:a,formDescription:r,onRequestClose:s,onRequestSubmit:c,open:f,placement:h="right",primaryButtonText:y,secondaryButtonText:g,selectorPrimaryFocus:b,selectorPageContent:v,size:T="md",slideIn:q,subtitle:S,title:x,...P},w)=>{const R=[{label:y,onClick:N=>{N.preventDefault(),c?.()},kind:"primary",disabled:m,type:"submit"},{label:g,onClick:s,kind:"secondary"}],o=O();return i.createElement(D,{...P,open:f,ref:w,selectorPageContent:v,onRequestClose:s,title:x,subtitle:S,selectorPrimaryFocus:b,id:u,...E(l),placement:h,slideIn:q,animateTitle:!1,className:C(t,p),size:T,preventCloseOnClickOutside:!0,actions:R},a&&i.createElement("h3",{id:o,className:`${t}__form-title-text ${t}__content-text`},a),r&&i.createElement("p",{className:`${t}__form-description-text ${t}__content-text`},r),i.createElement(k,{className:`${t}__form`,"aria-labelledby":o},d))});n.deprecated={level:"warn",details:"This component is deprecated and will be removed in the next major version."};n.displayName=l;n.propTypes={children:e.oneOfType([e.arrayOf(e.node),e.node]).isRequired,className:e.string,disableSubmit:e.bool,formDescription:e.node,formTitle:e.node.isRequired,id:e.string,onRequestClose:e.func,onRequestSubmit:e.func,open:e.bool.isRequired,placement:e.oneOf(["left","right"]),primaryButtonText:e.string.isRequired,secondaryButtonText:e.string.isRequired,selectorPageContent:e.string,selectorPrimaryFocus:e.node.isRequired,size:e.oneOf(["xs","sm","md","lg","2xl"]),slideIn:e.bool,slug:e.node,subtitle:e.node,title:e.node.isRequired};n.__docgenInfo={description:`**This component is deprecated.** <br>
Use with medium complexity edits if the user needs page context.
@deprecated`,methods:[],displayName:"EditSidePanel",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Sets the body content of the create side panel",type:{name:"union",value:[{name:"arrayOf",value:{name:"node"}},{name:"node"}]}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},disableSubmit:{required:!1,tsType:{name:"boolean"},description:"Specifies a boolean for disabling or enabling the primary button. This is important for form validation\nReturning `true` prevents the primary button from being clicked until required fields are completed.",type:{name:"bool"}},formDescription:{required:!1,tsType:{name:"ReactNode"},description:"Specifies an optional field that provides a additional context for a form",type:{name:"node"}},formTitle:{required:!0,tsType:{name:"ReactNode"},description:"Specifies a required field that provides a title for a form",type:{name:"node"}},id:{required:!1,tsType:{name:"string"},description:"Unique identifier",type:{name:"string"}},onRequestClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:`Specifies an optional handler which is called when the CreateSidePanel
is closed.`,type:{name:"func"}},onRequestSubmit:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:`Specifies an optional handler which is called when the CreateSidePanel
primary button is pressed.`,type:{name:"func"}},open:{required:!0,tsType:{name:"boolean"},description:"Specifies whether the CreateSidePanel is open or not.",type:{name:"bool"}},placement:{required:!1,tsType:{name:"union",raw:"'left' | 'right'",elements:[{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}]},description:"Determines if the side panel is on the right or left",defaultValue:{value:"'right'",computed:!1},type:{name:"enum",value:[{value:"'left'",computed:!1},{value:"'right'",computed:!1}]}},primaryButtonText:{required:!0,tsType:{name:"string"},description:"Specifies the primary button's text in the modal.",type:{name:"string"}},secondaryButtonText:{required:!0,tsType:{name:"string"},description:"Specifies the secondary button's text in the modal.",type:{name:"string"}},selectorPageContent:{required:!1,tsType:{name:"string"},description:"This is the selector to the element that contains all of the page content that will shrink if the panel is a slide in.\nThis prop is required when using the `slideIn` variant of the side panel.",type:{name:"string"}},selectorPrimaryFocus:{required:!0,tsType:{name:"string"},description:"Specifies which DOM element in the form should be focused.",type:{name:"node"}},size:{required:!1,tsType:{name:"union",raw:"'xs' | 'sm' | 'md' | 'lg' | '2xl'",elements:[{name:"literal",value:"'xs'"},{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"},{name:"literal",value:"'2xl'"}]},description:"Sets the size of the side panel",defaultValue:{value:"'md'",computed:!1},type:{name:"enum",value:[{value:"'xs'",computed:!1},{value:"'sm'",computed:!1},{value:"'md'",computed:!1},{value:"'lg'",computed:!1},{value:"'2xl'",computed:!1}]}},slideIn:{required:!1,tsType:{name:"boolean"},description:"Specifies which DOM element in the form should be focused.",type:{name:"bool"}},slug:{required:!1,tsType:{name:"ReactNode"},description:"**Experimental:** Provide a `Slug` component to be rendered inside the `SidePanel` component",type:{name:"node"}},subtitle:{required:!1,tsType:{name:"ReactNode"},description:"The subtitle of the CreateSidePanel is optional and serves to provide more information about the modal.",type:{name:"node"}},title:{required:!0,tsType:{name:"string"},description:"The title of the CreateSidePanel is usually the product or service name.",type:{name:"node"}}}};export{n as E};
