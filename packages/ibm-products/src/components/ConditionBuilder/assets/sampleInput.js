/**
 * Copyright IBM Corp. 2024
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
//cspell:disable
import {
  Calendar,
  ColorPalette,
  Cube,
  Currency,
  DeliveryTruck,
  Earth,
  Flag,
  Hashtag,
  Tree,
} from '@carbon/react/icons';
import CustomInput from './CustomInput';
import React from 'react';

const regions = [
  ['AF', 'Afghanistan'],
  ['AX', 'Åland Islands'],
  ['AL', 'Albania'],
  ['DZ', 'Algeria'],
  ['AS', 'American Samoa'],
  ['AD', 'Andorra'],
  ['AO', 'Angola'],
  ['AI', 'Anguilla'],
  ['AQ', 'Antarctica'],
  ['AG', 'Antigua & Barbuda'],
  ['AR', 'Argentina'],
  ['AM', 'Armenia'],
  ['AW', 'Aruba'],
  ['AC', 'Ascension Island'],
  ['AU', 'Australia'],
  ['AT', 'Austria'],
  ['AZ', 'Azerbaijan'],
  ['BS', 'Bahamas'],
  ['BH', 'Bahrain'],
  ['BD', 'Bangladesh'],
  ['BB', 'Barbados'],
  ['BY', 'Belarus'],
  ['BE', 'Belgium'],
  ['BZ', 'Belize'],
  ['BJ', 'Benin'],
  ['BM', 'Bermuda'],
  ['BT', 'Bhutan'],
  ['BO', 'Bolivia'],
  ['BA', 'Bosnia & Herzegovina'],
  ['BW', 'Botswana'],
  ['BV', 'Bouvet Island'],
  ['BR', 'Brazil'],
  ['IO', 'British Indian Ocean Territory'],
  ['VG', 'British Virgin Islands'],
  ['BN', 'Brunei'],
  ['BG', 'Bulgaria'],
  ['BF', 'Burkina Faso'],
  ['BI', 'Burundi'],
  ['KH', 'Cambodia'],
  ['CM', 'Cameroon'],
  ['CA', 'Canada'],
  ['IC', 'Canary Islands'],
  ['CV', 'Cape Verde'],
  ['BQ', 'Caribbean Netherlands'],
  ['KY', 'Cayman Islands'],
  ['CF', 'Central African Republic'],
  ['EA', 'Ceuta & Melilla'],
  ['TD', 'Chad'],
  ['CL', 'Chile'],
  ['CN', 'China'],
  ['CX', 'Christmas Island'],
  ['CP', 'Clipperton Island'],
  ['CC', 'Cocos (Keeling) Islands'],
  ['CO', 'Colombia'],
  ['KM', 'Comoros'],
  ['CG', 'Congo - Brazzaville'],
  ['CD', 'Congo - Kinshasa'],
  ['CK', 'Cook Islands'],
  ['CR', 'Costa Rica'],
  ['CI', "Côte d'Ivoire"],
  ['HR', 'Croatia'],
  ['CU', 'Cuba'],
  ['CW', 'Curaçao'],
  ['CY', 'Cyprus'],
  ['CZ', 'Czechia'],
  ['DK', 'Denmark'],
  ['DG', 'Diego Garcia'],
  ['DJ', 'Djibouti'],
  ['DM', 'Dominica'],
  ['DO', 'Dominican Republic'],
  ['EC', 'Ecuador'],
  ['EG', 'Egypt'],
  ['SV', 'El Salvador'],
  ['GQ', 'Equatorial Guinea'],
  ['ER', 'Eritrea'],
  ['EE', 'Estonia'],
  ['SZ', 'Eswatini'],
  ['ET', 'Ethiopia'],
  ['EU', 'European Union'],
  ['FK', 'Falkland Islands'],
  ['FO', 'Faroe Islands'],
  ['FJ', 'Fiji'],
  ['FI', 'Finland'],
  ['FR', 'France'],
  ['GF', 'French Guiana'],
  ['PF', 'French Polynesia'],
  ['TF', 'French Southern Territories'],
  ['GA', 'Gabon'],
  ['GM', 'Gambia'],
  ['GE', 'Georgia'],
  ['DE', 'Germany'],
  ['GH', 'Ghana'],
  ['GI', 'Gibraltar'],
  ['GR', 'Greece'],
  ['GL', 'Greenland'],
  ['GD', 'Grenada'],
  ['GP', 'Guadeloupe'],
  ['GU', 'Guam'],
  ['GT', 'Guatemala'],
  ['GG', 'Guernsey'],
  ['GN', 'Guinea'],
  ['GW', 'Guinea-Bissau'],
  ['GY', 'Guyana'],
  ['HT', 'Haiti'],
  ['HM', 'Heard & McDonald Islands'],
  ['HN', 'Honduras'],
  ['HK', 'Hong Kong SAR China'],
  ['HU', 'Hungary'],
  ['IS', 'Iceland'],
  ['IN', 'India'],
  ['ID', 'Indonesia'],
  ['IR', 'Iran'],
  ['IQ', 'Iraq'],
  ['IE', 'Ireland'],
  ['IM', 'Isle of Man'],
  ['IL', 'Israel'],
  ['IT', 'Italy'],
  ['JM', 'Jamaica'],
  ['JP', 'Japan'],
  ['JE', 'Jersey'],
  ['JO', 'Jordan'],
  ['KZ', 'Kazakhstan'],
  ['KE', 'Kenya'],
  ['KI', 'Kiribati'],
  ['XK', 'Kosovo'],
  ['KW', 'Kuwait'],
  ['KG', 'Kyrgyzstan'],
  ['LA', 'Laos'],
  ['LV', 'Latvia'],
  ['LB', 'Lebanon'],
  ['LS', 'Lesotho'],
  ['LR', 'Liberia'],
  ['LY', 'Libya'],
  ['LI', 'Liechtenstein'],
  ['LT', 'Lithuania'],
  ['LU', 'Luxembourg'],
  ['MO', 'Macao SAR China'],
  ['MG', 'Madagascar'],
  ['MW', 'Malawi'],
  ['MY', 'Malaysia'],
  ['MV', 'Maldives'],
  ['ML', 'Mali'],
  ['MT', 'Malta'],
  ['MH', 'Marshall Islands'],
  ['MQ', 'Martinique'],
  ['MR', 'Mauritania'],
  ['MU', 'Mauritius'],
  ['YT', 'Mayotte'],
  ['MX', 'Mexico'],
  ['FM', 'Micronesia'],
  ['MD', 'Moldova'],
  ['MC', 'Monaco'],
  ['MN', 'Mongolia'],
  ['ME', 'Montenegro'],
  ['MS', 'Montserrat'],
  ['MA', 'Morocco'],
  ['MZ', 'Mozambique'],
  ['MM', 'Myanmar (Burma)'],
  ['NA', 'Namibia'],
  ['NR', 'Nauru'],
  ['NP', 'Nepal'],
  ['NL', 'Netherlands'],
  ['NC', 'New Caledonia'],
  ['NZ', 'New Zealand'],
  ['NI', 'Nicaragua'],
  ['NE', 'Niger'],
  ['NG', 'Nigeria'],
  ['NU', 'Niue'],
  ['NF', 'Norfolk Island'],
  ['KP', 'North Korea'],
  ['MK', 'North Macedonia'],
  ['MP', 'Northern Mariana Islands'],
  ['NO', 'Norway'],
  ['OM', 'Oman'],
  ['PK', 'Pakistan'],
  ['PW', 'Palau'],
  ['PS', 'Palestinian Territories'],
  ['PA', 'Panama'],
  ['PG', 'Papua New Guinea'],
  ['PY', 'Paraguay'],
  ['PE', 'Peru'],
  ['PH', 'Philippines'],
  ['PN', 'Pitcairn Islands'],
  ['PL', 'Poland'],
  ['PT', 'Portugal'],
  ['PR', 'Puerto Rico'],
  ['QA', 'Qatar'],
  ['RE', 'Réunion'],
  ['RO', 'Romania'],
  ['RU', 'Russia'],
  ['RW', 'Rwanda'],
  ['BL', 'St. Barthélemy'],
  ['SH', 'St. Helena'],
  ['KN', 'St. Kitts & Nevis'],
  ['LC', 'St. Lucia'],
  ['MF', 'St. Martin'],
  ['PM', 'St. Pierre & Miquelon'],
  ['VC', 'St. Vincent & Grenadines'],
  ['WS', 'Samoa'],
  ['SM', 'San Marino'],
  ['ST', 'São Tomé & Príncipe'],
  ['SA', 'Saudi Arabia'],
  ['SN', 'Senegal'],
  ['RS', 'Serbia'],
  ['SC', 'Seychelles'],
  ['SL', 'Sierra Leone'],
  ['SG', 'Singapore'],
  ['SX', 'Sint Maarten'],
  ['SK', 'Slovakia'],
  ['SI', 'Slovenia'],
  ['SB', 'Solomon Islands'],
  ['SO', 'Somalia'],
  ['ZA', 'South Africa'],
  ['GS', 'South Georgia & South Sandwich Islands'],
  ['KR', 'South Korea'],
  ['SS', 'South Sudan'],
  ['ES', 'Spain'],
  ['LK', 'Sri Lanka'],
  ['SD', 'Sudan'],
  ['SR', 'Suriname'],
  ['SJ', 'Svalbard & Jan Mayen'],
  ['SE', 'Sweden'],
  ['CH', 'Switzerland'],
  ['SY', 'Syria'],
  ['TW', 'Taiwan'],
  ['TJ', 'Tajikistan'],
  ['TZ', 'Tanzania'],
  ['TH', 'Thailand'],
  ['TL', 'Timor-Leste'],
  ['TG', 'Togo'],
  ['TK', 'Tokelau'],
  ['TO', 'Tonga'],
  ['TT', 'Trinidad & Tobago'],
  ['TA', 'Tristan da Cunha'],
  ['TN', 'Tunisia'],
  ['TR', 'Turkey'],
  ['TM', 'Turkmenistan'],
  ['TC', 'Turks & Caicos Islands'],
  ['TV', 'Tuvalu'],
  ['UG', 'Uganda'],
  ['UA', 'Ukraine'],
  ['AE', 'United Arab Emirates'],
  ['GB', 'United Kingdom'],
  ['UN', 'United Nations'],
  ['US', 'United States'],
  ['UM', 'U.S. Outlying Islands'],
  ['VI', 'U.S. Virgin Islands'],
  ['UY', 'Uruguay'],
  ['UZ', 'Uzbekistan'],
  ['VU', 'Vanuatu'],
  ['VA', 'Vatican City'],
  ['VE', 'Venezuela'],
  ['VN', 'Vietnam'],
  ['WF', 'Wallis & Futuna'],
  ['EH', 'Western Sahara'],
  ['YE', 'Yemen'],
  ['ZM', 'Zambia'],
  ['ZW', 'Zimbabwe'],
];
const colors = [
  'black',
  'silver',
  'gray',
  'white',
  'maroon',
  'red',
  'purple',
  'fuchsia',
  'green',
  'lime',
  'olive',
  'yellow',
  'navy',
  'blue',
  'teal',
  'aqua',
  'orange',
  'aliceblue',
  'antiquewhite',
  'aquamarine',
  'azure',
  'beige',
  'bisque',
  'blanchedalmond',
  'blueviolet',
  'brown',
  'burlywood',
  'cadetblue',
  'chartreuse',
  'chocolate',
  'coral',
  'cornflowerblue',
  'cornsilk',
  'crimson',
  'cyan\n(synonym of aqua)',
  'darkblue',
  'darkcyan',
  'darkgoldenrod',
  'darkgray',
  'darkgreen',
  'darkgrey',
  'darkkhaki',
  'darkmagenta',
  'darkolivegreen',
  'darkorange',
  'darkorchid',
  'darkred',
  'darksalmon',
  'darkseagreen',
  'darkslateblue',
  'darkslategray',
  'darkslategrey',
  'darkturquoise',
  'darkviolet',
  'deeppink',
  'deepskyblue',
  'dimgray',
  'dimgrey',
  'dodgerblue',
  'firebrick',
  'floralwhite',
  'forestgreen',
  'gainsboro',
  'ghostwhite',
  'gold',
  'goldenrod',
  'greenyellow',
  'grey',
  'honeydew',
  'hotpink',
  'indianred',
  'indigo',
  'ivory',
  'khaki',
  'lavender',
  'lavenderblush',
  'lawngreen',
  'lemonchiffon',
  'lightblue',
  'lightcoral',
  'lightcyan',
  'lightgoldenrodyellow',
  'lightgray',
  'lightgreen',
  'lightgrey',
  'lightpink',
  'lightsalmon',
  'lightseagreen',
  'lightskyblue',
  'lightslategray',
  'lightslategrey',
  'lightsteelblue',
  'lightyellow',
  'limegreen',
  'linen',
  'magenta',
  'mediumaquamarine',
  'mediumblue',
  'mediumorchid',
  'mediumpurple',
  'mediumseagreen',
  'mediumslateblue',
  'mediumspringgreen',
  'mediumturquoise',
  'mediumvioletred',
  'midnightblue',
  'mintcream',
  'mistyrose',
  'moccasin',
  'navajowhite',
  'oldlace',
  'olivedrab',
  'orangered',
  'orchid',
  'palegoldenrod',
  'palegreen',
  'paleturquoise',
  'palevioletred',
  'papayawhip',
  'peachpuff',
  'peru',
  'pink',
  'plum',
  'powderblue',
  'rosybrown',
  'royalblue',
  'saddlebrown',
  'salmon',
  'sandybrown',
  'seagreen',
  'seashell',
  'sienna',
  'skyblue',
  'slateblue',
  'slategray',
  'slategrey',
  'snow',
  'springgreen',
  'steelblue',
  'tan',
  'thistle',
  'tomato',
  'transparent',
  'turquoise',
  'violet',
  'wheat',
  'whitesmoke',
  'yellowgreen',
  'rebeccapurple',
];
//keeping this commented code intentionally ,which is an alternative way to give support for dynamic options.
//instead of supplying getOptions callback, we keep option property in inputConfig always as a async method instead to array as below.
// export const inputDataForAsyncOptions = {
//   properties: [
//     {
//       id: 'continent',
//       label: 'Continent',
//       icon: Earth,
//       type: 'option',
//       config: {
//         options: async () => {
//           let returnVal = [
//             {
//               label: 'Africa',
//               id: 'Africa',
//             },
//             {
//               label: 'Antarctica',
//               id: 'Antarctica',
//             },
//             {
//               label: 'Asia',
//               id: 'Asia',
//             },
//             {
//               label: 'Australia',
//               id: 'Australia',
//             },
//             {
//               label: 'Europe',
//               id: 'Europe',
//             },
//           ];
//           return new Promise((resolve) => {
//             setTimeout(() => {
//               resolve(returnVal);
//             }, 2000);
//           });
//         },
//       },
//     },
//   ],
// };

const customOperators = [
  {
    label: 'has value',
    id: 'hasValue',
  },
  {
    label: 'has no value',
    id: 'hasNoValue',
  },
  {
    label: 'has values',
    id: 'hasValues',
    isMultiSelect: true,
  },
];

export const inputData = {
  properties: [
    {
      id: 'continent',
      label: 'Continent',
      icon: Earth,
      type: 'option',
      description: 'Continent',
      config: {
        options: [
          {
            label: 'Africa',
            id: 'Africa',
          },
          {
            label: 'Antarctica',
            id: 'Antarctica',
          },
          {
            label: 'Asia',
            id: 'Asia',
          },
          {
            label: 'Australia',
            id: 'Australia',
          },
          {
            label: 'Europe',
            id: 'Europe',
          },
        ],
      },
    },
    {
      id: 'region',
      label: 'Region',
      icon: Flag,
      type: 'option',
      config: {
        options: regions.map(([id, label]) => ({
          id,
          label,
          icon: () => (
            <span>
              {String.fromCodePoint(
                ...[...id].map((char) => 127397 + char.charCodeAt(0))
              )}
            </span>
          ),
        })),
      },
    },
    {
      id: 'color',
      label: 'Color',
      icon: ColorPalette,
      type: 'option',
      config: {
        options: colors.map((item) => {
          return {
            id: item,
            label: item,
            icon: () => (
              <svg width="12" height="12" viewBox="0 0 12 12">
                <rect x="0" y="0" width="12" height="12" rx="1" fill={item} />
              </svg>
            ),
          };
        }),
      },
    },
    {
      id: 'id',
      label: 'ID',
      icon: Hashtag,
      type: 'text',
      config: {},
    },
    {
      id: 'id_long',
      label: 'Id Long',
      icon: Hashtag,
      type: 'textarea',
      config: {},
    },
    {
      id: 'price',
      label: 'Price',
      icon: Currency,
      type: 'number',
      config: {
        min: 0,
        step: 1,
        unit: 'Dollars',
      },
    },
    {
      id: 'date',
      label: 'Date',
      icon: Calendar,
      type: 'date',
      config: {},
    },
    {
      id: 'time',
      label: 'Time',
      icon: Calendar,
      type: 'time',
      config: {
        timeZones: ['IST', 'CET', 'UTC', 'LOCAL'],
      },
    },
    {
      id: 'delivery',
      label: 'Delivery',
      icon: DeliveryTruck,
      type: 'option',
      config: {
        options: [
          {
            label: 'Processing',
            id: 'Processing',
          },
          {
            label: 'Preparing for dispatch',
            id: 'Preparing for dispatch',
          },
          {
            label: 'Dispatched',
            id: 'Dispatched',
          },
          {
            label: 'In delivery',
            id: 'In delivery',
          },
          {
            label: 'Delivered',
            id: 'Delivered',
          },
        ],
      },
    },
    {
      id: 'season',
      label: 'Season',
      icon: Tree,
      type: 'option',
      config: {
        options: [
          {
            label: 'Winter',
            id: 'Winter',
          },
          {
            label: 'Spring',
            id: 'Spring',
          },
          {
            label: 'Summer',
            id: 'Summer',
          },
          {
            label: 'Fall',
            id: 'Fall',
          },
        ],
      },
    },
    {
      id: 'product',
      label: 'Product',
      icon: Cube,
      type: 'custom',
      config: {
        component: CustomInput,
        operators: customOperators,
        valueFormatter: (value) => {
          // add any customization to the value to be populated
          return value;
        },
      },
    },
  ],
};
function modifyPropertiesWithoutCustomOperators(inputData) {
  const newProperties = inputData.properties.map((property) => {
    if (property.id === 'continent') {
      return {
        ...property,
        config: {
          ...property.config,
          operators: customOperators,
        },
      };
    }
    if (property.id === 'id') {
      return {
        ...property,
        config: {
          ...property.config,
          operators: customOperators.slice(0, 2),
        },
      };
    }
    return property;
  });

  return { ...inputData, properties: newProperties };
}

export const inputDataForCustomOperator =
  modifyPropertiesWithoutCustomOperators(inputData);

export const inputDataDynamicOptions = {
  properties: [
    {
      id: 'continent',
      label: 'Continent',
      icon: Earth,
      type: 'option',
      config: {},
    },
    {
      id: 'region',
      label: 'Region',
      icon: Flag,
      type: 'option',
      config: {},
    },
    {
      id: 'color',
      label: 'Color',
      icon: ColorPalette,
      type: 'option',
      config: {},
    },
    {
      id: 'id',
      label: 'ID',
      icon: Hashtag,
      type: 'text',
      config: {},
    },
    {
      id: 'price',
      label: 'Price',
      icon: Currency,
      type: 'number',
      config: {
        min: 0,
        step: 1,
        unit: 'Dollars',
      },
    },
    {
      id: 'date',
      label: 'Date',
      icon: Calendar,
      type: 'date',
      config: {},
    },
    {
      id: 'time',
      label: 'Time',
      icon: Calendar,
      type: 'time',
      config: {
        timeZones: ['IST', 'CET', 'UTC', 'LOCAL'],
      },
    },

    {
      id: 'product',
      label: 'Product',
      icon: Cube,
      type: 'text',
      config: {},
    },
    {
      id: 'delivery',
      label: 'Delivery',
      icon: DeliveryTruck,
      type: 'option',
      config: {
        options: [
          {
            label: 'Processing',
            id: 'Processing',
          },
          {
            label: 'Preparing for dispatch',
            id: 'Preparing for dispatch',
          },
          {
            label: 'Dispatched',
            id: 'Dispatched',
          },
          {
            label: 'In delivery',
            id: 'In delivery',
          },
          {
            label: 'Delivered',
            id: 'Delivered',
          },
        ],
      },
    },
    {
      id: 'season',
      label: 'Season',
      icon: Tree,
      type: 'option',
      config: {
        options: [
          {
            label: 'Winter',
            id: 'Winter',
          },
          {
            label: 'Spring',
            id: 'Spring',
          },
          {
            label: 'Summer',
            id: 'Summer',
          },
          {
            label: 'Fall',
            id: 'Fall',
          },
        ],
      },
    },
  ],
};
