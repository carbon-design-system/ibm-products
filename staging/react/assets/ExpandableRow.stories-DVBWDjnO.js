import{e as i,S as u,r as x}from"./iframe-YKw9nL_F.js";import{g}from"./getBatchActions-BmUZJF8i.js";import{s as w,m as E}from"./_storybook-styles-qwLrOXbE.js";import{D as f}from"./DatagridActions-8FLDfdER.js";import{D as S}from"./DatagridPagination-BgIuxIzc.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-CcFff8kI.js";import{u as h}from"./useExpandedRow-6f9Arh4k.js";import{u as D}from"./useSelectRows-OfO0p_Pv.js";import{u as C}from"./useStickyColumn-D4WjfMCj.js";import{u as R}from"./usePrefix-D3khdQYe.js";import{E as H}from"./bucket-6-BAcs6e6G.js";import{T as b}from"./bucket-17-C_gzCj3y.js";import"./bucket-0-glzR4AjS.js";import"./bucket-2-CwIRUxho.js";import"./index-CXIj4-f9.js";import"./bucket-18-DZTAQj9X.js";import"./bucket-7-DiHxbQPt.js";import"./ComposedModal-Cmmd5CvA.js";import"./index-BEhuL1MR.js";import"./index-CPo7HSbm.js";import"./LayerContext-BQcY-NI5.js";import"./clamp--00YEiB8.js";import"./ButtonSet-CmKBrh9d.js";import"./InlineLoading-CCmO3uOS.js";import"./mergeRefs-91-mP8KM.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-DNecG-Dg.js";import"./Text-CjneqIZ1.js";import"./utils-Cep3OMNO.js";import"./TableToolbarSearch-CBIbwfMq.js";import"./wrapComponent-BYWBwwwb.js";import"./Search-Eel-vNyd.js";import"./FormContext-BU2ukkNq.js";import"./bucket-15-DYvFGyvv.js";import"./Dropdown-DYkEQHNe.js";import"./index-CjSFe2a0.js";import"./inheritsLoose-DHKJTbHM.js";import"./bucket-19-BU_wesH_.js";import"./MenuItem-DOVlXix4.js";import"./useControllableState-KAFbqoVc.js";import"./useAttachedMenu-Di7wXaNY.js";import"./index-CNHmpVfc.js";import"./index-BF8Zf0QK.js";import"./bucket-12-DXgkfsZm.js";import"./useOutsideClick-BuwC9cvu.js";import"./OverflowMenuItem-tgqxnhno.js";import"./useFilterContext-nj7u5dFz.js";import"./bucket-14-B3pmzkvl.js";import"./Pagination-De-l9vFd.js";import"./Select-BhITLHBX.js";import"./SelectItem-D7CcXnXT.js";import"./MultiSelect-BWBlgV0p.js";import"./Checkbox-ChRqkdmE.js";import"./devtools-DSZ92uOv.js";import"./TableRow-CEzGvxM9.js";import"./bucket-1-BfuDTa5x.js";import"./TableToolbar-Dcz0WKQP.js";import"./index-ed0vUSqW.js";import"./ErrorEmptyState-vDYEn1wM.js";import"./EmptyState-BSmRLz4v.js";import"./EmptyStateV2-XL_tjcIC.js";import"./Link-CyN3x2Zk.js";import"./ErrorIllustration-BwAe1T_i.js";import"./useId-DF1Qh0C_.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-BFs113T_.js";import"./NoDataIllustration-oFw7MJoO.js";import"./NotFoundEmptyState-B67Got9I.js";import"./NotFoundIllustration-B2vHpung.js";import"./index.esm-C1MtVFME.js";import"./usePreviousValue-Dpk5kspb.js";import"./useResizeObserver-Bbd8IY5t.js";import"./useIsomorphicEffect-C-0NYl-N.js";import"./getFocusableElements-BW7cf991.js";import"./index-CqMbcN6m.js";import"./props-helper-CihWmQAT.js";import"./useClickOutside-C2QAiZyI.js";import"./AccordionItem-DGZJqZWM.js";import"./DatePicker-CsVctaUI.js";import"./FormGroup-BidIjjuX.js";import"./NumberInput-C-oCxd9B.js";import"./useNormalizedInputProps-CRs_cU1L.js";import"./documentLang-E105Y72C.js";import"./bucket-16-CN3rodRl.js";import"./RadioButton-By6PBv1P.js";import"./RadioButtonGroup-kGMjCzg7.js";import"./usePrefersReducedMotion-BYGYFI31.js";import"./usePresence-Cp6m5svw.js";import"./ActionSet-D1XsrE9C.js";import"./useWindowResize-sd03rsgR.js";import"./TagSet-DTACHIpK.js";import"./Tag-SycbJDbH.js";import"./DefinitionTooltip-AXgDNA1V.js";import"./DismissibleTag-BtKcWFRj.js";import"./usePortalTarget-BYUdZyYt.js";import"./OperationalTag-Dnu6AwfC.js";import"./SkeletonText-DObhG0lc.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-icR_1JoQ.js";import"./TableSelectRow-Ck3Nk057.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,bt={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const Bt=["ExpandableRowStory"];export{e as ExpandableRowStory,Bt as __namedExportsOrder,bt as default};
