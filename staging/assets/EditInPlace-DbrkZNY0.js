import{r,e as a}from"./index-DtHxqM--.js";import{p as N,I as E}from"./settings-CFkY3W_8.js";import{b as ee,d as _,j as te,C as ne,P as e}from"./index-C360Eztx.js";import{g as ae}from"./devtools-XPxnGn1y.js";import{W as ie}from"./bucket-19-D7HYZr93.js";import{b as re}from"./bucket-6-BjeV6rPm.js";const x="EditInPlace",t=`${N.prefix}--edit-in-place`,le={tooltipAlignment:"top"};let c=r.forwardRef(({cancelLabel:A,editAlwaysVisible:S,editLabel:H,id:L,inheritTypography:z,invalid:o,invalidLabel:B=" ",invalidText:F,labelText:V,onCancel:j,onChange:O,onSave:W,onBlur:$,saveLabel:D,size:s="sm",tooltipAlignment:f,value:u,placeholder:K,...G},J)=>{const[k,m]=r.useState(!1),[p,P]=r.useState(""),[g,h]=r.useState(!1),l=r.useRef(null),v=u!==p&&!o,y=r.useRef(!1),C=ee(),M=typeof f=="object",b=["edit","save","cancel"].reduce((n,i)=>(n[i]=(M?f[i]:f)??le.tooltipAlignment,n),{});r.useEffect(()=>{!p&&!g&&P(u)},[p,g,u]);const T=({currentTarget:n,relatedTarget:i})=>n.contains(i),Q=({target:n})=>{g||h(!0),O(n.value)},I=n=>{var i;T(n)||((i=l.current)==null||i.focus(),m(!0))},w=()=>{P(u),h(!1),W(),m(!1)},q=()=>{h(!1),j(p)},U=n=>{if(typeof $=="function"&&!T(n))$(p),m(!1);else{if(y.current)return;T(n)||(v?w():(q(),m(!1)))}},X=()=>{v&&w()},Y=()=>{q()},R=()=>{var n;(n=l.current)==null||n.blur(),m(!1)},Z=n=>{switch(y.current=!0,n.key){case"Escape":R(),Y();break;case"Enter":R(),X();break}y.current=!1};return a.createElement("div",{...G,ref:J,...ae(x)},a.createElement("div",{className:_(t,`${t}--${s}`,{[`${t}--focused`]:k,[`${t}--invalid`]:o,[`${t}--inherit-type`]:z,[`${t}--overflows`]:l.current&&l.current.scrollWidth>l.current.offsetWidth}),onFocus:I,onBlur:U},a.createElement("input",{id:L,className:_(`${t}__text-input`,`${C}--text-input`,`${C}--text-input--${s}`),type:"text",placeholder:K,value:u,onChange:Q,ref:l,onKeyDown:Z,"aria-label":V,"aria-invalid":o}),a.createElement("div",{className:`${t}__toolbar`},o&&a.createElement(ie,{size:16,className:`${t}__warning-icon`}),k?a.createElement(a.Fragment,null,a.createElement(E,{align:b.cancel,size:s,label:A,onClick:q,kind:"ghost",tabIndex:0,key:"cancel",className:`${t}__btn ${t}__btn-cancel`},a.createElement(te,{size:16})),a.createElement(E,{align:b.save,size:s,label:D,onClick:w,kind:"ghost",tabIndex:0,key:"save",className:`${t}__btn ${t}__btn-save`,disabled:!v},a.createElement(ne,{size:16}))):a.createElement(E,{align:b.edit,className:_(`${t}__btn`,`${t}__btn-edit`,{[`${t}__btn-edit--always-visible`]:S}),size:s,label:H,onClick:I,kind:"ghost",tabIndex:0,key:"edit"},a.createElement(re,{size:16})))),o&&a.createElement("p",{className:`${t}__warning-text`},F??B))});c=N.checkComponentEnabled(c,x);c.displayName=x;const oe={invalidText:e.string},d=e.oneOf(["top","top-left","top-right","bottom","bottom-left","bottom-right","left","right"]);c.propTypes={cancelLabel:e.string.isRequired,editAlwaysVisible:e.bool,editLabel:e.string.isRequired,id:e.string.isRequired,inheritTypography:e.bool,invalid:e.bool,invalidText:e.string,labelText:e.string.isRequired,onBlur:e.func,onCancel:e.func.isRequired,onChange:e.func.isRequired,onSave:e.func.isRequired,placeholder:e.string,saveLabel:e.string.isRequired,size:e.oneOf(["sm","md","lg"]),tooltipAlignment:e.oneOfType([d,e.shape({cancel:d,edit:d,save:d})]),value:e.string.isRequired,...oe};c.__docgenInfo={description:"",methods:[],displayName:"EditInPlace",props:{cancelLabel:{required:!0,tsType:{name:"string"},description:"label for cancel button",type:{name:"string"}},editAlwaysVisible:{required:!1,tsType:{name:"boolean"},description:"By default the edit icon is shown on hover only.",type:{name:"bool"}},editLabel:{required:!0,tsType:{name:"string"},description:"label for edit button",type:{name:"string"}},id:{required:!0,tsType:{name:"string"},description:"Specify a custom id for the input",type:{name:"string"}},inheritTypography:{required:!1,tsType:{name:"boolean"},description:`inheritTypography - causes the text entry field to inherit typography settings
assigned to the container. This is useful when editing titles for instance.

NOTE: The size property limits the vertical size of the input element.
Inherited font's should be selected to fit within the size selected.`,type:{name:"bool"}},invalid:{required:!1,tsType:{name:"boolean"},description:"determines if the input is invalid",type:{name:"bool"}},invalidText:{required:!1,tsType:{name:"string"},description:"text that is displayed if the input is invalid",type:{name:"string"}},labelText:{required:!0,tsType:{name:"string"},description:"Provide the text that will be read by a screen reader when visiting this control",type:{name:"string"}},onBlur:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"handler to add custom onBlur event",type:{name:"func"}},onCancel:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"handler that is called when the cancel button is pressed or when the user removes focus from the input and there is no new value",type:{name:"func"}},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"handler that is called when the input is updated",type:{name:"func"}},onSave:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler that is called when the save button is pressed or when the user removes focus from the input if it has a new value",type:{name:"func"}},saveLabel:{required:!0,tsType:{name:"string"},description:"label for save button",type:{name:"string"}},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"vertical size of control",defaultValue:{value:"'sm'",computed:!1},type:{name:"enum",value:[{value:"'sm'",computed:!1},{value:"'md'",computed:!1},{value:"'lg'",computed:!1}]}},tooltipAlignment:{required:!1,tsType:{name:"union",raw:"AlignPropType | Shape",elements:[{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}],required:!0},{name:"signature",type:"object",raw:`{
  cancel: AlignPropType;
  edit: AlignPropType;
  save: AlignPropType;
}`,signature:{properties:[{key:"cancel",value:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}],required:!0}},{key:"edit",value:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}],required:!0}},{key:"save",value:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}],required:!0}}]}}]},description:`tooltipAlignment from the standard tooltip. Default center.

Can be passed either as one of tooltip options or as an object specifying cancel, edit and save separately`,type:{name:"union",value:[{name:"custom",raw:"alignPropType"},{name:"shape",value:{cancel:{name:"custom",raw:"alignPropType",required:!1},edit:{name:"custom",raw:"alignPropType",required:!1},save:{name:"custom",raw:"alignPropType",required:!1}}}]}},value:{required:!0,tsType:{name:"string"},description:"current value of the input",type:{name:"string"}},placeholder:{required:!1,tsType:{name:"string"},description:"placeholder for the input",type:{name:"string"}},invalidLabel:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"' '",computed:!1}}},composes:["PropsWithChildren"]};export{c as E};
