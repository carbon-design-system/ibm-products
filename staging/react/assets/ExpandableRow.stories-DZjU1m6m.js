import{e as i,S as u,r as x}from"./iframe-BixY_nzU.js";import{g}from"./getBatchActions-Ct8k3esL.js";import{s as w,m as E}from"./_storybook-styles-BjnquDfj.js";import{D as f}from"./DatagridActions-CSz_YLFx.js";import{D as S}from"./DatagridPagination-DatV2WQq.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-C3hLtMc1.js";import{u as h}from"./useExpandedRow-lauOcjwl.js";import{u as D}from"./useSelectRows-Bvi8OoyE.js";import{u as C}from"./useStickyColumn-BEkdsfiS.js";import{u as R}from"./usePrefix-B3RRS9vJ.js";import{E as H}from"./bucket-6-Ygy5YQ9m.js";import{T as b}from"./bucket-17-D2SvOvFl.js";import"./bucket-0-tkbzYG9T.js";import"./bucket-2-KtQy-gy7.js";import"./index-KoxcOYkd.js";import"./bucket-18-Cm0L4bq5.js";import"./bucket-7-BMRx2xk3.js";import"./ComposedModal-C-yJmSnV.js";import"./index-BEhuL1MR.js";import"./index-Dioc7bXy.js";import"./LayerContext-C8JKjCPJ.js";import"./clamp--00YEiB8.js";import"./ButtonSet-B_zKP9xZ.js";import"./InlineLoading-D56yXy8d.js";import"./mergeRefs-91-mP8KM.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-Bbgeg0Nx.js";import"./Text-B6SqPZCe.js";import"./utils-CYmHZlgn.js";import"./TableToolbarSearch-SBws6Dty.js";import"./wrapComponent-DJ4rNbJl.js";import"./Search-DgkMjmaf.js";import"./FormContext-ChfRT5-9.js";import"./bucket-15-CR51sp2K.js";import"./Dropdown-CA737wZu.js";import"./index-DGezsfQe.js";import"./inheritsLoose-DHKJTbHM.js";import"./bucket-19-BnR_hMr3.js";import"./MenuItem-ZGtCy1zR.js";import"./useControllableState-DC7Ej6kn.js";import"./useAttachedMenu-BRh0V27n.js";import"./index-BBuXWzuS.js";import"./index-CCul1fp0.js";import"./bucket-12-C20f3iiV.js";import"./useOutsideClick-BEN9HQgE.js";import"./OverflowMenuItem-C7uN44t_.js";import"./useFilterContext-BsY2fjaK.js";import"./bucket-14-julK-VHp.js";import"./Pagination-CygFgA8L.js";import"./Select-D2qoOMRJ.js";import"./SelectItem-CrqdL3W6.js";import"./MultiSelect-DU3po3NM.js";import"./Checkbox-CrO2TYcW.js";import"./devtools-BgBiig7t.js";import"./TableRow-CmfIPmKY.js";import"./bucket-1-BHpIhqGK.js";import"./TableToolbar-m2gFp8dd.js";import"./index-D8hxD1Y6.js";import"./ErrorEmptyState-DsvVJbKR.js";import"./EmptyState-By9fZsJk.js";import"./EmptyStateV2-B8Eg_jZc.js";import"./Link-trOFoxkZ.js";import"./props-helper-nJuZcXxg.js";import"./ErrorIllustration-Buxf7vLz.js";import"./useId-CEgnz6Ws.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-D3JQoXKy.js";import"./NoDataIllustration-ePnik9lE.js";import"./NotFoundEmptyState-Di5etujk.js";import"./NotFoundIllustration-BiHuHUk_.js";import"./index.esm-DxhhlNX-.js";import"./usePreviousValue-CTSbRzqP.js";import"./useResizeObserver-w6LHWa3u.js";import"./useIsomorphicEffect-BzCQADVB.js";import"./getFocusableElements-BW7cf991.js";import"./index-oT-iZzBF.js";import"./useClickOutside-DAucaBgU.js";import"./AccordionItem-nAc0ALKG.js";import"./DatePicker-C-aHxAcv.js";import"./FormGroup-TqDbofKg.js";import"./NumberInput-DbvJgXao.js";import"./useNormalizedInputProps-Bpt-5IUr.js";import"./documentLang-E105Y72C.js";import"./bucket-16-CBPAJ3ia.js";import"./RadioButton-DFOMK8Cd.js";import"./RadioButtonGroup-B0lPsX87.js";import"./usePrefersReducedMotion-VKlGTiEJ.js";import"./usePresence-DOAybUGi.js";import"./ActionSet-BU7FdDgm.js";import"./useWindowResize-DVgsn1qn.js";import"./TagSet-Dhg_Qh0C.js";import"./Tag-CbXFe4uz.js";import"./DefinitionTooltip-C5zZShyp.js";import"./DismissibleTag-Dankl3fz.js";import"./usePortalTarget-DYGy-m0K.js";import"./OperationalTag-FQkyKd3P.js";import"./SkeletonText-R4JdAoTC.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-BawndHtc.js";import"./TableSelectRow-CEr1cHF1.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,bt={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const Bt=["ExpandableRowStory"];export{e as ExpandableRowStory,Bt as __namedExportsOrder,bt as default};
