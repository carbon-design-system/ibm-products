const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./ErrorIllustration-Dz1tKV6c.js","./index-BOZkNhcz.js","./_commonjsHelpers-BosuxZz1.js","./index--clQM3eT.js","./index-hBZdtWkn.js","./index-2uioG_CI.js","./settings-BYgtfLKl.js","./events-OVwOsPzJ.js","./index-YZUn1U4D.js","./useId-3RkIcX0R.js","./uuidv4-BN2rGLQG.js","./NoDataIllustration-DXQPoSCV.js","./NoTagsIllustration-BQjyCyHQ.js","./NotFoundIllustration-BrUgbhvY.js","./NotificationsIllustration-B1mFjWHx.js","./UnauthorizedIllustration-CkfFI_4i.js"])))=>i.map(i=>d[i]);
import{e as n,r as a}from"./index-BOZkNhcz.js";import{P as e,c as m}from"./index--clQM3eT.js";import{p as _,B as I}from"./settings-BYgtfLKl.js";import{L as P}from"./Link-BFsW3ySJ.js";import{g as D}from"./devtools-BSXGZlBP.js";import"./props-helper-BNocl_Zr.js";import{_ as i}from"./iframe-CFrrarbq.js";const q=a.lazy(()=>i(()=>import("./ErrorIllustration-Dz1tKV6c.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10]),import.meta.url)),w=a.lazy(()=>i(()=>import("./NoDataIllustration-DXQPoSCV.js"),__vite__mapDeps([11,1,2,3,4,5,6,7,8,9,10]),import.meta.url)),x=a.lazy(()=>i(()=>import("./NoTagsIllustration-BQjyCyHQ.js"),__vite__mapDeps([12,1,2,3,4,5,6,7,8,9,10]),import.meta.url)),z=a.lazy(()=>i(()=>import("./NotFoundIllustration-BrUgbhvY.js"),__vite__mapDeps([13,1,2,3,4,5,6,7,8,9,10]),import.meta.url)),R=a.lazy(()=>i(()=>import("./NotificationsIllustration-B1mFjWHx.js"),__vite__mapDeps([14,1,2,3,4,5,6,7,8,9,10]),import.meta.url)),$=a.lazy(()=>i(()=>import("./UnauthorizedIllustration-CkfFI_4i.js"),__vite__mapDeps([15,1,2,3,4,5,6,7,8,9,10]),import.meta.url)),O=r=>{switch(r){case"error":return q;case"noData":return w;case"noTags":return x;case"notifications":return R;case"notFound":return z;case"unauthorized":return $;default:return()=>null}},f=({kind:r,...p})=>{const s=O(r);return n.createElement(a.Suspense,null,n.createElement(s,{"aria-hidden":"true",...p}))};f.propTypes={kind:e.string};f.__docgenInfo={description:"",methods:[],displayName:"EmptyStateIllustration",props:{kind:{description:"",type:{name:"string"},required:!1}}};const t=`${_.prefix}--empty-state`,g="EmptyStateV2";let o=n.forwardRef((r,p)=>{const{action:s,className:v,illustration:d,illustrationDescription:y,illustrationPosition:E="top",illustrationTheme:T,kind:l,link:c,size:u="lg",subtitle:h,title:b,...k}=r,N={size:u,theme:T,title:y,kind:l};return n.createElement("div",{...k,className:m([t,v,`${t}-position--${E}`,{[`${t}-type--${l}`]:l}]),ref:p,...D(g)},d&&n.createElement("img",{src:d,alt:y,className:m([`${t}__illustration`,`${t}__illustration--${u}`])}),!d&&l&&n.createElement(f,{...N}),n.createElement("div",{className:`${t}__content`},n.createElement("h3",{className:m(`${t}__header`,{[`${t}__header--small`]:u==="sm"})},b),h&&n.createElement("p",{className:m(`${t}__subtitle`,{[`${t}__subtitle--small`]:u==="sm"})},h),s&&n.createElement(I,{...s,className:`${t}__action-button`,size:"sm"},s.text),c&&n.createElement(P,{...c,className:`${t}__link`},c.text)))});o.deprecated={level:"warn",details:"For more information, please refer to the Carbon docs https://carbondesignsystem.com/patterns/empty-states-pattern/"};o=_.checkComponentEnabled(o,g);o.propTypes={action:e.PropTypes.shape({text:e.string}),className:e.string,illustration:e.string,illustrationDescription:e.string,illustrationPosition:e.oneOf(["top","right","bottom","left"]),illustrationTheme:e.oneOf(["light","dark"]),kind:e.oneOf(["error","noData","noTags","notFound","notifications","unauthorized"]),link:e.shape({text:e.oneOfType([e.string,e.node])}),size:e.oneOf(["sm","lg"]),subtitle:e.oneOfType([e.string,e.node]),title:e.oneOfType([e.string,e.node]).isRequired};o.displayName=g;o.__docgenInfo={description:"This is the V2 version of the `EmptyState` component. To use you must pass the `v2` prop to the V1 version of the component `EmptyState` and use the props below.\nIn order to avoid breaking changes in the future `EmptyStateV2` is not actually directly importable.\n@deprecated",methods:[],displayName:"EmptyStateV2",props:{action:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  text?: string;
}`,signature:{properties:[{key:"text",value:{name:"string",required:!1}}]}},description:"Props for the action button. Refer to the Carbon Components button documentation for full list of props.",type:{name:"shape",value:{text:{name:"string",required:!1}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},illustration:{required:!1,tsType:{name:"string"},description:"Source for the illustration image if you choose to use your own custom image. Passing an illustration prop will supersede the kind option.",type:{name:"string"}},illustrationDescription:{required:!1,tsType:{name:"string"},description:"The alt text for the illustration",type:{name:"string"}},illustrationPosition:{required:!1,tsType:{name:"union",raw:"'top' | 'right' | 'bottom' | 'left'",elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'left'"}]},description:"Designates the position of the illustration relative to the content",type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'right'",computed:!1},{value:"'bottom'",computed:!1},{value:"'left'",computed:!1}]}},illustrationTheme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:`Empty state illustration theme variations.
To ensure you use the correct themed illustrations, you can conditionally specify light or dark
based on your app's current theme value. Example:
\`illustrationTheme={appTheme === ('carbon--g100' || 'carbon--g90') ? 'dark' : 'light'}\``,type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]}},kind:{required:!1,tsType:{name:"union",raw:`| 'error'
| 'noData'
| 'noTags'
| 'notFound'
| 'notifications'
| 'unauthorized'`,elements:[{name:"literal",value:"'error'"},{name:"literal",value:"'noData'"},{name:"literal",value:"'noTags'"},{name:"literal",value:"'notFound'"},{name:"literal",value:"'notifications'"},{name:"literal",value:"'unauthorized'"}]},description:"Determines which predefined illustration will be displayed",type:{name:"enum",value:[{value:"'error'",computed:!1},{value:"'noData'",computed:!1},{value:"'noTags'",computed:!1},{value:"'notFound'",computed:!1},{value:"'notifications'",computed:!1},{value:"'unauthorized'",computed:!1}]}},link:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  text?: string | ReactNode;
}`,signature:{properties:[{key:"text",value:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}],required:!1}}]}},description:"Props for the link. Refer to the Carbon Components link documentation for full list of props.",type:{name:"shape",value:{text:{name:"union",value:[{name:"string"},{name:"node"}],required:!1}}}},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'lg'"}]},description:"Empty state size",type:{name:"enum",value:[{value:"'sm'",computed:!1},{value:"'lg'",computed:!1}]}},subtitle:{required:!1,tsType:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}]},description:"Empty state subtext",type:{name:"union",value:[{name:"string"},{name:"node"}]}},title:{required:!0,tsType:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}]},description:"Empty state heading",type:{name:"union",value:[{name:"string"},{name:"node"}]}}}};export{o as E};
