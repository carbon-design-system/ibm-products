import{r as u,e as t}from"./index-BOZkNhcz.js";import{u as ce}from"./uuidv4-BN2rGLQG.js";import{c as B,C as ie,P as n}from"./index--clQM3eT.js";import{g as G}from"./devtools-BSXGZlBP.js";import{p as v,B as I,a as ue}from"./settings-BYgtfLKl.js";import{c as me}from"./bucket-5-D_VnmO9x.js";import{u as de}from"./useIsomorphicEffect-C0ObacuX.js";import{c as Z}from"./clamp-CsXXRQhr.js";import{S as pe}from"./SteppedAnimatedMedia-BOC_MZvc.js";import{C as fe}from"./Carousel-CfCT9sHV.js";var he=(e=>(e.DEFAULT="default",e))(he||{}),R=(e=>(e.TOOLTIP="tooltip",e.FLOATING="floating",e.FIXED="fixed",e.STACKED="stacked",e))(R||{}),b=(e=>(e.BOTTOM="bottom",e.BOTTOM_LEFT="bottom-left",e.BOTTOM_RIGHT="bottom-right",e.LEFT="left",e.LEFT_TOP="left-top",e.LEFT_BOTTOM="left-bottom",e.RIGHT="right",e.RIGHT_TOP="right-top",e.RIGHT_BOTTOM="right-bottom",e.TOP="top",e.TOP_LEFT="top-left",e.TOP_RIGHT="top-right",e))(b||{});const ye=u.createContext(),le=()=>u.useContext(ye),te=`${v.prefix}--coachmark-dragbar`,ne=`${v.prefix}--coachmark-overlay`,K="CoachmarkDragbar",z={closeIconDescription:"Close",onDrag:()=>{},onClose:()=>{},showCloseButton:!0,theme:"light"};let S=t.forwardRef(({a11yKeyboardHandler:e,closeIconDescription:m=z.closeIconDescription,onClose:l=z.onClose,onDrag:a=z.onDrag,showCloseButton:r=z.showCloseButton,theme:i=z.theme,...p},P)=>{const[E,D]=u.useState(!1);u.useEffect(()=>{const T=()=>D(!1);return window.addEventListener("mouseup",T),()=>{window.removeEventListener("mouseup",T)}},[]),u.useEffect(()=>{const T=k=>{a(k.movementX,k.movementY)};return E&&window.addEventListener("mousemove",T),()=>{window.removeEventListener("mousemove",T)}},[E,a]);const q=()=>D(!0);return t.createElement("header",{...p,className:B(te,`${te}__${i}`,{}),ref:P,...G(K)},t.createElement("button",{type:"button",className:`${ne}__handle`,onMouseDown:q,onKeyDown:e,title:"Drag Handle"},t.createElement(me,{size:"16"})),r&&t.createElement(I,{kind:"ghost",size:"sm",renderIcon:ie,iconDescription:m,hasIconOnly:!0,className:`${ne}--close-btn`,onClick:l}))});S=v.checkComponentEnabled(S,K);S.displayName=K;S.propTypes={a11yKeyboardHandler:n.func.isRequired,closeIconDescription:n.string,onClose:n.func,onDrag:n.func,showCloseButton:n.bool,theme:n.oneOf(["light","dark"])};S.__docgenInfo={description:`DO NOT USE. This component is for the exclusive use
of other Onboarding components.`,methods:[],displayName:"CoachmarkDragbar",props:{a11yKeyboardHandler:{required:!0,tsType:{name:"signature",type:"function",raw:"(event: React.KeyboardEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactKeyboardEvent",raw:"React.KeyboardEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"event"}],return:{name:"void"}}},description:"Handler to manage keyboard interactions with the dragbar.",type:{name:"func"}},closeIconDescription:{required:!1,tsType:{name:"string"},description:"Tooltip text and aria label for the Close button icon.",defaultValue:{value:"'Close'",computed:!1},type:{name:"string"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function to call when the close button is clicked.",defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},onDrag:{required:!1,tsType:{name:"signature",type:"function",raw:"(movementX: number, movementY: number) => void",signature:{arguments:[{type:{name:"number"},name:"movementX"},{type:{name:"number"},name:"movementY"}],return:{name:"void"}}},description:`Function to call when the user clicks and drags the Coachmark.
For internal use only by the parent CoachmarkOverlay.`,defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},showCloseButton:{required:!1,tsType:{name:"boolean"},description:'Show/hide the "X" close button.',defaultValue:{value:"true",computed:!1},type:{name:"bool"}},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Determines the theme of the component.",defaultValue:{value:"'light'",computed:!1},type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]}}}};const ae=`${v.prefix}--coachmark-header`,oe=`${v.prefix}--coachmark-overlay`,M="CoachmarkHeader",U={closeIconDescription:"Close",onClose:()=>{},showCloseButton:!0,theme:"light"};let V=t.forwardRef(({closeIconDescription:e=U.closeIconDescription,onClose:m=U.onClose,showCloseButton:l=U.showCloseButton,theme:a=U.theme,...r},i)=>t.createElement("header",{...r,className:B(ae,`${ae}__${a}`),ref:i,...G(M)},l&&t.createElement("div",{className:`${oe}--close-btn-container`},t.createElement(I,{kind:"ghost",size:"sm",renderIcon:ie,iconDescription:e,hasIconOnly:!0,className:`${oe}--close-btn`,onClick:m}))));V=v.checkComponentEnabled(V,M);V.displayName=M;V.propTypes={closeIconDescription:n.string,onClose:n.func,showCloseButton:n.bool,theme:n.oneOf(["light","dark"])};V.__docgenInfo={description:`DO NOT USE. This component is for the exclusive use
of other Onboarding components.`,methods:[],displayName:"CoachmarkHeader",props:{closeIconDescription:{required:!1,tsType:{name:"string"},description:"Tooltip text and aria label for the Close button icon.",defaultValue:{value:"'Close'",computed:!1},type:{name:"string"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function to call when the close button is clicked.",defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},showCloseButton:{required:!1,tsType:{name:"boolean"},description:'Show/hide the "X" close button.',defaultValue:{value:"true",computed:!1},type:{name:"bool"}},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Determines the theme of the component.",defaultValue:{value:"'light'",computed:!1},type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]}}}};const ge=(e,m)=>{const{width:l,height:a}=e.targetRect,r=24;let i=0,p=0;if(m!==R.TOOLTIP)switch(e.align){case b.TOP:p=l/2;break;case b.TOP_LEFT:p=r;break;case b.TOP_RIGHT:p=l-r;break;case b.BOTTOM:i=a,p=l/2;break;case b.BOTTOM_LEFT:i=a,p=r;break;case b.BOTTOM_RIGHT:i=a,p=l-r;break;case b.LEFT:i=a/2;break;case b.LEFT_TOP:i=r;break;case b.LEFT_BOTTOM:i=a-r;break;case b.RIGHT:i=a/2,p=l;break;case b.RIGHT_TOP:i=r,p=l;break;case b.RIGHT_BOTTOM:i=a-r,p=l;break}return{top:i,left:p}},x=`${v.prefix}--coachmark-overlay`,A="CoachmarkOverlay",re={kind:R.FLOATING,theme:"light"};let W=u.forwardRef(({children:e,onClose:m,fixedIsVisible:l,className:a,kind:r=re.kind,theme:i=re.theme,...p},P)=>{const{winHeight:E,winWidth:D}=be(),[q,T]=u.useState(!1),k=u.useRef(null),h=le(),y=r===R.TOOLTIP,O=r===R.FLOATING,Q=a==null?void 0:a.includes("is-visible"),w=o=>{const{shiftKey:g,key:s}=o;if(s==="Enter"||s===" ")T(d=>!d);else if(q){const d=g?128:32;switch(s){case"ArrowLeft":$(d*-1,0);break;case"ArrowRight":$(d,0);break;case"ArrowUp":$(0,d*-1);break;case"ArrowDown":$(0,d);break}}},F=u.useMemo(()=>{const o={};if((y||O)&&(h.targetRect&&(o.left=h.targetRect.x+window.scrollX,o.top=h.targetRect.y+window.scrollY),o.left&&o.top&&(y&&(o.left=o.left+16,o.top=o.top+16),O))){const g=ge(h,r);o.left=o.left+g.left,o.top=o.top+g.top}return o},[y,O,h,r]);function L(o,g){let s=o,d=g;const f=D-288,c=E-150;return s<0?s=0:s>f&&(s=f),d<0?d=0:d>c&&(d=c),{targetX:s,targetY:d}}function $(o,g){const s=k.current;if(!s)return;const{x:d,y:f}=s.getBoundingClientRect(),{targetX:c,targetY:C}=L(d+o,f+g);s.style.transform="none",s.style.position="fixed",s.style.left=`${c}px`,s.style.top=`${C}px`,s.style.bottom="auto"}const H=ce();return de(()=>{var o;if(k.current){const g=(o=k.current)==null?void 0:o.style;Object.keys(F).forEach(s=>{const d=F[s];g.setProperty(s,`${d}px`)})}},[F,k]),t.createElement("div",{...p,className:B(x,`${x}--${r}`,`${x}__${i}`,(y||O)&&`${x}--${h.align}`,l&&`${x}--is-visible`,q&&`${x}--is-dragmode`,a),ref:k,"aria-labelledby":H,tabIndex:-1,...G(A)},O?t.createElement(S,{a11yKeyboardHandler:w,onBlur:()=>T(!1),onDrag:$,theme:i,onClose:m}):t.createElement(V,{onClose:m}),t.createElement("div",{className:`${x}__body`,ref:P,id:H},t.Children.map(e,o=>t.cloneElement(o,{isVisible:Q}))))});function se(){const{innerWidth:e,innerHeight:m}=window;return{winWidth:e,winHeight:m}}const be=()=>{const[e,m]=u.useState(se());return u.useEffect(()=>{function l(){m(se())}return window.addEventListener("resize",l),()=>window.removeEventListener("resize",l)},[]),e};W=v.checkComponentEnabled(W,A);W.displayName=A;W.propTypes={children:n.node.isRequired,className:n.string,fixedIsVisible:n.bool.isRequired,kind:n.oneOf(Object.values(R)),onClose:n.func.isRequired,theme:n.oneOf(["light","dark"])};W.__docgenInfo={description:`DO NOT USE. This component is for the exclusive use
of other Onboarding components.`,methods:[],displayName:"CoachmarkOverlay",props:{children:{required:!0,tsType:{name:"ReactNode"},description:`The CoachmarkOverlayElements child components.
Validation is handled in the parent Coachmark component.`,type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Optional class name for this component.",type:{name:"string"}},fixedIsVisible:{required:!0,tsType:{name:"boolean"},description:`The visibility of CoachmarkOverlay is
managed in the parent Coachmark component.`,type:{name:"bool"}},kind:{required:!1,tsType:{name:"COACHMARK_OVERLAY_KIND"},description:"What kind or style of Coachmark to render.",defaultValue:{value:"COACHMARK_OVERLAY_KIND.FLOATING",computed:!0},type:{name:"enum",computed:!0,value:"Object.values(COACHMARK_OVERLAY_KIND)"}},onClose:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function to call when the Coachmark closes.",type:{name:"func"}},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Determines the theme of the component.",defaultValue:{value:"'light'",computed:!1},type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]}}}};const X=`${v.prefix}--coachmark-overlay-element`,ee="CoachmarkOverlayElement";let Y=t.forwardRef(({button:e,className:m,description:l,title:a,...r},i)=>t.createElement("div",{...r,className:B(X,m,{}),ref:i,...G(ee)},t.createElement("div",{className:`${X}__content`},a&&t.createElement("h2",{className:`${X}__title`},a),l&&t.createElement("p",{className:`${X}__body`},l)),e&&t.createElement("div",{className:`${X}__button`},e)));Y=v.checkComponentEnabled(Y,ee);Y.displayName=ee;Y.propTypes={button:n.node,className:n.string,description:n.node.isRequired,title:n.string.isRequired};Y.__docgenInfo={description:`Component to be displayed within a CoachmarkOverlayElements container.
Can be used 1 to N number, to display content in a Coachmark's overlay
in a carousel fashion.`,methods:[],displayName:"CoachmarkOverlayElement",props:{button:{required:!1,tsType:{name:"ReactNode"},description:`An optional button can be rendered below the description.
This can be a link, button, Coachmark button, etc.`,type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Optional class name for this component.",type:{name:"string"}},description:{required:!0,tsType:{name:"ReactNode"},description:"The description of the Coachmark.",type:{name:"node"}},title:{required:!0,tsType:{name:"string"},description:"The title of the Coachmark.",type:{name:"string"}}}};const N=`${v.prefix}--coachmark-overlay-elements`,J="CoachmarkOverlayElements",_={isVisible:!1,nextButtonText:"Next",previousButtonLabel:"Back",closeButtonLabel:"Got it",onNext:void 0,onBack:void 0,currentStep:0};let j=t.forwardRef(({className:e,children:m,isVisible:l=_.isVisible,media:a,renderMedia:r,currentStep:i=_.currentStep,nextButtonText:p=_.nextButtonText,previousButtonLabel:P=_.previousButtonLabel,closeButtonLabel:E=_.closeButtonLabel,onNext:D=_.onNext,onBack:q=_.onBack,...T},k)=>{const h=u.useRef(void 0),y=u.useRef(void 0),[O,Q]=u.useState(0),[w,F]=u.useState(i),L=le(),$=a||r,H=f=>{w>0&&f===0&&h.current&&setTimeout(()=>{var c;(c=h.current)==null||c.focus()},1e3),F(f)},o=u.Children.count(m),g=0,s=o-1,d=u.useMemo(()=>r==null?void 0:r({playStep:w}),[w,r]);return u.useEffect(()=>{var c,C;const f=Z(i,g,s);(C=(c=y==null?void 0:y.current)==null?void 0:c.scrollToView)==null||C.call(c,f)},[i]),u.useEffect(()=>{h.current&&h.current.focus()},[]),u.useEffect(()=>{setTimeout(()=>{h.current&&l&&h.current.focus()},100)},[l]),L?t.createElement("section",{...T,className:B(N,e,{}),ref:k,...G(J)},$&&(a==null?void 0:a.render)&&a.render(),$&&(a==null?void 0:a.filePaths)&&t.createElement(pe,{className:`${N}__element-stepped-media`,filePaths:a.filePaths,playStep:w}),$&&r&&t.createElement("div",{className:`${N}__element-stepped-media`},d),o===1?t.createElement(t.Fragment,null,m,E&&t.createElement("div",{className:B(`${N}__footer`,"coachmark-carousel-controls")},t.createElement(I,{size:"sm",...L.closeButtonProps,ref:h},E))):t.createElement(t.Fragment,null,t.createElement(fe,{ref:y,onScroll:f=>{Q(f)}},m),t.createElement("div",{className:B(`${N}__footer`)},t.createElement("div",{className:`${N}--controls-progress`},`${w+1} / ${o}`),O>0&&t.createElement(I,{size:"sm",kind:"ghost",title:P,disabled:O===0,onClick:()=>{var c,C;const f=Z(w-1,g,s);(C=(c=y==null?void 0:y.current)==null?void 0:c.scrollToView)==null||C.call(c,f),H(f),q==null||q()}},P),w<s?t.createElement(I,{size:"sm",ref:h,title:p,disabled:O===1,onClick:()=>{var c,C;const f=Z(w+1,g,s);(C=(c=y==null?void 0:y.current)==null?void 0:c.scrollToView)==null||C.call(c,f),H(f),D==null||D()}},p):E&&t.createElement(I,{size:"sm",ref:h,...L.closeButtonProps},E)))):ue.warn(`The ${J} is a composable container element which should be used only within the scope of a Coachmark or a CoachmarkFixed component.`)});j=v.checkComponentEnabled(j,J);j.displayName=J;j.propTypes={children:n.node.isRequired,className:n.string,closeButtonLabel:n.string,currentStep:n.number,isVisible:n.bool,media:n.oneOfType([n.shape({render:n.func}),n.shape({filePaths:n.arrayOf(n.string)})]),nextButtonText:n.string,onBack:n.func,onNext:n.func,previousButtonLabel:n.string,renderMedia:n.func};j.__docgenInfo={description:`Composable container to allow for the displaying of CoachmarkOverlayElement
components in a carousel fashion.`,methods:[],displayName:"CoachmarkOverlayElements",props:{children:{required:!0,tsType:{name:"ReactNode"},description:`CoachmarkOverlayElements should be used with one or many CoachmarkOverlayElement components as children.
@see CoachmarkOverlayElement`,type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Optional class name for this component.",type:{name:"string"}},isVisible:{required:!1,tsType:{name:"boolean"},description:`The visibility of CoachmarkOverlayElements is
managed in the parent component.`,defaultValue:{value:"false",computed:!1},type:{name:"bool"}},media:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  render?: () => ReactNode;
  filePaths?: string[];
}`,signature:{properties:[{key:"render",value:{name:"signature",type:"function",raw:"() => ReactNode",signature:{arguments:[],return:{name:"ReactNode"}},required:!1}},{key:"filePaths",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}}]}},description:"The object describing an image in one of two shapes.\nIf a single media element is required, use `{render}`.\nIf a stepped animation is required, use `{filePaths}`.\n* @deprecated please use the `renderMedia` prop",type:{name:"union",value:[{name:"shape",value:{render:{name:"func",required:!1}}},{name:"shape",value:{filePaths:{name:"arrayOf",value:{name:"string"},required:!1}}}]}},renderMedia:{required:!1,tsType:{name:"signature",type:"function",raw:"(params) => ReactNode",signature:{arguments:[{name:"params"}],return:{name:"ReactNode"}}},description:"Optional prop to render any media like images or any animated media.",type:{name:"func"}},nextButtonText:{required:!1,tsType:{name:"string"},description:"The label for the Next button.",defaultValue:{value:"'Next'",computed:!1},type:{name:"string"}},previousButtonLabel:{required:!1,tsType:{name:"string"},description:"The label for the Previous button.",defaultValue:{value:"'Back'",computed:!1},type:{name:"string"}},closeButtonLabel:{required:!1,tsType:{name:"string"},description:"The label for the Close button.",defaultValue:{value:"'Got it'",computed:!1},type:{name:"string"}},onNext:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Callback called when clicking on the Next button.",defaultValue:{value:"undefined",computed:!0},type:{name:"func"}},onBack:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Callback called when clicking on the Previous button.",defaultValue:{value:"undefined",computed:!0},type:{name:"func"}},currentStep:{required:!1,tsType:{name:"number"},description:"Current step of the coachmarks.",defaultValue:{value:"0",computed:!1},type:{name:"number"}}}};export{he as B,j as C,Y as a,R as b,ye as c,W as d,V as e,le as u};
