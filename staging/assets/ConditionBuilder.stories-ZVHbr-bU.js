import{E as lt,p as $n,j as t,T as st,B as Pn}from"./settings-DEdZ0TrD.js";import{R as _,r as b}from"./index-BwDkhjyp.js";import{useMDXComponents as Ln}from"./index-DlpNa54Y.js";import"./chunk-HLWAVYOI-DJiqSxHZ.js";import{e as ut,i as dt,C as pt}from"./index-wwnRuKS1.js";import{a as _e,_ as ue,c as F,d as ct,C as En,W as Dn}from"./floating-ui.core.mjs-LzsX8FoD.js";import{T as Hn}from"./TextInput-DnFddHXA.js";import{P as n}from"./index-Dk74W0Oi.js";import{aV as Bn}from"./bucket-5-CnrlLpeo.js";import{ap as Rn}from"./bucket-6-COExmpDO.js";import{W as mt,a as Gn,ak as ne}from"./bucket-18-BepxNBd9.js";import{W as Fe}from"./bucket-7-CVmRQ8ZH.js";import{v as Fn,aP as Mn,t as Vn}from"./bucket-4-Bsq_ef0l.js";import{i as Wn}from"./bucket-17-Cv_pKmw7.js";import{B as gt,C as $e}from"./bucket-1-XoaEU4JE.js";import{u as j}from"./uuidv4-BQrI85uz.js";import{g as yt}from"./devtools-BMJcATO0.js";import{L as ft}from"./index-B19trKVm.js";import{P as vt,a as bt}from"./index-CtP8jiW9.js";import{A as zn,t as ht}from"./bucket-0-DWSbtM9A.js";import{S as Zn}from"./Search-BNsOkhPW.js";import{d as wt,C as Un,aX as Tt,aV as qt}from"./events-BwXSUnsA.js";import{N as Ct}from"./NumberInput-B_FODUnF.js";import{T as xt}from"./TextArea-B780FfAP.js";import{D as an,a as Be}from"./DatePicker-DvhXI59Q.js";import{S as Re}from"./SelectItem-DVx0fm--.js";import{a2 as Kn}from"./bucket-16-D4kdKTmS.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-CJvxHwuA.js";import"./iframe-BgqD9BrU.js";import"../sb-preview/runtime.js";import"./react-18-Dd3bHtks.js";import"./index-BONylQH5.js";import"./extends-CCbyfPlC.js";import"./index-C2eUe6cH.js";import"./index-C0xX6qoh.js";import"./index-DrFu-skq.js";import"./useNormalizedInputProps-SnNF9w2p.js";import"./Text-DzW_iQLr.js";import"./FormContext-C7kRVu4t.js";import"./useAnnouncer-Dwt0jqXi.js";import"./LayerContext-DbU-6VX4.js";import"./bucket-14-nEnLeouB.js";import"./bucket-15-BdI7pN81.js";const Xn=e=>{let{hideLabel:r,className:a,...i}=e;const s=_e();return _.createElement("div",ue({className:F(`${s}--form-item`,a)},i),!r&&_.createElement("span",{className:`${s}--label ${s}--skeleton`}),_.createElement("div",{className:`${s}--select ${s}--skeleton`},_.createElement("div",{className:`${s}--select-input`})))};Xn.propTypes={className:n.string,hideLabel:n.bool};const At=Array.from({length:lt.length-1}).map((e,r)=>r+1),Yn=_.forwardRef(function(r,a){const{as:i="div",children:s,className:l,gap:u,orientation:d="vertical",...c}=r,p=_e(),g=F(l,{[`${p}--stack-${d}`]:!0,[`${p}--stack-scale-${u}`]:typeof u=="number"}),v={};return typeof u=="string"&&(v[`--${p}-stack-gap`]=u),_.createElement(i,ue({},c,{ref:a,className:g,style:v}),s)});Yn.propTypes={as:n.elementType,children:n.node,className:n.string,gap:n.oneOfType([n.string,n.oneOf(At)]),orientation:n.oneOf(["horizontal","vertical"])};const kt=_.forwardRef(function(r,a){return _.createElement(Yn,ue({},r,{ref:a,orientation:"vertical"}))}),Jn=_.forwardRef(function(r,a){let{children:i,className:s,disabled:l=!1,hideLabel:u,id:d,invalidText:c="Invalid time format.",invalid:p=!1,warningText:g="Warning message.",warning:v=!1,labelText:m,light:y=!1,maxLength:x=5,onChange:k=()=>{},onClick:T=()=>{},onBlur:w=()=>{},pattern:A="(1[012]|[1-9]):[0-5][0-9](\\s)?",placeholder:R="hh:mm",readOnly:q,size:O="md",type:D="text",value:E,...z}=r;const N=_e(),[S,I]=_.useState(E),[H,J]=_.useState(E);E!==H&&(I(E),J(E));function re(V){l||(q||I(S),T(V))}function ae(V){!l&&!q&&(I(S),k(V))}function C(V){l||(q||I(S),w(V))}const f=F(`${N}--time-picker__input-field`,`${N}--text-input`,[s],{[`${N}--text-input--light`]:y,[`${N}--time-picker__input-field-error`]:p||v}),h=F({[`${N}--time-picker`]:!0,[`${N}--time-picker--light`]:y,[`${N}--time-picker--invalid`]:p,[`${N}--time-picker--warning`]:v,[`${N}--time-picker--readonly`]:q,[`${N}--time-picker--${O}`]:O,...s&&{[s]:!0}}),L=F(`${N}--label`,{[`${N}--visually-hidden`]:u,[`${N}--label--disabled`]:l}),P=m?_.createElement("label",{htmlFor:d,className:L},m):null;function $(){const V={onMouseDown:K=>{q&&(K.preventDefault(),K.target.focus())},onKeyDown:K=>{q&&["ArrowDown","ArrowUp"," "].includes(K.key)&&K.preventDefault()}};return _.Children.map(i,K=>{const Y=K;if(Y)return _.cloneElement(Y,{...Y.props,disabled:Y.props.disabled??l,readOnly:q,...V})})}const M={readOnly:q};return _.createElement("div",{className:F(`${N}--form-item`,s)},P,_.createElement("div",{className:h},_.createElement("div",{className:`${N}--time-picker__input`},_.createElement("input",ue({className:f,"data-invalid":p||void 0,disabled:l,id:d,maxLength:x,onClick:re,onChange:ae,onBlur:C,placeholder:R,pattern:A,ref:a,type:D,value:E},z,M)),(p||v)&&_.createElement("div",{className:`${N}--time-picker__error__icon`},p?_.createElement(mt,{className:`${N}--checkbox__invalid-icon`,size:16}):_.createElement(Gn,{className:`${N}--text-input__invalid-icon--warning`,size:16}))),$()),(p||v)&&_.createElement("div",{className:`${N}--form-requirement`},p?c:g))});Jn.propTypes={children:n.node,className:n.string,disabled:n.bool,hideLabel:n.bool,id:n.string.isRequired,invalid:n.bool,invalidText:n.node,labelText:n.node,light:ct(n.bool),maxLength:n.number,onBlur:n.func,onChange:n.func,onClick:n.func,pattern:n.string,placeholder:n.string,readOnly:n.bool,size:n.oneOf(["sm","md","lg"]),type:n.string,value:n.string,warning:n.bool,warningText:n.node};const Me=_.forwardRef(function(r,a){let{["aria-label"]:i="open list of options",children:s,id:l,disabled:u=!1,className:d,...c}=r;const p=_e(),g=F({[`${p}--select`]:!0,[`${p}--time-picker__select`]:!0,...d&&{[d]:!0}});return _.createElement("div",{className:g},_.createElement("select",ue({"aria-label":i,className:`${p}--select-input`,disabled:u,id:l,ref:a},c),s),_.createElement(wt,{className:`${p}--select__arrow`,"aria-hidden":"true"}))});Me.propTypes={children:n.node,className:n.string,defaultValue:n.any,disabled:n.bool,id:n.string.isRequired};const Ve=_.createContext(1),Ze=_.forwardRef(function(r,a){let{as:i="section",level:s,...l}=r;const u=_.useContext(Ve),d=s??u+1,c=i;return _.createElement(Ve.Provider,{value:Math.min(d,6)},_.createElement(c,ue({ref:a},l)))});Ze.propTypes={as:n.elementType,children:n.node,className:n.string,level:n.number};const Ue=_.forwardRef(function(r,a){const i=`h${_.useContext(Ve)}`;return _.createElement(i,ue({ref:a},r))});Ue.propTypes={children:n.node,className:n.string};const o=`${$n.prefix}--condition-builder`,de="Non-Hierarchical",W="Hierarchical",Ae=(e,r)=>{e&&setTimeout(()=>{var a,i,s,l,u;U((a=e.target.closest('[role="gridcell"]'))==null?void 0:a.querySelector("button"),r),(s=(i=e.target.closest('[role="gridcell"]'))==null?void 0:i.querySelector("button"))==null||s.click(),(u=(l=e.target.closest('[role="gridcell"]'))==null?void 0:l.querySelector("button"))==null||u.focus()},0)},oe=(e,r)=>{setTimeout(()=>{U(e,r)},0)},We=(e,r,a,i,s,l)=>{e==document.activeElement?r!==a.length-1?oe(a[r+1],l):oe(a[i?0:a.length-1],l):Array.from(a).indexOf(document.activeElement)==-1&&s&&oe(a[0],l)},ze=(e,r,a,i,s,l)=>{e==document.activeElement?oe(r!==0?a[r-1]:a[i?a.length-1:0],l):Array.from(a).indexOf(document.activeElement)==-1&&s&&oe(a[a.length-1],l)},Ot=(e,r)=>e[r],ge=e=>e&&e!=="INVALID",U=(e,r)=>{var i,s;const a=(e==null?void 0:e.closest(`.${o}__content-container`))??(e==null?void 0:e.closest(`.${o}__actions-container`));a&&Array.from(a.querySelectorAll('[tabindex="0"]')).map(l=>l==null?void 0:l.setAttribute("tabindex","-1")),e==null||e.setAttribute("tabindex","0"),(s=(i=r.current)==null?void 0:i.querySelector(`.${o}__statement-button`))==null||s.setAttribute("tabindex","1"),e==null||e.focus()},Ge=e=>{const r=String(e.getDate()).padStart(2,"0"),a=String(e.getMonth()+1).padStart(2,"0"),i=e.getFullYear();return`${r}/${a}/${i}`},_t={text:e=>e,textarea:e=>e,time:e=>e,number:e=>e,option:e=>e&&typeof e!="string"?(Array.isArray(e)?e:[e]).map(a=>a.label).join(", "):e,date:e=>{if(Array.isArray(e)&&e.length>1){const r=e!=null&&e[0]&&!isNaN(new Date(e[0]))?Ge(new Date(e[0])):"",a=e!=null&&e[1]&&!isNaN(new Date(e[1]))?Ge(new Date(e[1])):"";return`${r} To ${a}`}else return Array.isArray(e)&&!isNaN(new Date(e[0]))?Ge(new Date(e[0])):e},custom:e=>e},te=({className:e,label:r,hideLabel:a,tooltipAlign:i,renderIcon:s,onClick:l,showToolTip:u,wrapperProps:d,onBlur:c,onFocus:p,onMouseEnter:g,onMouseLeave:v,isInvalid:m,wrapperClassName:y,tabIndex:x,...k})=>{const T=_e(),w=()=>{const A=k["data-name"]??"";return t.jsxs("button",{tabIndex:x!==void 0?x:-1,className:F([e,`${o}__button`,{[`${o}__text-ellipsis`]:u&&!a&&!m},{[`${o}__invalid-input`]:m}]),type:"button",onClick:l,onBlur:c,onFocus:p,onMouseEnter:g,onMouseLeave:v,"data-name":A,...k,children:[s&&t.jsx(s,{}),!a&&t.jsx("span",{children:r}),m&&t.jsx(Gn,{})]})};return a||u?t.jsx(st,{label:r,align:i,className:`${y} ${o}__tooltip ${T}--icon-tooltip`,...d,leaveDelayMs:0,children:w()}):t.jsx(t.Fragment,{children:w()})};te.propTypes={className:n.string,hideLabel:n.bool,isInvalid:n.bool,label:n.string,onBlur:n.func,onClick:n.func,onFocus:n.func,onMouseEnter:n.func,onMouseLeave:n.func,renderIcon:n.oneOfType([n.func,n.object]),showToolTip:n.bool,tabIndex:n.number,tooltipAlign:n.string,wrapperClassName:n.string,wrapperProps:n.object};te.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderButton",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},label:{required:!1,tsType:{name:"string"},description:"label of the button",type:{name:"string"}},hideLabel:{required:!1,tsType:{name:"boolean"},description:"decides if label and tooltip to be hidden",type:{name:"bool"}},tooltipAlign:{required:!1,tsType:{name:"PopoverAlignment"},description:"tooltip position",type:{name:"string"}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:"Optional prop to allow overriding the icon rendering.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"callback triggered on click of add button",type:{name:"func"}},onBlur:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:"mouse events callbacks",type:{name:"func"}},onFocus:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:"",type:{name:"func"}},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"",type:{name:"func"}},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"",type:{name:"func"}},showToolTip:{required:!1,tsType:{name:"boolean"},description:"decides if  tooltip to be shown",type:{name:"bool"}},wrapperProps:{required:!1,tsType:{name:"object"},description:"optional props for tree grid to add role and aria-label to wrapper span",type:{name:"object"}},isInvalid:{required:!1,tsType:{name:"boolean"},description:"boolean to know the updated value in not valid",type:{name:"bool"}},wrapperClassName:{required:!1,tsType:{name:"string"},description:"classname applies to the wrapper of popover",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index",type:{name:"number"}}}};const jt={operator:"or",groups:[{groupOperator:"and",statement:"ifAll",id:j(),conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:j()}]}]},X=b.createContext({rootState:{groups:[]}}),Ke=e=>{const[r,a]=b.useState({groups:[]}),[i,s]=b.useState([]),l={rootState:r,setRootState:a,actionState:i,setActionState:s,inputConfig:e.inputConfig,popOverSearchThreshold:e.popOverSearchThreshold,getOptions:e.getOptions,variant:e.variant,translateWithId:e.translateWithId,conditionBuilderRef:e.conditionBuilderRef};return t.jsx(X.Provider,{value:l,children:e.children})};Ke.propTypes={children:n.node.isRequired,conditionBuilderRef:n.object,getOptions:n.func,inputConfig:n.shape({properties:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object]),type:n.oneOf(["text","textarea","number","date","option","time","custom"]).isRequired,config:n.shape({options:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object])})),component:n.func,operators:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired})),long:n.bool})}))}).isRequired,popOverSearchThreshold:n.number.isRequired,translateWithId:n.func,variant:n.string.isRequired};Ke.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderProvider",props:{rootState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},description:""},setRootState:{required:!1,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}}],raw:"SetStateAction<ConditionBuilderState>"}],raw:"Dispatch<SetStateAction<ConditionBuilderState>>"},description:""},actionState:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:""},setActionState:{required:!1,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"}],raw:"SetStateAction<Action[]>"}],raw:"Dispatch<SetStateAction<Action[]>>"},description:""},children:{required:!0,tsType:{name:"ReactNode"},description:"Provide the contents of the ConditionBuilder.",type:{name:"node"}},inputConfig:{required:!0,tsType:{name:"signature",type:"object",raw:`{
  properties: Property[];
}`,signature:{properties:[{key:"properties",value:{name:"Array",elements:[{name:"intersection",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
} & (
  | PropertyConfig['option']
  | PropertyConfig['text']
  | PropertyConfig['number']
  | PropertyConfig['date']
  | PropertyConfig['textarea']
  | PropertyConfig['time']
  | PropertyConfig['custom']
)`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}},{name:"unknown"}]}],raw:"Property[]",required:!0}}]}},description:"This is a mandatory prop that defines the input to the condition builder.",type:{name:"shape",value:{properties:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'textarea'",computed:!1},{value:"'number'",computed:!1},{value:"'date'",computed:!1},{value:"'option'",computed:!1},{value:"'time'",computed:!1},{value:"'custom'",computed:!1}],required:!0},config:{name:"shape",value:{options:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1}}},required:!1},component:{name:"func",required:!1},operators:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0}}},required:!1},long:{name:"bool",required:!1}},required:!1}}},required:!1}}}},popOverSearchThreshold:{required:!0,tsType:{name:"number"},description:"Provide an mandatory numeric value that will be used to enable search option in the popovers with list.",type:{name:"number"}},getOptions:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  state: ConditionBuilderState,
  condition: Condition
) => Promise<Option[]>`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"},{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"}],raw:"Promise<Option[]>"}}},description:`This is an optional callback function that will be triggered when options array is not passed in the inputConfig against a property. 
This can be a asynchronous function that need  to  return a promise, so it will allow to fetch options from API call.
options has to be in valid format
[{
          label: 'label',
          id: 'id',
        },...]`,type:{name:"func"}},variant:{required:!0,tsType:{name:"string"},description:"Provide the condition builder variant: Non-Hierarchical/ Hierarchical",type:{name:"string"}},translateWithId:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: string) => string",signature:{arguments:[{type:{name:"string"},name:"id"}],return:{name:"string"}}},description:`Optional prop if you want to pass translation to the texts used . Otherwise this will the defined defaults.
This callback function will receive the message id and you need to return the corresponding text for that id.
The message key will be one of [   "ifText",   "addConditionText",   "addConditionGroupText",   "addSubgroupText",   "conditionText",   "propertyText",   "operatorText",   "valueText",   "connectorText",   "conditionRowText",   "removeConditionText",   "addConditionRowText",   "startText",   "endText",   "clearSearchText",   "actionsText",   "then",   "removeActionText",   "addActionText",   "invalidText",   "invalidNumberWarnText"
]`,type:{name:"func"}},conditionBuilderRef:{required:!1,tsType:{name:"ForwardedRef",elements:[{name:"HTMLDivElement"}],raw:"ForwardedRef<HTMLDivElement>"},description:"ref of condition builder",type:{name:"object"}}},composes:["PropsWithChildren"]};const on={ifText:"if",unlessText:"unless",excl_if:"excl.if",and:"and",or:"or",is:"is",ifAll:"if all",ifAny:"if any",unlessAll:"unless all",unlessAny:"unless any",greater:"is greater than",greaterEqual:"is greater than or equal to",lower:"is lower than",lowerEqual:"is lower than or equal to",startsWith:"starts with",endsWith:"ends with",contains:"contains",oneOf:"is one of",before:"is before",after:"is after",between:"is between",addConditionText:"Add condition",addConditionGroupText:"Add condition group",addSubgroupText:"Add subgroup",conditionText:"Condition",propertyText:"Property",operatorText:"Operator",valueText:"Value",connectorText:"Connector",conditionRowText:"Condition row",conditionRowGroupText:"Condition row group",removeConditionText:"Delete condition",addConditionRowText:"Add condition row",startText:"Start",endText:"End",clearSearchText:"Clear search input",actionsText:"Actions",then:"then",removeActionText:"Remove Action",addActionText:"Add action",invalidText:"Incomplete",invalidNumberWarnText:"Invalid number, must be 0 or greater",conditionBuilderText:"Condition Builder",actionSectionText:"Action Section",conditionHeadingText:"Condition",addPropertyText:"Add property",addOperatorText:"Add operator",addValueText:"Add value",conditionBuilderHierarchicalText:"Condition Builder Hierarchical"},Z=(e,r)=>{const{translateWithId:a}=b.useContext(X);return e.map(i=>(r!=null&&r[i]&&(i=r[i]),a!=null&&a(i)?a(i):on[i]?on[i]:i))},Nt=(e,r,a)=>{var s;(s=document.activeElement.closest(`.${o}__popover`))!=null&&s.querySelector('[role="dialog"]')||Pt(e,r,a)},St=(e,r,a)=>{It(e)||$t(e,a==null?void 0:a.current,r)},It=e=>!["Escape"].includes(e.key)&&(e.target.closest(`.${o}__item-date`)||e.target.closest(`.${o}__item-time`)),$t=(e,r,a)=>{var d,c,p,g;const i=e.key,s=Ot(e,"shiftKey"),l=(d=r.querySelector("ul"))==null?void 0:d.dataset.multiSelect;let u=[];switch(i){case"ArrowUp":e.preventDefault(),r.querySelectorAll('[role="option"]').forEach((v,m,y)=>{ze(v,m,y,null,null,a)}),Array.from(e.target.closest("ul").querySelectorAll("li")).indexOf(e.target)===1&&(r.querySelector(`.${o}__popover-content-wrapper`).scrollTop=0);break;case"ArrowDown":e.preventDefault(),r.querySelectorAll('[role="option"]').forEach((v,m,y)=>{We(v,m,y,null,null,a)});break;case"Tab":u=[...Array.from(r.querySelectorAll(`.${o}__selectAll-button,[role="searchbox"]`)),r.querySelector('[role="option"]')],u.forEach((v,m,y)=>{s?ze(v,m,y,!0,!0,a):We(v,m,y,!0,!0,a)}),e.preventDefault();break;case" ":l==="true"&&(document.activeElement.type!=="button"&&((c=document.activeElement)==null||c.click()),e.preventDefault());break;case"Enter":l==="true"?document.activeElement.type!=="button"&&(e.preventDefault(),(p=document.activeElement)==null||p.click()):document.activeElement.type!=="button"&&(Ae(e,a),(g=document.activeElement)==null||g.click());break;case"Escape":Ae(e,a);break}},Pt=(e,r,a)=>{var i,s,l,u,d,c;switch(e.key){case"ArrowRight":if(e.preventDefault(),a==W){let p=Array.from((i=e.target.closest('[role="row"]'))==null?void 0:i.querySelectorAll('[role="gridcell"] button'));if(p.length===1)e.target=e.target.closest('[role="row"]'),ln(e,r,a);else if(e.target.getAttribute("role")=="row")U(p[0],r);else{let g=p.indexOf(e.target);g<p.length-1&&oe(p[g+1],r)}}else sn(e,r);break;case"ArrowLeft":if(e.preventDefault(),a==W){if(e.target.getAttribute("role")!=="row"){let p=Array.from((s=e.target.closest('[role="row"]'))==null?void 0:s.querySelectorAll('[role="gridcell"] button')),g=p.indexOf(e.target);if(g>0)oe(p[g-1],r);else{let v=e.target.closest('[role="row"]');U(v,r)}}}else sn(e,r);break;case"ArrowUp":case"ArrowDown":e.preventDefault(),a==W?ln(e,r,a):Lt(e,r,a);break;case"Enter":((u=(l=document.activeElement)==null?void 0:l.querySelectorAll("button"))==null?void 0:u.length)===1&&((c=(d=document.activeElement)==null?void 0:d.querySelectorAll("button")[0])==null||c.click());break}},Xe=e=>{var r;return Array.from((r=e.current)==null?void 0:r.querySelectorAll('[role="row"]'))},Qn=(e,r)=>Xe(r).findIndex(i=>i.contains(e)),Lt=(e,r,a)=>{const i=Xe(r),s=Qn(e.target,r);et(e,s,i,a,r)},ln=(e,r,a)=>{const i=Xe(r),s=Qn(e.target,r);let l=s;e.target.getAttribute("role")=="row"?(["ArrowDown","ArrowRight"].includes(e.key)?l+=1:e.key==="ArrowUp"&&(l-=1),l<0?l=0:l>=i.length&&(l=i.length-1),l!==s&&U(i[l],r)):et(e,s,i,a,r)},et=(e,r,a,i,s)=>{let l=r;e.key==="ArrowUp"&&(l=r==0?r:r-1),e.key==="ArrowDown"&&(l=r===a.length-1?a.length-1:r+1);const u=a[l],d=e.target.dataset.name;u!=null&&u.querySelector(`[data-name="${d}"]`)?U(u==null?void 0:u.querySelector(`[data-name="${d}"]`),s):i===W&&U(u,s)},sn=(e,r)=>{r.current.querySelectorAll('[role="gridcell"] button').forEach((a,i,s)=>{e.key==="ArrowRight"?We(a,i,s,null,null,r):ze(a,i,s,null,null,r)})},G=({children:e,className:r,label:a,renderIcon:i,title:s,type:l,showToolTip:u,condition:d,popOverClassName:c,config:p,renderChildren:g,onChange:v,...m})=>{const y=b.useRef(null),[x,k]=b.useState(!1),T={ifAll:"if",ifAny:"if",unlessAll:"unless",unlessAny:"unless"},[w,A,R,q,O,D]=Z(["invalidText","addConditionText","addPropertyText","addOperatorText","addValueText",a],T),{conditionBuilderRef:E}=b.useContext(X),z=()=>{const{property:f,operator:h}=d||{};return a==="INVALID"||m["data-name"]==="propertyField"&&f==="INVALID"||m["data-name"]==="operatorField"&&h==="INVALID"?{propertyLabel:w,isInvalid:!0}:{isInvalid:!1,propertyLabel:m["data-name"]=="valueField"&&l?_t[l](a,p):D}},{propertyLabel:N,isInvalid:S}=z();b.useEffect(()=>{if(d){const f=m["data-name"];(d.popoverToOpen&&f!==d.popoverToOpen||f=="valueField"&&l=="option"&&(d==null?void 0:d.operator)!=="oneOf")&&H(),d.popoverToOpen==f&&J()}else H()},[d,a]),b.useEffect(()=>{var f;if(x&&y.current){const h=(f=y==null?void 0:y.current)==null?void 0:f.querySelector("input,textarea");h&&setTimeout(()=>h.focus(),0)}},[y,x]);const I=()=>{(m["data-name"]==="propertyField"&&!(d!=null&&d.property)||m["data-name"]==="operatorField"&&!(d!=null&&d.operator)||m["data-name"]==="valueField"&&!(d!=null&&d.value))&&(v==null||v("INVALID"))},H=()=>{x&&I(),k(!1)},J=()=>k(!0),re=()=>{(e||g)&&k(!x)},ae=f=>{St(f,E,y),f.key==="Escape"&&I()},C=()=>N||(m["data-name"]==="propertyField"?R:m["data-name"]==="operatorField"?q:m["data-name"]==="valueField"?O:A);return t.jsxs(vt,{open:x,isTabTip:!0,role:"gridcell",className:`${c} ${o}__popover`,ref:y,onRequestClose:H,children:[t.jsx(te,{label:C(),hideLabel:!a,onClick:re,className:r,"aria-haspopup":!0,"aria-expanded":x,renderIcon:i||(a==null?zn:void 0),showToolTip:u,isInvalid:S,...m}),x&&t.jsx(bt,{className:`${o}__popover-content-wrapper`,role:"dialog","aria-label":s,onKeyDown:ae,children:t.jsxs(ft,{children:[t.jsx("h1",{className:`${o}__item__title`,children:s}),t.jsx("div",{className:`${o}__popover-content`,children:g?g(y):e})]})})]})};G.propTypes={children:n.node,className:n.string,condition:n.object,config:n.object,label:n.oneOfType([n.string,n.array,n.object]),onChange:n.func,popOverClassName:n.string,renderChildren:n.func,renderIcon:n.oneOfType([n.func,n.object]),showToolTip:n.bool,title:n.string,type:n.string};G.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItem",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},label:{required:!1,tsType:{name:"union",raw:"string | Option | Option[]",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"}]},description:"text to be displayed in the field",type:{name:"union",value:[{name:"string"},{name:"array"},{name:"object"}]}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:"Optional prop to allow overriding the icon rendering.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},title:{required:!1,tsType:{name:"string"},description:"title of the popover",type:{name:"string"}},showToolTip:{required:!1,tsType:{name:"boolean"},description:"show tool tip",type:{name:"bool"}},popOverClassName:{required:!1,tsType:{name:"string"},description:"class name for popover",type:{name:"string"}},type:{required:!1,tsType:{name:"string"},description:"input type",type:{name:"string"}},condition:{required:!1,tsType:{name:"intersection",raw:"Action & Condition",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}}]},description:"current condition state object",type:{name:"object"}},config:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  option: PropertyConfigOption;
  text: PropertyConfigText;
  textarea: PropertyConfigTextArea;
  number: PropertyConfigNumber;
  date: PropertyConfigDate;
  time: PropertyConfigTime;
  custom: PropertyConfigCustom;
}`,signature:{properties:[{key:"option",value:{name:"signature",type:"object",raw:`{
  type: 'option';
  config?: {
    options?: {
      id: string;
      label: string;
      icon?: CarbonIconType;
    }[];
  };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:"'option'",required:!0}},{key:"config",value:{name:"signature",type:"object",raw:`{
  options?: {
    id: string;
    label: string;
    icon?: CarbonIconType;
  }[];
}`,signature:{properties:[{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}[]`,required:!1}}]},required:!1}}]},required:!0}},{key:"text",value:{name:"PropertyConfigText",required:!0}},{key:"textarea",value:{name:"PropertyConfigTextArea",required:!0}},{key:"number",value:{name:"PropertyConfigNumber",required:!0}},{key:"date",value:{name:"signature",type:"object",raw:`{
  type: 'date';
  config: object;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:"'date'",required:!0}},{key:"config",value:{name:"object",required:!0}}]},required:!0}},{key:"time",value:{name:"signature",type:"object",raw:`{
  type: 'time';
  config: {
    timeZones: string[];
  };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:"'time'",required:!0}},{key:"config",value:{name:"signature",type:"object",raw:`{
  timeZones: string[];
}`,signature:{properties:[{key:"timeZones",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}}]},required:!0}}]},required:!0}},{key:"custom",value:{name:"signature",type:"object",raw:`{
  type: 'custom';
  config: {
    component: React.ComponentType<any>;
    operators: {
      label: string;
      id: string;
    }[];
  };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:"'custom'",required:!0}},{key:"config",value:{name:"signature",type:"object",raw:`{
  component: React.ComponentType<any>;
  operators: {
    label: string;
    id: string;
  }[];
}`,signature:{properties:[{key:"component",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0}},{key:"operators",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  label: string;
  id: string;
}`,signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}}]}}],raw:`{
  label: string;
  id: string;
}[]`,required:!0}}]},required:!0}}]},required:!0}}]}},description:"this is the config object again the current property from inputConfig",type:{name:"object"}},renderChildren:{required:!1,tsType:{name:"signature",type:"function",raw:"(ref: RefObject<HTMLDivElement>) => ReactNode",signature:{arguments:[{type:{name:"RefObject",elements:[{name:"HTMLDivElement"}],raw:"RefObject<HTMLDivElement>"},name:"ref"}],return:{name:"ReactNode"}}},description:"callback prop that returns the jsx for children",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(val: string) => void",signature:{arguments:[{type:{name:"string"},name:"val"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},tabIndex:{required:!1,tsType:{name:"number"},description:""},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},onFocus:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},onBlur:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},children:{description:"provide the contents of the popover",type:{name:"node"},required:!1}},composes:["PropsWithChildren"]};const le=({conditionState:e={},config:r={},onChange:a})=>{const{popOverSearchThreshold:i}=b.useContext(X),s=b.useRef(null),[l,u]=Z(["propertyText","clearSearchText"]),d=r.options,[c,p]=b.useState(""),g=e.value,v=c?d==null?void 0:d.filter(T=>{var w;return(w=T.label)==null?void 0:w.toLowerCase().includes(c.toLowerCase())}):d;b.useEffect(()=>{var T;if(s.current){const w=(T=s.current)==null?void 0:T.querySelector("input, button,li");w&&w.focus()}},[d]);const m=(T,w)=>{a(w.id,T)},y=T=>{const{value:w}=T.target;p(w)},x=()=>e.label?e.label:l,k=T=>t.jsxs("div",{className:`${o}__statement_wrapper`,children:[t.jsxs("div",{children:[T.text1," (",T.connector,")"]}),t.jsx("div",{children:T.text2})]});if(d)return t.jsxs("div",{className:`${o}__item-option`,ref:s,children:[i&&d.length>i&&t.jsx("div",{className:`${o}__item-option__search`,children:t.jsx(Zn,{size:"sm",labelText:u,closeButtonLabelText:u,onChange:y})}),t.jsx("ul",{"aria-label":x(),role:"listbox",children:v==null?void 0:v.map(T=>{const w=g===T.id,A=T.icon;return t.jsx("li",{tabIndex:0,role:"option","aria-selected":w,className:`${o}__item-option__option`,onKeyUp:()=>!1,onClick:R=>m(R,T),children:t.jsxs("div",{className:`${o}__item-option__option-content`,children:[t.jsxs("span",{className:`${o}__item-option__option-label`,children:[A&&t.jsx(A,{}),r.isStatement?k(T):T.label]}),w&&t.jsx(Un,{className:`${o}__checkmark`})]})},T.id)})})]})};le.propTypes={conditionState:n.object,config:n.object,onChange:n.func};le.__docgenInfo={description:"",methods:[],displayName:"ItemOption",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  label?: string;
  value?: string;
}`,signature:{properties:[{key:"label",value:{name:"string",required:!1}},{key:"value",value:{name:"string",required:!1}}]}},description:"current condition object",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},config:{required:!1,tsType:{name:"intersection",raw:"PropertyConfigOption['config'] & { isStatement?: boolean }",elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"signature",type:"object",raw:"{ isStatement?: boolean }",signature:{properties:[{key:"isStatement",value:{name:"boolean",required:!1}}]}}]},description:"current config object that this property is part of",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string, e: Event) => void",signature:{arguments:[{type:{name:"string"},name:"value"},{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const Ee=()=>{const[e,r,a,i,s,l,u,d,c,p,g,v,m,y,x,k,T,w]=Z(["ifAll","ifAny","unlessAll","unlessAny","and","or","is","greater","greaterEqual","lower","lowerEqual","startsWith","endsWith","contains","oneOf","before","after","between"]);return{statementConfig:[{label:"ifText",id:"ifAll",connector:"and",text1:e,text2:"(a && b)"},{label:"ifText",id:"ifAny",connector:"or",text1:r,text2:"(a || b)"},{label:"unlessText",id:"unlessAll",connector:"and",text1:a,text2:"! (a && b)"},{label:"unlessText",id:"unlessAny",connector:"or",text1:i,text2:"! (a || b)"}],connectorConfig:[{label:s,id:"and"},{label:l,id:"or"}],operatorConfig:[{label:u,id:"is",type:"all"},{label:d,id:"greater",type:"number"},{label:c,id:"greaterEqual",type:"number"},{label:p,id:"lower",type:"number"},{label:g,id:"lowerEqual",type:"number"},{label:v,id:"startsWith",type:"text,textarea"},{label:m,id:"endsWith",type:"text,textarea"},{label:y,id:"contains",type:"text,textarea"},{label:x,id:"oneOf",type:"option"},{label:k,id:"before",type:"date,time"},{label:T,id:"after",type:"date,time"},{label:w,id:"between",type:"date"}]}},je=({operator:e,className:r,onChange:a,...i})=>{const{variant:s,conditionBuilderRef:l}=b.useContext(X),[u]=Z(["connectorText"]),{connectorConfig:d}=Ee(),c=b.useCallback((m,y)=>{y?m.classList.add("hoveredConnector"):m.classList.remove("hoveredConnector")},[]),p=m=>{const y=m==null?void 0:m.currentTarget.closest(".eachGroup");c(y,!0)},g=m=>{const y=m==null?void 0:m.currentTarget.closest(".eachGroup");c(y,!1)},v=(m,y)=>{a==null||a(m),Ae(y,l)};return s==W?t.jsx("span",{className:`${r} ${o}__connector--disabled`,children:t.jsx(te,{label:e})}):t.jsx(G,{label:e,title:u,"data-name":"connectorField",onMouseEnter:p,onMouseLeave:g,onFocus:p,onBlur:g,...i,popOverClassName:r,className:`${o}__connector-button`,children:t.jsx(le,{config:{options:d},conditionState:{value:e,label:u},onChange:v})})};je.propTypes={className:n.string,onChange:n.func,operator:n.string};je.__docgenInfo={description:"",methods:[],displayName:"ConditionConnector",props:{operator:{required:!1,tsType:{name:"string"},description:"string that defines the connector operator (and/or)",type:{name:"string"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(op: string) => void",signature:{arguments:[{type:{name:"string"},name:"op"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}}}};const Ye=({conditionState:e,config:r,onChange:a})=>{var d;const[i]=Z(["invalidNumberWarnText"]),s=(c,{value:p})=>{p!==""&&!isNaN(p)&&l(p)?a(`${p} ${r.unit??""}`):a("INVALID")},l=c=>!(r.max!==void 0&&r.min===void 0&&c>r.max||r.min!==void 0&&r.max===void 0&&c<r.min||r.max!==void 0&&r.min!==void 0&&(c>r.max||c<r.min)),u=()=>{var c,p;return((p=(c=e.value)==null?void 0:c.split(" "))==null?void 0:p[0])??""};return t.jsx("div",{className:`${o}__item-number`,children:t.jsx(Ct,{...r,label:e.property,hideLabel:!0,id:(d=e.property)==null?void 0:d.replace(/\s/g,""),invalidText:i,allowEmpty:!0,onChange:s,defaultValue:u()})})};Ye.propTypes={conditionState:n.object,config:n.object,onChange:n.func};Ye.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemNumber",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"current condition object",type:{name:"object"}},config:{required:!1,tsType:{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},description:"current config object that this property is part of",type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const Pe=({conditionState:e,onChange:r,config:a,type:i})=>{var l;const s={...a,hideLabel:!0,value:ge(e.value)?e.value:"",id:(l=e.property)==null?void 0:l.replace(/\s/g,""),onChange:u=>{r(u.target.value)},labelText:e.property};return t.jsx("div",{className:`${o}__item-text`,children:i=="textarea"?t.jsx(xt,{...s}):t.jsx(Hn,{...s})})};Pe.propTypes={conditionState:n.object,config:n.object,onChange:n.func,type:n.string};Pe.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemText",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"current condition object",type:{name:"object"}},config:{required:!1,tsType:{name:"union",raw:"PropertyConfigText | PropertyConfigTextArea",elements:[{name:"PropertyConfigText"},{name:"PropertyConfigTextArea"}]},description:"config of the current property",type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}},type:{required:!1,tsType:{name:"union",raw:"'textarea' | 'text'",elements:[{name:"literal",value:"'textarea'"},{name:"literal",value:"'text'"}]},description:"current input type",type:{name:"string"}}}};const Je=({conditionState:e,onChange:r,parentRef:a})=>{const i=b.useRef(null),[s,l]=Z(["startText","endText"]),u=e.operator=="between"?"range":"single",d=c=>{r(c&&c.length>0?c:"INVALID")};return t.jsxs("div",{className:`${o}__item-date `,children:[u=="single"&&t.jsx(an,{ref:i,dateFormat:"d/m/Y",datePickerType:"single",value:e.value,onClose:d,appendTo:a==null?void 0:a.current,children:t.jsx(Be,{id:"datePicker",placeholder:"dd/mm/yyyy",labelText:e.property})}),u=="range"&&t.jsxs(an,{ref:i,dateFormat:"d/m/Y",datePickerType:u,onClose:d,value:e.value,appendTo:a==null?void 0:a.current,children:[t.jsx(Be,{id:"datePickerStart",placeholder:"dd/mm/yyyy",labelText:s}),t.jsx(Be,{id:"datePickerEnd",placeholder:"dd/mm/yyyy",labelText:l})]})]})};Je.propTypes={conditionState:n.object,onChange:n.func,parentRef:n.object};Je.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemDate",props:{conditionState:{description:"current condition object",type:{name:"object"},required:!1},onChange:{description:"callback to update state oin date change",type:{name:"func"},required:!1},parentRef:{description:"reference to the popover node",type:{name:"object"},required:!1}}};const Qe=({onChange:e,config:r})=>{var v,m;const[a,i]=b.useState(""),[s,l]=b.useState("AM"),[u,d]=b.useState((v=r==null?void 0:r.timeZones)==null?void 0:v[0]);b.useEffect(()=>{const y=`${a??""} ${s??""} ${u??""}`;e(a?y:void 0)},[a,s,u]);const c=y=>{d(y.target.value)},p=y=>{l(y.target.value)},g=y=>{i(y.target.value)};return t.jsx("div",{className:`${o}__item-time`,children:t.jsxs(Jn,{id:"time-picker",labelText:"Select a time",onChange:g,children:[t.jsxs(Me,{id:"time-picker-day-zone",onChange:p,children:[t.jsx(Re,{value:"AM",text:"AM"}),t.jsx(Re,{value:"PM",text:"PM"})]}),t.jsx(Me,{id:"time-picker-time-zone",onChange:c,children:(m=r==null?void 0:r.timeZones)==null?void 0:m.map((y,x)=>t.jsx(Re,{value:y,text:y},x))})]})})};Qe.propTypes={config:n.object,onChange:n.func};Qe.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemTime",props:{config:{description:"current config object that this property is part of",type:{name:"object"},required:!1},onChange:{description:"callback to update state oin date change",type:{name:"func"},required:!1}}};const ke=({className:e,onClick:r,addConditionSubGroupHandler:a,showConditionSubGroupPreviewHandler:i,hideConditionSubGroupPreviewHandler:s,showConditionPreviewHandler:l,hideConditionPreviewHandler:u,enableSubGroup:d,buttonLabel:c,tabIndex:p})=>{const[g,v,m]=Z(["addConditionText","addConditionRowText","addSubgroupText"]),y=()=>{u==null||u(),r()},x=()=>d?{onMouseEnter:l,onMouseLeave:u,onFocus:l,onBlur:u}:{},k=()=>({onMouseEnter:i,onMouseLeave:s,onFocus:i,onBlur:s}),T=()=>c||(d?void 0:v),w=d?{role:"gridcell"}:{};return t.jsxs("div",{className:`${e} ${o}__add-button-wrapper`,role:d?"none":"gridcell","aria-label":T(),children:[t.jsx(te,{renderIcon:ht,onClick:y,...x(),wrapperProps:w,className:`${o}__add-button`,hideLabel:!0,"data-name":"addButton",label:c??g,tabIndex:p,wrapperClassName:`${o}__add-condition-wrapper`}),d&&t.jsx(te,{renderIcon:Kn,onClick:a,className:F(`${o}__add-condition-sub-group`),hideLabel:!0,label:m,wrapperProps:w,wrapperClassName:`${o}__add-condition-sub-group-wrapper ${o}__gap-left`,...k()})]})};ke.propTypes={addConditionSubGroupHandler:n.func,buttonLabel:n.string,className:n.string,enableSubGroup:n.bool,hideConditionPreviewHandler:n.func,hideConditionSubGroupPreviewHandler:n.func,onClick:n.func,showConditionPreviewHandler:n.func,showConditionSubGroupPreviewHandler:n.func,tabIndex:n.number};ke.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderAdd",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"callback triggered on click of add button",type:{name:"func"}},addConditionSubGroupHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},hideConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},showConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},hideConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},enableSubGroup:{required:!1,tsType:{name:"boolean"},description:"boolean to enable sub groups for the tree variant",type:{name:"bool"}},buttonLabel:{required:!1,tsType:{name:"string"},description:"tooltip label for plus button",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index",type:{name:"number"}}}};const De=({conditionState:e={},config:r={},onChange:a})=>{const i=e.operator==="oneOf",{popOverSearchThreshold:s,getOptions:l,rootState:u}=b.useContext(X),[d,c]=Z(["propertyText","clearSearchText"]),p=b.useRef(null),[g,v]=b.useState(r.options),[m,y]=b.useState(""),x=g==null?void 0:g.filter(q=>q.label.toLowerCase().includes(m.toLowerCase())),k=Array.isArray(e.value)?e.value:e.value!==void 0?[e.value]:[];b.useEffect(()=>{!g&&l&&(async()=>{const O=await l(u,e);(O==null?void 0:O.length)>0&&Object.keys(O[0]).includes("label")&&Object.keys(O[0]).includes("id")&&v(O)})()},[]),b.useEffect(()=>{if(p.current){const q=p.current.querySelector("input, button,li");q&&(q==null||q.focus())}},[g]);const T=q=>{q.currentTarget.dataset.selectedAll=="false"?a(void 0):a(g)},w=q=>{const{value:O}=q.target;y(O)},A=(q,O,D)=>{const E=k.filter(z=>z!=="INVALID");if(i)if(D){const z=E.filter(N=>N.id!==O.id);a(z.length>0?z:void 0)}else a([...E,O]);else a(O,q)},R=()=>e.label?e.label:e.property?e.property:d;return g?t.jsxs("div",{className:`${o}__item-option`,ref:p,children:[s&&g.length>s&&t.jsx("div",{className:`${o}__item-option__search`,children:t.jsx(Zn,{size:"sm",labelText:c,closeButtonLabelText:c,onChange:w})}),i&&t.jsxs("div",{className:`${o}__multiselectSelectionStatusContainer`,children:[t.jsx("h4",{children:t.jsxs("label",{children:[k.length,"/",g.length," Selected"]})}),t.jsx(Pn,{kind:"ghost",size:"sm","data-selected-all":`${k.length==0}`,onClick:T,className:`${o}__selectAll-button`,children:k.length==0?"Select all":"Deselect all"})]}),t.jsx("ul",{"aria-label":R(),role:"listbox","data-multi-select":i,children:x==null?void 0:x.map(q=>{const O=k.map(E=>E.id).includes(q.id),D=q.icon;return t.jsx("li",{tabIndex:0,role:"option","aria-selected":O,className:`${o}__item-option__option`,onKeyUp:()=>!1,onClick:E=>A(E,q,O),children:t.jsx("div",{className:`${o}__item-option__option-content`,children:i?t.jsxs(t.Fragment,{children:[t.jsx("span",{className:`${o}__option-check-box`,children:O?t.jsx(Tt,{}):t.jsx(qt,{})}),t.jsx("span",{className:`${o}__item-option__option-label`,children:q.label}),D&&t.jsx("span",{className:`${o}__option-icon`,children:t.jsx(D,{})})]}):t.jsxs(t.Fragment,{children:[t.jsxs("span",{className:`${o}__item-option__option-label`,children:[D&&t.jsx(D,{}),q.label]}),O&&t.jsx(Un,{className:`${o}__checkmark`})]})})},q.id)})})]}):t.jsx(Xn,{})};De.propTypes={conditionState:n.object,config:n.object,onChange:n.func};De.__docgenInfo={description:"",methods:[],displayName:"ItemOptionForValueField",props:{conditionState:{required:!1,tsType:{name:"intersection",raw:"Condition & { label?: string }",elements:[{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{ label?: string }",signature:{properties:[{key:"label",value:{name:"string",required:!1}}]}}]},description:"current condition object",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},config:{required:!1,tsType:{name:"signature",raw:"PropertyConfigOption['config']"},description:"current config object that this property is part of",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: any, e?: Event) => void",signature:{arguments:[{type:{name:"any"},name:"value"},{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const Le=e=>{const{onRemove:r,onChange:a,condition:i={},conjunction:s,onConnectorOperatorChange:l,isStatement:u,group:d,onStatementChange:c,conditionIndex:p,addConditionHandler:g,addConditionSubGroupHandler:v,aria:m,hideConditionSubGroupPreviewHandler:y,showConditionSubGroupPreviewHandler:x,hideConditionPreviewHandler:k,showConditionPreviewHandler:T,isLastCondition:w}=e,{property:A,value:R,operator:q}=i,{inputConfig:O,variant:D,conditionBuilderRef:E}=b.useContext(X),[z,N]=b.useState(!1),[S,I]=b.useState(!1),[H,J,re,ae,C]=Z(["conditionRowText","conditionText","propertyText","operatorText","removeConditionText"]),{statementConfig:f,operatorConfig:h}=Ee(),L=B=>{var ee;return((ee=O==null?void 0:O.properties)==null?void 0:ee.find(ot=>ot.id==B))??{}},{icon:P,type:$,config:M,label:V}=L(A),K={text:Pe,number:Ye,date:Je,time:Qe,option:De,custom:M==null?void 0:M.component,textarea:Pe}[$],Y=()=>{I(!0)},qe=()=>{I(!1)},Se=(B,ee)=>{Ae(ee,E),c==null||c(B)},Ce=B=>{a({...i,property:B,operator:void 0,value:"",popoverToOpen:ge(B)?"operatorField":""})},Q=B=>{a({...i,operator:B,value:void 0,popoverToOpen:ge(B)?"valueField":""})},ce=B=>{const ee={...i};delete ee.popoverToOpen,a({...ee,value:B})},xe=()=>{N(!0)},me=()=>{N(!1)},Ie=(B,ee)=>D===W?!0:w(B,ee),rt=()=>M!=null&&M.operators?M.operators:h.filter(B=>B.type.indexOf($)!=-1||B.type=="all"),at=()=>D==W?{"aria-level":m.level,"aria-posinset":m.posinset,"aria-setsize":m.setsize}:{},it=B=>t.jsx(K,{conditionState:{property:A,operator:q,value:R},onChange:ce,config:M,"data-name":"valueField",parentRef:B,type:$});return t.jsxs("div",{className:F(`${o}__condition-block`,{[`${o}__condition__deletion-preview`]:z},{[`${o}__gap-bottom`]:D==W},{[`${o}__gap ${o}__gap-bottom`]:D==de},{[`${o}__condition--interacting`]:S}),role:"row","aria-label":H,...at(),tabIndex:-1,onMouseEnter:Y,onMouseLeave:qe,onBlur:qe,children:[s?t.jsx(je,{className:`${o}__gap`,operator:s,onChange:B=>l==null?void 0:l(B)}):t.jsx("div",{role:"gridcell"}),u&&t.jsx(G,{label:d.statement,title:J,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`,tabIndex:0,children:t.jsx(le,{conditionState:{value:d.statement,label:J},onChange:Se,config:{options:f,isStatement:!0}})}),t.jsx(G,{label:V??(i==null?void 0:i.property),title:re,renderIcon:P??void 0,className:`${o}__property-field`,"data-name":"propertyField",condition:i,type:$,onChange:Ce,children:t.jsx(le,{conditionState:{value:A,label:re},onChange:Ce,config:{options:O==null?void 0:O.properties}})}),ge(A)&&t.jsx(G,{label:q,title:ae,"data-name":"operatorField",condition:i,type:$,onChange:Q,children:t.jsx(le,{config:{options:rt()},conditionState:{value:q,label:ae},onChange:Q})}),ge(A)&&ge(q)&&t.jsx(G,{label:R,type:$,title:V,showToolTip:!0,"data-name":"valueField",condition:i,config:M,onChange:ce,renderChildren:it}),t.jsx("span",{role:"gridcell","aria-label":C,children:t.jsx(te,{hideLabel:!0,label:C,onClick:r,onMouseEnter:xe,onMouseLeave:me,onFocus:xe,onBlur:me,renderIcon:En,className:`${o}__close-condition`,"data-name":"closeCondition"})}),Ie(p,d.conditions)&&t.jsx(ke,{onClick:()=>{g==null||g(p)},addConditionSubGroupHandler:()=>{v==null||v(p)},showConditionSubGroupPreviewHandler:x,hideConditionSubGroupPreviewHandler:y,enableSubGroup:D==W,showConditionPreviewHandler:T,hideConditionPreviewHandler:k,className:`${o}__gap ${o}__gap-left`})]})};Le.propTypes={addConditionHandler:n.func,addConditionSubGroupHandler:n.func,aria:n.object,condition:n.object,conditionIndex:n.number,conjunction:n.string,group:n.object,hideConditionPreviewHandler:n.func,hideConditionSubGroupPreviewHandler:n.func,isLastCondition:n.func,isStatement:n.bool,onChange:n.func,onConnectorOperatorChange:n.func,onRemove:n.func,onStatementChange:n.func,showConditionPreviewHandler:n.func,showConditionSubGroupPreviewHandler:n.func,state:n.object};Le.__docgenInfo={description:"",methods:[],displayName:"ConditionBlock",props:{condition:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"",type:{name:"object"}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"callback for Remove a condition",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(condition: Condition) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},onConnectorOperatorChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(op: string) => void",signature:{arguments:[{type:{name:"string"},name:"op"}],return:{name:"void"}}},description:"callback to handle the connector(and/or) change",type:{name:"func"}},onStatementChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(v: string) => void",signature:{arguments:[{type:{name:"string"},name:"v"}],return:{name:"void"}}},description:"callback to handle the statement(if/ excl.if) change",type:{name:"func"}},addConditionHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(conditionIndex: number) => void",signature:{arguments:[{type:{name:"number"},name:"conditionIndex"}],return:{name:"void"}}},description:"callback to add a new condition",type:{name:"func"}},addConditionSubGroupHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(conditionIndex: number) => void",signature:{arguments:[{type:{name:"number"},name:"conditionIndex"}],return:{name:"void"}}},description:"callback to add a new condition subgroup",type:{name:"func"}},hideConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for showing sub group preview",type:{name:"func"}},hideConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for showing add condition preview",type:{name:"func"}},conjunction:{required:!1,tsType:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},description:"string that decides to show the condition connector",type:{name:"string"}},isStatement:{required:!1,tsType:{name:"boolean"},description:"boolean that decides to show the statement(if/ excl.if)",type:{name:"bool"}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"object that hold the current group object where is condition is part of",type:{name:"object"}},conditionIndex:{required:!1,tsType:{name:"number"},description:"",type:{name:"number"}},aria:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  level: number;
  posinset: number;
  setsize?: number;
}`,signature:{properties:[{key:"level",value:{name:"number",required:!0}},{key:"posinset",value:{name:"number",required:!0}},{key:"setsize",value:{name:"number",required:!1}}]}},description:"object hold aria attributes",type:{name:"object"}},isLastCondition:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  index: number,
  conditions: (ConditionGroup | Condition)[]
) => void`,signature:{arguments:[{type:{name:"number"},name:"index"},{type:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]"},name:"conditions"}],return:{name:"void"}}},description:"",type:{name:"func"}},state:{description:"object that hold the current condition",type:{name:"object"},required:!1}}};const Oe=({previewType:e,group:r,colorIndex:a})=>{const[i,s]=b.useState(!1),[l,u,d,c]=Z(["valueText","operatorText","propertyText","ifText"]);b.useEffect(()=>{s(!0)},[]);const p=()=>t.jsxs("div",{className:`${o}__preview-condition`,children:[t.jsx(G,{label:l,renderIcon:gt}),t.jsx(G,{label:u}),t.jsx(G,{label:d})]});return t.jsxs(t.Fragment,{children:[e=="newGroup"&&t.jsxs(t.Fragment,{children:[t.jsx("div",{className:F([`${o}__group__row ${o}__group-preview `,{[`${o}__group-preview-animate`]:i}]),children:t.jsx(G,{className:`${o}__statement-button`,label:r.groupOperator})}),t.jsxs("div",{"data-color-index":a,"aria-hidden":!0,className:F([`${o}__group ${o}__condition-wrapper ${o}__group-preview ${o}__group-wrapper `,{[`${o}__group-preview-animate`]:i}]),children:[t.jsx("div",{className:`${o}__gap`,children:t.jsx(G,{className:`${o}__statement-button`,label:c})}),p()]})]}),e=="subGroup"&&t.jsx("div",{className:F([`${o}__group__row ${o}__group-preview ${o}__gap-bottom`,{[`${o}__group-preview-animate`]:i}]),children:t.jsxs("div",{className:`${o}__condition-block  ${o}__gap`,children:[t.jsx(G,{label:r.groupOperator,className:`${o}__statement-button`,popOverClassName:`${o}__gap`}),t.jsxs("div",{className:`${o}__group ${o}__condition-wrapper`,children:[t.jsx(je,{className:`${o}__gap ${o}__groupConnector`,operator:c}),p()]})]})}),e=="condition"&&t.jsx("div",{className:F([`${o}__group__row ${o}__group-preview ${o}__gap-bottom`,{[`${o}__group-preview-animate`]:i}]),children:t.jsxs("div",{className:`${o}__condition-block  ${o}__gap`,children:[t.jsx(G,{label:r.groupOperator,className:`${o}__statement-button`,popOverClassName:`${o}__gap`}),p()]})})]})};Oe.propTypes={colorIndex:n.number,group:n.object,previewType:n.oneOf(["condition","subGroup","newGroup"])};Oe.__docgenInfo={description:"",methods:[],displayName:"ConditionPreview",props:{previewType:{required:!1,tsType:{name:"union",raw:"'newGroup' | 'subGroup' | 'condition'",elements:[{name:"literal",value:"'newGroup'"},{name:"literal",value:"'subGroup'"},{name:"literal",value:"'condition'"}]},description:"type of review to be displayed",type:{name:"enum",value:[{value:"'condition'",computed:!1},{value:"'subGroup'",computed:!1},{value:"'newGroup'",computed:!1}]}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"current conditional group",type:{name:"object"}},colorIndex:{required:!1,tsType:{name:"number"},description:"index of the color for next group",type:{name:"number"}}}};const He=({group:e,aria:r,onRemove:a,onChange:i,className:s})=>{const[l,u,d]=Z(["conditionBuilderGroupText","conditionText","conditionBuilderText"]),{statementConfig:c}=Ee(),{variant:p,conditionBuilderRef:g}=b.useContext(X),[v,m]=b.useState(-1),[y,x]=b.useState(-1);b.useState(!1);const k=b.useRef(null),T=(C,f,h)=>{var L;if(e&&e.conditions&&e.conditions.length>1)if(p==W?O(f):q(f,h),w(e.conditions,C)){const P=e.conditions.filter($=>C!==$.id);if((P==null?void 0:P[0]).conditions){const $=P[0];P.splice(0,1,...$==null?void 0:$.conditions)}i==null||i({...e,conditions:P})}else{const P=(L=e==null?void 0:e.conditions)==null?void 0:L.reduce(($,M)=>{const V=M;return V.conditions?$.concat(V.conditions):$},[]);i==null||i({...e,conditions:P})}else a==null||a(f)},w=(C,f)=>C.find(h=>!h.conditions&&h.id!==f),A=(C,f)=>{const h=[...e!=null&&e.conditions?e.conditions.slice(0,f):[],C,...e!=null&&e.conditions?e.conditions.slice(f+1):[]];i==null||i({...e,conditions:h,id:(e==null?void 0:e.id)??j()})},R=C=>{const f={property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:j()};i==null||i({...e,conditions:[...e.conditions?e.conditions.slice(0,C+1):[],f,...e.conditions?e.conditions.slice(C+1):[]]})},q=(C,f)=>{var L;const h=(L=C.currentTarget.closest(`.${o}__group`))==null?void 0:L.querySelectorAll('[data-name="closeCondition"]');f==h.length-1?U(h[f-1],g):U(h[f+1],g)},O=C=>{var $,M,V,Ne,K,Y,qe,Se,Ce;const f=(M=($=C.currentTarget)==null?void 0:$.closest('[role="row"]'))==null?void 0:M.getAttribute("aria-level"),h=(Ne=(V=C.currentTarget)==null?void 0:V.closest('[role="row"]'))==null?void 0:Ne.getAttribute("aria-posinset"),L=(K=k.current)==null?void 0:K.querySelector(`[aria-level="${f}"][aria-posinset="${Number(h)+1}"]`),P=(Y=k.current)==null?void 0:Y.querySelector(`[aria-level="${f}"][aria-posinset="${Number(h)-1}"]`);if(L!=null&&L.classList.contains(`${o}__condition-block`))U(L==null?void 0:L.querySelector('[data-name="closeCondition"]'),g);else if(P!=null&&P.classList.contains(`${o}__condition-block`))U(P==null?void 0:P.querySelector('[data-name="closeCondition"]'),g);else{const Q=(qe=k.current)==null?void 0:qe.querySelectorAll(`[aria-level="${Number(f)-1}"][role="row"]`),ce=(Se=k.current)==null?void 0:Se.querySelector(`[aria-level="${Number(f)+1}"][role="row"]`);if(ce){const xe={ariaLevel:Number(ce.ariaLevel)-1,ariaPosInSet:ce.ariaPosInSet};setTimeout(()=>{var Ie;const me=(Ie=k.current)==null?void 0:Ie.querySelector(`[role="row"][aria-level="${xe.ariaLevel}"][aria-posinset="${xe.ariaPosInSet}"]`);U(me==null?void 0:me.querySelector('[data-name="closeCondition"]'),g)},0)}else Q!=null&&Q.length&&Q.length>1&&U((Ce=Q[Q.length-2])==null?void 0:Ce.querySelector('[data-name="closeCondition"]'),g)}},D=C=>{i({...e,conditions:[...e.conditions?e.conditions.slice(0,C+1):[],{statement:"ifAll",groupOperator:"and",conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:j()}],id:j()},...e.conditions?e.conditions.slice(C+1):[]]})},E=(C,f)=>C+1>=f.length||f.length-1!=C&&f[C+1].conditions,z=C=>{x(C)},N=()=>{x(-1)},S=C=>{m(C)},I=()=>{m(-1)},H=C=>{var h;const f=(h=c.find(L=>L.id==C))==null?void 0:h.connector;i({...e,groupOperator:f,statement:C})},J=C=>{i({...e,groupOperator:C})},re=()=>{var C;return t.jsx("div",{className:`${s}  eachGroup`,children:t.jsx("div",{className:`${o}__condition-wrapper`,role:"grid","aria-label":d,children:(C=e==null?void 0:e.conditions)==null?void 0:C.map((f,h)=>{var L;return t.jsx("div",{className:`${o}__group-wrapper`,children:t.jsx(Le,{conjunction:h>0?e.groupOperator:void 0,aria:{level:r.level+1,posinset:h+1,setsize:(L=e==null?void 0:e.conditions)==null?void 0:L.length},isStatement:h==0,condition:f,group:e,conditionIndex:h,onChange:P=>{A(P,h)},addConditionHandler:R,onRemove:P=>{T(f.id,P,h)},onConnectorOperatorChange:J,onStatementChange:H,isLastCondition:E})},f.id)})})})},ae=()=>{var C;return t.jsxs("div",{className:`${s} ${o}__condition-wrapper`,role:r.level===1?"rowgroup":void 0,"aria-label":r.level==1?l:void 0,ref:k,children:[t.jsx("div",{tabIndex:0,role:"row","aria-level":r.level,"aria-posinset":r.posinset,"aria-setsize":r.setsize,children:t.jsx(G,{label:e.statement,title:u,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`,children:t.jsx(le,{conditionState:{value:e.statement,label:u},onChange:(f,h)=>{Ae(h,g),H(f)},config:{options:c,isStatement:!0}})})}),(C=e==null?void 0:e.conditions)==null?void 0:C.map((f,h)=>{var L,P;return t.jsxs(b.Fragment,{children:[f.conditions?t.jsxs("div",{className:F(`${o}__condition-block subgroup  ${o}__gap`,{[`${o}__gap-bottom`]:e&&e.conditions&&e.conditions.length<h+1},{}),children:[t.jsx(je,{className:`${o}__gap ${o}__gap-bottom ${o}__groupConnector`,operator:e.groupOperator,"aria-hidden":!0}),t.jsx(He,{aria:{level:r.level+1,posinset:h+1,setsize:((L=e.conditions)==null?void 0:L.length)??0},className:`${o}__group`,group:f,onChange:$=>{A($,h)},onRemove:$=>{T(f.id,$,h)}})]}):t.jsx("div",{children:t.jsx(Le,{conjunction:h>0?e.groupOperator:void 0,aria:{level:r.level+1,posinset:h+1,setsize:((P=e.conditions)==null?void 0:P.length)??0},isStatement:!1,condition:f,group:e,conditionIndex:h,addConditionHandler:R,addConditionSubGroupHandler:D,onChange:$=>{A($,h)},onRemove:$=>{T(f.id,$,h)},onConnectorOperatorChange:J,onStatementChange:H,showConditionSubGroupPreviewHandler:()=>{z(h)},hideConditionSubGroupPreviewHandler:N,showConditionPreviewHandler:()=>{S(h)},hideConditionPreviewHandler:I,isLastCondition:E})}),h==y&&t.jsx(Oe,{previewType:"subGroup",group:e}),h==v&&t.jsx(Oe,{previewType:"condition",group:e})]},f.id)})]})};return t.jsxs(t.Fragment,{children:[p==W&&ae(),p==de&&re()]})};He.propTypes={aria:n.object,className:n.string,group:n.object,onChange:n.func,onRemove:n.func};He.__docgenInfo={description:"",methods:[],displayName:"ConditionGroupBuilder",props:{group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"",type:{name:"object"}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"call back to remove the particular group from the state tree",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(group: ConditionGroup) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},name:"group"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},aria:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  level: number;
  posinset: number;
  setsize: number;
}`,signature:{properties:[{key:"level",value:{name:"number",required:!0}},{key:"posinset",value:{name:"number",required:!0}},{key:"setsize",value:{name:"number",required:!0}}]}},description:"object contains the aria attributes",type:{name:"object"}}}};const nt=()=>{const{rootState:e,setRootState:r}=b.useContext(X),[a]=Z(["conditionText"]),{connectorConfig:i}=Ee(),s=l=>{r({...e,operator:l})};return t.jsx("div",{className:`${o}__group-separator ${o}__group-separator-row`,role:"row",tabIndex:-1,"aria-level":1,children:t.jsx(G,{label:e.operator,title:a,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`,children:t.jsx(le,{conditionState:{value:e.operator,label:a},onChange:s,config:{options:i}})})})};nt.__docgenInfo={description:"",methods:[],displayName:"GroupConnector"};const en=({actions:e,className:r})=>{const{actionState:a=[],setActionState:i}=b.useContext(X),[s,l]=b.useState(-1),[u,d,c,p,g,v]=Z(["actionsText","then","and","removeActionText","addActionText","actionSectionText"]),m=()=>{const w={id:j(),label:void 0,popoverToOpen:"valueField"};i==null||i([...a,w])},y=(w,A)=>{const q={...e.find(O=>O.id===w),id:a[A].id};i==null||i([...a.slice(0,A),q,...a.slice(A+1)])},x=w=>{i==null||i(a.filter(A=>A.id!==w))},k=w=>{l(w)},T=()=>{l(-1)};return t.jsxs("div",{className:r,children:[t.jsx(Ze,{className:`${o}__heading`,level:4,children:t.jsx(Ue,{children:u})}),t.jsxs("div",{className:`${o}__condition-wrapper`,role:"grid","aria-label":v,children:[a==null?void 0:a.map((w,A)=>t.jsxs("div",{role:"row",className:F(`${o}__condition-block ${o}__gap ${o}__gap-bottom`,{[`${o}__condition__deletion-preview`]:s==A}),children:[t.jsx(G,{className:`${o}__statement-button`,tabIndex:0,popOverClassName:`${o}__gap`,label:A===0?d:c}),t.jsx(G,{label:w.label,title:u,condition:w,"data-name":"valueField",type:"option",children:t.jsx(De,{conditionState:{value:w.label},onChange:R=>y(R.id,A),config:{options:e}})}),t.jsx("span",{role:"gridcell","aria-label":p,children:t.jsx(te,{hideLabel:!0,label:p,onClick:()=>x(w.id),onMouseEnter:()=>k(A),onMouseLeave:T,onFocus:()=>k(A),onBlur:T,renderIcon:En,className:`${o}__close-condition`,"data-name":"closeCondition"})}),a.length===A+1&&t.jsx(ke,{onClick:m,className:`${o}__gap ${o}__gap-left`,buttonLabel:g,tabIndex:0})]},w.id)),a.length===0&&t.jsx(ke,{onClick:m,className:`${o}__gap ${o}__gap-left`,buttonLabel:g,tabIndex:0})]})]})};en.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),className:n.string};en.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderActions",props:{actions:{required:!1,tsType:{name:"union",raw:"Action[] | Option[]",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"}]},description:"optional array of object that give the list of actions.",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}}}};const nn=({startConditionLabel:e,getConditionState:r,getActionsState:a,initialState:i,actions:s})=>{var N;const{rootState:l,setRootState:u,variant:d,actionState:c}=b.useContext(X),p=b.useRef(i!=null&&i.state?JSON.parse(JSON.stringify(i==null?void 0:i.state)):null),[g,v]=b.useState(!1),[m,y]=b.useState(!1),[x,k,T]=Z(["addConditionGroupText","conditionHeadingText","conditionBuilderHierarchicalText"]),w=()=>{y(!0)},A=()=>{y(!1)};b.useEffect(()=>{var S;(S=l==null?void 0:l.groups)!=null&&S.length?v(!0):v(!1),r&&r(l??{})},[l]),b.useEffect(()=>{a==null||a(c??[])},[c]),b.useEffect(()=>{i!=null&&i.enabledDefault&&(u==null||u(p.current),p.current=null)},[i]);const R=()=>{var S,I;v(!0),(I=(S=p==null?void 0:p.current)==null?void 0:S.groups)!=null&&I.length?(u==null||u(p.current),p.current=null):u==null||u(jt)},q=b.useCallback(S=>{var I;u==null||u({...l,groups:l?(I=l==null?void 0:l.groups)==null?void 0:I.filter(H=>S!==(H==null?void 0:H.id)):[]})},[u,l]),O=(S,I)=>{if(l&&l.groups){const H=[...l.groups?l.groups.slice(0,I):[],S,...l.groups?l.groups.slice(I+1):[]];u==null||u({...l,groups:H})}},D=()=>{const S={statement:"ifAll",groupOperator:"and",id:j(),conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:j()}]};u==null||u({...l,groups:l&&l.groups?[...l.groups,S]:[S]})},E=()=>{var I;return(((I=l==null?void 0:l.groups)==null?void 0:I.length)??0)%5};if(!g)return t.jsx(Pn,{className:`${o}__addConditionText-button`,renderIcon:S=>t.jsx(zn,{...S}),iconDescription:e,kind:"ghost",size:"sm",onClick:R,children:e});const z=d===W?{role:"treegrid","aria-label":T}:null;return t.jsxs(t.Fragment,{children:[t.jsx(Ze,{className:`${o}__heading`,level:4,children:t.jsx(Ue,{children:k})}),t.jsxs("div",{className:`${o}__content-container`,...z,children:[l&&((N=l==null?void 0:l.groups)==null?void 0:N.map((S,I)=>t.jsxs("div",{className:`${o}__group-wrapper`,children:[t.jsx(He,{className:`${o}__group`,aria:{level:1,posinset:I*2+1,setsize:(l.groups&&l.groups.length*2)??0},group:S,onRemove:()=>{q(S.id)},onChange:H=>{O(H,I)}}),l.groups&&I<l.groups.length-1&&t.jsx(nt,{})]},S.id))),d==W&&t.jsx("div",{role:"row",tabIndex:-1,"aria-level":1,className:`${o}__add-group`,children:t.jsx(te,{renderIcon:Kn,onClick:D,onMouseEnter:w,onMouseLeave:A,onFocus:w,onBlur:A,className:`${o}__add-condition-group `,hideLabel:!0,label:x,wrapperProps:{role:"gridcell","aria-label":x}})}),m&&t.jsx(Oe,{previewType:"newGroup",colorIndex:E(),group:{groupOperator:l==null?void 0:l.operator,id:j()}})]}),s&&t.jsx(en,{actions:s,className:`${o}__actions-container`})]})};nn.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),getActionsState:n.func,getConditionState:n.func.isRequired,initialState:n.shape({state:n.shape({groups:n.arrayOf(n.shape({groupOperator:n.string,statement:n.string,conditions:n.arrayOf(n.oneOfType([n.shape({property:n.string,operator:n.string,value:n.oneOfType([n.string,n.arrayOf(n.shape({id:n.string,label:n.string})),n.shape({id:n.string,label:n.string})])}),n.object]))})),operator:n.string}),enabledDefault:n.bool}),startConditionLabel:n.string.isRequired};nn.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderContent",props:{startConditionLabel:{required:!0,tsType:{name:"string"},description:"",type:{name:"string"}},getConditionState:{required:!0,tsType:{name:"signature",type:"function",raw:"(state: ConditionBuilderState) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"}],return:{name:"void"}}},description:"This is a callback function that returns the updated state",type:{name:"func"}},getActionsState:{required:!1,tsType:{name:"signature",type:"function",raw:"(state: Action[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},name:"state"}],return:{name:"void"}}},description:"callback functions that will provide the updated action state back.",type:{name:"func"}},initialState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  state: ConditionBuilderState;
  enabledDefault?: boolean;
}`,signature:{properties:[{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"enabledDefault",value:{name:"boolean",required:!1}}]}},description:"Optional prop if the condition building need to start from a predefined initial state",type:{name:"shape",value:{state:{name:"shape",value:{groups:{name:"arrayOf",value:{name:"shape",value:{groupOperator:{name:"string",required:!1},statement:{name:"string",required:!1},conditions:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{property:{name:"string",required:!1},operator:{name:"string",required:!1},value:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}},{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}],required:!1}}},{name:"object"}]},required:!1}}},required:!1},operator:{name:"string",required:!1}},required:!1},enabledDefault:{name:"bool",required:!1}}}},actions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:"optional array of object that give the list of actions.",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}}}};const tn="ConditionBuilder";let se=_.forwardRef(({className:e,inputConfig:r,startConditionLabel:a="Add Condition",popOverSearchThreshold:i,getOptions:s,initialState:l,getConditionState:u,getActionsState:d,variant:c=de,actions:p,translateWithId:g,...v},m)=>{const y=b.useRef(null),x=m||y,k=T=>{Nt(T,x,c)};return t.jsx(Ke,{inputConfig:r,popOverSearchThreshold:i,getOptions:s,variant:c,translateWithId:g,conditionBuilderRef:x,children:t.jsx("div",{...v,className:F(o,e,{}),ref:x,...yt(tn),children:t.jsx(kt,{className:`${o}__${c}`,onKeyDown:k,children:t.jsx(nn,{startConditionLabel:a,getConditionState:u,getActionsState:d,initialState:l,actions:p})})})})});se=$n.checkComponentEnabled(se,tn);se.displayName=tn;se.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),className:n.string,getActionsState:n.func,getConditionState:n.func.isRequired,getOptions:n.func,initialState:n.shape({state:n.shape({groups:n.arrayOf(n.shape({groupOperator:n.string,statement:n.string,conditions:n.arrayOf(n.oneOfType([n.shape({property:n.string,operator:n.string,value:n.oneOfType([n.string,n.arrayOf(n.shape({id:n.string,label:n.string})),n.shape({id:n.string,label:n.string})])}),n.object]))})),operator:n.string}),enabledDefault:n.bool}),inputConfig:n.shape({properties:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object]),type:n.oneOf(["text","textarea","number","date","option","time","custom"]).isRequired,config:n.shape({options:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object])})),component:n.func,operators:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired}))})}))}).isRequired,popOverSearchThreshold:n.number.isRequired,startConditionLabel:n.string,translateWithId:n.func,variant:n.oneOf(["Non-Hierarchical","Hierarchical"])};se.__docgenInfo={description:"TODO: A description of the component.",methods:[],displayName:"ConditionBuilder",props:{inputConfig:{required:!0,tsType:{name:"signature",type:"object",raw:`{
  properties: Property[];
}`,signature:{properties:[{key:"properties",value:{name:"Array",elements:[{name:"intersection",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
} & (
  | PropertyConfig['option']
  | PropertyConfig['text']
  | PropertyConfig['number']
  | PropertyConfig['date']
  | PropertyConfig['textarea']
  | PropertyConfig['time']
  | PropertyConfig['custom']
)`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}},{name:"unknown"}]}],raw:"Property[]",required:!0}}]}},description:"This is a mandatory prop that defines the input to the condition builder.",type:{name:"shape",value:{properties:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'textarea'",computed:!1},{value:"'number'",computed:!1},{value:"'date'",computed:!1},{value:"'option'",computed:!1},{value:"'time'",computed:!1},{value:"'custom'",computed:!1}],required:!0},config:{name:"shape",value:{options:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1}}},required:!1},component:{name:"func",required:!1},operators:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0}}},required:!1}},required:!1}}},required:!1}}}},initialState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  state: ConditionBuilderState;
  enabledDefault?: boolean;
}`,signature:{properties:[{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"enabledDefault",value:{name:"boolean",required:!1}}]}},description:`Optional prop if you want to pass a saved condition state, pass as "initialState.state".
"initialState.enabledDefault" will populate the builder with the provided initial state before clicking Add Condition button.

 This state should respect the structure of condition state that is available in getConditionState callback`,type:{name:"shape",value:{state:{name:"shape",value:{groups:{name:"arrayOf",value:{name:"shape",value:{groupOperator:{name:"string",required:!1},statement:{name:"string",required:!1},conditions:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{property:{name:"string",required:!1},operator:{name:"string",required:!1},value:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}},{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}],required:!1}}},{name:"object"}]},required:!1}}},required:!1},operator:{name:"string",required:!1}},required:!1},enabledDefault:{name:"bool",required:!1}}}},getActionsState:{required:!1,tsType:{name:"signature",type:"function",raw:"(state: Action[] | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"Action[] | undefined",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},{name:"undefined"}]},name:"state"}],return:{name:"void"}}},description:"This is a callback that gives back the updated action state",type:{name:"func"}},getConditionState:{required:!0,tsType:{name:"signature",type:"function",raw:"(state: ConditionBuilderState | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"ConditionBuilderState | undefined",elements:[{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},{name:"undefined"}]},name:"state"}],return:{name:"void"}}},description:"This is a callback that gives back updated condition state",type:{name:"func"}},getOptions:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  state: ConditionBuilderState,
  condition: Condition
) => Promise<Option[]>`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"},{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"}],raw:"Promise<Option[]>"}}},description:`This is a callback that get triggered when  you want to dynamically fetch options.
 Component call this when the option array is not passed against a property with type as option in the input config.
This is an asynchronous callback that can return a promise , and you need to resolve the promise with options array in the valid format.
You will receive the root condition state and current condition as the 2 arguments.
eg: const getOptions = async (conditionState,condition) => {
  switch (condition.property) {
    case 'continent':
      return new Promise((resolve) => {
        const continents=[{
      label: 'Africa',
      id: 'Africa',
    },...]
          resolve(continents);
      });
      default:
      return [];
  }
};`,type:{name:"func"}},actions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:"optional array of actions",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},popOverSearchThreshold:{required:!0,tsType:{name:"number"},description:"Provide an mandatory numeric value that will be used to enable search option in the popovers with list.",type:{name:"number"}},startConditionLabel:{required:!1,tsType:{name:"string"},description:"Provide a label to the button that starts condition builder",defaultValue:{value:"'Add Condition'",computed:!1},type:{name:"string"}},variant:{required:!1,tsType:{name:"union",raw:"'Non-Hierarchical' | 'Hierarchical'",elements:[{name:"literal",value:"'Non-Hierarchical'"},{name:"literal",value:"'Hierarchical'"}]},description:"Provide the condition builder variant: Non-Hierarchical/ Hierarchical",defaultValue:{value:"'Non-Hierarchical'",computed:!1},type:{name:"enum",value:[{value:"'Non-Hierarchical'",computed:!1},{value:"'Hierarchical'",computed:!1}]}},translateWithId:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: string) => string",signature:{arguments:[{type:{name:"string"},name:"id"}],return:{name:"string"}}},description:`Optional prop, if you need to pass translations to the texts on the component instead of the defined defaults.
This callback function will receive the message id and you need to return the corresponding text for that id.
The message id will be one of [   "ifText","addConditionText",   "addConditionGroupText",   "addSubgroupText",   "conditionText",   "propertyText",   "operatorText",   "valueText",   "connectorText",   "conditionRowText","conditionRowGroupText","conditionBuilderText","actionSectionText",   "removeConditionText",   "addConditionRowText",   "startText",   "endText",   "clearSearchText",   "actionsText",   "then",   "removeActionText",   "addActionText",   "invalidText",  "invalidNumberWarnText"]
]`,type:{name:"func"}}}};function un(e){const r={a:"a",h1:"h1",h2:"h2",li:"li",ul:"ul",...Ln(),...e.components};return t.jsxs(t.Fragment,{children:[t.jsx(r.h1,{id:"conditionbuilder",children:"ConditionBuilder"}),`
`,t.jsx(r.h2,{id:"table-of-contents",children:"Table of Contents"}),`
`,t.jsxs(r.ul,{children:[`
`,t.jsx(r.li,{children:t.jsx(r.a,{href:"#overview",children:"Overview"})}),`
`,t.jsx(r.li,{children:t.jsx(r.a,{href:"#example-usage",children:"Example usage"})}),`
`,t.jsx(r.li,{children:t.jsx(r.a,{href:"#component-api",children:"Component API"})}),`
`]}),`
`,t.jsx(r.h2,{id:"overview",children:"Overview"}),`
`,`
`,t.jsx(r.h2,{id:"example-usage",children:"Example usage"}),`
`,`
`,t.jsx(ut,{children:t.jsx(dt,{of:ie})}),`
`,t.jsx(r.h2,{id:"code-sample",children:"Code sample"}),`
`,`
`,t.jsx(r.h2,{id:"component-api",children:"Component API"}),`
`,t.jsx(pt,{})]})}function Et(e={}){const{wrapper:r}={...Ln(),...e.components};return r?t.jsx(r,{...e,children:t.jsx(un,{...e})}):un(e)}const Dt="",rn=({onChange:e,conditionState:r})=>{const a=i=>{e(i.target.value)};return t.jsx("div",{className:"custom-component",children:t.jsx(Hn,{labelText:"labelText",hideLabel:!0,value:r.value??"",id:"customInput",onChange:a})})};rn.propTypes={conditionState:n.object,onChange:n.func};rn.__docgenInfo={description:"",methods:[],displayName:"CustomInput",props:{conditionState:{description:"current condition state",type:{name:"object"},required:!1},onChange:{description:"This function need to be called that provides a label which should be shown in the condition after a user has made their selection / set their value",type:{name:"func"},required:!1}}};const Ht=[{label:"is greater than",id:"greater"},{label:"is greater than or equal to",id:"greaterEqual"}],Te={properties:[{id:"continent",label:"Continent",icon:Bn,type:"option",config:{options:[{label:"Africa",id:"Africa"},{label:"Antarctica",id:"Antarctica"},{label:"Asia",id:"Asia"},{label:"Australia",id:"Australia"},{label:"Europe",id:"Europe"}]}},{id:"region",label:"Region",icon:Rn,type:"option",config:{options:[{label:"Afghanistan",id:"AF",icon:ne},{label:"Albania",id:"AL",icon:ne},{label:"Algeria",id:"AG",icon:ne},{label:"Andorra",id:"AN",icon:ne},{label:"India",id:"India",icon:ne}]}},{id:"color",label:"Color",icon:Dn,type:"option",config:{options:[{label:"black",id:"black"},{label:"silver",id:"silver"},{label:"gray",id:"gray"},{label:"white",id:"white"},{label:"maroon",id:"maroon"},{label:"red",id:"red"},{label:"purple",id:"purple"},{label:"fuchsia",id:"fuchsia"},{label:"green",id:"green"},{label:"lime",id:"lime"},{label:"olive",id:"olive"},{label:"yellow",id:"yellow"},{label:"navy",id:"navy"},{label:"blue",id:"blue"},{label:"teal",id:"teal"},{label:"aqua",id:"aqua"}]}},{id:"id",label:"ID",icon:Fe,type:"text",config:{}},{id:"id_long",label:"Id Long",icon:Fe,type:"textarea",config:{}},{id:"price",label:"Price",icon:Fn,type:"number",config:{min:0,step:1,unit:"Dollars"}},{id:"date",label:"Date",icon:$e,type:"date",config:{}},{id:"time",label:"Time",icon:$e,type:"time",config:{timeZones:["IST","CET","UTC","LOCAL"]}},{id:"delivery",label:"Delivery",icon:Mn,type:"option",config:{options:[{label:"Processing",id:"Processing"},{label:"Preparing for dispatch",id:"Preparing for dispatch"},{label:"Dispatched",id:"Dispatched"},{label:"In delivery",id:"In delivery"},{label:"Delivered",id:"Delivered"}]}},{id:"season",label:"Season",icon:Wn,type:"option",config:{options:[{label:"Winter",id:"Winter"},{label:"Spring",id:"Spring"},{label:"Summer",id:"Summer"},{label:"Fall",id:"Fall"}]}},{id:"product",label:"Product",icon:Vn,type:"custom",config:{component:rn,operators:Ht}}]},Bt={properties:[{id:"continent",label:"Continent",icon:Bn,type:"option",config:{}},{id:"region",label:"Region",icon:Rn,type:"option",config:{}},{id:"color",label:"Color",icon:Dn,type:"option",config:{}},{id:"id",label:"ID",icon:Fe,type:"text",config:{}},{id:"price",label:"Price",icon:Fn,type:"number",config:{min:0,step:1,unit:"Dollars"}},{id:"date",label:"Date",icon:$e,type:"date",config:{}},{id:"time",label:"Time",icon:$e,type:"time",config:{timeZones:["IST","CET","UTC","LOCAL"]}},{id:"product",label:"Product",icon:Vn,type:"text",config:{}},{id:"delivery",label:"Delivery",icon:Mn,type:"option",config:{options:[{label:"Processing",id:"Processing"},{label:"Preparing for dispatch",id:"Preparing for dispatch"},{label:"Dispatched",id:"Dispatched"},{label:"In delivery",id:"In delivery"},{label:"Delivered",id:"Delivered"}]}},{id:"season",label:"Season",icon:Wn,type:"option",config:{options:[{label:"Winter",id:"Winter"},{label:"Spring",id:"Spring"},{label:"Summer",id:"Summer"},{label:"Fall",id:"Fall"}]}}]},Rt={operator:"or",groups:[{groupOperator:"and",statement:"ifAll",id:j(),conditions:[{property:"region",operator:"is",value:"IL",id:j()},{property:"delivery",operator:"is",value:"processing",id:j()},{property:"delivery",operator:"is",value:"processing",id:j()},{property:"delivery",operator:"is",value:"processing",id:j()},{groupOperator:"and",statement:"unlessAll",id:j(),conditions:[{property:"region",operator:"is",value:"IL",id:j()},{property:"delivery",operator:"is",value:"processing",id:j()},{property:"delivery",operator:"is",value:"processing",id:j()},{property:"delivery",operator:"is",value:"processing",id:j()},{groupOperator:"or",statement:"ifAny",id:j(),conditions:[{property:"region",operator:"is",value:"IL",id:j()},{property:"delivery",operator:"is",value:"processing",id:j()},{property:"delivery",operator:"is",value:"processing",id:j()}]}]}]},{groupOperator:"and",statement:"ifAll",id:j(),conditions:[{property:"continent",operator:"is",value:"Asia",id:j()},{property:"region",operator:"is",value:"India",id:j()},{property:"price",operator:"is",value:"20",id:j()}]}]},Gt={groups:[{groupOperator:"and",statement:"ifAll",id:j(),conditions:[{property:"region",operator:"oneOf",value:[{label:"Africa",id:"Africa"},{label:"India",id:"Ind"}],id:j()},{property:"delivery",operator:"is",value:"processing",id:j()},{property:"price",operator:"is",value:"3 Dollars",id:j()}]}]},Hr={title:"Experimental/Components/ConditionBuilder",component:se,tags:["autodocs"],parameters:{layout:"fullscreen",styles:Dt,docs:{page:Et}}},Ft=()=>[{label:"Africa",id:"Africa"},{label:"Antarctica",id:"Antarctica"},{label:"Asia",id:"Asia"},{label:"Australia",id:"Australia"},{label:"Europe",id:"Europe"}],Mt=()=>[{label:"Afghanistan",id:"AF",icon:ne},{label:"Albania",id:"AL",icon:ne},{label:"Algeria",id:"AG",icon:ne},{label:"Andorra",id:"AN",icon:ne}],Vt=()=>[{label:"black",id:"black"},{label:"silver",id:"silver"},{label:"gray",id:"gray"},{label:"white",id:"white"},{label:"maroon",id:"maroon"},{label:"red",id:"red"},{label:"purple",id:"purple"},{label:"fuchsia",id:"fuchsia"},{label:"green",id:"green"},{label:"lime",id:"lime"},{label:"olive",id:"olive"},{label:"yellow",id:"yellow"},{label:"navy",id:"navy"},{label:"blue",id:"blue"},{label:"teal",id:"teal"},{label:"aqua",id:"aqua"}],Wt=async(e,{property:r})=>{switch(r){case"continent":return new Promise(a=>{setTimeout(()=>{a(Ft())},2e3)});case"region":return new Promise(a=>{setTimeout(()=>{a(Mt())},2e3)});case"color":return new Promise(a=>{setTimeout(()=>{a(Vt())},2e3)});default:return[]}},zt={startConditionLabel:"Add condition",popOverSearchThreshold:4,getConditionState:e=>{console.log(e)}},tt=[{id:j(),label:"Add item to cart"},{id:j(),label:"Proceed item to checkout"}],Zt=e=>({ifText:"if",addConditionText:"Add condition",addConditionGroupText:"Add condition group",addSubgroupText:"Add subgroup"})[e],pe=e=>{const r=b.useRef();return t.jsx(se,{...e,ref:r,...zt})},ie=pe.bind({});ie.storyName="Condition Builder";ie.args={inputConfig:Te,variant:de};const ye=pe.bind({});ye.storyName="With dynamic options";ye.args={inputConfig:Bt,getOptions:Wt,variant:de};const fe=pe.bind({});fe.storyName="With initial state";fe.args={initialState:{state:Gt,enabledDefault:!0},inputConfig:Te,variant:de,translateWithId:Zt};const ve=pe.bind({});ve.storyName="With Actions";ve.args={inputConfig:Te,variant:de,actions:tt,getActionsState:e=>{console.log("action state",e)}};const be=pe.bind({});be.storyName="Condition Builder (Hierarchical)";be.args={inputConfig:Te,variant:W};const he=pe.bind({});he.storyName="With initial state (Hierarchical)";he.args={initialState:{state:Rt,enabledDefault:!1},inputConfig:Te,variant:W};const we=pe.bind({});we.storyName="With Actions (Hierarchical)";we.args={inputConfig:Te,variant:W,actions:tt,getActionsState:e=>{}};var dn,pn,cn,mn,gn;ie.parameters={...ie.parameters,docs:{...(dn=ie.parameters)==null?void 0:dn.docs,source:{originalSource:`args => {
  const ref = useRef();
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(cn=(pn=ie.parameters)==null?void 0:pn.docs)==null?void 0:cn.source},description:{story:`TODO: Declare one or more stories, generally one per design scenario.
NB no need for a 'Playground' because all stories have all controls anyway.`,...(gn=(mn=ie.parameters)==null?void 0:mn.docs)==null?void 0:gn.description}}};var yn,fn,vn;ye.parameters={...ye.parameters,docs:{...(yn=ye.parameters)==null?void 0:yn.docs,source:{originalSource:`args => {
  const ref = useRef();
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(vn=(fn=ye.parameters)==null?void 0:fn.docs)==null?void 0:vn.source}}};var bn,hn,wn;fe.parameters={...fe.parameters,docs:{...(bn=fe.parameters)==null?void 0:bn.docs,source:{originalSource:`args => {
  const ref = useRef();
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(wn=(hn=fe.parameters)==null?void 0:hn.docs)==null?void 0:wn.source}}};var Tn,qn,Cn;ve.parameters={...ve.parameters,docs:{...(Tn=ve.parameters)==null?void 0:Tn.docs,source:{originalSource:`args => {
  const ref = useRef();
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(Cn=(qn=ve.parameters)==null?void 0:qn.docs)==null?void 0:Cn.source}}};var xn,An,kn;be.parameters={...be.parameters,docs:{...(xn=be.parameters)==null?void 0:xn.docs,source:{originalSource:`args => {
  const ref = useRef();
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(kn=(An=be.parameters)==null?void 0:An.docs)==null?void 0:kn.source}}};var On,_n,jn;he.parameters={...he.parameters,docs:{...(On=he.parameters)==null?void 0:On.docs,source:{originalSource:`args => {
  const ref = useRef();
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(jn=(_n=he.parameters)==null?void 0:_n.docs)==null?void 0:jn.source}}};var Nn,Sn,In;we.parameters={...we.parameters,docs:{...(Nn=we.parameters)==null?void 0:Nn.docs,source:{originalSource:`args => {
  const ref = useRef();
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(In=(Sn=we.parameters)==null?void 0:Sn.docs)==null?void 0:In.source}}};const Br=["conditionBuilder","conditionBuilderDynamicOptions","conditionBuilderWithInitialState","conditionBuilderWithActions","conditionBuilderHierarchical","conditionBuilderWithInitialStateHierarchical","conditionBuilderWithActionsHierarchical"];export{Br as __namedExportsOrder,ie as conditionBuilder,ye as conditionBuilderDynamicOptions,be as conditionBuilderHierarchical,ve as conditionBuilderWithActions,we as conditionBuilderWithActionsHierarchical,fe as conditionBuilderWithInitialState,he as conditionBuilderWithInitialStateHierarchical,Hr as default};
