name: CI # Run CI Checks

on:
  pull_request:
    branches:
      - main
      - v1
      - 'release\/v2**'
  merge_group:
    types: [checks_requested]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'
          cache: yarn
      - name: Cache dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # 4.2.3
        with:
          path: '**/node_modules'
          key: build-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install
        run: yarn
      - name: CI build checks
        run: yarn ci-check:build

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'
          cache: yarn
      - name: Cache dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # 4.2.3
        with:
          path: '**/node_modules'
          key: lint-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install
        run: yarn
      - name: Check formatting of project files
        run: yarn format:diff

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'
          cache: yarn
      - name: Cache dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # 4.2.3
        with:
          path: '**/node_modules'
          key: lint-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install
        run: yarn
      - name: CI lint checks
        run: yarn ci-check:lint

  spellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'
          cache: yarn
      - name: Cache dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # 4.2.3
        with:
          path: '**/node_modules'
          key: spellcheck-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install
        run: yarn
      - name: CI spellcheck checks
        run: yarn ci-check:spellcheck

  test-c4p:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'
          cache: yarn
      - name: Cache dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # 4.2.3
        with:
          path: '**/node_modules'
          key: test-c4p-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install
        run: yarn
      - name: CI snapshot tests for c4p
        run: yarn ci-check:test:c4p:snapshot
      - name: CI tests for c4p
        run: yarn ci-check:test:c4p --collectCoverage
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-c4p-wc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'
          cache: yarn
      - name: Cache dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # 4.2.3
        with:
          path: '**/node_modules'
          key:
            test-c4p-wc-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install
        run: yarn
      - name: Install browsers
        working-directory: packages/ibm-products-web-components
        run: yarn playwright install --with-deps
      - name: Build web-components project
        run: yarn build:packages
      - name: CI tests for products web components
        run: yarn ci-check:test:c4p-wc --coverage
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  avt-runner:
    strategy:
      matrix:
        shard: [1, 2, 3, 4]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'
          cache: yarn
      - name: Install
        run: yarn
      - name: Install browsers
        run: yarn playwright install --with-deps
      - name: Build project
        run: yarn build
      - name: Run storybook
        id: storybook
        run: |
          npx serve -l 3000 packages/core/storybook-static &
          pid=$!
          echo "pid=$pid" >> $GITHUB_OUTPUT
      - uses: ./actions/wait-for-it
        with:
          URL: 'http://localhost:3000'
        timeout-minutes: 3
      - name: Run AVT
        if: github.repository == 'carbon-design-system/ibm-products'
        run: |
          yarn playwright test --project chromium --grep @avt --shard="${{ matrix.shard }}/4"
      - name: Stop storybook
        run: kill ${{ steps.storybook.outputs.pid }}
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # 4.6.2
        with:
          name: playwright-avt-report
          path: .playwright

  avt:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: avt-runner
    steps:
      - name: Check AVT Runner job status
        if: ${{ needs.avt-runner.result != 'success' }}
        run: exit 1
