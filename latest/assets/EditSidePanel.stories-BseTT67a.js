import{e,r as m}from"./index-DzvNrmz8.js";import{a as s}from"./index-B-lxVbXh.js";import{b as C}from"./index-5As4T26e.js";import{B as N,C as v}from"./settings-CP9zVSjJ.js";import{D as S}from"./Dropdown-DocP4HuW.js";import{G as T}from"./Grid-WpMGg_A8.js";import{C as D}from"./Column-CfoaS7j8.js";import{N as n}from"./NumberInput-B9uXi7jS.js";import{H as I,a as P}from"./HeaderName-Cd6DAP4F.js";import{H as _}from"./HeaderContainer-DJ8rHgg9.js";import{A as O,c as k}from"./index-D3HeH2cJ.js";import{T as $}from"./TextInput-BPIVFFXG.js";import{S as w}from"./StoryDocsPage-7HbyCrjL.js";import{s as A}from"./sidePanelDecorator-BiVAGeOE.js";import{A as B}from"./index-B9fxRmSt.js";import{E as b}from"./EditSidePanel-DtWnh1rp.js";import{a as M}from"./bucket-15-BuGLwsj4.js";import{T as R}from"./bucket-17-F0QcB3Pi.js";import"./_commonjsHelpers-D6-XlEtG.js";import"./v4-CtRu48qb.js";import"./index-Cg1swjps.js";import"./index-Bv4JGo1_.js";import"./events-OVwOsPzJ.js";import"./index-P6UCShJt.js";import"./index-CpKToLap.js";import"./inheritsLoose-D3Az7yH5.js";import"./FormContext-TkVWILkp.js";import"./mergeRefs-CTUecegF.js";import"./bucket-18-D-cwffHE.js";import"./useNormalizedInputProps-BTIESqM4.js";import"./Text-DyBNjUAs.js";import"./bucket-16-IFGKs9HR.js";import"./bucket-0-C6v-wDs9.js";import"./Link-eQwNzbSE.js";import"./useAnnouncer-Dwt0jqXi.js";import"./index-CwcgRXWl.js";import"./iframe-BsXekYnT.js";import"./index-Dytf1aFS.js";import"./index-DrFu-skq.js";import"./story-helper-DPPXKxdX.js";import"./Content-BPUZ6nR9.js";import"./bucket-10-BLMdRzi0.js";import"./props-helper-DCsMHcG1.js";import"./Form-EzleJG-j.js";import"./devtools-B_dijMH7.js";import"./uuidv4-BN2rGLQG.js";import"./SidePanel-nb2ZGxuR.js";import"./index-D1OMpwii.js";import"./useFocus-DYvWTlBN.js";import"./usePreviousValue-DGkdsrtI.js";import"./usePrefersReducedMotion-g5nq1m1A.js";import"./useIsomorphicEffect-l5L8NYko.js";import"./usePresence-D2RNAMoa.js";import"./ActionSet-DdP2NI5x.js";import"./ButtonSet-B2onNqwp.js";import"./InlineLoading-pF8In0wu.js";import"./bucket-6-BVxmYIXv.js";const H=".edit-side-panel-stories__example-container{display:grid;align-items:flex-end;grid-gap:.75rem;grid-template-columns:1fr 1fr}.edit-side-panel-stories__example-form-group .cds--label{margin-block-end:0}.c4p--edit-side-panel .cds--number__control-btn:before,.c4p--edit-side-panel .cds--number__control-btn:after{background-color:var(--cds-field-02, #ffffff)}.edit-side-panel-stories__container{display:flex;flex-direction:column;block-size:100vh}.edit-side-panel-stories__content{flex-grow:1}.edit-side-panel-stories__toggle{position:absolute;inset-block-start:50%;inset-inline-start:50%;transform:translate(-50%,-50%)}",V=e.createElement(O,{className:"slug-container",size:"xs"},e.createElement(k,null,e.createElement("div",null,e.createElement("p",{className:"secondary"},"AI Explained"),e.createElement("h1",null,"84%"),e.createElement("p",{className:"secondary bold"},"Confidence score"),e.createElement("p",{className:"secondary"},"This is not really Lorem Ipsum but the spell checker did not like the previous text with it's non-words which is why this unwieldy sentence, should one choose to call it that, here."),e.createElement("hr",null),e.createElement("p",{className:"secondary"},"Model type"),e.createElement("p",{className:"bold"},"Foundation model")))),q={title:"Edit platform quotas",subtitle:"Specify the details of the quotas",formTitle:"Core configuration",formDescription:"We recommend you fill out and evaluate these details at a minimum before deploying your topic.",primaryButtonText:"Save",secondaryButtonText:"Cancel"},G=()=>e.createElement(_,{render:()=>e.createElement(I,null,e.createElement(P,{href:"/",prefix:"IBM"},"Cloud Pak"))}),o="edit-side-panel-stories__",je={title:"Deprecated/Edit and update/EditSidePanel",component:b,tags:["autodocs"],argTypes:{title:{control:{type:"text"}},subtitle:{control:{type:"text"}},formTitle:{control:{type:"text"}},formDescription:{control:{type:"text"}},open:{control:{disable:!0}},slug:{control:{type:"select",labels:{0:"No AI slug",1:"with AI Slug"},default:0},options:[0,1]}},parameters:{layout:"fullscreen",styles:H,docs:{page:()=>e.createElement(w,{altGuidelinesHref:"https://pages.github.ibm.com/carbon/ibm-products/patterns/edit-and-update/usage/#side-panel-edit"})}},decorators:[t=>e.createElement(T,{id:"ibm-products-page-content",className:"story-content"},e.createElement(D,{sm:{span:4},md:{span:6}},e.createElement(B,{type:"deprecation-notice",text:e.createElement("div",null,"This component is deprecated and will be removed in the next major version.")},t()))),A(G,o)]},z=({slug:t,...g})=>{const y=C(),x=["Day(s)","Month(s)","Year(s)"],[a,r]=m.useState(!1),[l,h]=m.useState("Cluster management");return e.createElement(e.Fragment,null,e.createElement(N,{onClick:()=>r(!a)},a?"Close side panel":"Open side panel"),e.createElement(b,{...g,id:"storybook-id",open:a,onRequestClose:()=>r(!1),onRequestSubmit:()=>r(!1),disableSubmit:!l.length,selectorPrimaryFocus:`.${y}--text-input`,slug:t&&V},e.createElement($,{id:"create-side-panel-topic-name-a",labelText:"Topic name",className:`${o}form-item`,placeholder:"Enter topic name",value:l,onChange:E=>h(E.target.value)}),e.createElement(n,{iconDescription:"Choose a number",id:"1",className:`${o}form-item`,label:"Partitions",min:0,max:50,value:1}),e.createElement(n,{iconDescription:"Choose a number",id:"2",className:`${o}form-item`,label:"Replicas",min:0,max:50,value:1}),e.createElement(n,{iconDescription:"Choose a number",id:"3",className:`${o}form-item`,label:"Minimum in-sync replicas",min:0,max:50,value:1}),e.createElement("div",{style:{display:"grid",alignItems:"flex-end",gridGap:"0.75rem",gridTemplateColumns:"1fr 1fr"}},e.createElement(n,{iconDescription:"Choose a number",id:"4",className:`${o}form-item`,label:"Retention time",min:0,max:50,value:30}),e.createElement(S,{id:"create-side-panel-dropdown-options-a",items:x,initialSelectedItem:"Day(s)",label:"Options",titleText:"Options",className:`${o}form-item`})),e.createElement(n,{iconDescription:"Choose a number",id:"5",className:`${o}form-item`,label:"Minimum in-sync replicas",min:0,max:50,value:1})))},i=z.bind({});i.args={actionToolbarButtons:[{label:"Copy platform id",icon:t=>e.createElement(v,{size:16,...t}),onClick:s("Toolbar button clicked: Copy"),hasIconOnly:!0},{label:"Settings",icon:t=>e.createElement(M,{size:16,...t}),onClick:s("Toolbar button clicked: Settings"),hasIconOnly:!0},{label:"Delete",icon:t=>e.createElement(R,{size:16,...t}),onClick:s("Toolbar button clicked: Delete"),hasIconOnly:!0}],includeOverlay:!0,...q};var c,p,d,u,f;i.parameters={...i.parameters,docs:{...(c=i.parameters)==null?void 0:c.docs,source:{originalSource:`({
  slug,
  ...args
}) => {
  const carbonPrefix = usePrefix();
  const items = ['Day(s)', 'Month(s)', 'Year(s)'];
  const [open, setOpen] = useState(false);
  const [topicValue, setTopicValue] = useState('Cluster management');
  return <>
      <Button onClick={() => setOpen(!open)}>
        {open ? 'Close side panel' : 'Open side panel'}
      </Button>
      <EditSidePanel {...args} id="storybook-id" open={open} onRequestClose={() => setOpen(false)} onRequestSubmit={() => setOpen(false)} disableSubmit={!topicValue.length} selectorPrimaryFocus={\`.\${carbonPrefix}--text-input\`} slug={slug && sampleSlug}>
        <TextInput id="create-side-panel-topic-name-a" labelText="Topic name" className={\`\${prefix}form-item\`} placeholder="Enter topic name" value={topicValue} onChange={event => setTopicValue(event.target.value)} />
        <NumberInput iconDescription="Choose a number" id="1" className={\`\${prefix}form-item\`} label="Partitions" min={0} max={50} value={1} />
        <NumberInput iconDescription="Choose a number" id="2" className={\`\${prefix}form-item\`} label="Replicas" min={0} max={50} value={1} />
        <NumberInput iconDescription="Choose a number" id="3" className={\`\${prefix}form-item\`} label="Minimum in-sync replicas" min={0} max={50} value={1} />
        <div style={{
        display: 'grid',
        alignItems: 'flex-end',
        gridGap: '0.75rem',
        gridTemplateColumns: '1fr 1fr'
      }}>
          <NumberInput iconDescription="Choose a number" id="4" className={\`\${prefix}form-item\`} label="Retention time" min={0} max={50} value={30} />
          <Dropdown id="create-side-panel-dropdown-options-a" items={items} initialSelectedItem="Day(s)" label="Options" titleText="Options" className={\`\${prefix}form-item\`} />
        </div>
        <NumberInput iconDescription="Choose a number" id="5" className={\`\${prefix}form-item\`} label="Minimum in-sync replicas" min={0} max={50} value={1} />
      </EditSidePanel>
    </>;
}`,...(d=(p=i.parameters)==null?void 0:p.docs)==null?void 0:d.source},description:{story:`TODO: Declare one or more stories, generally one per design scenario.
NB no need for a 'Playground' because all stories have all controls anyway.`,...(f=(u=i.parameters)==null?void 0:u.docs)==null?void 0:f.description}}};const Ue=["editSidePanel"];export{Ue as __namedExportsOrder,je as default,i as editSidePanel};
