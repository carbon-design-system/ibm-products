import{e,r as a,X as $,c as k,p as y,P as t}from"./iframe-Cbdf71kV.js";import{C,M as D,a as F,b as P}from"./ComposedModal-Bq5ZjMWK.js";import{T as S}from"./index-CIgJxBzb.js";import{g as B}from"./devtools-BsT0_Owc.js";import{u as L}from"./useFocus-DEs0yeUq.js";import{u as O}from"./usePortalTarget-D9BcsXEH.js";import{u as H}from"./uuidv4-BN2rGLQG.js";const o=`${y.prefix}--about-modal`,l="AboutModal";let n=e.forwardRef(({additionalInfo:d,className:h,closeIconDescription:g,copyrightText:c,content:p,links:r,logo:b,modalAriaLabel:T,onClose:m,open:i,portalTarget:v,title:N,version:_,...R},q)=>{const u=a.useRef(null),E=a.useRef(void 0),s=q||E,f=a.useRef(null),M=H(),w=O(v),{claimFocus:A}=L(s);return a.useEffect(()=>{u.current=f.current?.parentElement},[u]),a.useEffect(()=>{i&&A()},[s,i]),w(e.createElement($,{enableExperimentalFocusWrapWithoutSentinels:!0},e.createElement(C,{...R,className:k(o,h),"aria-label":T,ref:s,onClose:m,open:i,...B(l)},e.createElement("div",{className:`${o}__logo`},b),e.createElement(D,{className:`${o}__header`,closeModal:m,iconDescription:g,label:N,labelClassName:`${o}__title`}),e.createElement(F,{className:`${o}__body`},e.createElement("div",{className:`${o}__body-content`,ref:f,id:M},e.createElement("div",{className:`${o}__version`},_),r&&r.length>0&&e.createElement("div",{className:`${o}__links-container`},r.map((x,I)=>e.createElement(e.Fragment,{key:I},x))),p&&e.createElement("p",{className:`${o}__content`},p),c&&e.createElement("p",{className:`${o}__copyright-text`},c))),d&&e.createElement(S,{theme:"g100"},e.createElement(P,{className:`${o}__footer`},d)))))});n=y.checkComponentEnabled(n,l);n.displayName=l;n.propTypes={additionalInfo:t.node,className:t.string,closeIconDescription:t.string.isRequired,content:t.node,copyrightText:t.string.isRequired,links:t.arrayOf(t.element),logo:t.node.isRequired,modalAriaLabel:t.string,onClose:t.func,open:t.bool,portalTarget:t.node,title:t.node.isRequired,version:t.string.isRequired};n.__docgenInfo={description:`The \`AboutModal\` component provides a way to communicate product information
to users. It is triggered by a userâ€™s action, appears on top of the main
page content, and is persistent until dismissed. The purpose of this modal
should be immediately apparent to the user, with a clear and obvious path
to completion.`,methods:[],displayName:"AboutModal",props:{additionalInfo:{required:!1,tsType:{name:"ReactNode"},description:`If you are legally required to display logos of technologies used
to build your product you can provide this in the additionalInfo.
Additional information will be displayed in the footer.`,type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the modal root node.",type:{name:"string"}},closeIconDescription:{required:!0,tsType:{name:"string"},description:"The accessibility title for the close icon.",type:{name:"string"}},content:{required:!1,tsType:{name:"ReactNode"},description:`Subhead text providing any relevant product disclaimers including
legal information (optional)`,type:{name:"node"}},copyrightText:{required:!0,tsType:{name:"string"},description:`Trademark and copyright information. Displays first year of
product release to current year.`,type:{name:"string"}},links:{required:!1,tsType:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]"},description:"An array of Carbon `Link` component if there are additional information\nto call out within the card. The about modal should be used to display\nthe product information and not where users go to find help (optional)",type:{name:"arrayOf",value:{name:"element"}}},logo:{required:!0,tsType:{name:"ReactNode"},description:"A visual symbol used to represent the product.",type:{name:"node"}},modalAriaLabel:{required:!1,tsType:{name:"string"},description:"Specifies aria label for AboutModal",type:{name:"string"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void | boolean",signature:{arguments:[],return:{name:"union",raw:"void | boolean",elements:[{name:"void"},{name:"boolean"}]}}},description:"Specifies an optional handler which is called when the AboutModal\nis closed. Returning `false` prevents the AboutModal from closing.",type:{name:"func"}},open:{required:!1,tsType:{name:"boolean"},description:"Specifies whether the AboutModal is open or not.",type:{name:"bool"}},portalTarget:{required:!1,tsType:{name:"ReactNode"},description:"The DOM node the tearsheet should be rendered within. Defaults to document.body.",type:{name:"node"}},title:{required:!0,tsType:{name:"ReactNode"},description:`Header text that provides the product name. The IBM Services logo
consists of two discrete, but required, elements: the iconic
IBM 8-bar logo represented alongside the IBM Services logotype.
Please follow these guidelines to ensure proper execution.`,type:{name:"node"}},version:{required:!0,tsType:{name:"string"},description:"Text that provides information on the version number of your product.",type:{name:"string"}}}};export{n as A};
