import{e as t,u as z,T as C,p as N,c as U,P as a}from"./iframe-DCfjJu_F.js";import{g as S}from"./devtools-Dq6cNnKA.js";import{T as _}from"./TooltipTrigger-BY1Tor0P.js";import{G as n}from"./bucket-7-DyUsK330.js";import{U as s}from"./bucket-18-CAKstFHh.js";const r=`${N.prefix}--user-profile-image`,p="UserProfileImage",o=t.forwardRef((h,f)=>{const{backgroundColor:y,className:v,kind:m,icon:b,initials:l,image:u,imageDescription:k,size:i,theme:T,tooltipText:c,tooltipAlignment:w="bottom",...x}=h,P=z(),$={user:{md:e=>t.createElement(s,{size:20,...e}),lg:e=>t.createElement(s,{size:24,...e}),xl:e=>t.createElement(s,{size:32,...e})},group:{md:e=>t.createElement(n,{size:20,...e}),lg:e=>t.createElement(n,{size:24,...e}),xl:e=>t.createElement(n,{size:32,...e})}},q=()=>l&&l.length===2?l:(l||"").match(/(^\S\S?|\b\S)?/g)?.join("").match(/(^\S|\S$)?/g)?.join("").toUpperCase()||"",E=()=>u?()=>t.createElement("img",{alt:k,src:u,className:`${r}__photo ${r}__photo--${i}`}):l?q:m&&i?$[m][i]:b,I=()=>{const e=["light-cyan","dark-cyan","light-gray","dark-gray","light-green","dark-green","light-magenta","dark-magenta","light-purple","dark-purple","light-teal","dark-teal"];return e[Math.floor(Math.random()*e.length)]},d=E(),g=()=>t.createElement("div",{...x,ref:f,className:U([r,v,`${r}--${i}`,`${r}--${T}`,`${r}--${y||I()}`]),...S(p)},t.createElement(d,null));return d&&(c?t.createElement(C,{align:w,label:c,className:`${r}__tooltip ${P}--icon-tooltip`},t.createElement(_,null,g())):g())});o.deprecated={level:"warn",details:`Please replace ${p} with UserAvatar`};o.displayName=p;o.propTypes={backgroundColor:a.oneOf(["light-cyan","dark-cyan","light-gray","dark-gray","light-green","dark-green","light-magenta","dark-magenta","light-purple","dark-purple","light-teal","dark-teal"]),className:a.string,icon:a.func,image:a.string,imageDescription:a.string,initials:a.string,kind:a.oneOf(["user","group"]),size:a.oneOf(["xl","lg","md"]).isRequired,theme:a.oneOf(["light","dark"]).isRequired,tooltipAlignment:a.oneOf(["top","top-left","top-right","bottom","bottom-left","bottom-right","left","right"]),tooltipText:a.string};o.__docgenInfo={description:`The user profile avatar allows for an image of the user to be displayed by passing in the image prop. By default the component will display a user icon on a blue background.
@deprecated This component is deprecated.`,methods:[],displayName:"UserProfileImage",props:{backgroundColor:{required:!1,tsType:{name:"string"},description:`The background color passed should match one of the background colors in the library documentation:
https://pages.github.ibm.com/carbon/ibm-products/patterns/user-profile-images/`,type:{name:"enum",value:[{value:"'light-cyan'",computed:!1},{value:"'dark-cyan'",computed:!1},{value:"'light-gray'",computed:!1},{value:"'dark-gray'",computed:!1},{value:"'light-green'",computed:!1},{value:"'dark-green'",computed:!1},{value:"'light-magenta'",computed:!1},{value:"'dark-magenta'",computed:!1},{value:"'light-purple'",computed:!1},{value:"'dark-purple'",computed:!1},{value:"'light-teal'",computed:!1},{value:"'dark-teal'",computed:!1}]}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},icon:{required:!1,tsType:{name:"signature",type:"function",raw:"() => CarbonIconType | null",signature:{arguments:[],return:{name:"union",raw:"CarbonIconType | null",elements:[{name:"CarbonIconType"},{name:"null"}]}}},description:"Provide a custom icon to use if you need to use an icon other than the included ones",type:{name:"func"}},initials:{required:!1,tsType:{name:"string"},description:"When passing the initials prop, either send the initials to be used or the user's display name. The first two capital letters of the display name will be used as the initials.",type:{name:"string"}},kind:{required:!1,tsType:{name:"union",raw:"'user' | 'group'",elements:[{name:"literal",value:"'user'"},{name:"literal",value:"'group'"}]},description:'When passing the kind prop, use either "user" or "group". The values match up to the Carbon Library icons.',type:{name:"enum",value:[{value:"'user'",computed:!1},{value:"'group'",computed:!1}]}},size:{required:!0,tsType:{name:"union",raw:"'xl' | 'lg' | 'md'",elements:[{name:"literal",value:"'xl'"},{name:"literal",value:"'lg'"},{name:"literal",value:"'md'"}]},description:"Set the size of the avatar circle",type:{name:"enum",value:[{value:"'xl'",computed:!1},{value:"'lg'",computed:!1},{value:"'md'",computed:!1}]}},theme:{required:!0,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Set theme in which the component will be rendered",type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]}},tooltipAlignment:{required:!1,tsType:{name:"PopoverAlignment"},description:"Specify how the trigger should align with the tooltip",type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'top-left'",computed:!1},{value:"'top-right'",computed:!1},{value:"'bottom'",computed:!1},{value:"'bottom-left'",computed:!1},{value:"'bottom-right'",computed:!1},{value:"'left'",computed:!1},{value:"'right'",computed:!1}]}},tooltipText:{required:!1,tsType:{name:"string"},description:"Pass in the display name to have it shown on hover",type:{name:"string"}},image:{description:"When passing the image prop, supply a full path to the image to be displayed.",type:{name:"string"},required:!1},imageDescription:{description:"When passing the image prop use the imageDescription prop to describe the image for screen reader.",type:{name:"string"},required:!1}}};export{o as U};
