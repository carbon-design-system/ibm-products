import{e as i,S as u,r as x}from"./iframe-DMSo7fNu.js";import{g}from"./getBatchActions-B9FMqjXt.js";import{s as w,m as E}from"./_storybook-styles-BpOvjpfr.js";import{D as f}from"./DatagridActions-B3x6eXSO.js";import{D as S}from"./DatagridPagination-vWaM_xPE.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-DfPF5bxg.js";import{u as h}from"./useExpandedRow-BB0IIDE7.js";import{u as D}from"./useSelectRows-BPK8RjC3.js";import{u as C}from"./useStickyColumn-Dgw6mAOm.js";import{u as R}from"./usePrefix-Heel6RlE.js";import{E as H}from"./bucket-6-DMXDSOZz.js";import{T as b}from"./bucket-17-DIH2Yt6y.js";import"./bucket-0-B55rfkQc.js";import"./bucket-2-aw6a38Ug.js";import"./index-BkMDkXli.js";import"./bucket-18-NqwZiyr7.js";import"./bucket-7-DTE3iurw.js";import"./ComposedModal-OT4_uwBu.js";import"./index-BEhuL1MR.js";import"./index-_65DErXo.js";import"./LayerContext-DVn4I5BR.js";import"./clamp--00YEiB8.js";import"./ButtonSet-mGwPz82B.js";import"./InlineLoading-BB9NEor7.js";import"./mergeRefs-91-mP8KM.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-C9KaZbQS.js";import"./Text-Dh2QBwQf.js";import"./utils-CkYnHtpG.js";import"./TableToolbarSearch-p3Z4rvHD.js";import"./wrapComponent-Ww63Most.js";import"./Search-Ck63I16p.js";import"./FormContext-EOTHCOkS.js";import"./bucket-15-BaxoEXEo.js";import"./Dropdown-DMYPv8tR.js";import"./index-CigMzKTM.js";import"./inheritsLoose-DHKJTbHM.js";import"./bucket-19-D9iFC4WK.js";import"./MenuItem-3EeEiQgS.js";import"./useControllableState-CChOc1hs.js";import"./useAttachedMenu-DL7ROuXb.js";import"./index-COsD0hq7.js";import"./index-D8xUF5XL.js";import"./bucket-12-BT6xutBI.js";import"./useOutsideClick-D5Q6wfnz.js";import"./OverflowMenuItem-BS43Op2H.js";import"./useFilterContext-Cz4lOa3E.js";import"./bucket-14-DQCQ8B9u.js";import"./Pagination-__Sok52s.js";import"./Select-Dv3rzEk4.js";import"./SelectItem-BV8dwFpW.js";import"./MultiSelect-DonrfaUD.js";import"./Checkbox-Ct6BjSZ4.js";import"./devtools-BJavCYMb.js";import"./TableRow-RFn4w6w2.js";import"./bucket-1-DDKI4-PL.js";import"./TableToolbar-xpz0pFQD.js";import"./index-WXunxWmO.js";import"./ErrorEmptyState-BQf_dpGi.js";import"./EmptyState-B2dbkea7.js";import"./EmptyStateV2-Cg9jQa3R.js";import"./Link-BdXLZ6TX.js";import"./props-helper-CdGlpuWB.js";import"./ErrorIllustration-BxXaoWBT.js";import"./useId-uDqo1bvY.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-D2xkBCsx.js";import"./NoDataIllustration-6tc6uhCJ.js";import"./NotFoundEmptyState-Y8HzLjkX.js";import"./NotFoundIllustration-LMXpa8pK.js";import"./index.esm-CZp1nbiG.js";import"./usePreviousValue-DCWj1W1B.js";import"./useResizeObserver-DBjG5WR6.js";import"./useIsomorphicEffect-DTtEIILN.js";import"./getFocusableElements-BW7cf991.js";import"./index-COd7or6r.js";import"./useClickOutside-CAidSw2p.js";import"./AccordionItem-Dr_ROvrb.js";import"./DatePicker-DM8jDEF4.js";import"./FormGroup-rrCsSmYk.js";import"./NumberInput-D0Vn7lWt.js";import"./useNormalizedInputProps-BShytrhy.js";import"./documentLang-E105Y72C.js";import"./bucket-16-vF1hqtDX.js";import"./RadioButton-Bccck1zG.js";import"./RadioButtonGroup-G4t-CenT.js";import"./usePrefersReducedMotion-C0lvOnb6.js";import"./usePresence-BKlO43KP.js";import"./ActionSet-B20GRHRo.js";import"./useWindowResize-biiCItwS.js";import"./TagSet-BKu8SzFZ.js";import"./Tag-D28a0JZP.js";import"./DefinitionTooltip-DJqKdJxI.js";import"./DismissibleTag-BAfTJg1F.js";import"./usePortalTarget-CHvIgtI6.js";import"./OperationalTag-BrXVeuQ3.js";import"./SkeletonText-B22brlck.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-VR3zVvND.js";import"./TableSelectRow-wSp1YrZM.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,bt={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const Bt=["ExpandableRowStory"];export{e as ExpandableRowStory,Bt as __namedExportsOrder,bt as default};
