import{e as t,S as C,r as y}from"./iframe-BixY_nzU.js";import{s as z,m as g}from"./_storybook-styles-BjnquDfj.js";import{D as N}from"./DatagridActions-CSz_YLFx.js";import{A as c}from"./getArgTypes-Ci8wh0IQ.js";import{D as w,u as f}from"./useDatagrid-C3hLtMc1.js";import{u as b}from"./useNestedRows-ByKRU2Of.js";import{u as G}from"./useSelectRows-Bvi8OoyE.js";import{E as _}from"./bucket-6-Ygy5YQ9m.js";import{T as k}from"./bucket-17-D2SvOvFl.js";import"./bucket-2-KtQy-gy7.js";import"./index-KoxcOYkd.js";import"./bucket-18-Cm0L4bq5.js";import"./bucket-7-BMRx2xk3.js";import"./ComposedModal-C-yJmSnV.js";import"./index-BEhuL1MR.js";import"./index-Dioc7bXy.js";import"./LayerContext-C8JKjCPJ.js";import"./clamp--00YEiB8.js";import"./ButtonSet-B_zKP9xZ.js";import"./InlineLoading-D56yXy8d.js";import"./mergeRefs-91-mP8KM.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-Bbgeg0Nx.js";import"./Text-B6SqPZCe.js";import"./utils-CYmHZlgn.js";import"./TableToolbarSearch-SBws6Dty.js";import"./wrapComponent-DJ4rNbJl.js";import"./Search-DgkMjmaf.js";import"./FormContext-ChfRT5-9.js";import"./bucket-15-CR51sp2K.js";import"./Dropdown-CA737wZu.js";import"./index-DGezsfQe.js";import"./inheritsLoose-DHKJTbHM.js";import"./bucket-19-BnR_hMr3.js";import"./MenuItem-ZGtCy1zR.js";import"./useControllableState-DC7Ej6kn.js";import"./useAttachedMenu-BRh0V27n.js";import"./index-BBuXWzuS.js";import"./index-CCul1fp0.js";import"./bucket-12-C20f3iiV.js";import"./useOutsideClick-BEN9HQgE.js";import"./OverflowMenuItem-C7uN44t_.js";import"./useFilterContext-BsY2fjaK.js";import"./bucket-0-tkbzYG9T.js";import"./bucket-14-julK-VHp.js";import"./devtools-BgBiig7t.js";import"./TableRow-CmfIPmKY.js";import"./bucket-1-BHpIhqGK.js";import"./TableToolbar-m2gFp8dd.js";import"./index-D8hxD1Y6.js";import"./ErrorEmptyState-DsvVJbKR.js";import"./EmptyState-By9fZsJk.js";import"./EmptyStateV2-B8Eg_jZc.js";import"./Link-trOFoxkZ.js";import"./props-helper-nJuZcXxg.js";import"./ErrorIllustration-Buxf7vLz.js";import"./useId-CEgnz6Ws.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-D3JQoXKy.js";import"./NoDataIllustration-ePnik9lE.js";import"./NotFoundEmptyState-Di5etujk.js";import"./NotFoundIllustration-BiHuHUk_.js";import"./index.esm-DxhhlNX-.js";import"./usePreviousValue-CTSbRzqP.js";import"./useResizeObserver-w6LHWa3u.js";import"./useIsomorphicEffect-BzCQADVB.js";import"./getFocusableElements-BW7cf991.js";import"./index-oT-iZzBF.js";import"./useClickOutside-DAucaBgU.js";import"./AccordionItem-nAc0ALKG.js";import"./Checkbox-CrO2TYcW.js";import"./DatePicker-C-aHxAcv.js";import"./FormGroup-TqDbofKg.js";import"./MultiSelect-DU3po3NM.js";import"./NumberInput-DbvJgXao.js";import"./useNormalizedInputProps-Bpt-5IUr.js";import"./documentLang-E105Y72C.js";import"./bucket-16-CBPAJ3ia.js";import"./RadioButton-DFOMK8Cd.js";import"./RadioButtonGroup-B0lPsX87.js";import"./usePrefersReducedMotion-VKlGTiEJ.js";import"./usePresence-DOAybUGi.js";import"./ActionSet-BU7FdDgm.js";import"./useWindowResize-DVgsn1qn.js";import"./TagSet-Dhg_Qh0C.js";import"./Tag-CbXFe4uz.js";import"./DefinitionTooltip-C5zZShyp.js";import"./DismissibleTag-Dankl3fz.js";import"./usePortalTarget-DYGy-m0K.js";import"./OperationalTag-FQkyKd3P.js";import"./SkeletonText-R4JdAoTC.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-BawndHtc.js";import"./TableSelectRow-CEr1cHF1.js";const{action:x}=__STORYBOOK_MODULE_ACTIONS__,S={gridTitle:c.gridTitle,gridDescription:c.gridDescription,useDenseHeader:c.useDenseHeader,rowSize:c.rowSize,rowSizes:c.rowSizes,onRowSizeChange:c.onRowSizeChange,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},_t={title:"Deprecated/Datagrid/NestedRows",component:w,tags:["autodocs"],parameters:{styles:z,docs:{page:()=>t.createElement(C,{omitCodedExample:!0,blocks:[{title:"Nested rows",description:"Nested rows allow disclosing content in data tables progressively by displaying primary data first (parent row) and enabling users to navigate secondary information levels (child rows).\n- Include the `useNestedRows` hook\n- Make sure that any row you want to have nested rows in your data has a `subRows` property with an array of objects for each nested row. The row expander will be included by default as long as the `useNestedRows` hook is provided and it is detected that a row has `subRows` within it.\n          ",source:{code:`
const datagridState = useDatagrid(
  {
    columns,
    data,
    expanderButtonTitleExpanded: 'Collapse row',
    expanderButtonTitleCollapsed: 'Expand row',
  },
  useNestedRows
);

return <Datagrid datagridState={datagridState} />;
            `}}]})},layout:"padded"},argTypes:{featureFlags:{table:{disable:!0}}}},D=[{Header:"Row Index",accessor:(e,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],l={gridTitle:"Data table title",gridDescription:"Additional information if needed",useDenseHeader:!1,rowSize:"lg",rowSizes:[{value:"xl",labelText:"Extra large"},{value:"lg",labelText:"Large"},{value:"md",labelText:"Medium"},{value:"xs",labelText:"Small"}],onRowSizeChange:e=>{console.log("row size changed to: ",e)},rowActions:[{id:"edit",itemText:"Edit",icon:_,onClick:x("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:k,isDelete:!0,onClick:x("Clicked row action: delete")}]},R={gridTitle:l.gridTitle,gridDescription:l.gridDescription,useDenseHeader:l.useDenseHeader,rowSize:l.rowSize,rowSizes:l.rowSizes,onRowSizeChange:l.onRowSizeChange},I=({...e})=>{const o=t.useMemo(()=>D,[]),[r]=y.useState(g(10,2)),s=f({columns:o,data:r,DatagridActions:N,autoResetExpanded:!1,autoResetGlobalFilter:!1,...e.defaultGridProps,getSubRows:a=>a.subRows},b);return t.createElement(w,{datagridState:s})},U=({...e})=>t.createElement(I,{defaultGridProps:{...e}}),A="With single-level nested rows",i=U.bind({});i.storyName=A;i.argTypes={...S};i.args={...R,featureFlags:["Datagrid.useNestedRows"]};const L=({...e})=>{const o=t.useMemo(()=>D,[]),[r]=y.useState(g(10,5,2,2,{id:"testing-user-provided-id"})),s=f({columns:o,data:r,DatagridActions:N,...e.defaultGridProps,getSubRows:a=>a.subRows},b);return t.createElement(w,{datagridState:{...s}})},E=({...e})=>t.createElement(L,{defaultGridProps:{...e}}),W="With nested rows",n=E.bind({});n.storyName=W;n.argTypes={...S};n.args={...R};const M=({...e})=>{const o=t.useMemo(()=>D,[]),[r]=y.useState(g(10,5,2,2)),s=f({columns:o,data:r,DatagridActions:N,...e.defaultGridProps,getSubRows:a=>a.subRows},b,G);return t.createElement(w,{datagridState:{...s}})},B=({...e})=>t.createElement(M,{defaultGridProps:{...e}}),O="With selectable nested rows",d=B.bind({});d.storyName=O;d.argTypes={...S};d.args={...R};const F="With initially expanded nested rows",m=E.bind({});m.storyName=F;m.argTypes={...S};m.args={...R,initialState:{expandedRowIds:{"testing-user-provided-id__1":!0,3:!0}}};const Y=({...e})=>{const o=t.useMemo(()=>D,[]),[r,s]=y.useState(g(10)),a=f({columns:o,data:r,DatagridActions:N,autoResetExpanded:!1,autoResetGlobalFilter:!1,...e.defaultGridProps,getAsyncSubRows:async u=>{u.subRows.length||await new Promise(h=>{setTimeout(()=>{if(u.depth>0)return h();const H=g(2,{id:"test-id"}),T=[...r],P=T.findIndex(v=>v.id===u.original.id);T[P].subRows=H,s(T),h()},1e3)})},getSubRows:u=>u.subRows},b);return t.createElement(w,{datagridState:a})},j=({...e})=>t.createElement(Y,{defaultGridProps:{...e}}),K="Dynamic nested rows",p=j.bind({});p.storyName=K;p.argTypes={...S};p.args={...R};i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <SingleLevelNestedRows defaultGridProps={{
    ...args
  }} />;
}`,...i.parameters?.docs?.source}}};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <NestedRows defaultGridProps={{
    ...args
  }} />;
}`,...n.parameters?.docs?.source}}};d.parameters={...d.parameters,docs:{...d.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <SelectableNestedRows defaultGridProps={{
    ...args
  }} />;
}`,...d.parameters?.docs?.source}}};m.parameters={...m.parameters,docs:{...m.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <NestedRows defaultGridProps={{
    ...args
  }} />;
}`,...m.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <DynamicNestedRows defaultGridProps={{
    ...args
  }} />;
}`,...p.parameters?.docs?.source}}};const kt=["SingleLevelNestedRowsUsageStory","NestedRowsUsageStory","SelectableNestedRowsUsageStory","NestedRowsInitialUsageStory","DynamicNestedRowStory"];export{p as DynamicNestedRowStory,m as NestedRowsInitialUsageStory,n as NestedRowsUsageStory,d as SelectableNestedRowsUsageStory,i as SingleLevelNestedRowsUsageStory,kt as __namedExportsOrder,_t as default};
