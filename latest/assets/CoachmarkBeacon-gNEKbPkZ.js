import{d,P as o}from"./index-5As4T26e.js";import{e}from"./index-DzvNrmz8.js";import{g as u}from"./devtools-B_dijMH7.js";import{p as c}from"./settings-CP9zVSjJ.js";import{u as f}from"./CoachmarkOverlayElements-ANulXPAn.js";const t=`${c.prefix}--coachmark-beacon`,r="CoachmarkBeacon",h={kind:"default"};let a=e.forwardRef(({label:n,className:l,kind:m=h.kind,...i},p)=>{const s=f();return s?e.createElement("span",{...i,className:d(t,`${t}-${m}`,l),ref:p,...u(r),role:"tooltip"},e.createElement("button",{tabIndex:0,type:"button",...s.buttonProps,className:`${t}__target`},e.createElement("svg",{className:`${t}__center`,"aria-label":n},e.createElement("title",null,n),e.createElement("circle",{r:1,cx:38,cy:38})))):e.createElement("div",null,"CoachmarkBeacon is to be use exclusively within the target prop of Coachmark")});a=c.checkComponentEnabled(a,r);a.displayName=r;a.propTypes={className:o.string,kind:o.oneOf(["default"]),label:o.string.isRequired};a.__docgenInfo={description:"Use beacon for the target prop of a Coachmark component.",methods:[],displayName:"CoachmarkBeacon",props:{className:{required:!1,tsType:{name:"string"},description:"Optional class name for this component.",type:{name:"string"}},kind:{required:!1,tsType:{name:"BEACON_KIND"},description:`What style of beacon.
BEACON_KIND is an exported enum from the Coachmark and can be used for this value.
@see {@link BEACON_KIND}`,defaultValue:{value:"'default'",computed:!1},type:{name:"enum",value:[{value:"'default'",computed:!1}]}},label:{required:!0,tsType:{name:"string"},description:"The aria label.",type:{name:"string"}}}};export{a as C};
