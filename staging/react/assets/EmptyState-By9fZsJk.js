import{e as n,p as g,c as u,B as l,P as e}from"./iframe-BixY_nzU.js";import{E as w}from"./EmptyStateV2-B8Eg_jZc.js";import{g as C}from"./devtools-BgBiig7t.js";import"./props-helper-nJuZcXxg.js";import{L as _}from"./Link-trOFoxkZ.js";import{S,H as $}from"./index-D8hxD1Y6.js";const i=`${g.prefix}--empty-state`,R="EmptyStateContent",d=o=>{const{action:t,link:a,headingAs:c,size:p,subtitle:s,title:y}=o,f=c??$;return n.createElement(S,{className:`${i}__content`},n.createElement(f,{className:u(`${i}__header`,{[`${i}__header--small`]:p==="sm"})},y),s&&n.createElement("p",{className:u(`${i}__subtitle`,{[`${i}__subtitle--small`]:p==="sm"})},s),t?.text&&t?.onClick&&n.createElement(l,{...t,className:`${i}__action-button`,kind:t.kind||"tertiary",onClick:t.onClick,renderIcon:t.renderIcon??void 0,size:"sm"},t.text),a?.text&&a?.href&&n.createElement(_,{...a,className:`${i}__link`,href:a.href},a.text))};d.displayName=R;d.propTypes={action:e.shape({...l.propTypes,iconDescription:e.string,kind:e.oneOf(["primary","secondary","tertiary"]),renderIcon:e.oneOfType([e.func,e.object]),onClick:l.propTypes.onClick,text:e.string}),headingAs:e.elementType,link:e.any,size:e.oneOf(["lg","sm"]),subtitle:e.oneOfType([e.string,e.node]),title:e.oneOfType([e.string,e.node]).isRequired};d.__docgenInfo={description:"",methods:[],displayName:"EmptyStateContent",props:{action:{required:!1,tsType:{name:"EmptyStateAction"},description:"Empty state action button",type:{name:"shape",value:{iconDescription:{name:"string",required:!1},kind:{name:"enum",value:[{value:"'primary'",computed:!1},{value:"'secondary'",computed:!1},{value:"'tertiary'",computed:!1}],required:!1},renderIcon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},onClick:{name:"custom",raw:"Button.propTypes.onClick",required:!1},text:{name:"string",required:!1}}}},headingAs:{required:!1,tsType:{name:"union",raw:"(() => ReactNode) | string | ElementType",elements:[{name:"unknown"},{name:"string"},{name:"ElementType"}]},description:"Empty state headingAs allows you to customize the type of heading element",type:{name:"elementType"}},link:{required:!1,tsType:{name:"CustomLink"},description:"Empty state link object",type:{name:"any"}},size:{required:!1,tsType:{name:"union",raw:"'lg' | 'sm'",elements:[{name:"literal",value:"'lg'"},{name:"literal",value:"'sm'"}]},description:"Empty state size",type:{name:"enum",value:[{value:"'lg'",computed:!1},{value:"'sm'",computed:!1}]}},subtitle:{required:!1,tsType:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}]},description:"Empty state subtitle",type:{name:"union",value:[{name:"string"},{name:"node"}]}},title:{required:!0,tsType:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}]},description:"Empty state title",type:{name:"union",value:[{name:"string"},{name:"node"}]}}}};const r=`${g.prefix}--empty-state`,h="EmptyState",T={position:"top",size:"lg"};let m=n.forwardRef(({v2:o=!1,...t},a)=>{if(o)return n.createElement(w,{...t});const{action:c,className:p,illustration:s,illustrationDescription:y,illustrationPosition:f=T.position,link:E,size:v=T.size,headingAs:k,subtitle:b,title:q,...N}=t;return n.createElement("div",{...N,className:u(r,`${r}-type--default`,p,{[`${r}-position--${f}`]:!!s}),ref:a,...C(h)},s&&n.createElement("img",{src:s,alt:y,className:u([`${r}__illustration`,`${r}__illustration--${v}`]),"aria-hidden":"true"}),n.createElement(d,{action:c,link:E,size:v,headingAs:k,subtitle:b,title:q??""}))});m=g.checkComponentEnabled(m,h);m.propTypes={action:e.shape({...l.propTypes,kind:e.oneOf(["primary","secondary","tertiary"]),renderIcon:e.oneOfType([e.func,e.object]),onClick:l.propTypes.onClick,text:e.string}),className:e.string,headingAs:e.elementType,illustration:e.string,illustrationDescription:e.string.isRequired.if(({illustration:o})=>o),illustrationPosition:e.oneOf(["top","right","bottom","left"]),link:e.any,size:e.oneOf(["lg","sm"]),subtitle:e.oneOfType([e.string,e.node]),title:e.oneOfType([e.string,e.node]).isRequired,v2:e.bool};m.displayName=h;m.__docgenInfo={description:"The `EmptyState` component follows the Carbon guidelines for empty states with some added specifications around illustration usage. For additional usage guidelines and documentation please refer to the links above.",methods:[],displayName:"EmptyState",props:{action:{required:!1,tsType:{name:"EmptyStateAction"},description:"Empty state action button",type:{name:"shape",value:{kind:{name:"enum",value:[{value:"'primary'",computed:!1},{value:"'secondary'",computed:!1},{value:"'tertiary'",computed:!1}],required:!1},renderIcon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},onClick:{name:"custom",raw:"Button.propTypes.onClick",required:!1},text:{name:"string",required:!1}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},illustration:{required:!1,tsType:{name:"string"},description:"Empty state illustration, specify the `src` for a provided illustration to be displayed. In the case of requiring a light and dark illustration of your own, simply pass the corresponding illustration based on the current theme of your application.\nFor example: `illustration={appTheme === 'dark' ? darkIllustration : lightIllustration}`",type:{name:"string"}},illustrationDescription:{required:!0,tsType:{name:"string"},description:"The alt text for empty state svg images. If not provided , title will be used.",type:{name:"string"}},illustrationPosition:{required:!1,tsType:{name:"union",raw:"'top' | 'right' | 'bottom' | 'left'",elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'left'"}]},description:"Designates the position of the illustration relative to the content",type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'right'",computed:!1},{value:"'bottom'",computed:!1},{value:"'left'",computed:!1}]}},link:{required:!1,tsType:{name:"CustomLink"},description:"Empty state link object",type:{name:"any"}},headingAs:{required:!1,tsType:{name:"union",raw:"(() => ReactNode) | string | ElementType",elements:[{name:"unknown"},{name:"string"},{name:"ElementType"}]},description:`Customize the heading element.  Set to "h1" when EmptyState is full page, i.e. there is no higher header.
Otherwise, you normally don't need to specify this: EmptyState will automatically pick the right heading level
(h2-h6) by leveraging Section and Heading.`,type:{name:"elementType"}},size:{required:!1,tsType:{name:"union",raw:"'lg' | 'sm'",elements:[{name:"literal",value:"'lg'"},{name:"literal",value:"'sm'"}]},description:"Empty state size",type:{name:"enum",value:[{value:"'lg'",computed:!1},{value:"'sm'",computed:!1}]}},subtitle:{required:!1,tsType:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}]},description:"Empty state subtitle",type:{name:"union",value:[{name:"string"},{name:"node"}]}},title:{required:!0,tsType:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}]},description:"Empty state title",type:{name:"union",value:[{name:"string"},{name:"node"}]}},v2:{required:!1,tsType:{name:"boolean"},description:`**Deprecated:** Designates which version of the EmptyState component is being used. Refer to V2 documentation separately.
@deprecated`,defaultValue:{value:"false",computed:!1},type:{name:"bool"}}}};export{d as E,m as a,T as d};
