import"./props-helper-DCsMHcG1.js";import{e as n}from"./index-DzvNrmz8.js";import{d as _,P as e}from"./index-5As4T26e.js";import{F as k}from"./Form-EzleJG-j.js";import{g as E}from"./devtools-B_dijMH7.js";import{p as m}from"./settings-CP9zVSjJ.js";import{u as O}from"./uuidv4-BN2rGLQG.js";import{S as D}from"./SidePanel-nb2ZGxuR.js";const t=`${m.prefix}--edit-side-panel`,o="EditSidePanel";let i=n.forwardRef(({children:a,className:u,disableSubmit:c,id:f,formTitle:s,formDescription:l,onRequestClose:d,onRequestSubmit:r,open:h,placement:y="right",primaryButtonText:g,secondaryButtonText:v,selectorPrimaryFocus:b,selectorPageContent:T,size:q="md",slideIn:x,subtitle:S,title:P,...w},C)=>{const N=[{label:g,onClick:R=>{R.preventDefault(),r==null||r()},kind:"primary",disabled:c,type:"submit"},{label:v,onClick:d,kind:"secondary"}],p=O();return n.createElement(D,{...w,open:h,ref:C,selectorPageContent:T,onRequestClose:d,title:P,subtitle:S,selectorPrimaryFocus:b,id:f,...E(o),placement:y,slideIn:x,animateTitle:!1,className:_(t,u),size:q,preventCloseOnClickOutside:!0,actions:N},s&&n.createElement("h3",{id:p,className:`${t}__form-title-text ${t}__content-text`},s),l&&n.createElement("p",{className:`${t}__form-description-text ${t}__content-text`},l),n.createElement(k,{className:`${t}__form`,"aria-labelledby":p},a))});i.deprecated={level:"warn",details:"This component is deprecated and will be removed in the next major version."};i=m.checkComponentEnabled(i,o);i.displayName=o;i.propTypes={children:e.oneOfType([e.arrayOf(e.node),e.node]).isRequired,className:e.string,disableSubmit:e.bool,formDescription:e.node,formTitle:e.node.isRequired,id:e.string,onRequestClose:e.func,onRequestSubmit:e.func,open:e.bool.isRequired,placement:e.oneOf(["left","right"]),primaryButtonText:e.string.isRequired,secondaryButtonText:e.string.isRequired,selectorPageContent:e.string.isRequired.if(({slideIn:a})=>a),selectorPrimaryFocus:e.node.isRequired,size:e.oneOf(["xs","sm","md","lg","2xl"]),slideIn:e.bool,slug:e.node,subtitle:e.node,title:e.node.isRequired};i.__docgenInfo={description:`**This component is deprecated.** <br>
Use with medium complexity edits if the user needs page context.
@deprecated`,methods:[],displayName:"EditSidePanel",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Sets the body content of the create side panel",type:{name:"union",value:[{name:"arrayOf",value:{name:"node"}},{name:"node"}]}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},disableSubmit:{required:!1,tsType:{name:"boolean"},description:"Specifies a boolean for disabling or enabling the primary button. This is important for form validation\nReturning `true` prevents the primary button from being clicked until required fields are completed.",type:{name:"bool"}},formDescription:{required:!1,tsType:{name:"ReactNode"},description:"Specifies an optional field that provides a additional context for a form",type:{name:"node"}},formTitle:{required:!0,tsType:{name:"ReactNode"},description:"Specifies a required field that provides a title for a form",type:{name:"node"}},id:{required:!1,tsType:{name:"string"},description:"Unique identifier",type:{name:"string"}},onRequestClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:`Specifies an optional handler which is called when the CreateSidePanel
is closed.`,type:{name:"func"}},onRequestSubmit:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:`Specifies an optional handler which is called when the CreateSidePanel
primary button is pressed.`,type:{name:"func"}},open:{required:!0,tsType:{name:"boolean"},description:"Specifies whether the CreateSidePanel is open or not.",type:{name:"bool"}},placement:{required:!1,tsType:{name:"union",raw:"'left' | 'right'",elements:[{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}]},description:"Determines if the side panel is on the right or left",defaultValue:{value:"'right'",computed:!1},type:{name:"enum",value:[{value:"'left'",computed:!1},{value:"'right'",computed:!1}]}},primaryButtonText:{required:!0,tsType:{name:"string"},description:"Specifies the primary button's text in the modal.",type:{name:"string"}},secondaryButtonText:{required:!0,tsType:{name:"string"},description:"Specifies the secondary button's text in the modal.",type:{name:"string"}},selectorPageContent:{required:!0,tsType:{name:"string"},description:"This is the selector to the element that contains all of the page content that will shrink if the panel is a slide in.\nThis prop is required when using the `slideIn` variant of the side panel.",type:{name:"string"}},selectorPrimaryFocus:{required:!0,tsType:{name:"string"},description:"Specifies which DOM element in the form should be focused.",type:{name:"node"}},size:{required:!1,tsType:{name:"union",raw:"'xs' | 'sm' | 'md' | 'lg' | '2xl'",elements:[{name:"literal",value:"'xs'"},{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"},{name:"literal",value:"'2xl'"}]},description:"Sets the size of the side panel",defaultValue:{value:"'md'",computed:!1},type:{name:"enum",value:[{value:"'xs'",computed:!1},{value:"'sm'",computed:!1},{value:"'md'",computed:!1},{value:"'lg'",computed:!1},{value:"'2xl'",computed:!1}]}},slideIn:{required:!1,tsType:{name:"boolean"},description:"Specifies which DOM element in the form should be focused.",type:{name:"bool"}},slug:{required:!1,tsType:{name:"ReactNode"},description:"**Experimental:** Provide a `Slug` component to be rendered inside the `SidePanel` component",type:{name:"node"}},subtitle:{required:!1,tsType:{name:"ReactNode"},description:"The subtitle of the CreateSidePanel is optional and serves to provide more information about the modal.",type:{name:"node"}},title:{required:!0,tsType:{name:"string"},description:"The title of the CreateSidePanel is usually the product or service name.",type:{name:"node"}}}};export{i as E};
