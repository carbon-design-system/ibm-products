import{e as i,S as u,r as x}from"./iframe-BCQS5_Al.js";import{g}from"./getBatchActions-CsZor58V.js";import{s as w,m as E}from"./_storybook-styles-CQOK6ab9.js";import{D as f}from"./DatagridActions-L87vr302.js";import{D as S}from"./DatagridPagination-C5mtlyMC.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-cAsz3Two.js";import{u as h}from"./useExpandedRow-DP5WmgaO.js";import{u as D}from"./useSelectRows-C6jtsMOR.js";import{u as C}from"./useStickyColumn-eYJLxBRe.js";import{u as R}from"./usePrefix-2NnRDy45.js";import{E as H}from"./bucket-6-BnWBUhiK.js";import{T as b}from"./bucket-18-DXk0sF99.js";import"./bucket-0-C_pPC6Ym.js";import"./bucket-2-CBnjIFj8.js";import"./index-C48XjYHO.js";import"./bucket-7-BgA2t6hd.js";import"./bucket-19-PZtVqhwH.js";import"./ComposedModal-CMyFULfX.js";import"./index-BEhuL1MR.js";import"./index-CdXMAzYd.js";import"./LayerContext-CVvjLuUj.js";import"./clamp--00YEiB8.js";import"./ButtonSet-Cb_bUCa1.js";import"./InlineLoading-CTAg-ra2.js";import"./mergeRefs-D4pwfk3t.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-2z7irFo7.js";import"./Text-BG1KUeND.js";import"./utils-no3s3AXY.js";import"./TableToolbarSearch-KGqbQhta.js";import"./wrapComponent-Ci-1JrHB.js";import"./Search-CBYfLWWC.js";import"./FormContext-Bn8H75JH.js";import"./bucket-15-CBzffSSV.js";import"./Dropdown-B0wBVDRR.js";import"./index-D9TBFdHI.js";import"./inheritsLoose-DHKJTbHM.js";import"./MenuItem-Yg3ilBaI.js";import"./useControllableState-CqyXdKnA.js";import"./useAttachedMenu-BABmdu1_.js";import"./index-Cae4270G.js";import"./index-D19lx2Ep.js";import"./bucket-13-DfemzzhA.js";import"./useOutsideClick-Bns9MH_j.js";import"./OverflowMenuItem-nvlmZvNb.js";import"./useFilterContext-CDBnOp1A.js";import"./bucket-14-BQhkeLU9.js";import"./Pagination-G1aDl7-u.js";import"./Select-CYwyrRZH.js";import"./SelectItem-CfYbAF1a.js";import"./MultiSelect-BPmu86gl.js";import"./Checkbox-Cfr6AEd4.js";import"./devtools-BnxPUADb.js";import"./TableRow-4U3wdrDq.js";import"./bucket-1-pWlg4EMK.js";import"./TableToolbar-D1lkrVO5.js";import"./index-OfZkcaMw.js";import"./ErrorEmptyState-DQe14o7X.js";import"./EmptyState-BZkXwjor.js";import"./EmptyStateV2.deprecated-CJ5xGOxC.js";import"./Link-C98KlpiF.js";import"./ErrorIllustration-DbCYpo63.js";import"./useId-DiFn3R-L.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-CbpoqgOn.js";import"./NoDataIllustration-sZS7qjTO.js";import"./NotFoundEmptyState-B5lH7ycl.js";import"./NotFoundIllustration--MNV-kTQ.js";import"./index.esm-nggaN46X.js";import"./usePreviousValue-C2-cz8-7.js";import"./useResizeObserver-B51VLK5G.js";import"./useIsomorphicEffect-Dk79jGD5.js";import"./getFocusableElements-BW7cf991.js";import"./index-BjeY-wZk.js";import"./props-helper-BMnMmxLT.js";import"./useClickOutside-BeSBwKF9.js";import"./AccordionItem-Da3t-MbS.js";import"./DatePicker-D_xdCxJr.js";import"./FormGroup-DpRa_VRl.js";import"./NumberInput-McI5bb0U.js";import"./useNormalizedInputProps-DeyYuBaD.js";import"./documentLang-E105Y72C.js";import"./bucket-16-_N2sYb8a.js";import"./RadioButton-4O64ZZyC.js";import"./RadioButtonGroup-D0_8VsFI.js";import"./usePrefersReducedMotion-DhCxHpRy.js";import"./usePresence-BqKQWQDL.js";import"./ActionSet-Bg9Z6v0o.js";import"./useWindowResize-BrCgUT6Y.js";import"./TagSet-CR2BkYIk.js";import"./Tag-FHKzdPo3.js";import"./DefinitionTooltip-B8pPQwHf.js";import"./DismissibleTag-COfCywV5.js";import"./usePortalTarget-Cyw6i5As.js";import"./OperationalTag-Cx1oFtII.js";import"./SkeletonText-DaEfaMe5.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-DobYYwGC.js";import"./TableSelectRow-DjwQwOAi.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,Ht={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const bt=["ExpandableRowStory"];export{e as ExpandableRowStory,bt as __namedExportsOrder,Ht as default};
