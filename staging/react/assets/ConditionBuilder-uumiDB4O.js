import{p as un,r as u,e as a,P as e,u as mn,T as pn,c as U,L as dn,N as cn,C as Me,B as ze,x as gn,y as yn,l as Ze}from"./iframe-DoONWhft.js";import{T as fn,a as Ve,S as vn,V as bn}from"./TimePickerSelect-D1IjVdWq.js";import{g as wn}from"./devtools-Bope-Kcp.js";import{S as Te,H as Ae}from"./index-BVSll7PQ.js";import{L as Cn}from"./index-CS_juDx4.js";import{u as Y}from"./uuidv4-BN2rGLQG.js";import{a as qn}from"./bucket-19-Cq7trOkA.js";import{A as Ke,q as Tn}from"./bucket-0-uqkOWGHA.js";import{S as Ue}from"./Search-DOrlbM9o.js";import{N as An}from"./NumberInput-CX0h-uN-.js";import{T as hn}from"./TextArea-EHfQMY6Y.js";import{T as On}from"./TextInput-DRKNX5M_.js";import{D as Be,a as ve}from"./DatePicker-BBBU7vkF.js";import{S as be}from"./SelectItem-DY346_9B.js";import{al as Ye}from"./bucket-17-DjOhx5x4.js";import{B as kn}from"./bucket-1-Di6MhJUu.js";const t=`${un.prefix}--condition-builder`,he="Non-Hierarchical",V="Hierarchical",ee=(n,r)=>{if(n){const i=n.target,o=n.target.closest('[role="row"]'),s=n.target.closest('[role="gridcell"]')?.querySelector("button").dataset.name;setTimeout(()=>{const l=o.querySelector(`button[data-name="${s}"]`);z(l,r),document.contains(i)&&(n.target.closest('[role="gridcell"]')?.querySelector("button")?.click(),n.target.closest('[role="gridcell"]')?.querySelector("button")?.focus())},0)}},ne=(n,r)=>{setTimeout(()=>{z(n,r)},0)},Ce=(n,r,i,o,s,l)=>{n==document.activeElement?r!==i.length-1?ne(i[r+1],l):ne(i[o?0:i.length-1],l):Array.from(i).indexOf(document.activeElement)==-1&&s&&ne(i[0],l)},qe=(n,r,i,o,s,l)=>{n==document.activeElement?ne(r!==0?i[r-1]:i[o?i.length-1:0],l):Array.from(i).indexOf(document.activeElement)==-1&&s&&ne(i[i.length-1],l)},In=(n,r)=>n[r],ie=n=>n&&n!=="INVALID",z=(n,r)=>{const i=n?.closest(`.${t}__content-container`)??n?.closest(`.${t}__actions-container`);i&&Array.from(i.querySelectorAll('[tabindex="0"]')).map(o=>o?.setAttribute("tabindex","-1")),n?.setAttribute("tabindex","0"),r.current?.querySelector(`.${t}__statement-button`)?.setAttribute("tabindex","1"),n?.focus()},xn=(n,r,i)=>i?.valueFormatter&&["custom"].includes(n)?i.valueFormatter(r):n==="option"&&r&&typeof r!="string"?(Array.isArray(r)?r:[r]).map(s=>s.label).join(", "):r,Oe=(n,r)=>n?.operator==="oneOf"||r?.operators?.find(i=>n?.operator===i.id&&i.isMultiSelect),Je=(n,r,i)=>{!n.currentTarget.value&&n.key==="Escape"&&(ee(n,r),i?.())},_n={operator:"or",groups:[{groupOperator:"and",statement:"ifAll",id:Y(),conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:Y()}]}]},H=u.createContext({rootState:{groups:[]}}),ke=n=>{const[r,i]=u.useState({groups:[]}),[o,s]=u.useState([]),l={rootState:r,setRootState:i,actionState:o,setActionState:s,inputConfig:n.inputConfig,popOverSearchThreshold:n.popOverSearchThreshold,getOptions:n.getOptions,variant:n.variant,translateWithId:n.translateWithId,conditionBuilderRef:n.conditionBuilderRef,statementConfigCustom:n.statementConfigCustom,onAddItem:n.onAddItem,readOnly:n.readOnly};return a.createElement(H.Provider,{value:l},n.children)};ke.propTypes={children:e.node.isRequired,conditionBuilderRef:e.object,getOptions:e.func,inputConfig:e.shape({properties:e.arrayOf(e.shape({id:e.string.isRequired,label:e.string.isRequired,icon:e.oneOfType([e.func,e.object]),description:e.string,type:e.oneOf(["text","textarea","number","date","option","time","custom"]).isRequired,config:e.shape({options:e.arrayOf(e.shape({id:e.string.isRequired,label:e.string.isRequired,icon:e.oneOfType([e.func,e.object])})),component:e.func,operators:e.arrayOf(e.shape({id:e.string.isRequired,label:e.string.isRequired})),long:e.bool})}))}).isRequired,popOverSearchThreshold:e.number.isRequired,translateWithId:e.func,variant:e.string.isRequired};ke.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderProvider",props:{rootState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},description:""},setRootState:{required:!1,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}}],raw:"SetStateAction<ConditionBuilderState>"}],raw:"Dispatch<SetStateAction<ConditionBuilderState>>"},description:""},actionState:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:""},setActionState:{required:!1,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"}],raw:"SetStateAction<Action[]>"}],raw:"Dispatch<SetStateAction<Action[]>>"},description:""},onAddItem:{required:!1,tsType:{name:"signature",type:"function",raw:"(config: AddItemConfig) => { preventAdd: boolean }",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  type: AddItemType;
  state: ConditionBuilderState;
  group?: ConditionGroup;
}`,signature:{properties:[{key:"type",value:{name:"union",raw:"'condition' | 'subgroup' | 'group'",elements:[{name:"literal",value:"'condition'"},{name:"literal",value:"'subgroup'"},{name:"literal",value:"'group'"}],required:!0}},{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"group",value:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}}]}},name:"config"}],return:{name:"signature",type:"object",raw:"{ preventAdd: boolean }",signature:{properties:[{key:"preventAdd",value:{name:"boolean",required:!0}}]}}}},description:""},children:{required:!0,tsType:{name:"ReactNode"},description:"Provide the contents of the ConditionBuilder.",type:{name:"node"}},inputConfig:{required:!0,tsType:{name:"signature",type:"object",raw:"{ properties: Property[] }",signature:{properties:[{key:"properties",value:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
  getIsDisabled?: (args: {
    conditionState: Condition;
    group?: ConditionGroup;
  }) => boolean;
  getIsHidden?: (args: {
    conditionState: Condition;
    group?: ConditionGroup;
  }) => boolean;
} & ConfigType`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
  getIsDisabled?: (args: {
    conditionState: Condition;
    group?: ConditionGroup;
  }) => boolean;
  getIsHidden?: (args: {
    conditionState: Condition;
    group?: ConditionGroup;
  }) => boolean;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}},{key:"description",value:{name:"string",required:!1}},{key:"type",value:{name:"any",required:!1}},{key:"config",value:{name:"any",required:!1}},{key:"getIsDisabled",value:{name:"signature",type:"function",raw:`(args: {
  conditionState: Condition;
  group?: ConditionGroup;
}) => boolean`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  conditionState: Condition;
  group?: ConditionGroup;
}`,signature:{properties:[{key:"conditionState",value:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]},required:!0}},{key:"group",value:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}}]}},name:"args"}],return:{name:"boolean"}},required:!1}},{key:"getIsHidden",value:{name:"signature",type:"function",raw:`(args: {
  conditionState: Condition;
  group?: ConditionGroup;
}) => boolean`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  conditionState: Condition;
  group?: ConditionGroup;
}`,signature:{properties:[{key:"conditionState",value:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]},required:!0}},{key:"group",value:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}}]}},name:"args"}],return:{name:"boolean"}},required:!1}}]}},{name:"union",raw:`| PropertyConfigOption['config']
| PropertyConfigTextArea['config']
| PropertyConfigText['config']
| PropertyConfigNumber['config']
| PropertyConfigDate['config']
| PropertyConfigTime['config']
| PropertyConfigCustom['config']`,elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"PropertyConfigTextArea['config']",raw:"PropertyConfigTextArea['config']"},{name:"PropertyConfigText['config']",raw:"PropertyConfigText['config']"},{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},{name:"intersection",raw:"PropertyConfigDate['config']"},{name:"signature",raw:"PropertyConfigTime['config']"},{name:"signature",raw:"PropertyConfigCustom['config']"}]}]}],raw:"Property[]",required:!0}}]}},description:"This is a mandatory prop that defines the input to the condition builder.",type:{name:"shape",value:{properties:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},description:{name:"string",required:!1},type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'textarea'",computed:!1},{value:"'number'",computed:!1},{value:"'date'",computed:!1},{value:"'option'",computed:!1},{value:"'time'",computed:!1},{value:"'custom'",computed:!1}],required:!0},config:{name:"shape",value:{options:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1}}},required:!1},component:{name:"func",required:!1},operators:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0}}},required:!1},long:{name:"bool",required:!1}},required:!1}}},required:!1}}}},popOverSearchThreshold:{required:!0,tsType:{name:"number"},description:"Provide an mandatory numeric value that will be used to enable search option in the popovers with list.",type:{name:"number"}},getOptions:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  state: ConditionBuilderState,
  condition: Condition
) => Promise<Option[]>`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"},{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}],raw:"Promise<Option[]>"}}},description:`This is an optional callback function that will be triggered when options array is not passed in the inputConfig against a property. 
This can be a asynchronous function that need  to  return a promise, so it will allow to fetch options from API call.
options has to be in valid format
[{
          label: 'label',
          id: 'id',
        },...]`,type:{name:"func"}},variant:{required:!0,tsType:{name:"string"},description:"Provide the condition builder variant: Non-Hierarchical/ Hierarchical",type:{name:"string"}},translateWithId:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: ConditionBuilderTextKeys) => string",signature:{arguments:[{type:{name:"union",raw:`| 'ifText'
| 'unlessText'
| 'excl_if'
| 'and'
| 'or'
| 'is'
| 'ifAll'
| 'ifAny'
| 'unlessAll'
| 'unlessAny'
| 'greater'
| 'greaterEqual'
| 'lower'
| 'lowerEqual'
| 'startsWith'
| 'endsWith'
| 'contains'
| 'oneOf'
| 'before'
| 'after'
| 'between'
| 'addConditionText'
| 'addConditionGroupText'
| 'addSubgroupText'
| 'conditionText'
| 'propertyText'
| 'operatorText'
| 'valueText'
| 'connectorText'
| 'conditionRowText'
| 'conditionRowGroupText'
| 'removeConditionText'
| 'addConditionRowText'
| 'startText'
| 'endText'
| 'clearSearchText'
| 'actionsText'
| 'then'
| 'removeActionText'
| 'addActionText'
| 'invalidText'
| 'invalidNumberWarnText'
| 'conditionBuilderText'
| 'actionSectionText'
| 'conditionHeadingText'
| 'addPropertyText'
| 'addOperatorText'
| 'addValueText'
| 'conditionBuilderHierarchicalText'`,elements:[{name:"literal",value:"'ifText'"},{name:"literal",value:"'unlessText'"},{name:"literal",value:"'excl_if'"},{name:"literal",value:"'and'"},{name:"literal",value:"'or'"},{name:"literal",value:"'is'"},{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"},{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"},{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"literal",value:"'before'"},{name:"literal",value:"'after'"},{name:"literal",value:"'between'"},{name:"literal",value:"'addConditionText'"},{name:"literal",value:"'addConditionGroupText'"},{name:"literal",value:"'addSubgroupText'"},{name:"literal",value:"'conditionText'"},{name:"literal",value:"'propertyText'"},{name:"literal",value:"'operatorText'"},{name:"literal",value:"'valueText'"},{name:"literal",value:"'connectorText'"},{name:"literal",value:"'conditionRowText'"},{name:"literal",value:"'conditionRowGroupText'"},{name:"literal",value:"'removeConditionText'"},{name:"literal",value:"'addConditionRowText'"},{name:"literal",value:"'startText'"},{name:"literal",value:"'endText'"},{name:"literal",value:"'clearSearchText'"},{name:"literal",value:"'actionsText'"},{name:"literal",value:"'then'"},{name:"literal",value:"'removeActionText'"},{name:"literal",value:"'addActionText'"},{name:"literal",value:"'invalidText'"},{name:"literal",value:"'invalidNumberWarnText'"},{name:"literal",value:"'conditionBuilderText'"},{name:"literal",value:"'actionSectionText'"},{name:"literal",value:"'conditionHeadingText'"},{name:"literal",value:"'addPropertyText'"},{name:"literal",value:"'addOperatorText'"},{name:"literal",value:"'addValueText'"},{name:"literal",value:"'conditionBuilderHierarchicalText'"}]},name:"id"}],return:{name:"string"}}},description:`Optional prop if you want to pass translation to the texts used . Otherwise this will the defined defaults.
This callback function will receive the message id and you need to return the corresponding text for that id.
The message key will be one of [   "ifText",   "addConditionText",   "addConditionGroupText",   "addSubgroupText",   "conditionText",   "propertyText",   "operatorText",   "valueText",   "connectorText",   "conditionRowText",   "removeConditionText",   "addConditionRowText",   "startText",   "endText",   "clearSearchText",   "actionsText",   "then",   "removeActionText",   "addActionText",   "invalidText",   "invalidNumberWarnText"
]`,type:{name:"func"}},statementConfigCustom:{required:!1,tsType:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,signature:{properties:[{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}]}],raw:"statementConfig[]"},description:""},conditionBuilderRef:{required:!1,tsType:{name:"ForwardedRef",elements:[{name:"HTMLDivElement"}],raw:"ForwardedRef<HTMLDivElement>"},description:"ref of condition builder",type:{name:"object"}},readOnly:{required:!1,tsType:{name:"boolean"},description:""}},composes:["PropsWithChildren"]};const J=({className:n,label:r,hideLabel:i,tooltipAlign:o,renderIcon:s,onClick:l,showToolTip:v,wrapperProps:m,onBlur:y,onFocus:f,onMouseEnter:c,onMouseLeave:C,isInvalid:A,wrapperClassName:b,tabIndex:I,description:q,...w})=>{const O=q||r,T=mn(),p=()=>{const _=w["data-name"]??"",{readOnly:N}=u.useContext(H),h=E=>{N||l?.(E)};return a.createElement("button",{tabIndex:I!==void 0?I:-1,className:U([n,`${t}__button`,{[`${t}__text-ellipsis`]:v&&!i&&!A},{[`${t}__invalid-input`]:A}]),type:"button",onClick:h,onBlur:y,onFocus:f,onMouseEnter:c,onMouseLeave:C,"data-name":_,"aria-disabled":N,...w},s&&a.createElement(s,null),!i&&a.createElement("span",null,r),A&&a.createElement(qn,null))};return i||v||q?a.createElement(pn,{label:O,align:o,className:`${b} ${t}__tooltip ${T}--icon-tooltip`,...m,leaveDelayMs:0},p()):a.createElement(a.Fragment,null,p())};J.propTypes={className:e.string,hideLabel:e.bool,isInvalid:e.bool,label:e.string,onBlur:e.func,onClick:e.func,onFocus:e.func,onMouseEnter:e.func,onMouseLeave:e.func,renderIcon:e.oneOfType([e.func,e.object]),showToolTip:e.bool,tabIndex:e.number,tooltipAlign:e.string,wrapperClassName:e.string,wrapperProps:e.object};J.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderButton",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},label:{required:!1,tsType:{name:"string"},description:"label of the button",type:{name:"string"}},hideLabel:{required:!1,tsType:{name:"boolean"},description:"decides if label and tooltip to be hidden",type:{name:"bool"}},tooltipAlign:{required:!1,tsType:{name:"PopoverAlignment"},description:"tooltip position",type:{name:"string"}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:"Optional prop to allow overriding the icon rendering.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"callback triggered on click of add button",type:{name:"func"}},onBlur:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:"mouse events callbacks",type:{name:"func"}},onFocus:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:"",type:{name:"func"}},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"",type:{name:"func"}},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"",type:{name:"func"}},showToolTip:{required:!1,tsType:{name:"boolean"},description:"decides if  tooltip to be shown",type:{name:"bool"}},wrapperProps:{required:!1,tsType:{name:"object"},description:"optional props for tree grid to add role and aria-label to wrapper span",type:{name:"object"}},isInvalid:{required:!1,tsType:{name:"boolean"},description:"boolean to know the updated value in not valid",type:{name:"bool"}},wrapperClassName:{required:!1,tsType:{name:"string"},description:"classname applies to the wrapper of popover",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index",type:{name:"number"}},description:{required:!1,tsType:{name:"string"},description:""}}};const oe={ifText:"if",unlessText:"unless",excl_if:"excl.if",and:"and",or:"or",is:"is",ifAll:"if all",ifAny:"if any",unlessAll:"unless all",unlessAny:"unless any",greater:"is greater than",greaterEqual:"is greater than or equal to",lower:"is lower than",lowerEqual:"is lower than or equal to",startsWith:"starts with",endsWith:"ends with",contains:"contains",oneOf:"is one of",before:"is before",after:"is after",between:"is between",addConditionText:"Add condition",addConditionGroupText:"Add condition group",addSubgroupText:"Add subgroup",conditionText:"Condition",propertyText:"Property",operatorText:"Operator",valueText:"Value",connectorText:"Connector",conditionRowText:"Condition row",conditionRowGroupText:"Condition row group",removeConditionText:"Delete condition",addConditionRowText:"Add condition row",startText:"Start",endText:"End",clearSearchText:"Clear search input",actionsText:"Actions",then:"then",removeActionText:"Remove Action",addActionText:"Add action",invalidText:"Incomplete",invalidNumberWarnText:"Invalid number, must be 0 or greater",conditionBuilderText:"Condition Builder",actionSectionText:"Action Section",conditionHeadingText:"Condition",addPropertyText:"Add property",addOperatorText:"Add operator",addValueText:"Add value",conditionBuilderHierarchicalText:"Condition Builder Hierarchical"},B=(n,r)=>{const{translateWithId:i}=u.useContext(H);return n.map(o=>(r?.[o]&&(o=r[o]),i?.(o)&&i?.(o)!==o?i(o):oe[o]?oe[o]:o))},En=(n,r,i)=>{document.activeElement.closest(`.${t}__popover`)?.querySelector('[role="dialog"]')||Ln(n,r,i)},Sn=(n,r,i,o)=>{Nn(n)||jn(n,i?.current,r,o)},Nn=n=>!["Escape"].includes(n.key)&&n.target.closest(`.${t}__item-date`),we=n=>Array.from(n.querySelectorAll('[role="option"]')).filter(r=>!r.hasAttribute("aria-disabled")&&!r.hasAttribute("aria-hidden")),jn=(n,r,i,o)=>{const s=n.key,l=In(n,"shiftKey"),v=r.querySelector("ul")?.dataset.multiSelect,m=r.querySelectorAll('[role="option"]')?.length;let y=[];if(s==="Escape"&&(o?.(),ee(n,i),n.preventDefault(),n.stopPropagation()),m)switch(s){case"ArrowUp":n.preventDefault(),y=we(r),y.forEach((f,c,C)=>{qe(f,c,C,null,null,i)}),Array.from(n.target.closest("ul")?.querySelectorAll("li")??[]).indexOf(n.target)===1&&(r.querySelector(`.${t}__popover-content-wrapper`).scrollTop=0);break;case"ArrowDown":n.preventDefault(),y=we(r),y.forEach((f,c,C)=>{Ce(f,c,C,null,null,i)});break;case"Tab":y=[...Array.from(r.querySelectorAll(`.${t}__selectAll-button,[role="searchbox"]`)),we(r)?.[0]],y.forEach((f,c,C)=>{l?qe(f,c,C,!0,!0,i):Ce(f,c,C,!0,!0,i)}),n.preventDefault();break;case" ":v==="true"&&(document.activeElement.type!=="button"&&document.activeElement?.click(),n.preventDefault());break;case"Enter":document.activeElement.type!=="button"&&(ee(n,i),document.activeElement?.click());break}else s==="Enter"&&!l&&document.activeElement.type!=="button"&&(o?.(),ee(n,i))},Ln=(n,r,i)=>{switch(n.key){case"ArrowRight":if(n.preventDefault(),i==V){let o=Array.from(n.target.closest('[role="row"]')?.querySelectorAll('[role="gridcell"] button'));if(o.length===1)n.target=n.target.closest('[role="row"]'),We(n,r,i);else if(n.target.getAttribute("role")=="row")z(o[0],r);else{let s=o.indexOf(n.target);s<o.length-1&&ne(o[s+1],r)}}else Fe(n,r);break;case"ArrowLeft":if(n.preventDefault(),i==V){if(n.target.getAttribute("role")!=="row"){let o=Array.from(n.target.closest('[role="row"]')?.querySelectorAll('[role="gridcell"] button')),s=o.indexOf(n.target);if(s>0)ne(o[s-1],r);else{let l=n.target.closest('[role="row"]');z(l,r)}}}else Fe(n,r);break;case"ArrowUp":case"ArrowDown":n.preventDefault(),i==V?We(n,r,i):Pn(n,r,i);break;case"Enter":document.activeElement?.querySelectorAll("button")?.length===1&&document.activeElement?.querySelectorAll("button")[0]?.click();break}},Ie=n=>Array.from(n.current?.querySelectorAll('[role="row"]')),Qe=(n,r)=>Ie(r).findIndex(o=>o.contains(n)),Pn=(n,r,i)=>{const o=Ie(r),s=Qe(n.target,r);Xe(n,s,o,i,r)},We=(n,r,i)=>{const o=Ie(r),s=Qe(n.target,r);let l=s;n.target.getAttribute("role")=="row"?(["ArrowDown","ArrowRight"].includes(n.key)?l+=1:n.key==="ArrowUp"&&(l-=1),l<0?l=0:l>=o.length&&(l=o.length-1),l!==s&&z(o[l],r)):Xe(n,s,o,i,r)},Xe=(n,r,i,o,s)=>{let l=r;n.key==="ArrowUp"&&(l=r==0?r:r-1),n.key==="ArrowDown"&&(l=r===i.length-1?i.length-1:r+1);const v=i[l],m=n.target.dataset.name;v?.querySelector(`[data-name="${m}"]`)?z(v?.querySelector(`[data-name="${m}"]`),s):o===V&&z(v,s)},Fe=(n,r)=>{r.current.querySelectorAll('[role="gridcell"] button').forEach((i,o,s)=>{n.key==="ArrowRight"?Ce(i,o,s,null,null,r):qe(i,o,s,null,null,r)})},$n=(n,r,i)=>{const o=u.useRef(null);u.useEffect(()=>{o.current=i},[i]),u.useEffect(()=>{const s="current"in n?n.current:n;if(!s)return;const l=v=>{o.current&&o.current(v)};return s.addEventListener(r,l),()=>{s.removeEventListener(r,l)}},[n,r])},D=({children:n,className:r,label:i,renderIcon:o,title:s,type:l,showToolTip:v,condition:m,popOverClassName:y,config:f,renderChildren:c,onChange:C,description:A,...b})=>{const I=u.useRef(null),[q,w]=u.useState(!1),{conditionBuilderRef:O,statementConfigCustom:T,readOnly:p}=u.useContext(H),_={ifAll:oe.ifText,ifAny:oe.ifText,unlessAll:oe.unlessText,unlessAny:oe.unlessText};T?.forEach(x=>{_[x.id]=x.label});const[N,h,E,$,R,W]=B(["invalidText","addConditionText","addPropertyText","addOperatorText","addValueText",i],_),j=x=>x&&f?.operators?.find(S=>S.id===x),P=()=>{const{property:x,operator:S}=m||{};return i==="INVALID"||b["data-name"]==="propertyField"&&x==="INVALID"||b["data-name"]==="operatorField"&&S==="INVALID"?{propertyLabel:N,isInvalid:!0}:b["data-name"]=="operatorField"&&l=="custom"?{isInvalid:!1,propertyLabel:j(i)?.id}:{isInvalid:!1,propertyLabel:b["data-name"]=="valueField"&&l?xn(l,i,f):W}},{propertyLabel:F,isInvalid:Q}=P();u.useEffect(()=>{if(m){const x=b["data-name"];(m.popoverToOpen&&x!==m.popoverToOpen||x=="valueField"&&l==="option"&&!Oe(m,f))&&Z(),m.popoverToOpen==x&&setTimeout(()=>{te()})}else Z()},[m,i]),u.useEffect(()=>{if(q&&I.current){const x=I?.current?.querySelector("input,textarea");x&&setTimeout(()=>x.focus(),0)}},[I,q]),$n(I,"focusout",x=>{const S=x,G=S.relatedTarget,M=I.current;if(!M)return;const re=!M.contains(G),me=M.contains(S.target),fe=S.target?.closest(".flatpickr-calendar");(re||!me)&&!fe&&Z()});const X=()=>{(b["data-name"]==="propertyField"&&!m?.property||b["data-name"]==="operatorField"&&!m?.operator||b["data-name"]==="valueField"&&!m?.value)&&C?.("INVALID")},Z=()=>{q&&X(),w(!1)},te=()=>{p||w(!0)},d=()=>{(n||c)&&w(!q)},g=x=>{Sn(x,O,I,Z),x.key==="Escape"&&X()},k=()=>f?.operators&&b["data-name"]==="operatorField"?j(F)?.label??$:F||(b["data-name"]==="propertyField"?E:b["data-name"]==="operatorField"?$:b["data-name"]==="valueField"?R:h);return a.createElement(dn,{open:q,isTabTip:!0,role:"gridcell",className:`${y} ${t}__popover`,ref:I,onRequestClose:Z},a.createElement(J,{label:k(),hideLabel:!i,onClick:d,className:r,"aria-haspopup":!0,"aria-expanded":q,renderIcon:o||(i==null?Ke:void 0),showToolTip:v,isInvalid:Q,description:A,...b}),q&&a.createElement(cn,{className:`${t}__popover-content-wrapper`,role:"dialog","aria-label":s,onKeyDown:g},a.createElement(Cn,null,a.createElement(Te,null,a.createElement(Ae,{className:`${t}__item__title`},s),a.createElement("div",{className:`${t}__popover-content`},c?c(I,Z):n)))))};D.propTypes={children:e.node,className:e.string,condition:e.object,config:e.object,label:e.oneOfType([e.string,e.array,e.object]),onChange:e.func,popOverClassName:e.string,renderChildren:e.func,renderIcon:e.oneOfType([e.func,e.object]),showToolTip:e.bool,title:e.string,type:e.string};D.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItem",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},label:{required:!1,tsType:{name:"union",raw:"string | Option | Option[]",elements:[{name:"string"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}]},description:"text to be displayed in the field",type:{name:"union",value:[{name:"string"},{name:"array"},{name:"object"}]}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:"Optional prop to allow overriding the icon rendering.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},title:{required:!1,tsType:{name:"string"},description:"title of the popover",type:{name:"string"}},showToolTip:{required:!1,tsType:{name:"boolean"},description:"show tool tip",type:{name:"bool"}},popOverClassName:{required:!1,tsType:{name:"string"},description:"class name for popover",type:{name:"string"}},type:{required:!1,tsType:{name:"string"},description:"input type",type:{name:"string"}},description:{required:!1,tsType:{name:"string"},description:""},condition:{required:!1,tsType:{name:"intersection",raw:"Action & Condition",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}}]},description:"current condition state object",type:{name:"object"}},config:{required:!1,tsType:{name:"union",raw:`| PropertyConfigOption['config']
| PropertyConfigTextArea['config']
| PropertyConfigText['config']
| PropertyConfigNumber['config']
| PropertyConfigDate['config']
| PropertyConfigTime['config']
| PropertyConfigCustom['config']`,elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"PropertyConfigTextArea['config']",raw:"PropertyConfigTextArea['config']"},{name:"PropertyConfigText['config']",raw:"PropertyConfigText['config']"},{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},{name:"intersection",raw:"PropertyConfigDate['config']"},{name:"signature",raw:"PropertyConfigTime['config']"},{name:"signature",raw:"PropertyConfigCustom['config']"}]},description:"this is the config object again the current property from inputConfig",type:{name:"object"}},renderChildren:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  ref: Ref<HTMLDivElement | null>,
  closePopover: () => void
) => ReactNode`,signature:{arguments:[{type:{name:"Ref",elements:[{name:"union",raw:"HTMLDivElement | null",elements:[{name:"HTMLDivElement"},{name:"null"}]}],raw:"Ref<HTMLDivElement | null>"},name:"ref"},{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"closePopover"}],return:{name:"ReactNode"}}},description:"callback prop that returns the jsx for children",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(val: string) => void",signature:{arguments:[{type:{name:"string"},name:"val"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},tabIndex:{required:!1,tsType:{name:"number"},description:""},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},onFocus:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},onBlur:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},children:{description:"provide the contents of the popover",type:{name:"node"},required:!1}},composes:["PropsWithChildren"]};const ae=({conditionState:n={},config:r={},onChange:i,closePopover:o,group:s})=>{const{popOverSearchThreshold:l}=u.useContext(H),v=u.useRef(null),[m,y]=B(["propertyText","clearSearchText"]),{conditionBuilderRef:f}=u.useContext(H),c=r?.options,[C,A]=u.useState(""),b=n.value,I=C?c?.filter(p=>p.label?.toLowerCase().includes(C.toLowerCase())):c;u.useEffect(()=>{if(v.current){const p=v.current?.querySelector("input, button,li");p&&p.focus()}},[c]);const q=(p,_)=>{p.currentTarget.hasAttribute("aria-disabled")||i(_.id,p)},w=p=>{const{value:_}=p.target;A(_)},O=()=>n.label?n.label:m,T=p=>a.createElement("div",{className:`${t}__statement_wrapper`},a.createElement("div",null,p.label," (",p.connector,")"),a.createElement("div",null,p.secondaryLabel));if(c)return a.createElement("div",{className:`${t}__item-option`,ref:v},l&&c.length>l&&a.createElement("div",{className:`${t}__item-option__search`},a.createElement(Ue,{size:"sm",labelText:y,closeButtonLabelText:y,onChange:w,onKeyDown:p=>{Je(p,f,o)}})),a.createElement("ul",{"aria-label":O(),role:"listbox"},I?.map(p=>{const _=b===p.id,N=p.icon,h=p?.getIsDisabled?.({conditionState:n,group:s}),E=p?.getIsHidden?.({conditionState:n,group:s});return a.createElement("li",{tabIndex:0,key:p.id,role:"option","aria-selected":_,className:`${t}__item-option__option`,onKeyUp:()=>!1,onClick:$=>q($,p),...h?{"aria-disabled":"true"}:{},...E?{"aria-hidden":"true"}:{}},a.createElement("div",{className:`${t}__item-option__option-content`},a.createElement("span",{className:`${t}__item-option__option-label`},N&&a.createElement(N,null),r?.isStatement?T(p):p.label),_&&a.createElement(Me,{className:`${t}__checkmark`})))})))};ae.propTypes={conditionState:e.object,config:e.object,onChange:e.func};ae.__docgenInfo={description:"",methods:[],displayName:"ItemOption",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  label?: string;
  value?: string;
}`,signature:{properties:[{key:"label",value:{name:"string",required:!1}},{key:"value",value:{name:"string",required:!1}}]}},description:"current condition object",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},config:{required:!1,tsType:{name:"intersection",raw:`{ options?: option[] | statementConfig[] | Property[] } & {
  isStatement?: boolean;
}`,elements:[{name:"signature",type:"object",raw:"{ options?: option[] | statementConfig[] | Property[] }",signature:{properties:[{key:"options",value:{name:"union",raw:"option[] | statementConfig[] | Property[]",elements:[{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"option[]"},{name:"Array",elements:[{name:"intersection",raw:`Item & {
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,signature:{properties:[{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}]}],raw:"statementConfig[]"},{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
  getIsDisabled?: (args: {
    conditionState: Condition;
    group?: ConditionGroup;
  }) => boolean;
  getIsHidden?: (args: {
    conditionState: Condition;
    group?: ConditionGroup;
  }) => boolean;
} & ConfigType`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
  getIsDisabled?: (args: {
    conditionState: Condition;
    group?: ConditionGroup;
  }) => boolean;
  getIsHidden?: (args: {
    conditionState: Condition;
    group?: ConditionGroup;
  }) => boolean;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}},{key:"description",value:{name:"string",required:!1}},{key:"type",value:{name:"any",required:!1}},{key:"config",value:{name:"any",required:!1}},{key:"getIsDisabled",value:{name:"signature",type:"function",raw:`(args: {
  conditionState: Condition;
  group?: ConditionGroup;
}) => boolean`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  conditionState: Condition;
  group?: ConditionGroup;
}`,signature:{properties:[{key:"conditionState",value:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]},required:!0}},{key:"group",value:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}}]}},name:"args"}],return:{name:"boolean"}},required:!1}},{key:"getIsHidden",value:{name:"signature",type:"function",raw:`(args: {
  conditionState: Condition;
  group?: ConditionGroup;
}) => boolean`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  conditionState: Condition;
  group?: ConditionGroup;
}`,signature:{properties:[{key:"conditionState",value:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]},required:!0}},{key:"group",value:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}}]}},name:"args"}],return:{name:"boolean"}},required:!1}}]}},{name:"union",raw:`| PropertyConfigOption['config']
| PropertyConfigTextArea['config']
| PropertyConfigText['config']
| PropertyConfigNumber['config']
| PropertyConfigDate['config']
| PropertyConfigTime['config']
| PropertyConfigCustom['config']`,elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"PropertyConfigTextArea['config']",raw:"PropertyConfigTextArea['config']"},{name:"PropertyConfigText['config']",raw:"PropertyConfigText['config']"},{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},{name:"intersection",raw:"PropertyConfigDate['config']"},{name:"signature",raw:"PropertyConfigTime['config']"},{name:"signature",raw:"PropertyConfigCustom['config']"}]}]}],raw:"Property[]"}],required:!1}}]}},{name:"signature",type:"object",raw:`{
  isStatement?: boolean;
}`,signature:{properties:[{key:"isStatement",value:{name:"boolean",required:!1}}]}}]},description:"current config object that this property is part of",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string, e: Event) => void",signature:{arguments:[{type:{name:"string"},name:"value"},{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}},closePopover:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:""}}};const ce=()=>{const[n,r,i,o,s,l,v,m,y,f,c,C,A,b,I,q,w,O]=B(["ifAll","ifAny","unlessAll","unlessAny","and","or","is","greater","greaterEqual","lower","lowerEqual","startsWith","endsWith","contains","oneOf","before","after","between"]),{statementConfigCustom:T}=u.useContext(H);return{statementConfig:T??[{id:"ifAll",connector:"and",label:n,secondaryLabel:"(a && b)"},{id:"ifAny",connector:"or",label:r,secondaryLabel:"(a || b)"},{id:"unlessAll",connector:"and",label:i,secondaryLabel:"! (a && b)"},{id:"unlessAny",connector:"or",label:o,secondaryLabel:"! (a || b)"}],connectorConfig:[{label:s,id:"and"},{label:l,id:"or"}],operatorConfig:[{label:v,id:"is",type:"all"},{label:m,id:"greater",type:"number"},{label:y,id:"greaterEqual",type:"number"},{label:f,id:"lower",type:"number"},{label:c,id:"lowerEqual",type:"number"},{label:C,id:"startsWith",type:"text,textarea"},{label:A,id:"endsWith",type:"text,textarea"},{label:b,id:"contains",type:"text,textarea"},{label:I,id:"oneOf",type:"option"},{label:q,id:"before",type:"date,time"},{label:w,id:"after",type:"date,time"},{label:O,id:"between",type:"date"}]}},ue=({operator:n,className:r,onChange:i,...o})=>{const{variant:s,conditionBuilderRef:l}=u.useContext(H),[v]=B(["connectorText"]),{connectorConfig:m}=ce(),y=u.useCallback((A,b)=>{b?A.classList.add("hoveredConnector"):A.classList.remove("hoveredConnector")},[]),f=A=>{const b=A?.currentTarget.closest(".eachGroup");y(b,!0)},c=A=>{const b=A?.currentTarget.closest(".eachGroup");y(b,!1)},C=(A,b)=>{i?.(A),ee(b,l)};return s==V?a.createElement("span",{className:`${r} ${t}__connector ${t}__connector--disabled`},a.createElement(J,{label:n})):a.createElement(D,{label:n,title:v,"data-name":"connectorField",onMouseEnter:f,onMouseLeave:c,onFocus:f,onBlur:c,...o,popOverClassName:`${r} ${t}__connector`,className:`${t}__connector-button`},a.createElement(ae,{config:{options:m},conditionState:{value:n,label:v},onChange:C}))};ue.propTypes={className:e.string,onChange:e.func,operator:e.string};ue.__docgenInfo={description:"",methods:[],displayName:"ConditionConnector",props:{operator:{required:!1,tsType:{name:"string"},description:"string that defines the connector operator (and/or)",type:{name:"string"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(op: string) => void",signature:{arguments:[{type:{name:"string"},name:"op"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}}}};const xe=({conditionState:n,config:r,onChange:i})=>{const[o]=B(["invalidNumberWarnText"]),s=(m,{value:y})=>{y!==""&&!isNaN(y)&&l(y)?i(r?.unit?`${y} ${r.unit}`:String(y)):i("INVALID")},l=m=>{if(!r)return!0;const{min:y,max:f}=r;return!(f!==void 0&&y===void 0&&m>f||y!==void 0&&f===void 0&&m<y||y!==void 0&&f!==void 0&&(m<y||m>f))},v=()=>n.value?.split(" ")?.[0]??"";return a.createElement("div",{className:`${t}__item-number`},a.createElement(An,{...r,label:n.property,hideLabel:!0,id:n.property?.replace(/\s/g,""),invalidText:o,allowEmpty:!0,onChange:s,defaultValue:v()}))};xe.propTypes={conditionState:e.object,config:e.object,onChange:e.func};xe.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemNumber",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"current condition object",type:{name:"object"}},config:{required:!1,tsType:{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},description:"current config object that this property is part of",type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const pe=({conditionState:n,onChange:r,config:i,type:o})=>{const s={...i,hideLabel:!0,value:ie(n.value)?n.value:"",id:n.property?.replace(/\s/g,""),onChange:l=>{r(l.target.value)},labelText:n.property};return a.createElement("div",{className:`${t}__item-text`},o=="textarea"?a.createElement(hn,{...s}):a.createElement(On,{...s}))};pe.propTypes={conditionState:e.object,config:e.object,onChange:e.func,type:e.string};pe.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemText",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"current condition object",type:{name:"object"}},config:{required:!1,tsType:{name:"union",raw:"PropertyConfigText | PropertyConfigTextArea",elements:[{name:"PropertyConfigText"},{name:"PropertyConfigTextArea"}]},description:"config of the current property",type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}},type:{required:!1,tsType:{name:"union",raw:"'textarea' | 'text'",elements:[{name:"literal",value:"'textarea'"},{name:"literal",value:"'text'"}]},description:"current input type",type:{name:"string"}}}};const _e=({conditionState:n,onChange:r,parentRef:i,config:o})=>{const s=u.useRef(null),[l,v]=B(["startText","endText"]),[m,y]=u.useState(),f=o?.dateFormat||"m/d/Y",{conditionBuilderRef:c}=u.useContext(H),C=n.operator=="between"||Oe(n,o)?"range":"single";u.useEffect(()=>{C==="range"&&y(A(n.value)??void 0)},[]);const A=q=>{const w=s?.current?.calendar;if(!w||!q)return null;const[O,T]=q.split(" - "),p=[];return O&&O!=="INVALID"&&p.push(w.parseDate(O,f)),T&&T!=="INVALID"&&p.push(w.parseDate(T,f)),p.length?p:null},b=(q,w,O)=>{let T=w;C==="range"&&q.length===2&&(T=`${O.formatDate(q[0],f)} - ${O.formatDate(q[1],f)}`),r(T||"INVALID")},I=q=>{if(q.key==="Enter"){const w=s?.current?.calendar;w&&b(w.selectedDates,q.target.value,w),ee(q,c)}};return a.createElement("div",{className:`${t}__item-date `},C=="single"&&a.createElement(Be,{...o,locale:{locale:o.locale??"en"},ref:s,datePickerType:"single",value:n.value,onClose:b,onKeyPress:I,appendTo:i?.current},a.createElement(ve,{id:"datePicker",placeholder:"dd/mm/yyyy",labelText:n.property})),C=="range"&&a.createElement(Be,{...o,locale:{locale:o.locale??"en"},ref:s,datePickerType:C,onClose:b,onKeyPress:I,value:m,appendTo:i?.current},a.createElement(ve,{id:"datePickerStart",placeholder:"dd/mm/yyyy",labelText:l}),a.createElement(ve,{id:"datePickerEnd",placeholder:"dd/mm/yyyy",labelText:v})))};_e.propTypes={conditionState:e.object,config:e.object,onChange:e.func,parentRef:e.object};_e.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemDate",props:{conditionState:{description:"current condition object",type:{name:"object"},required:!1},config:{description:"",type:{name:"object"},required:!1},onChange:{description:"callback to update state oin date change",type:{name:"func"},required:!1},parentRef:{description:"reference to the popover node",type:{name:"object"},required:!1}}};const Ee=({onChange:n,config:r,conditionState:i})=>{const o=w=>{const O={time:0,dayZone:1,timeZone:2};return i.value!=="INVALID"?i.value?.split(" ")[O[w]]??void 0:void 0},s=o("time"),l=o("dayZone"),v=o("timeZone"),[m,y]=u.useState(s),[f,c]=u.useState(l??"AM"),[C,A]=u.useState(v??r?.timeZones?.[0]);u.useEffect(()=>{const w=`${m??""} ${f??""} ${C??""}`;n(m?w:"INVALID")},[m,f,C]);const b=w=>{A(w.target.value)},I=w=>{c(w.target.value)},q=w=>{y(w.target.value)};return a.createElement("div",{className:`${t}__item-time`},a.createElement(fn,{defaultValue:s,id:"time-picker",labelText:"Select a time",onChange:q},a.createElement(Ve,{id:"time-picker-day-zone",defaultValue:l,onChange:I},a.createElement(be,{value:"AM",text:"AM"}),a.createElement(be,{value:"PM",text:"PM"})),a.createElement(Ve,{id:"time-picker-time-zone",defaultValue:v,onChange:b},r?.timeZones?.map((w,O)=>a.createElement(be,{key:O,value:w,text:w})))))};Ee.propTypes={conditionState:e.object,config:e.object,onChange:e.func};Ee.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemTime",props:{conditionState:{description:"current condition object",type:{name:"object"},required:!1},config:{description:"current config object that this property is part of",type:{name:"object"},required:!1},onChange:{description:"callback to update state oin date change",type:{name:"func"},required:!1}}};const le=({className:n,onClick:r,addConditionSubGroupHandler:i,showConditionSubGroupPreviewHandler:o,hideConditionSubGroupPreviewHandler:s,showConditionPreviewHandler:l,hideConditionPreviewHandler:v,enableSubGroup:m,buttonLabel:y,tabIndex:f,group:c})=>{const[C,A,b]=B(["addConditionText","addConditionRowText","addSubgroupText"]),{onAddItem:I,rootState:q}=u.useContext(H),w=()=>{const{preventAdd:h}=I?.({type:"condition",state:q,group:c})??{};h||(v?.(),r())},O=()=>m?{onMouseEnter:l,onMouseLeave:v,onFocus:l,onBlur:v}:{},T=()=>({onMouseEnter:o,onMouseLeave:s,onFocus:o,onBlur:s}),p=()=>{const{preventAdd:h}=I?.({type:"subgroup",state:q,group:c})??{};h||i?.()},_=()=>y||(m?void 0:A),N=m?{role:"gridcell"}:{};return a.createElement("div",{className:`${n} ${t}__add-button-wrapper`,role:m?"none":"gridcell","aria-label":_()},a.createElement(J,{renderIcon:Tn,onClick:w,...O(),wrapperProps:N,className:`${t}__add-button`,hideLabel:!0,"data-name":"addButton",label:y??C,tabIndex:f,wrapperClassName:`${t}__add-condition-wrapper`}),m&&a.createElement(J,{renderIcon:Ye,onClick:p,className:U(`${t}__add-condition-sub-group`),hideLabel:!0,label:b,wrapperProps:N,wrapperClassName:`${t}__add-condition-sub-group-wrapper ${t}__gap-left`,...T()}))};le.propTypes={addConditionSubGroupHandler:e.func,buttonLabel:e.string,className:e.string,enableSubGroup:e.bool,hideConditionPreviewHandler:e.func,hideConditionSubGroupPreviewHandler:e.func,onClick:e.func,showConditionPreviewHandler:e.func,showConditionSubGroupPreviewHandler:e.func,tabIndex:e.number};le.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderAdd",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"callback triggered on click of add button",type:{name:"func"}},addConditionSubGroupHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},hideConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},showConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},hideConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},enableSubGroup:{required:!1,tsType:{name:"boolean"},description:"boolean to enable sub groups for the tree variant",type:{name:"bool"}},buttonLabel:{required:!1,tsType:{name:"string"},description:"tooltip label for plus button",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index",type:{name:"number"}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:""}}};const ge=({conditionState:n={},config:r={},onChange:i,closePopover:o})=>{const s=Oe(n,r),{popOverSearchThreshold:l,getOptions:v,rootState:m}=u.useContext(H),[y,f]=B(["propertyText","clearSearchText"]),{conditionBuilderRef:c}=u.useContext(H),C=u.useRef(null),[A,b]=u.useState(r?.options),[I,q]=u.useState(""),w=A?.filter(h=>h.label.toLowerCase().includes(I.toLowerCase())),O=Array.isArray(n.value)?n.value:n.value!==void 0?[n.value]:[];u.useEffect(()=>{!A&&v&&(async()=>{const E=await v(m,n);E?.length>0&&Object.keys(E[0]).includes("label")&&Object.keys(E[0]).includes("id")&&b(E)})()},[]),u.useEffect(()=>{if(C.current){const h=C.current.querySelector("input, button,li");h&&h?.focus()}},[A]);const T=h=>{h.currentTarget.dataset.selectedAll=="false"?i(void 0):i(A)},p=h=>{const{value:E}=h.target;q(E)},_=(h,E,$)=>{const R=O.filter(W=>W!=="INVALID");if(s)if($){const W=R.filter(j=>j.id!==E.id);i(W.length>0?W:void 0)}else i([...R,E]);else i(E,h);h.target instanceof SVGElement&&h.stopPropagation()},N=()=>n.label?n.label:n.property?n.property:y;return A?a.createElement("div",{className:`${t}__item-option`,ref:C},l&&A.length>l&&a.createElement("div",{className:`${t}__item-option__search`},a.createElement(Ue,{size:"sm",labelText:f,closeButtonLabelText:f,onChange:p,onKeyDown:h=>{Je(h,c,o)}})),s&&a.createElement("div",{className:`${t}__multiselectSelectionStatusContainer`},a.createElement("label",null,O.length,"/",A.length," Selected"),a.createElement(ze,{kind:"ghost",size:"sm","data-selected-all":`${O.length==0}`,onClick:T,className:`${t}__selectAll-button`},O.length==0?"Select all":"Deselect all")),a.createElement("ul",{"aria-label":N(),role:"listbox","data-multi-select":s},w?.map(h=>{const E=O.map(R=>R.id).includes(h.id),$=h.icon;return a.createElement("li",{tabIndex:0,key:h.id,role:"option","aria-selected":E,className:`${t}__item-option__option`,onKeyUp:()=>!1,onClick:R=>_(R,h,E)},a.createElement("div",{className:`${t}__item-option__option-content`},s?a.createElement(a.Fragment,null,a.createElement("span",{className:`${t}__option-check-box`},E?a.createElement(gn,null):a.createElement(yn,null)),a.createElement("span",{className:`${t}__item-option__option-label`},h.label),$&&a.createElement("span",{className:`${t}__option-icon`},a.createElement($,null))):a.createElement(a.Fragment,null,a.createElement("span",{className:`${t}__item-option__option-label`},$&&a.createElement($,null),h.label),E&&a.createElement(Me,{className:`${t}__checkmark`}))))}))):a.createElement(vn,null)};ge.propTypes={conditionState:e.object,config:e.object,onChange:e.func};ge.__docgenInfo={description:"",methods:[],displayName:"ItemOptionForValueField",props:{conditionState:{required:!1,tsType:{name:"intersection",raw:"Condition & { label?: string }",elements:[{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{ label?: string }",signature:{properties:[{key:"label",value:{name:"string",required:!1}}]}}]},description:"current condition object",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},config:{required:!1,tsType:{name:"signature",raw:"PropertyConfigOption['config']"},description:"current config object that this property is part of",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: any, e?: Event) => void",signature:{arguments:[{type:{name:"any"},name:"value"},{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}},closePopover:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};const de=n=>{const{onRemove:r,onChange:i,condition:o={},conjunction:s,onConnectorOperatorChange:l,isStatement:v,group:m,onStatementChange:y,conditionIndex:f,addConditionHandler:c,addConditionSubGroupHandler:C,aria:A,hideConditionSubGroupPreviewHandler:b,showConditionSubGroupPreviewHandler:I,hideConditionPreviewHandler:q,showConditionPreviewHandler:w,isLastCondition:O}=n,{property:T,value:p,operator:_}=o,{inputConfig:N,variant:h,conditionBuilderRef:E,readOnly:$}=u.useContext(H),[R,W]=u.useState(!1),[j,P]=u.useState(!1),[F,Q,X,Z,te]=B(["conditionRowText","conditionText","propertyText","operatorText","removeConditionText"]),{statementConfig:d,operatorConfig:g}=ce(),k=L=>N?.properties?.find(K=>K.id==L)??{},{icon:x,type:S,config:G,label:M,description:re}=k(T),Le={text:pe,number:xe,date:_e,time:Ee,option:ge,custom:G?.component,textarea:pe}[S],fe=()=>{P(!0)},Pe=()=>{P(!1)},an=(L,K)=>{ee(K,E),y?.(L)},$e=L=>{i({...o,property:L,operator:void 0,value:"",popoverToOpen:ie(L)?"operatorField":""})},De=L=>{i({...o,operator:L,value:void 0,popoverToOpen:ie(L)?"valueField":""})},He=L=>{const K={...o};delete K.popoverToOpen,i({...K,value:L})},Ge=()=>{W(!0)},Re=()=>{W(!1)},tn=(L,K)=>h===V?!0:O(L,K),rn=()=>G?.operators?G?.operators:g.filter(L=>L.type.indexOf(S)!=-1||L.type=="all"),on=()=>h==V?{"aria-level":A.level,"aria-posinset":A.posinset,"aria-setsize":A.setsize}:{},ln=(L,K)=>a.createElement(Le,{conditionState:{property:T,operator:_,value:p},onChange:He,config:G,"data-name":"valueField",parentRef:L,type:S,closePopover:K}),sn=(L,K)=>a.createElement(ae,{conditionState:{value:T,label:X},onChange:$e,config:{options:N?.properties},closePopover:K,group:m});return a.createElement("div",{className:U(`${t}__condition-block`,{[`${t}__condition__deletion-preview`]:R},{[`${t}__gap-bottom`]:h==V},{[`${t}__gap ${t}__gap-bottom`]:h==he},{[`${t}__condition--interacting`]:j}),role:"row","aria-label":F,...on(),tabIndex:-1,onMouseEnter:fe,onMouseLeave:Pe,onBlur:Pe},s?a.createElement(ue,{className:`${t}__gap`,operator:s,onChange:L=>l?.(L)}):"",v&&a.createElement(D,{label:m.statement,title:Q,"data-name":"connectorField",popOverClassName:`${t}__gap ${t}__connector`,className:`${t}__statement-button`,tabIndex:0},a.createElement(ae,{conditionState:{value:m.statement,label:Q},onChange:an,config:{options:d,isStatement:!0}})),a.createElement("div",{className:`${t}__condition-inner-block`},a.createElement(D,{label:M??o?.property,title:X,renderIcon:x??void 0,className:`${t}__property-field`,"data-name":"propertyField",condition:o,type:S,description:re,onChange:$e,renderChildren:sn}),ie(T)&&a.createElement(D,{label:_,title:Z,"data-name":"operatorField",condition:o,type:S,config:G,onChange:De},a.createElement(ae,{config:{options:rn()},conditionState:{value:_,label:Z},onChange:De})),ie(T)&&ie(_)&&a.createElement(D,{label:p,type:S,title:M,showToolTip:!0,"data-name":"valueField",condition:o,config:G,onChange:He,renderChildren:ln})),!$&&a.createElement("span",{role:"gridcell","aria-label":te},a.createElement(J,{hideLabel:!0,label:te,onClick:r,onMouseEnter:Ge,onMouseLeave:Re,onFocus:Ge,onBlur:Re,renderIcon:Ze,className:`${t}__close-condition`,"data-name":"closeCondition",wrapperClassName:`${t}__close-condition-wrapper`})),!$&&tn(f,m.conditions)?a.createElement(le,{onClick:()=>{c?.(f)},addConditionSubGroupHandler:()=>{C?.(f)},showConditionSubGroupPreviewHandler:I,hideConditionSubGroupPreviewHandler:b,enableSubGroup:h==V,showConditionPreviewHandler:w,hideConditionPreviewHandler:q,className:`${t}__gap ${t}__gap-left`,group:m}):null)};de.propTypes={addConditionHandler:e.func,addConditionSubGroupHandler:e.func,aria:e.object,condition:e.object,conditionIndex:e.number,conjunction:e.string,group:e.object,hideConditionPreviewHandler:e.func,hideConditionSubGroupPreviewHandler:e.func,isLastCondition:e.func,isStatement:e.bool,onChange:e.func,onConnectorOperatorChange:e.func,onRemove:e.func,onStatementChange:e.func,showConditionPreviewHandler:e.func,showConditionSubGroupPreviewHandler:e.func,state:e.object};de.__docgenInfo={description:"",methods:[],displayName:"ConditionBlock",props:{condition:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"",type:{name:"object"}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"callback for Remove a condition",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(condition: Condition) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},onConnectorOperatorChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(op: string) => void",signature:{arguments:[{type:{name:"string"},name:"op"}],return:{name:"void"}}},description:"callback to handle the connector(and/or) change",type:{name:"func"}},onStatementChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(v: string) => void",signature:{arguments:[{type:{name:"string"},name:"v"}],return:{name:"void"}}},description:"callback to handle the statement(if/ excl.if) change",type:{name:"func"}},addConditionHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(conditionIndex: number) => void",signature:{arguments:[{type:{name:"number"},name:"conditionIndex"}],return:{name:"void"}}},description:"callback to add a new condition",type:{name:"func"}},addConditionSubGroupHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(conditionIndex: number) => void",signature:{arguments:[{type:{name:"number"},name:"conditionIndex"}],return:{name:"void"}}},description:"callback to add a new condition subgroup",type:{name:"func"}},hideConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for showing sub group preview",type:{name:"func"}},hideConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for showing add condition preview",type:{name:"func"}},conjunction:{required:!1,tsType:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},description:"string that decides to show the condition connector",type:{name:"string"}},isStatement:{required:!1,tsType:{name:"boolean"},description:"boolean that decides to show the statement(if/ excl.if)",type:{name:"bool"}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"object that hold the current group object where is condition is part of",type:{name:"object"}},conditionIndex:{required:!1,tsType:{name:"number"},description:"",type:{name:"number"}},aria:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  level: number;
  posinset: number;
  setsize?: number;
}`,signature:{properties:[{key:"level",value:{name:"number",required:!0}},{key:"posinset",value:{name:"number",required:!0}},{key:"setsize",value:{name:"number",required:!1}}]}},description:"object hold aria attributes",type:{name:"object"}},isLastCondition:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  index: number,
  conditions: (ConditionGroup | Condition)[]
) => void`,signature:{arguments:[{type:{name:"number"},name:"index"},{type:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]"},name:"conditions"}],return:{name:"void"}}},description:"",type:{name:"func"}},state:{description:"object that hold the current condition",type:{name:"object"},required:!1}}};const se=({previewType:n,group:r,colorIndex:i,className:o})=>{const[s,l]=u.useState(!1),[v,m,y,f]=B(["valueText","operatorText","propertyText","ifText"]);u.useEffect(()=>{l(!0)},[]);const c=()=>a.createElement("div",{className:`${t}__preview-condition`},a.createElement(D,{label:v,renderIcon:kn}),a.createElement(D,{label:m}),a.createElement(D,{label:y}));return a.createElement(a.Fragment,null,n=="newGroup"&&a.createElement(a.Fragment,null,a.createElement("div",{className:U([`${t}__group__row ${t}__group-preview ${o}`,{[`${t}__group-preview-animate`]:s}])},a.createElement(D,{className:`${t}__statement-button`,label:r.groupOperator})),a.createElement("div",{"data-color-index":i,"aria-hidden":!0,className:U([`${t}__group  ${t}__condition-wrapper ${t}__group-preview ${t}__group-wrapper ${o}`,{[`${t}__group-preview-animate`]:s}])},a.createElement("div",{className:`${t}__gap`},a.createElement(D,{className:`${t}__statement-button`,label:f})),c())),n=="subGroup"&&a.createElement("div",{className:U([`${t}__group__row ${t}__group-preview ${t}__gap-bottom`,{[`${t}__group-preview-animate`]:s}])},a.createElement("div",{className:`${t}__condition-block  ${t}__gap`},a.createElement(D,{label:r.groupOperator,className:`${t}__statement-button`,popOverClassName:`${t}__gap`}),a.createElement("div",{className:`${t}__group ${t}__condition-wrapper`},a.createElement(ue,{className:`${t}__gap ${t}__groupConnector`,operator:f}),c()))),n=="condition"&&a.createElement("div",{className:U([`${t}__group__row ${t}__group-preview ${t}__gap-bottom`,{[`${t}__group-preview-animate`]:s}])},a.createElement("div",{className:`${t}__condition-block  ${t}__gap`},a.createElement(D,{label:r.groupOperator,className:`${t}__statement-button`,popOverClassName:`${t}__gap`}),c())))};se.propTypes={className:e.string,colorIndex:e.number,group:e.object,previewType:e.oneOf(["condition","subGroup","newGroup"])};se.__docgenInfo={description:"",methods:[],displayName:"ConditionPreview",props:{previewType:{required:!1,tsType:{name:"union",raw:"'newGroup' | 'subGroup' | 'condition'",elements:[{name:"literal",value:"'newGroup'"},{name:"literal",value:"'subGroup'"},{name:"literal",value:"'condition'"}]},description:"type of review to be displayed",type:{name:"enum",value:[{value:"'condition'",computed:!1},{value:"'subGroup'",computed:!1},{value:"'newGroup'",computed:!1}]}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"current conditional group",type:{name:"object"}},colorIndex:{required:!1,tsType:{name:"number"},description:"index of the color for next group",type:{name:"number"}},className:{required:!1,tsType:{name:"string"},description:"",type:{name:"string"}}}};const ye=({group:n,aria:r,onRemove:i,onChange:o,className:s})=>{const[l,v,m]=B(["conditionBuilderGroupText","conditionText","conditionBuilderText"]),{statementConfig:y}=ce(),{variant:f,conditionBuilderRef:c}=u.useContext(H),[C,A]=u.useState(-1),[b,I]=u.useState(-1);u.useState(!1);const q=u.useRef(null),w=u.useRef(null);u.useEffect(()=>{typeof c!="function"&&c?.current&&(w.current=O(c.current))},[c]),u.useEffect(()=>{const d=w.current;let g=!1;if(d instanceof Window||d===document.body||d===document.documentElement)g=window.innerHeight+window.scrollY>=document.body.scrollHeight;else if(w.current){const k=w.current;g=k.scrollTop+k.clientHeight>=k.scrollHeight}(C||b)&&g&&w.current?.scrollBy(0,-1)},[C,b]);const O=d=>{for(;d&&d!==document.body;){const k=getComputedStyle(d).overflowY;if((k==="auto"||k==="scroll"||k==="overlay")&&d.scrollHeight>d.clientHeight)return d;d=d.parentElement}return window},T=(d,g,k)=>{if(n&&n.conditions&&n.conditions.length>1)if(f==V?E(g):h(g,k),p(n.conditions,d)){const x=n.conditions.filter(S=>d!==S.id);if((x?.[0]).conditions){const S=x[0];x.splice(0,1,...S?.conditions)}o?.({...n,conditions:x})}else{const x=n?.conditions?.reduce((S,G)=>{const M=G;return M.conditions?S.concat(M.conditions):S},[]);o?.({...n,conditions:x})}else i?.(g)},p=(d,g)=>d.find(k=>!k.conditions&&k.id!==g),_=(d,g)=>{const k=[...n?.conditions?n.conditions.slice(0,g):[],d,...n?.conditions?n.conditions.slice(g+1):[]];o?.({...n,conditions:k,id:n?.id??Y()})},N=d=>{const g={property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:Y()};o?.({...n,conditions:[...n.conditions?n.conditions.slice(0,d+1):[],g,...n.conditions?n.conditions.slice(d+1):[]]})},h=(d,g)=>{const k=d.currentTarget.closest(`.${t}__group`)?.querySelectorAll('[data-name="closeCondition"]');g==k.length-1?z(k[g-1],c):z(k[g+1],c)},E=d=>{const g=d.currentTarget?.closest('[role="row"]')?.getAttribute("aria-level"),k=d.currentTarget?.closest('[role="row"]')?.getAttribute("aria-posinset"),x=q.current?.querySelector(`[aria-level="${g}"][aria-posinset="${Number(k)+1}"]`),S=q.current?.querySelector(`[aria-level="${g}"][aria-posinset="${Number(k)-1}"]`);if(x?.classList.contains(`${t}__condition-block`))z(x?.querySelector('[data-name="closeCondition"]'),c);else if(S?.classList.contains(`${t}__condition-block`))z(S?.querySelector('[data-name="closeCondition"]'),c);else{const G=q.current?.querySelectorAll(`[aria-level="${Number(g)-1}"][role="row"]`),M=q.current?.querySelector(`[aria-level="${Number(g)+1}"][role="row"]`);if(M){const re={ariaLevel:Number(M.ariaLevel)-1,ariaPosInSet:M.ariaPosInSet};setTimeout(()=>{const me=q.current?.querySelector(`[role="row"][aria-level="${re.ariaLevel}"][aria-posinset="${re.ariaPosInSet}"]`);z(me?.querySelector('[data-name="closeCondition"]'),c)},0)}else G?.length&&G.length>1&&z(G[G.length-2]?.querySelector('[data-name="closeCondition"]'),c)}},$=d=>{o({...n,conditions:[...n.conditions?n.conditions.slice(0,d+1):[],{statement:"ifAll",groupOperator:"and",conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:Y()}],id:Y()},...n.conditions?n.conditions.slice(d+1):[]]})},R=(d,g)=>d+1>=g.length||g.length-1!=d&&g[d+1].conditions,W=d=>{I(d)},j=()=>{I(-1)},P=d=>{A(d)},F=()=>{A(-1)},Q=d=>{const g=y.find(k=>k.id==d)?.connector;o({...n,groupOperator:g,statement:d})},X=d=>{o({...n,groupOperator:d})},Z=()=>a.createElement("div",{className:`${s}  eachGroup`},a.createElement("div",{className:`${t}__condition-wrapper`,role:"grid","aria-label":m},n?.conditions?.map((d,g)=>a.createElement("div",{key:d.id,className:`${t}__group-wrapper`},a.createElement(de,{conjunction:g>0?n.groupOperator:void 0,aria:{level:r.level+1,posinset:g+1,setsize:n?.conditions?.length},isStatement:g==0,condition:d,group:n,conditionIndex:g,onChange:k=>{_(k,g)},addConditionHandler:N,onRemove:k=>{T(d.id,k,g)},onConnectorOperatorChange:X,onStatementChange:Q,isLastCondition:R}))))),te=()=>a.createElement("div",{className:`${s} ${t}__condition-wrapper`,role:r.level===1?"rowgroup":void 0,"aria-label":r.level==1?l:void 0,ref:q},a.createElement("div",{tabIndex:0,role:"row","aria-level":r.level,"aria-posinset":r.posinset,"aria-setsize":r.setsize},a.createElement(D,{label:n.statement,title:v,"data-name":"connectorField",popOverClassName:`${t}__gap ${t}__connector`,className:`${t}__statement-button`},a.createElement(ae,{conditionState:{value:n.statement,label:v},onChange:(d,g)=>{ee(g,c),Q(d)},config:{options:y,isStatement:!0}}))),n?.conditions?.map((d,g)=>a.createElement(u.Fragment,{key:d.id},d.conditions?a.createElement("div",{className:U(`${t}__condition-block subgroup  ${t}__gap`,{[`${t}__gap-bottom`]:n&&n.conditions&&n.conditions.length<g+1},{})},a.createElement(ue,{className:`${t}__gap ${t}__gap-bottom ${t}__groupConnector`,operator:n.groupOperator,"aria-hidden":!0}),a.createElement(ye,{aria:{level:r.level+1,posinset:g+1,setsize:n.conditions?.length??0},className:`${t}__group`,group:d,onChange:k=>{_(k,g)},onRemove:k=>{T(d.id,k,g)}})):a.createElement("div",null,a.createElement(de,{conjunction:g>0?n.groupOperator:void 0,aria:{level:r.level+1,posinset:g+1,setsize:n.conditions?.length??0},isStatement:!1,condition:d,group:n,conditionIndex:g,addConditionHandler:N,addConditionSubGroupHandler:$,onChange:k=>{_(k,g)},onRemove:k=>{T(d.id,k,g)},onConnectorOperatorChange:X,onStatementChange:Q,showConditionSubGroupPreviewHandler:()=>{W(g)},hideConditionSubGroupPreviewHandler:j,showConditionPreviewHandler:()=>{P(g)},hideConditionPreviewHandler:F,isLastCondition:R})),g===b&&a.createElement(se,{previewType:"subGroup",group:n}),g===C&&a.createElement(se,{previewType:"condition",group:n}))));return a.createElement(a.Fragment,null,f==V&&te(),f==he&&Z())};ye.propTypes={aria:e.object,className:e.string,group:e.object,onChange:e.func,onRemove:e.func};ye.__docgenInfo={description:"",methods:[],displayName:"ConditionGroupBuilder",props:{group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"",type:{name:"object"}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"call back to remove the particular group from the state tree",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(group: ConditionGroup) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},name:"group"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},aria:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  level: number;
  posinset: number;
  setsize: number;
}`,signature:{properties:[{key:"level",value:{name:"number",required:!0}},{key:"posinset",value:{name:"number",required:!0}},{key:"setsize",value:{name:"number",required:!0}}]}},description:"object contains the aria attributes",type:{name:"object"}}}};const en=()=>{const{rootState:n,setRootState:r}=u.useContext(H),[i]=B(["conditionText"]),{connectorConfig:o}=ce(),s=l=>{r({...n,operator:l})};return a.createElement("div",{className:`${t}__group-separator ${t}__group-separator-row`,role:"row",tabIndex:-1,"aria-level":1},a.createElement(D,{label:n.operator,title:i,"data-name":"connectorField",popOverClassName:`${t}__gap ${t}__groupConnector`,className:`${t}__statement-button`},a.createElement(ae,{conditionState:{value:n.operator,label:i},onChange:s,config:{options:o}})))};en.__docgenInfo={description:"",methods:[],displayName:"GroupConnector"};const Se=({actions:n,className:r})=>{const{actionState:i=[],setActionState:o,readOnly:s}=u.useContext(H),[l,v]=u.useState(-1),[m,y,f,c,C,A]=B(["actionsText","then","and","removeActionText","addActionText","actionSectionText"]),b=()=>{if(s)return;const T={id:Y(),label:void 0,popoverToOpen:"valueField"};o?.([...i,T])},I=(T,p)=>{const N={...n.find(h=>h.id===T),id:i[p].id};o?.([...i.slice(0,p),N,...i.slice(p+1)])},q=T=>{o?.(i.filter(p=>p.id!==T))},w=T=>{v(T)},O=()=>{v(-1)};return a.createElement("div",{className:r},a.createElement(Te,{className:`${t}__heading`,level:4},a.createElement(Ae,null,m)),a.createElement("div",{className:`${t}__condition-wrapper`,role:"grid","aria-label":A},i?.map((T,p)=>a.createElement("div",{key:T.id,role:"row",className:U(`${t}__condition-block ${t}__gap ${t}__gap-bottom`,{[`${t}__condition__deletion-preview`]:l==p})},a.createElement(D,{className:`${t}__statement-button`,tabIndex:0,popOverClassName:`${t}__gap ${t}__connector`,label:p===0?y:f}),a.createElement(D,{label:T.label,title:m,condition:T,"data-name":"valueField",type:"option",popOverClassName:`${t}__action-block`},a.createElement(ge,{conditionState:{value:T.label},onChange:_=>I(_.id,p),config:{options:n}})),!s&&a.createElement("span",{role:"gridcell","aria-label":c},a.createElement(J,{hideLabel:!0,label:c,onClick:()=>q(T.id),onMouseEnter:()=>w(p),onMouseLeave:O,onFocus:()=>w(p),onBlur:O,renderIcon:Ze,className:`${t}__close-condition`,"data-name":"closeCondition"})),!s&&i.length===p+1&&a.createElement(le,{onClick:b,className:`${t}__gap ${t}__gap-left`,buttonLabel:C,tabIndex:0}))),i.length===0&&a.createElement(le,{onClick:b,className:`${t}__gap ${t}__gap-left`,buttonLabel:C,tabIndex:0})))};Se.propTypes={actions:e.arrayOf(e.shape({id:e.oneOfType([e.string,e.number]).isRequired,label:e.string.isRequired})),className:e.string};Se.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderActions",props:{actions:{required:!1,tsType:{name:"union",raw:"Action[] | Option[]",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}]},description:"optional array of object that give the list of actions.",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}}}};const Ne=({startConditionLabel:n,getConditionState:r,getActionsState:i,initialState:o,actions:s})=>{const{rootState:l,setRootState:v,variant:m,actionState:y,onAddItem:f,readOnly:c}=u.useContext(H),C=u.useRef(o?.state?JSON.parse(JSON.stringify(o?.state)):null),[A,b]=u.useState(!1),[I,q]=u.useState(!1),[w,O,T]=B(["addConditionGroupText","conditionHeadingText","conditionBuilderHierarchicalText"]),p=()=>{q(!0)},_=()=>{q(!1)};u.useEffect(()=>{l?.groups?.length?b(!0):b(!1),r&&r(l??{})},[l]),u.useEffect(()=>{i?.(y??[])},[y]),u.useEffect(()=>{o?.enabledDefault&&v?.(o.state)},[o]);const N=()=>{b(!0),C?.current?.groups?.length?(v?.(C.current),C.current=null):v?.(_n)},h=u.useCallback(j=>{const P=l?.groups?.filter(F=>j!==F?.id);v?.({...l,groups:l?P:[]}),P?.length===0&&(C.current=null)},[v,l]),E=(j,P)=>{if(l&&l.groups){const F=[...l.groups?l.groups.slice(0,P):[],j,...l.groups?l.groups.slice(P+1):[]];v?.({...l,groups:F})}},$=()=>{const{preventAdd:j}=f?.({type:"group",state:l})??{};if(!j){const P={statement:"ifAll",groupOperator:"and",id:Y(),conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:Y()}]};v?.({...l,groups:l&&l.groups?[...l.groups,P]:[P]})}},R=()=>(l?.groups?.length??0)%5;if(!A)return a.createElement(ze,{className:`${t}__addConditionText-button`,renderIcon:j=>a.createElement(Ke,{...j}),iconDescription:n,kind:"ghost",size:"sm",onClick:N},n);const W=m===V?{role:"treegrid","aria-label":T}:null;return a.createElement(a.Fragment,null,a.createElement(Te,{className:`${t}__heading`,level:4},a.createElement(Ae,null,O)),a.createElement("div",{className:`${t}__content-container`,...W},l&&l?.groups?.map((j,P)=>a.createElement("div",{key:j.id,className:`${t}__group-wrapper`},a.createElement(ye,{className:`${t}__group`,aria:{level:1,posinset:P*2+1,setsize:(l.groups&&l.groups.length*2)??0},group:j,onRemove:()=>{h(j.id)},onChange:F=>{E(F,P)}}),l.groups&&P<l.groups.length-1&&a.createElement(en,null))),!c&&m==V&&a.createElement("div",{role:"row",tabIndex:-1,"aria-level":1,className:`${t}__add-group`},a.createElement(J,{renderIcon:Ye,onClick:$,onMouseEnter:p,onMouseLeave:_,onFocus:p,onBlur:_,className:`${t}__add-condition-group `,hideLabel:!0,label:w,wrapperProps:{role:"gridcell","aria-label":w}})),m===V?a.createElement(se,{previewType:"newGroup",colorIndex:R(),className:I?`${t}__visible`:`${t}__hidden`,group:{groupOperator:l?.operator,id:Y()}}):null),s&&a.createElement(Se,{actions:s,className:`${t}__actions-container`}))};Ne.propTypes={actions:e.arrayOf(e.shape({id:e.oneOfType([e.string,e.number]).isRequired,label:e.string.isRequired})),getActionsState:e.func,getConditionState:e.func.isRequired,initialState:e.shape({state:e.shape({groups:e.arrayOf(e.shape({groupOperator:e.string,statement:e.string,conditions:e.arrayOf(e.oneOfType([e.shape({property:e.string,operator:e.string,value:e.oneOfType([e.string,e.arrayOf(e.shape({id:e.string,label:e.string})),e.shape({id:e.string,label:e.string})])}),e.object]))})),operator:e.string}),enabledDefault:e.bool}),startConditionLabel:e.string.isRequired};Ne.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderContent",props:{startConditionLabel:{required:!0,tsType:{name:"string"},description:"",type:{name:"string"}},getConditionState:{required:!0,tsType:{name:"signature",type:"function",raw:"(state: ConditionBuilderState) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"}],return:{name:"void"}}},description:"This is a callback function that returns the updated state",type:{name:"func"}},getActionsState:{required:!1,tsType:{name:"signature",type:"function",raw:"(state: Action[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},name:"state"}],return:{name:"void"}}},description:"callback functions that will provide the updated action state back.",type:{name:"func"}},initialState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  state: ConditionBuilderState;
  enabledDefault?: boolean;
}`,signature:{properties:[{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"enabledDefault",value:{name:"boolean",required:!1}}]}},description:"Optional prop if the condition building need to start from a predefined initial state",type:{name:"shape",value:{state:{name:"shape",value:{groups:{name:"arrayOf",value:{name:"shape",value:{groupOperator:{name:"string",required:!1},statement:{name:"string",required:!1},conditions:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{property:{name:"string",required:!1},operator:{name:"string",required:!1},value:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}},{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}],required:!1}}},{name:"object"}]},required:!1}}},required:!1},operator:{name:"string",required:!1}},required:!1},enabledDefault:{name:"bool",required:!1}}}},actions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:"optional array of object that give the list of actions.",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}}}};const nn="ConditionBuilder",je=a.forwardRef(({className:n,inputConfig:r,startConditionLabel:i="Add Condition",popOverSearchThreshold:o,getOptions:s,initialState:l,getConditionState:v,getActionsState:m,variant:y=he,actions:f,translateWithId:c,statementConfigCustom:C,onAddItem:A,readOnly:b,...I},q)=>{const w=u.useRef(null),O=q||w,T=p=>{En(p,O,y)};return a.createElement(ke,{inputConfig:r,popOverSearchThreshold:o,getOptions:s,variant:y,translateWithId:c,conditionBuilderRef:O,statementConfigCustom:C,onAddItem:A,readOnly:!!b},a.createElement("div",{...I,className:U(t,n,{[`${t}__readonly`]:b},{}),ref:O,...wn(nn)},a.createElement(bn,{className:`${t}__${y}`,onKeyDown:T},a.createElement(Ne,{startConditionLabel:i,getConditionState:v,getActionsState:m,initialState:l,actions:f}))))});je.displayName=nn;je.propTypes={actions:e.arrayOf(e.shape({id:e.oneOfType([e.string,e.number]).isRequired,label:e.string.isRequired})),className:e.string,getActionsState:e.func,getConditionState:e.func.isRequired,getOptions:e.func,initialState:e.shape({state:e.shape({groups:e.arrayOf(e.shape({groupOperator:e.string,statement:e.string,conditions:e.arrayOf(e.oneOfType([e.shape({property:e.string,operator:e.string,value:e.oneOfType([e.string,e.arrayOf(e.shape({id:e.string,label:e.string})),e.shape({id:e.string,label:e.string})])}),e.object]))})),operator:e.string}),enabledDefault:e.bool}),inputConfig:e.shape({properties:e.arrayOf(e.shape({id:e.string.isRequired,label:e.string.isRequired,icon:e.oneOfType([e.func,e.object]),type:e.oneOf(["text","textarea","number","date","option","time","custom"]).isRequired,description:e.string,getIsDisabled:e.func,getIsHidden:e.func,config:e.shape({options:e.arrayOf(e.shape({id:e.string.isRequired,label:e.string.isRequired,icon:e.oneOfType([e.func,e.object])})),component:e.func,operators:e.arrayOf(e.shape({id:e.string.isRequired,label:e.string.isRequired})),valueFormatter:e.func})}))}).isRequired,onAddItem:e.func,popOverSearchThreshold:e.number.isRequired,readOnly:e.bool,startConditionLabel:e.string,statementConfigCustom:e.arrayOf(e.shape({id:e.string.isRequired,connector:e.oneOf(["and","or"]).isRequired,label:e.string.isRequired,secondaryLabel:e.string})),translateWithId:e.func,variant:e.oneOf(["Non-Hierarchical","Hierarchical"])};je.__docgenInfo={description:"TODO: A description of the component.",methods:[],displayName:"ConditionBuilder",props:{inputConfig:{required:!0,tsType:{name:"signature",type:"object",raw:"{ properties: Property[] }",signature:{properties:[{key:"properties",value:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
  getIsDisabled?: (args: {
    conditionState: Condition;
    group?: ConditionGroup;
  }) => boolean;
  getIsHidden?: (args: {
    conditionState: Condition;
    group?: ConditionGroup;
  }) => boolean;
} & ConfigType`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
  getIsDisabled?: (args: {
    conditionState: Condition;
    group?: ConditionGroup;
  }) => boolean;
  getIsHidden?: (args: {
    conditionState: Condition;
    group?: ConditionGroup;
  }) => boolean;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}},{key:"description",value:{name:"string",required:!1}},{key:"type",value:{name:"any",required:!1}},{key:"config",value:{name:"any",required:!1}},{key:"getIsDisabled",value:{name:"signature",type:"function",raw:`(args: {
  conditionState: Condition;
  group?: ConditionGroup;
}) => boolean`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  conditionState: Condition;
  group?: ConditionGroup;
}`,signature:{properties:[{key:"conditionState",value:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]},required:!0}},{key:"group",value:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}}]}},name:"args"}],return:{name:"boolean"}},required:!1}},{key:"getIsHidden",value:{name:"signature",type:"function",raw:`(args: {
  conditionState: Condition;
  group?: ConditionGroup;
}) => boolean`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  conditionState: Condition;
  group?: ConditionGroup;
}`,signature:{properties:[{key:"conditionState",value:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]},required:!0}},{key:"group",value:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}}]}},name:"args"}],return:{name:"boolean"}},required:!1}}]}},{name:"union",raw:`| PropertyConfigOption['config']
| PropertyConfigTextArea['config']
| PropertyConfigText['config']
| PropertyConfigNumber['config']
| PropertyConfigDate['config']
| PropertyConfigTime['config']
| PropertyConfigCustom['config']`,elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"PropertyConfigTextArea['config']",raw:"PropertyConfigTextArea['config']"},{name:"PropertyConfigText['config']",raw:"PropertyConfigText['config']"},{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},{name:"intersection",raw:"PropertyConfigDate['config']"},{name:"signature",raw:"PropertyConfigTime['config']"},{name:"signature",raw:"PropertyConfigCustom['config']"}]}]}],raw:"Property[]",required:!0}}]}},description:"This is a mandatory prop that defines the input to the condition builder.",type:{name:"shape",value:{properties:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'textarea'",computed:!1},{value:"'number'",computed:!1},{value:"'date'",computed:!1},{value:"'option'",computed:!1},{value:"'time'",computed:!1},{value:"'custom'",computed:!1}],required:!0},description:{name:"string",required:!1},getIsDisabled:{name:"func",required:!1},getIsHidden:{name:"func",required:!1},config:{name:"shape",value:{options:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1}}},required:!1},component:{name:"func",required:!1},operators:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0}}},required:!1},valueFormatter:{name:"func",required:!1}},required:!1}}},required:!1}}}},initialState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  state: ConditionBuilderState;
  enabledDefault?: boolean;
}`,signature:{properties:[{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"enabledDefault",value:{name:"boolean",required:!1}}]}},description:`Optional prop if you want to pass a saved condition state, pass as "initialState.state".
"initialState.enabledDefault" will populate the builder with the provided initial state before clicking Add Condition button.

 This state should respect the structure of condition state that is available in getConditionState callback`,type:{name:"shape",value:{state:{name:"shape",value:{groups:{name:"arrayOf",value:{name:"shape",value:{groupOperator:{name:"string",required:!1},statement:{name:"string",required:!1},conditions:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{property:{name:"string",required:!1},operator:{name:"string",required:!1},value:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}},{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}],required:!1}}},{name:"object"}]},required:!1}}},required:!1},operator:{name:"string",required:!1}},required:!1},enabledDefault:{name:"bool",required:!1}}}},getActionsState:{required:!1,tsType:{name:"signature",type:"function",raw:"(state: Action[] | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"Action[] | undefined",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},{name:"undefined"}]},name:"state"}],return:{name:"void"}}},description:"This is a callback that gives back the updated action state",type:{name:"func"}},getConditionState:{required:!0,tsType:{name:"signature",type:"function",raw:"(state: ConditionBuilderState | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"ConditionBuilderState | undefined",elements:[{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},{name:"undefined"}]},name:"state"}],return:{name:"void"}}},description:"This is a callback that gives back updated condition state",type:{name:"func"}},getOptions:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  state: ConditionBuilderState,
  condition: Condition
) => Promise<Option[]>`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"},{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"intersection",raw:"Item & { icon?: CarbonIconType }",elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:"{ icon?: CarbonIconType }",signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}],raw:"Promise<Option[]>"}}},description:`Callback triggered to dynamically fetch options for a property of type 'option'.
This is invoked when no static options array is provided in the input config.
The function should return a Promise that resolves with an array of options in the required format.`,type:{name:"func"}},actions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ id?: string | number; label?: string }",signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:"optional array of actions",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},popOverSearchThreshold:{required:!0,tsType:{name:"number"},description:"Provide an mandatory numeric value that will be used to enable search option in the popovers with list.",type:{name:"number"}},startConditionLabel:{required:!1,tsType:{name:"string"},description:"Provide a label to the button that starts condition builder",defaultValue:{value:"'Add Condition'",computed:!1},type:{name:"string"}},variant:{required:!1,tsType:{name:"union",raw:"'Non-Hierarchical' | 'Hierarchical'",elements:[{name:"literal",value:"'Non-Hierarchical'"},{name:"literal",value:"'Hierarchical'"}]},description:"Provide the condition builder variant: Non-Hierarchical/ Hierarchical",defaultValue:{value:"'Non-Hierarchical'",computed:!1},type:{name:"enum",value:[{value:"'Non-Hierarchical'",computed:!1},{value:"'Hierarchical'",computed:!1}]}},translateWithId:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: ConditionBuilderTextKeys) => string",signature:{arguments:[{type:{name:"union",raw:`| 'ifText'
| 'unlessText'
| 'excl_if'
| 'and'
| 'or'
| 'is'
| 'ifAll'
| 'ifAny'
| 'unlessAll'
| 'unlessAny'
| 'greater'
| 'greaterEqual'
| 'lower'
| 'lowerEqual'
| 'startsWith'
| 'endsWith'
| 'contains'
| 'oneOf'
| 'before'
| 'after'
| 'between'
| 'addConditionText'
| 'addConditionGroupText'
| 'addSubgroupText'
| 'conditionText'
| 'propertyText'
| 'operatorText'
| 'valueText'
| 'connectorText'
| 'conditionRowText'
| 'conditionRowGroupText'
| 'removeConditionText'
| 'addConditionRowText'
| 'startText'
| 'endText'
| 'clearSearchText'
| 'actionsText'
| 'then'
| 'removeActionText'
| 'addActionText'
| 'invalidText'
| 'invalidNumberWarnText'
| 'conditionBuilderText'
| 'actionSectionText'
| 'conditionHeadingText'
| 'addPropertyText'
| 'addOperatorText'
| 'addValueText'
| 'conditionBuilderHierarchicalText'`,elements:[{name:"literal",value:"'ifText'"},{name:"literal",value:"'unlessText'"},{name:"literal",value:"'excl_if'"},{name:"literal",value:"'and'"},{name:"literal",value:"'or'"},{name:"literal",value:"'is'"},{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"},{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"},{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"literal",value:"'before'"},{name:"literal",value:"'after'"},{name:"literal",value:"'between'"},{name:"literal",value:"'addConditionText'"},{name:"literal",value:"'addConditionGroupText'"},{name:"literal",value:"'addSubgroupText'"},{name:"literal",value:"'conditionText'"},{name:"literal",value:"'propertyText'"},{name:"literal",value:"'operatorText'"},{name:"literal",value:"'valueText'"},{name:"literal",value:"'connectorText'"},{name:"literal",value:"'conditionRowText'"},{name:"literal",value:"'conditionRowGroupText'"},{name:"literal",value:"'removeConditionText'"},{name:"literal",value:"'addConditionRowText'"},{name:"literal",value:"'startText'"},{name:"literal",value:"'endText'"},{name:"literal",value:"'clearSearchText'"},{name:"literal",value:"'actionsText'"},{name:"literal",value:"'then'"},{name:"literal",value:"'removeActionText'"},{name:"literal",value:"'addActionText'"},{name:"literal",value:"'invalidText'"},{name:"literal",value:"'invalidNumberWarnText'"},{name:"literal",value:"'conditionBuilderText'"},{name:"literal",value:"'actionSectionText'"},{name:"literal",value:"'conditionHeadingText'"},{name:"literal",value:"'addPropertyText'"},{name:"literal",value:"'addOperatorText'"},{name:"literal",value:"'addValueText'"},{name:"literal",value:"'conditionBuilderHierarchicalText'"}]},name:"id"}],return:{name:"string"}}},description:`Optional prop, if you need to pass translations to the texts on the component instead of the defined defaults.
This callback function will receive the message id and you need to return the corresponding text for that id.`,type:{name:"func"}},statementConfigCustom:{required:!1,tsType:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,signature:{properties:[{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}]}],raw:"statementConfig[]"},description:"Optional prop for passing custom configuration for statement option from default op",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},connector:{name:"enum",value:[{value:"'and'",computed:!1},{value:"'or'",computed:!1}],required:!0},label:{name:"string",required:!0},secondaryLabel:{name:"string",required:!1}}}}},onAddItem:{required:!1,tsType:{name:"signature",type:"function",raw:"(config: AddItemConfig) => { preventAdd: boolean }",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  type: AddItemType;
  state: ConditionBuilderState;
  group?: ConditionGroup;
}`,signature:{properties:[{key:"type",value:{name:"union",raw:"'condition' | 'subgroup' | 'group'",elements:[{name:"literal",value:"'condition'"},{name:"literal",value:"'subgroup'"},{name:"literal",value:"'group'"}],required:!0}},{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"group",value:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]},required:!1}}]}},name:"config"}],return:{name:"signature",type:"object",raw:"{ preventAdd: boolean }",signature:{properties:[{key:"preventAdd",value:{name:"boolean",required:!0}}]}}}},description:`this is an optional callback triggered before adding any condition , subgroup or group.
User can optionally perform any validation and can stop add action if they return back {preventAdd:true}`,type:{name:"func"}},readOnly:{required:!1,tsType:{name:"boolean"},description:"Whether the conditionBuilder should be readOnly",type:{name:"bool"}}}};export{je as C,V as H,he as N};
