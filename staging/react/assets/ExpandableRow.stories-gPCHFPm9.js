import{e as i,S as u,r as x}from"./iframe-DoONWhft.js";import{g}from"./getBatchActions-BdnsZpkK.js";import{s as w,m as E}from"./_storybook-styles-Dih_2jL2.js";import{D as f}from"./DatagridActions-CQy1YHNx.js";import{D as S}from"./DatagridPagination-C_qsbIZY.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-BV-CQv71.js";import{u as h}from"./useExpandedRow-D0dwQR36.js";import{u as D}from"./useSelectRows-4wZ3_tvG.js";import{u as C}from"./useStickyColumn-CeBSBT3x.js";import{u as R}from"./usePrefix-Bk93DGYH.js";import{E as H}from"./bucket-6-Db2Sb-Fe.js";import{T as b}from"./bucket-18-DPfg6wFB.js";import"./bucket-0-uqkOWGHA.js";import"./bucket-2-qL1MgP2_.js";import"./index-Bnfmk4E7.js";import"./bucket-7-DJnsrDi0.js";import"./bucket-19-Cq7trOkA.js";import"./ComposedModal-CO73icGN.js";import"./index-BEhuL1MR.js";import"./index-CS_juDx4.js";import"./LayerContext-CR2yigRC.js";import"./clamp--00YEiB8.js";import"./ButtonSet-BIsEMg7s.js";import"./InlineLoading-9sujfcCD.js";import"./mergeRefs-D4pwfk3t.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-BQ5Ztz-2.js";import"./Text-wCKpd-Jz.js";import"./utils-eIueeELw.js";import"./TableToolbarSearch-0rg_LMTI.js";import"./wrapComponent-a49TUMra.js";import"./Search-DOrlbM9o.js";import"./FormContext-DXPdmhvk.js";import"./bucket-15-Bej-6NQ9.js";import"./Dropdown-BfkEDVpY.js";import"./index-DqtL2min.js";import"./inheritsLoose-DHKJTbHM.js";import"./MenuItem-BnFRV3Km.js";import"./useControllableState-BxL_A9i9.js";import"./useAttachedMenu-PIsCbOSk.js";import"./index-BfTEMZj-.js";import"./index-BCCfYvph.js";import"./bucket-13-whxGOphA.js";import"./useOutsideClick-fKMX5IHP.js";import"./OverflowMenuItem-yfxGa1i6.js";import"./useFilterContext-Bs2xyuna.js";import"./bucket-14-C5vuP1B-.js";import"./Pagination-PGayZ3yC.js";import"./Select-REq4Sblq.js";import"./SelectItem-DY346_9B.js";import"./MultiSelect-B6eEuFZb.js";import"./Checkbox-CoYK2NeI.js";import"./devtools-Bope-Kcp.js";import"./TableRow-BBB8tZBX.js";import"./bucket-1-Di6MhJUu.js";import"./TableToolbar-DZj6CrC6.js";import"./index-BVSll7PQ.js";import"./ErrorEmptyState-Dgovm1Sj.js";import"./EmptyState-Drj-En_s.js";import"./EmptyStateV2.deprecated-QuzrKzAu.js";import"./Link-Ifh5DqEn.js";import"./ErrorIllustration-C6eUVUMR.js";import"./useId-B8S0jltQ.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-BxehcJSl.js";import"./NoDataIllustration-DEQxsMKw.js";import"./NotFoundEmptyState-DtH1tytc.js";import"./NotFoundIllustration-DVFcX8Qg.js";import"./index.esm-iwX-tHIA.js";import"./usePreviousValue-BM8J3eak.js";import"./useResizeObserver-D1Iv75rh.js";import"./useIsomorphicEffect-DNoZHH_8.js";import"./getFocusableElements-BW7cf991.js";import"./index-xRnkOPfZ.js";import"./props-helper-CgHaYMy-.js";import"./useClickOutside-DBu9ER0T.js";import"./AccordionItem-DUs3BITh.js";import"./DatePicker-BBBU7vkF.js";import"./FormGroup-Bo25NDoU.js";import"./NumberInput-CX0h-uN-.js";import"./useNormalizedInputProps-C4mFjT_j.js";import"./documentLang-E105Y72C.js";import"./bucket-16-CnygcoxJ.js";import"./RadioButton-CsSHDCt1.js";import"./RadioButtonGroup-IbRUc0_r.js";import"./usePrefersReducedMotion-mcO4ENLb.js";import"./usePresence-DnxW7Fuq.js";import"./ActionSet-CjjXiJvi.js";import"./useWindowResize-DPDV0FhJ.js";import"./TagSet-B98xm1KY.js";import"./Tag-DBgKAnsH.js";import"./DefinitionTooltip-B1asZ6m5.js";import"./DismissibleTag-v3qU7Vsb.js";import"./usePortalTarget-CNTXyWag.js";import"./OperationalTag-CUpvV-kh.js";import"./SkeletonText-Cg669JDG.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-CYjC2TPP.js";import"./TableSelectRow-D1Woscq_.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,Ht={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const bt=["ExpandableRowStory"];export{e as ExpandableRowStory,bt as __namedExportsOrder,Ht as default};
