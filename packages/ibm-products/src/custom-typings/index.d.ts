/**
 * Copyright IBM Corp. 2024
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import {
  AnimatePresenceProps,
  MotionProps as OriginalMotionProps,
  AnimatePresenceProps as PresenceProps,
} from 'framer-motion';
import React from 'react';

declare module '@carbon/react' {
  export {
    Accordion,
    AccordionItem,
    ActionableNotification,
    AspectRatio,
    Breadcrumb,
    Button,
    ButtonKind,
    ButtonProps,
    ButtonSet,
    Checkbox,
    CheckboxGroup,
    ClassPrefix,
    ClickableTile,
    CodeSnippet,
    CodeSnippetSkeleton,
    Column,
    ColumnDefaultProps,
    ComboBox,
    ComboButton,
    ComposedModal,
    ContainedList,
    ContainedListItem,
    Content,
    ContentSwitcher,
    ContextMenu,
    Copy,
    CopyButton,
    CopyButtonProps,
    DangerButton,
    DismissibleTag,
    DataTable,
    DataTableCustomRowData,
    DataTableCustomRowProps,
    DataTableCustomSelectionProps,
    DataTableHeader,
    DataTableRow,
    DataTableSkeleton,
    DatePicker,
    DatePickerInput,
    DefinitionTooltip,
    DenormalizedRow,
    Dropdown,
    DropdownProps,
    ErrorBoundary,
    ExpandableSearch,
    FileUploader,
    FileUploaderDropContainer,
    FileUploaderDropContainerProps,
    FileUploaderItem,
    FileUploaderItemProps,
    FileUploaderProps,
    FilterableMultiSelect,
    FilterableMultiSelectProps,
    FlexGrid,
    FluidForm,
    Form,
    FormGroup,
    FormItem,
    FormLabel,
    FormProps,
    ForwardRefReturn,
    Grid,
    GridDefaultProps,
    Header,
    HeaderGlobalAction,
    HeaderGlobalBar,
    HeaderName,
    HeaderNavigation,
    Heading,
    IconButton,
    IconTab,
    IconSkeleton,
    IdPrefix,
    InlineLoading,
    InlineNotification,
    Layer,
    Link,
    LinkProps,
    ListBoxBaseItemType,
    ListItem,
    Loading,
    LoadingProps,
    Menu,
    MenuButton,
    MenuItem,
    MenuItemDivider,
    Modal,
    ModalBody,
    ModalFooter,
    ModalHeader,
    ModalWrapper,
    MultiSelect,
    MultiSelectProps,
    Notification,
    NumberInput,
    NumberInputOnChangeDataVariant,
    OnChangeData,
    OperationalTag,
    OrderedList,
    OverflowMenu,
    OverflowMenuItem,
    Pagination,
    PaginationNav,
    PasswordInput,
    Popover,
    PopoverAlignment,
    PopoverContent,
    PrimaryButton,
    ProgressBar,
    ProgressIndicator,
    ProgressIndicatorSkeleton,
    ProgressStep,
    RadioButton,
    RadioButtonGroup,
    RadioTile,
    Row,
    Search,
    SearchSkeleton,
    SecondaryButton,
    Section,
    Select,
    SelectItem,
    SelectItemGroup,
    SideNav,
    SideNavItems,
    SideNavLink,
    SideNavMenuItem,
    SkeletonIcon,
    SkeletonIconProps,
    SkeletonPlaceholder,
    SkeletonPlaceholderProps,
    SkeletonText,
    SkeletonTextProps,
    SkipToContent,
    Slider,
    Stack,
    StructuredList,
    StructuredListSkeleton,
    Switch,
    Tab,
    TabContent,
    TabList,
    TabPanel,
    TabPanels,
    Table,
    TableBatchAction,
    TableBatchActions,
    TableBody,
    TableCell,
    TableContainer,
    TableExpandHeader,
    TableExpandRow,
    TableExpandedRow,
    TableHead,
    TableHeader,
    TableRow,
    TableSelectAll,
    TableSelectAllProps,
    TableSelectRow,
    TableToolbar,
    TableToolbarSearch,
    Tabs,
    TabsSkeleton,
    Tag,
    TextArea,
    TextAreaProps,
    TextInput,
    TextInputProps,
    Theme,
    Tile,
    TileGroup,
    TimePicker,
    TimePickerSelect,
    ToastNotification,
    Toggle,
    Toggletip,
    ToggletipActions,
    ToggletipButton,
    ToggletipContent,
    ToggletipLabel,
    Tooltip,
    TreeNode,
    TreeView,
    UIShell,
    UnorderedList,
    TagTypeName,
    unstable_FeatureFlags,
    usePrefix,
  } from '@carbon/react';
}
declare module '@carbon/colors';
declare module '@carbon/motion';
declare module '@carbon/feature-flags';

declare module 'framer-motion' {
  interface MotionProps extends OriginalMotionProps {
    className?: string;
    children?: React.ReactNode;
  }
  interface AnimatePresenceProps extends PresenceProps {
    mode?: string;
  }
}
