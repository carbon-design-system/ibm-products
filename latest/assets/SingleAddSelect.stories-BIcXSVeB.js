import{r as f,e as i}from"./index-DxDX2vOa.js";import{P as e}from"./index-B_euquWE.js";import{p as T,B as v}from"./settings-0ThqPtR3.js";import{S as q}from"./StoryDocsPage-BNvYqhWE.js";import{g as x}from"./devtools-BlxCaI1L.js";import{p as w}from"./props-helper-DmbAnr2a.js";import{A as P}from"./AddSelect-D3dSx1zf.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-CaMJXrh2.js";import"./events-OVwOsPzJ.js";import"./index-YDq2Pj7F.js";import"./index-6asNl-3l.js";import"./iframe-Bz0rEyEi.js";import"../sb-preview/runtime.js";import"./index-Df9so8jS.js";import"./index-CRUq0TYl.js";import"./index-DrFu-skq.js";import"./story-helper-BvAgcfdm.js";import"./tslib.es6-B4_xh3D5.js";import"./Tag-CQrPIH3H.js";import"./DefinitionTooltip-CFcrL78F.js";import"./Text-9AedOkae.js";import"./AccordionItem-C6Zmne57.js";import"./NoDataEmptyState-ByzS-rjr.js";import"./Link-Czg4mzd7.js";import"./EmptyState-BxaTycZJ.js";import"./EmptyStateV2-BhYrhbvn.js";import"./NoDataIllustration-T0RkOEw_.js";import"./BreadcrumbItem-CSP5MxsV.js";import"./bucket-12-BnoODLmv.js";import"./Dropdown-DnYB61C4.js";import"./index-D4Cc84yY.js";import"./FormContext-Dj7olUH1.js";import"./mergeRefs-CTUecegF.js";import"./bucket-18-Dvh787Y8.js";import"./bucket-2-BDpMY3Ys.js";import"./index-B1YmXwfC.js";import"./LayerContext-BLFdRioi.js";import"./UserProfileImage-DgH-JTOc.js";import"./TooltipTrigger-vQXCwy5h.js";import"./bucket-17-BLAXVSDb.js";import"./bucket-7-D9w4nlSg.js";import"./bucket-13-CG_GrGhO.js";import"./Checkbox-Ctty0aFL.js";import"./index-BK04RsGV.js";import"./useAttachedMenu-CNodkuzW.js";import"./wrapFocus-ChZuRP4g.js";import"./Search-Cwr2QiaX.js";import"./bucket-14-C1Z-80MS.js";import"./OverflowMenuItem-B2qt5S-L.js";import"./bucket-0-DEgqxqZV.js";import"./uuidv4-BQrI85uz.js";import"./bucket-6-Cw3hdw1e.js";import"./ButtonSet-epghEKVn.js";import"./DismissibleTag-g9t9_3jR.js";import"./NotFoundEmptyState-DtSkTXLH.js";import"./NotFoundIllustration-CIDvuf0u.js";import"./Tearsheet-a4zFRE85.js";import"./TearsheetShell-DL71VJCc.js";import"./useResizeObserver-DUmvKY5Q.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./ComposedModal-BsLCo1xi.js";import"./InlineLoading-CIMtbZ0Q.js";import"./requiredIfGivenPropIsTruthy-CU7JwK8h.js";import"./usePortalTarget-BfZpr1XQ.js";import"./feature-flags-BboNqy5q.js";import"./index-DYXyeV2p.js";import"./useFocus-57u9QJvZ.js";import"./wait-CTNFjQS8.js";import"./usePreviousValue-CLgSY5iR.js";import"./ActionSet-0Lk-L5n-.js";import"./TearsheetNarrow-Bb2dZdIc.js";const l="SingleAddSelect";let t=f.forwardRef((r,s)=>{const a=w(r,["columnInputPlaceholder","globalFilters","globalFiltersIconDescription","globalFiltersPlaceholderText","globalFiltersPrimaryButtonText","globalFiltersSecondaryButtonText","influencerTitle","multi","noSelectionDescription","noSelectionTitle","removeIconDescription"]);return i.createElement(P,{...a,ref:s,...x(l)})});t=T.checkComponentEnabled(t,l);t.propTypes={className:e.string,description:e.string,globalSearchLabel:e.string,globalSearchPlaceholder:e.string,items:e.shape({entries:e.arrayOf(e.shape({children:e.object,id:e.string.isRequired,title:e.string.isRequired,value:e.string.isRequired}))}),itemsLabel:e.string,noResultsDescription:e.string,noResultsTitle:e.string,onClose:e.func,onCloseButtonText:e.string,onSubmit:e.func,onSubmitButtonText:e.string,open:e.bool,searchResultsLabel:e.string,title:e.string};t.displayName=l;t.__docgenInfo={description:"Used to add or select one or more items from larger lists or hierarchies.",methods:[],displayName:"SingleAddSelect",props:{className:{required:!1,tsType:{name:"string"},description:"optional class name",type:{name:"string"}},description:{required:!1,tsType:{name:"string"},description:"text description that appears under the title",type:{name:"string"}},globalSearchLabel:{required:!1,tsType:{name:"string"},description:"label for global search input",type:{name:"string"}},globalSearchPlaceholder:{required:!1,tsType:{name:"string"},description:"placeholder for global search input",type:{name:"string"}},items:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  entries: Entry[];
}`,signature:{properties:[{key:"entries",value:{name:"Array",elements:[{name:"Entry"}],raw:"Entry[]",required:!0}}]}},description:`object that contains the item data. for more information reference the
"Structuring items" section in the docs tab`,type:{name:"shape",value:{entries:{name:"arrayOf",value:{name:"shape",value:{children:{name:"object",required:!1},id:{name:"string",required:!0},title:{name:"string",required:!0},value:{name:"string",required:!0}}},required:!1}}}},itemsLabel:{required:!1,tsType:{name:"string"},description:"label that display above the list of items",type:{name:"string"}},noResultsDescription:{required:!1,tsType:{name:"string"},description:"text to display when no results are found from the global search",type:{name:"string"}},noResultsTitle:{required:!1,tsType:{name:"string"},description:"title to display when no results are found from the global search",type:{name:"string"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"function to call when the close button clicked",type:{name:"func"}},onCloseButtonText:{required:!1,tsType:{name:"string"},description:"text for close button",type:{name:"string"}},onSubmit:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"function to call when the submit button is clicked. returns a selection",type:{name:"func"}},onSubmitButtonText:{required:!1,tsType:{name:"string"},description:"text for the submit button",type:{name:"string"}},open:{required:!1,tsType:{name:"boolean"},description:"specifies if the component is open or not",type:{name:"bool"}},searchResultsLabel:{required:!1,tsType:{name:"string"},description:"text that displays when displaying filtered items",type:{name:"string"}},title:{required:!1,tsType:{name:"string"},description:"header text",type:{name:"string"}}}};const y=()=>i.createElement(q,{altGuidelinesHref:"https://pages.github.ibm.com/carbon/ibm-products/patterns/add-and-select/usage",blocks:[{title:"Structuring items",description:`The \`items\` object has a lot of customization potential and can greatly effect
the way the component is displayed and how you interact with it..

Let's walk through an example.`,source:{code:`items: {
  entries: [ // the actual list of items / entries
    {
      id: '1', // required unique id for the entry
      value: '1', // required value of the entry
      title: 'item 1', // required title to display
      subtitle: 'item 1 subtitle', // subtitle to display
      children: { // designates if entry has children. if the children prop is found a hierarchy list will be used
        entries: [
          {
            id: '1-1',
            value: 'file1.pdf',
            title: 'file1.pdf',
          },
        ],
      },
    },
  ],
}`}}]});y.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const ze={title:"IBM Products/Patterns/Add and select/SingleAddSelect",component:t,tags:["autodocs"],parameters:{docs:{page:y}},argTypes:{items:{control:{type:"select",labels:{0:"no items",1:"three items",2:"with hierarchy"}},options:[0,1,2],mapping:{0:{entries:[]},1:{entries:[{id:"1",title:"Kansas",value:"kansas"},{id:"2",title:"Texas",value:"texas"},{id:"3",title:"Florida",value:"florida"}]},2:{entries:[{id:"1",title:"Kansas",value:"kansas"},{id:"2",title:"Texas",value:"texas"},{id:"3",title:"Florida",value:"florida"},{id:"4",title:"California",value:"california",children:{entries:[{id:"5",title:"Los Angeles",value:"la",children:{entries:[{id:"6",title:"Beverly Hills",value:"bh"},{id:"7",title:"Malibu",value:"malibu",children:{entries:[{id:"8",title:"Malibu Rd",value:"malibu-rd"}]}}]}}]}}]}}}}},b={className:"placeholder-class",description:"select a category lorem ipsum",globalSearchLabel:"global search label",globalSearchPlaceholder:"Find categories",illustrationTheme:"light",itemsLabel:"Categories",navIconDescription:"View children",noResultsTitle:"No results",noResultsDescription:"Try again",onCloseButtonText:"Cancel",onSubmit:r=>console.log(r),onSubmitButtonText:"Select",searchResultsTitle:"Search results",title:"Select category"},S=(r,s)=>{const[a,p]=f.useState((s==null?void 0:s.viewMode)!=="docs");return i.createElement(i.Fragment,null,i.createElement(t,{...r,open:a,onClose:()=>p(!1)}),i.createElement(v,{onClick:()=>p(!0)},"Launch AddSelect"))},o=S.bind({});o.args={items:1,...b};const n=S.bind({});n.args={items:2,...b};var m,c,d;o.parameters={...o.parameters,docs:{...(m=o.parameters)==null?void 0:m.docs,source:{originalSource:`(args, context) => {
  const [open, setOpen] = useState(context?.viewMode !== 'docs');
  return <>
      <SingleAddSelect {...args} open={open} onClose={() => setOpen(false)} />
      <Button onClick={() => setOpen(true)}>Launch AddSelect</Button>
    </>;
}`,...(d=(c=o.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};var u,g,h;n.parameters={...n.parameters,docs:{...(u=n.parameters)==null?void 0:u.docs,source:{originalSource:`(args, context) => {
  const [open, setOpen] = useState(context?.viewMode !== 'docs');
  return <>
      <SingleAddSelect {...args} open={open} onClose={() => setOpen(false)} />
      <Button onClick={() => setOpen(true)}>Launch AddSelect</Button>
    </>;
}`,...(h=(g=n.parameters)==null?void 0:g.docs)==null?void 0:h.source}}};const Ge=["Default","WithHierarchy"];export{o as Default,n as WithHierarchy,Ge as __namedExportsOrder,ze as default};
