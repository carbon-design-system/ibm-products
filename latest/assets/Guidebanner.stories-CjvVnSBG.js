import{R as e,r as N}from"./index-BwDkhjyp.js";import{a as $}from"./chunk-MZXVCX43-CM0pFb8Z.js";import{S as le}from"./StoryDocsPage-D3jszs05.js";import{c as d,C as de}from"./floating-ui.dom.mjs-BB6krl5l.js";import{p,o as pe,q as me,B as L,I as q}from"./settings-GP6q6PuD.js";import{P as t}from"./index-Dk74W0Oi.js";import{g as G}from"./devtools-TX7bKGcX.js";import{u as ue}from"./uuidv4-BQrI85uz.js";import{C as he}from"./Carousel-DEzzml28.js";import{f as fe,g as be}from"./events-b0qlIvq_.js";import{I as ge}from"./bucket-8-BgepLnQN.js";import{C as ye}from"./bucket-4-xb9OK7Di.js";import{L as Ee}from"./Link-nkMjvGqf.js";import"./_commonjsHelpers-BosuxZz1.js";import"./v4-CQkTLCs1.js";import"./index-Dq5OYLvq.js";import"./iframe-d869IuaJ.js";import"../sb-preview/runtime.js";import"./index-BONylQH5.js";import"./extends-CCbyfPlC.js";import"./index-C2eUe6cH.js";import"./index-C0xX6qoh.js";import"./index-DrFu-skq.js";import"./story-helper-6_fmjwZ-.js";import"./tslib.es6-B4_xh3D5.js";import"./index-CJvxHwuA.js";import"./index-CmXP8YBY.js";import"./useIsomorphicEffect-D7JMtAof.js";const o=`${p.prefix}--guidebanner`,R="Guidebanner",m={collapsible:!1,withLeftGutter:!1,closeIconDescription:"Close",collapseButtonLabel:"Read less",expandButtonLabel:"Read more",nextIconDescription:"Next",previousIconDescription:"Back"};let u=e.forwardRef(({children:i,className:r,collapsible:n=m.collapsible,onClose:s,withLeftGutter:c=m.withLeftGutter,closeIconDescription:l=m.closeIconDescription,collapseButtonLabel:w=m.collapseButtonLabel,expandButtonLabel:Y=m.expandButtonLabel,nextIconDescription:Z=m.nextIconDescription,previousIconDescription:ee=m.previousIconDescription,title:te,...ne},ae)=>{const U=N.useRef(null),oe=N.useRef(null),[C,ie]=N.useState(0),[A,re]=N.useState(!1),[E,se]=N.useState(!!n),ce=()=>{se(x=>!x)},T=`${ue()}--carousel-content-id`;return e.createElement("div",{...ne,"aria-owns":E?void 0:T,className:d(o,r,n&&`${o}__collapsible`,E&&`${o}__collapsible-collapsed`,c&&`${o}__with-left-gutter`),ref:ae,...G(R)},e.createElement(ge,{size:20,className:`${o}__icon-idea`}),e.createElement("div",{className:`${o}__title`},te),e.createElement(he,{id:T,className:`${o}__carousel`,fadedEdgeColor:{left:pe,right:me},ref:U,onChangeIsScrollable:x=>{re(x)},onScroll:x=>{ie(x)}},i),e.createElement("div",{className:d([n||A?`${o}__navigation`:null])},n&&e.createElement(L,{kind:"ghost",size:"md",className:`${o}__toggle-button`,onClick:ce,ref:oe,"aria-controls":E?void 0:T,"aria-expanded":!E},E?Y:w),A&&e.createElement(e.Fragment,null,e.createElement("span",{className:d(`${o}__back-button`,[C===0?`${o}__back-button--disabled`:null])},e.createElement(q,{align:"top",disabled:C===0,kind:"ghost",label:ee,onClick:()=>{U.current.scrollPrev()},size:"md"},e.createElement(fe,{size:16}))),e.createElement("span",{className:d(`${o}__next-button`,[C===1?`${o}__next-button--disabled`:null])},e.createElement(q,{align:"top-right",disabled:C===1,kind:"ghost",label:Z,onClick:()=>{U.current.scrollNext()},size:"md"},e.createElement(be,{size:16}))))),s&&e.createElement("span",{className:`${o}__close-button`},e.createElement(q,{align:"bottom-right",kind:"ghost",label:l,onClick:s,size:"md"},e.createElement(de,{size:16}))))});u=p.checkComponentEnabled(u,R);u.displayName=R;u.propTypes={children:(i,r)=>{let n;const s=i[r];return s||(n=new Error("`Guidebanner` requires one or more children of type `GuidebannerElement`.")),e.Children.forEach(s,c=>{var l,w;c.type.displayName!=="GuidebannerElement"&&(n=new Error(`\`Guidebanner\` only accepts children of type \`GuidebannerElement\`, found \`${((l=c.type)==null?void 0:l.displayName)||((w=c.type)==null?void 0:w.name)||c.type}\` instead.`))}),n},className:t.string,closeIconDescription:t.string,collapseButtonLabel:t.string,collapsible:t.bool,expandButtonLabel:t.string,nextIconDescription:t.string,onClose:t.func,previousIconDescription:t.string,title:t.string.isRequired,withLeftGutter:t.bool};u.__docgenInfo={description:`The guide banner sits at the top of a page, or page-level tab,
to introduce foundational concepts related to the page's content.`,methods:[],displayName:"Guidebanner",props:{collapsible:{defaultValue:{value:"false",computed:!1},description:`When true, the Guidebanner will initialize in a collapsed state,
showing the title and the Expand button.

When expanded, it will show the GuidebannerElement child components and the Collapse button.`,type:{name:"bool"},required:!1},withLeftGutter:{defaultValue:{value:"false",computed:!1},description:`If true, insert 1 rem of "space" on the left of the component.
This will allow the component's content to line up with other
content on the page under special circumstances.`,type:{name:"bool"},required:!1},closeIconDescription:{defaultValue:{value:"'Close'",computed:!1},description:"Tooltip text and aria label for the Close button icon.",type:{name:"string"},required:!1},collapseButtonLabel:{defaultValue:{value:"'Read less'",computed:!1},description:"Text label for the Collapse button.",type:{name:"string"},required:!1},expandButtonLabel:{defaultValue:{value:"'Read more'",computed:!1},description:"Text label for the Expand button.",type:{name:"string"},required:!1},nextIconDescription:{defaultValue:{value:"'Next'",computed:!1},description:"Tooltip text and aria label for the Next button icon.",type:{name:"string"},required:!1},previousIconDescription:{defaultValue:{value:"'Back'",computed:!1},description:"Tooltip text and aria label for the Back button icon.",type:{name:"string"},required:!1},children:{description:`Provide the contents of the Guidebanner.
One or more GuidebannerElement components are required.`,type:{name:"custom",raw:`(props, propName) => {
  let error;
  const prop = props[propName];
  if (!prop) {
    error = new Error(
      '\`Guidebanner\` requires one or more children of type \`GuidebannerElement\`.'
    );
  }
  React.Children.forEach(prop, (child) => {
    if (child.type.displayName !== 'GuidebannerElement') {
      // If child element is not \`GuidebannerElement\`, then show:
      // Carbon Products component's \`displayName\` (child.type.displayName) or
      // React component's \`name\` (child.type.name) or
      // HTML element's tag name (child.type).
      error = new Error(
        \`\\\`Guidebanner\\\` only accepts children of type \\\`GuidebannerElement\\\`, found \\\`\${
          child.type?.displayName || child.type?.name || child.type
        }\\\` instead.\`
      );
    }
  });
  return error;
}`},required:!1},className:{description:"Provide an optional class to be applied to the containing node.",type:{name:"string"},required:!1},onClose:{description:`If defined, a Close button will render in the top-right corner and a
callback function will be triggered when button is clicked.`,type:{name:"func"},required:!1},title:{description:"Title text.",type:{name:"string"},required:!0}}};const k=`${p.prefix}--guidebanner__element`,D="GuidebannerElement";let a=e.forwardRef(({button:i,className:r,description:n,title:s,...c},l)=>e.createElement("div",{...c,className:d(k,r),ref:l,...G(D)},s&&e.createElement("h2",{className:`${k}-title`},s),n&&e.createElement("p",{className:`${k}-content`},n),i&&e.createElement("div",{className:`${k}-buttons`},i)));a=p.checkComponentEnabled(a,D);a.displayName=D;a.propTypes={button:t.node,className:t.string,description:t.oneOfType([t.string,t.node]).isRequired,title:t.string};a.__docgenInfo={description:`The GuidebannerElement is a required child component of the Guidebanner,
and acts as a container for a CarouselItem.`,methods:[],displayName:"GuidebannerElement",props:{button:{description:`An optional button can be rendered below the description.
This can be a link, button, Coachmark button, etc.`,type:{name:"node"},required:!1},className:{description:"Provide an optional class to be applied to the containing node.",type:{name:"string"},required:!1},description:{description:"The description of the element.",type:{name:"union",value:[{name:"string"},{name:"node"}]},required:!0},title:{description:"The title of the element.",type:{name:"string"},required:!1}}};const V=`${p.prefix}--guidebanner__element-button`,v="GuidebannerElementButton",xe={iconDescription:"Crossroads"};let h=e.forwardRef(({children:i,className:r,iconDescription:n=xe.iconDescription,type:s,...c},l)=>s==="primary"?e.createElement(L,{...c,className:d(V,r),iconDescription:n,kind:"tertiary",ref:l,renderIcon:()=>e.createElement(ye,{size:16}),role:"button",size:"md",...G(v)},i):e.createElement(L,{...c,className:d(V,r),kind:"ghost",role:"button",size:"md",...G(v)},i));h=p.checkComponentEnabled(h,v);h.displayName=v;h.propTypes={children:t.node.isRequired,className:t.string,type:t.string};h.__docgenInfo={description:"One of two buttons styled specifically for the GuidebannerElement.",methods:[],displayName:"GuidebannerElementButton",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Provide the contents of the GuidebannerElementLink.",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},iconDescription:{required:!1,tsType:{name:"string"},description:"Provide a description for the icon.",defaultValue:{value:"'Crossroads'",computed:!1}},type:{required:!1,tsType:{name:"string"},description:`If type is "primary", then return a tertiary button with the "crossroads" icon,
else return a ghost button.`,type:{name:"string"}}}};const Ne=`${p.prefix}--guidebanner__element-link`,B="GuidebannerElementLink";let y=e.forwardRef(({children:i,className:r,...n},s)=>e.createElement(Ee,{...n,className:d(Ne,r),kind:"ghost",ref:s,role:"link",size:"md",...G(B)},i));y=p.checkComponentEnabled(y,B);y.displayName=B;y.propTypes={children:t.node.isRequired,className:t.string};y.__docgenInfo={description:"A link styled specifically for the GuidebannerElement.",methods:[],displayName:"GuidebannerElementLink",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Provide the contents of the GuidebannerElementLink.",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}}}};const Ge="#storybook-root{overflow-x:hidden}.non-linear-reading-stories__viewport{margin:0}",Q=()=>e.createElement(le,{blocks:[{story:f},{story:b},{story:g}]});Q.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const _e="guidebanner-stories",Ye={title:"Experimental/Onboarding/Guidebanner",component:u,tags:["autodocs"],parameters:{styles:Ge,layout:"fullscreen",docs:{page:Q}},argTypes:{children:{table:{disable:!0}},theme:{table:{disable:!0}}}},P={onClose:()=>$("onClose()")(),title:"Page-related heading that can stand on its own",withLeftGutter:!1},S=()=>e.createElement(h,{type:"primary",onClick:()=>{$('GuidebannerElementButton.onClick() (type="primary")')()}},"Show Me"),I=()=>e.createElement(h,{onClick:()=>{$("GuidebannerElementButton.onClick()")()}},"Click me"),_=()=>e.createElement(y,{href:"https://www.ibm.com",target:"_blank",onClick:()=>{$("GuidebannerElementLink.onClick()")()}},"Learn more"),z=({children:i,...r})=>{const n=i.props.children;return e.createElement("div",{className:`${_e}__viewport`},e.createElement(u,{...r},n))},f=z.bind({});f.args={...P,collapsible:!0,children:e.createElement(e.Fragment,null,e.createElement(a,{title:"Use-case specific heading",description:"Use-case specific content related to the heading that explains the concept or adds context. Use-case specific content related to the heading that explains the concept or adds context.",button:e.createElement(S,null)}),e.createElement(a,{title:"Use-case specific heading",description:"Use-case specific content related to the heading that explains the concept or adds context. Use-case specific content related to the heading that explains the concept or adds context. Use-case specific content related to the heading that explains the concept or adds context.",button:e.createElement(I,null)}),e.createElement(a,{title:"Use-case specific heading",description:"Use-case specific content related to the heading that explains the concept or adds context.",button:e.createElement(I,null)}),e.createElement(a,{title:"Use-case specific heading",description:"Use-case specific content related to the heading that explains the concept or adds context. Use-case specific content related to the heading that explains the concept or adds context.",button:e.createElement(_,null)}),e.createElement(a,{title:"Use-case specific heading",description:"Use-case specific content related to the heading that explains the concept or adds context.",button:e.createElement(_,null)}))};const b=z.bind({});b.args={...P,children:e.createElement(e.Fragment,null,e.createElement(a,{title:"Use-case specific heading",description:"Use-case specific content related to the heading that explains the concept or adds context. Use-case specific content related to the heading that explains the concept or adds context.",button:e.createElement(S,null)}),e.createElement(a,{title:"Use-case specific heading",description:"Use-case specific content related to the heading that explains the concept or adds context. Use-case specific content related to the heading that explains the concept or adds context. Use-case specific content related to the heading that explains the concept or adds context.",button:e.createElement(I,null)}),e.createElement(a,{title:"Use-case specific heading",description:"Use-case specific content related to the heading that explains the concept or adds context.",button:e.createElement(I,null)}),e.createElement(a,{title:"Use-case specific heading",description:"Use-case specific content related to the heading that explains the concept or adds context. Use-case specific content related to the heading that explains the concept or adds context.",button:e.createElement(_,null)}),e.createElement(a,{title:"Use-case specific heading",description:"Use-case specific content related to the heading that explains the concept or adds context.",button:e.createElement(_,null)}))};const g=z.bind({});g.args={...P,children:e.createElement(e.Fragment,null,e.createElement(a,{title:"Use-case specific heading",description:"Use-case specific content related to the heading that explains the concept or adds context. Use-case specific content related to the heading that explains the concept or adds context.",button:e.createElement(S,null)}),e.createElement(a,{title:"Use-case specific heading",description:"Use-case specific content related to the heading that explains the concept or adds context.",button:e.createElement(_,null)}))};var F,O,J;f.parameters={...f.parameters,docs:{...(F=f.parameters)==null?void 0:F.docs,source:{originalSource:`({
  children,
  ...rest
}) => {
  // Normally GuidebannerElement are listed directly as children of Guidebanner,
  // but as a story we have to wrap the JSX in a React.Fragment.
  // To feed them here, we point to the list of GuidebannerElements directly.
  const childArray = children.props.children;
  return <div className={\`\${storyClass}__viewport\`}>
      <Guidebanner {...rest}>{childArray}</Guidebanner>
    </div>;
}`,...(J=(O=f.parameters)==null?void 0:O.docs)==null?void 0:J.source}}};var X,M,W;b.parameters={...b.parameters,docs:{...(X=b.parameters)==null?void 0:X.docs,source:{originalSource:`({
  children,
  ...rest
}) => {
  // Normally GuidebannerElement are listed directly as children of Guidebanner,
  // but as a story we have to wrap the JSX in a React.Fragment.
  // To feed them here, we point to the list of GuidebannerElements directly.
  const childArray = children.props.children;
  return <div className={\`\${storyClass}__viewport\`}>
      <Guidebanner {...rest}>{childArray}</Guidebanner>
    </div>;
}`,...(W=(M=b.parameters)==null?void 0:M.docs)==null?void 0:W.source}}};var H,j,K;g.parameters={...g.parameters,docs:{...(H=g.parameters)==null?void 0:H.docs,source:{originalSource:`({
  children,
  ...rest
}) => {
  // Normally GuidebannerElement are listed directly as children of Guidebanner,
  // but as a story we have to wrap the JSX in a React.Fragment.
  // To feed them here, we point to the list of GuidebannerElements directly.
  const childArray = children.props.children;
  return <div className={\`\${storyClass}__viewport\`}>
      <Guidebanner {...rest}>{childArray}</Guidebanner>
    </div>;
}`,...(K=(j=g.parameters)==null?void 0:j.docs)==null?void 0:K.source}}};const Ze=["collapsible","manyInsights","fewInsights"];export{Ze as __namedExportsOrder,f as collapsible,Ye as default,g as fewInsights,b as manyInsights};
