import{e as t}from"./index-CPiZ6Cnx.js";import{a as g}from"./index-B-lxVbXh.js";import{S as K}from"./StoryDocsPage-vEZJbmBv.js";import{c as Q,P as e}from"./index-BPCFiO9b.js";import{p as L,B as T}from"./settings-41bnSjHp.js";import{L as U}from"./Link-BmRyJrPM.js";import{g as X}from"./devtools-Ca6Wku6c.js";import{d as c,E as Y}from"./EmptyState-DH2gBtAG.js";import{NoTagsIllustration as Z}from"./NoTagsIllustration-D73LqMyl.js";import{A as j}from"./bucket-0-BYIdRiFw.js";import"./_commonjsHelpers-BosuxZz1.js";import"./v4-CtRu48qb.js";import"./index-DblCLej2.js";import"./iframe-DG_HeTRT.js";import"./index-B83en7q5.js";import"./index-ZKO_qc5e.js";import"./index-Dytf1aFS.js";import"./index-DrFu-skq.js";import"./story-helper-C7pmvIin.js";import"./events-OVwOsPzJ.js";import"./index-H2wBg9na.js";import"./props-helper-C4WGU-Xx.js";import"./index-DtQVt1M7.js";import"./EmptyStateV2-CLfnSPcH.js";import"./useId-f4Cxwosn.js";import"./uuidv4-BN2rGLQG.js";const d=`${L.prefix}--empty-state`,y="NoTagsEmptyState";let n=t.forwardRef(({action:a,className:V,illustrationPosition:_=c.position,illustrationTheme:$,illustrationDescription:M,link:W,size:f=c.size,headingAs:F=c.headingAs,subtitle:G,title:h,...H},J)=>t.createElement("div",{...H,className:Q(d,V,`${d}-position--${_}`,`${d}-type--noTags`),ref:J,...X(y)},t.createElement(Z,{theme:$,size:f,alt:M||h}),t.createElement(Y,{action:a,link:W,size:f,headingAs:F,subtitle:G,title:h=""})));n=L.checkComponentEnabled(n,y);n.displayName=y;n.propTypes={action:e.shape({...T.propTypes,kind:e.oneOf(["primary","secondary","tertiary"]),renderIcon:e.oneOfType([e.func,e.object]),onClick:T.propTypes.onClick,text:e.string}),className:e.string,headingAs:e.elementType,illustrationDescription:e.string,illustrationPosition:e.oneOf(["top","right","bottom","left"]),illustrationTheme:e.oneOf(["light","dark"]),link:e.shape({...U.propTypes,text:e.oneOfType([e.string,e.node]),href:e.string}),size:e.oneOf(["lg","sm"]),subtitle:e.oneOfType([e.string,e.node]),title:e.oneOfType([e.string,e.node]).isRequired};n.__docgenInfo={description:"The `EmptyState` component follows the Carbon guidelines for empty states with some added specifications around illustration usage. For additional usage guidelines and documentation please refer to the links above.",methods:[],displayName:"NoTagsEmptyState",props:{action:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  kind?: 'primary' | 'secondary' | 'tertiary';
  renderIcon?: CarbonIconType;
  onClick?: ButtonProps<React.ElementType>['onClick'];
  text?: string;
}`,signature:{properties:[{key:"kind",value:{name:"union",raw:"'primary' | 'secondary' | 'tertiary'",elements:[{name:"literal",value:"'primary'"},{name:"literal",value:"'secondary'"},{name:"literal",value:"'tertiary'"}],required:!1}},{key:"renderIcon",value:{name:"CarbonIconType",required:!1}},{key:"onClick",value:{name:"ButtonProps['onClick']",raw:"ButtonProps<React.ElementType>['onClick']",required:!1}},{key:"text",value:{name:"string",required:!1}}]}},description:"Empty state action button",type:{name:"shape",value:{kind:{name:"enum",value:[{value:"'primary'",computed:!1},{value:"'secondary'",computed:!1},{value:"'tertiary'",computed:!1}],required:!1},renderIcon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},onClick:{name:"custom",raw:"Button.propTypes.onClick",required:!1},text:{name:"string",required:!1}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},illustrationDescription:{required:!1,tsType:{name:"string"},description:"The alt text for empty state svg images. If not provided , title will be used.",type:{name:"string"}},illustrationPosition:{required:!1,tsType:{name:"union",raw:"'top' | 'right' | 'bottom' | 'left'",elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'left'"}]},description:"Designates the position of the illustration relative to the content",defaultValue:{value:"'top'",computed:!1},type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'right'",computed:!1},{value:"'bottom'",computed:!1},{value:"'left'",computed:!1}]}},illustrationTheme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:`Empty state illustration theme variations.
To ensure you use the correct themed illustrations, you can conditionally specify light or dark
based on your app's current theme value. Example:
\`illustrationTheme={appTheme === ('carbon--g100' || 'carbon--g90') ? 'dark' : 'light'}\``,type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]}},link:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  text?: string | ReactNode;
  href?: string;
}`,signature:{properties:[{key:"text",value:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}],required:!1}},{key:"href",value:{name:"string",required:!1}}]}},description:"Empty state link object",type:{name:"shape",value:{text:{name:"union",value:[{name:"string"},{name:"node"}],required:!1},href:{name:"string",required:!1}}}},headingAs:{required:!1,tsType:{name:"union",raw:"(() => ReactNode) | string | ElementType",elements:[{name:"unknown"},{name:"string"},{name:"ElementType"}]},description:"Empty state headingAs allows you to customize the type of heading element",defaultValue:{value:"'h3'",computed:!1},type:{name:"elementType"}},size:{required:!1,tsType:{name:"union",raw:"'lg' | 'sm'",elements:[{name:"literal",value:"'lg'"},{name:"literal",value:"'sm'"}]},description:"Empty state size",defaultValue:{value:"sizes.lg",computed:!0},type:{name:"enum",value:[{value:"'lg'",computed:!1},{value:"'sm'",computed:!1}]}},subtitle:{required:!1,tsType:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}]},description:"Empty state subtitle",type:{name:"union",value:[{name:"string"},{name:"node"}]}},title:{required:!0,tsType:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}]},description:"Empty state title",type:{name:"union",value:[{name:"string"},{name:"node"}]}}}};const qe={title:"IBM Products/Patterns/Empty state/NoTagsEmptyState",component:n,tags:["autodocs"],parameters:{docs:{page:()=>t.createElement(K,{altGuidelinesHref:[{href:"https://www.carbondesignsystem.com/patterns/empty-states-pattern/",label:"Carbon Empty pattern usage guidelines"}]})}}},r={headingAs:"h3",title:"Empty state title",subtitle:"Description text explaining why this section is empty.",illustrationDescription:"Test alt text"},o=a=>t.createElement(n,{...a}),s=o.bind({});s.args={...r};const i=o.bind({});i.args={...r,illustrationTheme:"dark"};const l=o.bind({});l.args={...r,action:{text:"Create new",onClick:g("Clicked empty state action button")}};const m=o.bind({});m.args={...r,action:{text:"Create new",onClick:g("Clicked empty state action button"),renderIcon:a=>t.createElement(j,{size:20,...a}),iconDescription:"Add icon"}};const p=o.bind({});p.args={...r,link:{text:"View documentation",href:"https://www.carbondesignsystem.com"}};const u=o.bind({});u.args={...r,action:{text:"Create new",onClick:g("Clicked empty state action button"),renderIcon:a=>t.createElement(j,{size:20,...a}),iconDescription:"Add icon"},link:{text:"View documentation",href:"https://www.carbondesignsystem.com"}};var v,k,w;s.parameters={...s.parameters,docs:{...(v=s.parameters)==null?void 0:v.docs,source:{originalSource:`args => {
  return <NoTagsEmptyState {...args} />;
}`,...(w=(k=s.parameters)==null?void 0:k.docs)==null?void 0:w.source}}};var b,E,N;i.parameters={...i.parameters,docs:{...(b=i.parameters)==null?void 0:b.docs,source:{originalSource:`args => {
  return <NoTagsEmptyState {...args} />;
}`,...(N=(E=i.parameters)==null?void 0:E.docs)==null?void 0:N.source}}};var C,q,x;l.parameters={...l.parameters,docs:{...(C=l.parameters)==null?void 0:C.docs,source:{originalSource:`args => {
  return <NoTagsEmptyState {...args} />;
}`,...(x=(q=l.parameters)==null?void 0:q.docs)==null?void 0:x.source}}};var S,A,I;m.parameters={...m.parameters,docs:{...(S=m.parameters)==null?void 0:S.docs,source:{originalSource:`args => {
  return <NoTagsEmptyState {...args} />;
}`,...(I=(A=m.parameters)==null?void 0:A.docs)==null?void 0:I.source}}};var D,P,R;p.parameters={...p.parameters,docs:{...(D=p.parameters)==null?void 0:D.docs,source:{originalSource:`args => {
  return <NoTagsEmptyState {...args} />;
}`,...(R=(P=p.parameters)==null?void 0:P.docs)==null?void 0:R.source}}};var B,O,z;u.parameters={...u.parameters,docs:{...(B=u.parameters)==null?void 0:B.docs,source:{originalSource:`args => {
  return <NoTagsEmptyState {...args} />;
}`,...(z=(O=u.parameters)==null?void 0:O.docs)==null?void 0:z.source}}};const xe=["Default","WithDarkModeIllustration","withAction","withActionIconButton","withLink","withActionAndLink"];export{s as Default,i as WithDarkModeIllustration,xe as __namedExportsOrder,qe as default,l as withAction,u as withActionAndLink,m as withActionIconButton,p as withLink};
