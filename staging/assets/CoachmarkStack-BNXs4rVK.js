import{r as a,e as t}from"./index-DtHxqM--.js";import{r as K}from"./index-DgLvjnYm.js";import{d as L,P as e}from"./index-C360Eztx.js";import{g as U}from"./devtools-XPxnGn1y.js";import{a as X,p as u,B as z,T as Z}from"./settings-CFkY3W_8.js";import{c as ee,a as te,b as ae,C as ne}from"./CoachmarkOverlayElements-C4A3WGMu.js";import{u as Y}from"./useIsomorphicEffect-DztsuiUB.js";import{d as re}from"./bucket-9-BxEcmZXg.js";import{C as se}from"./CoachmarkTagline-C_ZGh03W.js";const C=`${u.prefix}--coachmark-stacked-home`,T=`${u.prefix}--coachmark-overlay`,x="CoachmarkStackHome";let q=a.forwardRef(({className:A,description:O,isOpen:h,renderMedia:R,navLinkLabels:H,onClickNavItem:P,onClose:p,portalTarget:w,closeButtonLabel:I,title:y,tooltipAlign:D,...B},F)=>{const S=a.useRef(null),[c,s]=a.useState(0),k=a.useRef([]),[d,E]=a.useState([]);a.useEffect(()=>{setTimeout(()=>{h&&S.current&&S.current.focus()},100)},[h]);const n=a.useRef(null);if(Y(()=>{n.current=w?(document==null?void 0:document.querySelector(w))??(document==null?void 0:document.querySelector("body")):document==null?void 0:document.querySelector("body")},[w]),!H)return X.warn(`${x} is an Onboarding internal component and is not intended for general use.`);const N=(o,r)=>{if(r&&k.current[o]!==r){const l=r.scrollWidth>r.clientWidth;k.current[o]=r,E($=>{const v=[...$];return v[o]=l,v})}};function g(o,r,l=null){const $=d[o]??!1;return t.createElement("li",{key:o,ref:v=>{N(o,v)}},t.createElement(z,{kind:"ghost",size:"sm",onClick:()=>{s(o),P(o+1)},ref:l},$?t.createElement(Z,{highContrast:!1,label:r,align:D,className:`${C}__navLinkLabels-tooltip`},t.createElement("span",{className:`${C}__navLinkLabels-text`},r)):r))}return n!=null&&n.current?K.createPortal(t.createElement("div",{...B,className:L(C,A),ref:F,...U(x)},t.createElement(ee,{onClose:()=>{s(0),p()}}),t.createElement("div",{className:`${T}__body`},t.createElement("div",{className:`${T}-element`},!R&&t.createElement(re,{size:20,className:`${C}__icon-idea`}),R&&t.createElement("div",{className:`${C}__element-stepped-media`},R({playStep:0})),t.createElement("div",{className:`${T}-element__content`},y&&t.createElement("h2",{className:`${T}-element__title`},y),O&&t.createElement("p",{className:`${T}-element__body`},O)),t.createElement("ul",{className:`${C}__nav-links`},H.map((o,r)=>r===c?g(r,o,S):g(r,o))),I&&t.createElement("div",{className:`${T}__footer`},t.createElement(z,{size:"sm",onClick:()=>{s(0),p()}},I))))),n==null?void 0:n.current):null});q=u.checkComponentEnabled(q,x);q.displayName=x;q.propTypes={className:e.string,closeButtonLabel:e.string,description:e.node.isRequired,isOpen:e.bool.isRequired,navLinkLabels:e.arrayOf(e.string.isRequired).isRequired,onClickNavItem:e.func.isRequired,onClose:e.func.isRequired,portalTarget:e.string,renderMedia:e.func,title:e.string.isRequired,tooltipAlign:e.oneOf(["top","bottom"])};q.__docgenInfo={description:`DO NOT USE. This component is for the exclusive use
of other Onboarding components.`,methods:[],displayName:"CoachmarkStackHome",props:{className:{required:!1,tsType:{name:"string"},description:"Optional class name for this component.",type:{name:"string"}},closeButtonLabel:{required:!1,tsType:{name:"string"},description:"The label for the button that will close the stack",type:{name:"string"}},description:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"The description of the Coachmark.",type:{name:"node"}},isOpen:{required:!0,tsType:{name:"boolean"},description:"If the stack home is open.",type:{name:"bool"}},renderMedia:{required:!1,tsType:{name:"signature",type:"function",raw:"(params) => ReactNode",signature:{arguments:[{name:"params"}],return:{name:"ReactNode"}}},description:"Optional prop to render any media like images or any animated media.",type:{name:"func"}},navLinkLabels:{required:!0,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:"The labels used to link to the stackable Coachmarks.",type:{name:"arrayOf",value:{name:"string"}}},onClickNavItem:{required:!0,tsType:{name:"signature",type:"function",raw:"(index: number) => void",signature:{arguments:[{type:{name:"number"},name:"index"}],return:{name:"void"}}},description:"For internal use only by CoachmarkStack and CoachmarkStackHome.",type:{name:"func"}},onClose:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function to call when the stack closes.",type:{name:"func"}},portalTarget:{required:!1,tsType:{name:"string"},description:`By default, the CoachmarkStackHome will be appended to the end of \`document.body\`.
The CoachmarkStackHome will remain persistent as the user navigates the app until
the user closes the CoachmarkStackHome.

Alternatively, the app developer can tightly couple the CoachmarkStackHome to a DOM
element or other component by specifying a CSS selector. The CoachmarkStackHome will
remain visible as long as that element remains visible or mounted. When the
element is hidden or component is unmounted, the CoachmarkStackHome will disappear.`,type:{name:"string"}},title:{required:!0,tsType:{name:"string"},description:"The title of the Coachmark.",type:{name:"string"}},tooltipAlign:{required:!1,tsType:{name:"union",raw:"'top' | 'bottom'",elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'bottom'"}]},description:"Label's tooltip position",type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'bottom'",computed:!1}]}}}};const oe=`${u.prefix}--coachmark-stack`,W="CoachmarkStack",m=`${u.prefix}--coachmark-stack-element`,V={onClose:()=>{},theme:"light",portalTarget:"body"};let _=t.forwardRef(({children:A,className:O,onClose:h=V.onClose,description:R,renderMedia:H,navLinkLabels:P,portalTarget:p=V.portalTarget,closeButtonLabel:w,tagline:I,theme:y=V.theme,title:D,tooltipAlign:B,...F},S)=>{const c=a.useRef(null);Y(()=>{c.current=p?(document==null?void 0:document.querySelector(p))??(document==null?void 0:document.querySelector("body")):document==null?void 0:document.querySelector("body")},[p]);const s=a.useRef(null),k=a.useRef([]),[d,E]=a.useState(!1),[n,N]=a.useState(0),[g,o]=a.useState(),r=a.Children.toArray(A),l=a.useRef(void 0),$=240,v=i=>{N(i)},b=a.useCallback(i=>{if(i){N(-1);const f=setTimeout(()=>{E(!1),h()},$);return()=>clearTimeout(f)}else N(0)},[h]),M=a.useCallback(i=>{i.key==="Escape"&&b(n===0)},[b,n]);a.useEffect(()=>(document.addEventListener("keydown",M,!1),()=>{document.removeEventListener("keydown",M,!1)}),[M]);const j={buttonProps:{tabIndex:0,"aria-expanded":d,onClick:()=>{E(!0)},onDoubleClick:()=>{E(!0)}},closeButtonProps:{onClick:()=>b(!1)},isOpen:d};a.useEffect(()=>(l.current=!0,()=>{l.current=!1}),[]),a.useEffect(()=>{setTimeout(()=>{s.current&&o(s.current.clientHeight+16)},0)},[s]),a.useEffect(()=>{const i=n-1;if(!g)return;if(s.current&&(s.current.style.height=`${g}px`),!d||i<0){s.current&&s.current.focus();return}const f=k.current[i].clientHeight;s.current&&(s.current.style.height=`${f}px`,k.current[i].focus())},[n,d,g]);const G=a.Children.map(r,(i,f)=>{const J=l.current?`${m}--is-mounted`:"";return t.createElement(te,{key:f,ref:Q=>{k.current[f]=Q},kind:ae.STACKED,onClose:()=>b(!1),theme:y,fixedIsVisible:!1,className:L(m,J,f===n-1&&`${m}--is-visible`,l.current&&`${m}--is-mounted`)},i)});return t.createElement(ne.Provider,{value:j},t.createElement("div",{...F,className:L(oe,`${u.prefix}--coachmark-overlay--stack`,O),ref:S,...U(W)},t.createElement(se,{title:I,onClose:h}),t.createElement(q,{ref:s,className:L(`${u.prefix}--coachmark-overlay`,`${u.prefix}--coachmark-overlay__${y}`,m,n>0&&`${m}--is-stacked`,n>0&&`${m}--is-stacked__${y}`,d&&`${m}--is-visible`,l.current&&`${m}--is-mounted`),isOpen:d&&n<1,description:R,renderMedia:H,navLinkLabels:P,onClickNavItem:v,onClose:()=>{b(!0)},portalTarget:p,closeButtonLabel:w,title:D,tooltipAlign:B}),c!=null&&c.current?K.createPortal(G,c==null?void 0:c.current):null))});_=u.checkComponentEnabled(_,W);_.displayName=W;_.propTypes={children:e.node.isRequired,className:e.string,closeButtonLabel:e.string,description:e.node.isRequired,navLinkLabels:e.arrayOf(e.string.isRequired).isRequired,onClose:e.func,portalTarget:e.string,renderMedia:e.func,tagline:e.string.isRequired,theme:e.oneOf(["light","dark"]),title:e.string.isRequired,tooltipAlign:e.oneOf(["top","bottom"])};_.__docgenInfo={description:`Stacked coachmarks are used to call out specific functionality or concepts
within the UI that may not be intuitive but are important for the
user to gain understanding of the product's main value and discover new use cases.
This variant allows the stacking of multiple coachmark overlays to be displayed by interacting with the tagline.`,methods:[],displayName:"CoachmarkStack",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"CoachmarkStack should use a single CoachmarkOverlayElements component as a child.",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},closeButtonLabel:{required:!1,tsType:{name:"string"},description:"The label for the button that will close the Stack",type:{name:"string"}},description:{required:!0,tsType:{name:"ReactNode"},description:"The description of the Coachmark.",type:{name:"node"}},renderMedia:{required:!1,tsType:{name:"signature",type:"function",raw:"(params) => ReactNode",signature:{arguments:[{name:"params"}],return:{name:"ReactNode"}}},description:"Optional prop to render any media like images or any animated media.",type:{name:"func"}},navLinkLabels:{required:!0,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:"The labels used to link to the stackable Coachmarks.",type:{name:"arrayOf",value:{name:"string"}}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function to call when the CoachmarkStack closes.",defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},portalTarget:{required:!1,tsType:{name:"string"},description:"Where in the DOM to render the stack.\nThe default is `document.body`.",defaultValue:{value:"'body'",computed:!1},type:{name:"string"}},tagline:{required:!0,tsType:{name:"string"},description:"The tagline title which will be fixed to the bottom right of the window and will serve as the display trigger.",type:{name:"string"}},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Determines the theme of the component.",defaultValue:{value:"'light'",computed:!1},type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]}},title:{required:!0,tsType:{name:"string"},description:"The title of the Coachmark.",type:{name:"string"}},tooltipAlign:{required:!1,tsType:{name:"union",raw:"'top' | 'bottom'",elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'bottom'"}]},description:"Label's tooltip position",type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'bottom'",computed:!1}]}}}};export{_ as C};
