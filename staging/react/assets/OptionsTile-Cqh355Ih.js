import{e as R,m as z}from"./index-DYQz9bQ1.js";import{r,e as n,c as x,p as Q,w as X,P as t}from"./iframe-DoONWhft.js";import{T as Y}from"./Toggle-BQ8dzuUc.js";import{S as Z,H as ee}from"./index-BVSll7PQ.js";import{L as te}from"./index-CS_juDx4.js";import"./documentLang-E105Y72C.js";import{g as ne}from"./devtools-Bope-Kcp.js";import{u as ae}from"./uuidv4-BN2rGLQG.js";import{u as ie}from"./usePrefersReducedMotion-mcO4ENLb.js";import{j as P}from"./bucket-11-BXG7X2h3.js";import{W as oe,a as se}from"./bucket-19-Cq7trOkA.js";function re(l,d){if(typeof l=="function")throw new TypeError("Functions are not supported");const[m,T]=r.useState(l),c=r.useCallback(o=>{d?.(o)},[d]);return typeof d=="function"?[l,c]:[m,T]}const e=`${Q.prefix}--options-tile`,I="OptionsTile",le={size:"lg"},$=n.forwardRef((l,d)=>{const{children:m,className:T,enabled:c,invalid:o,invalidText:S,locked:u,lockedText:N,onChange:W,onToggle:D,open:L,size:B=le.size,summary:F,title:V,titleId:H,warn:g,warnText:M,...A}=l,[v,O]=r.useState(!1),[f,h]=re(L??!1,W),b=r.useRef(null),s=r.useRef(null),j=r.useRef(null),_=H??`${ae()}-title`,U=m!==void 0,E=!o&&!(!o&&g)&&u,k=ie(),G=()=>{if(b.current&&s.current&&!k){h(!0),b.current.open=!0;const{paddingTop:a,paddingBottom:i,height:y}=getComputedStyle(s.current);s.current.animate([{paddingTop:0,paddingBottom:0,height:0,opacity:0,overflow:"hidden"},{paddingTop:a,paddingBottom:i,height:y,opacity:1,overflow:"hidden"}],{duration:Number(z.replace("ms","")),easing:R.entrance.productive})}else h(!0)},J=()=>{if(s.current&&!k){O(!0);const{paddingTop:a,paddingBottom:i,height:y}=getComputedStyle(s.current),p=Number(z.replace("ms","")),w=s.current.animate([{paddingTop:a,paddingBottom:i,height:y,opacity:1},{paddingTop:0,paddingBottom:0,height:0,opacity:0}],{duration:p,easing:R.entrance.productive}),C=()=>{h(!1),O(!1)};setTimeout(()=>{C()},p*.9),w.oncancel=C}else h(!1)},K=a=>{a.preventDefault(),f?J():G()},q=()=>{let a=null,i=F;o?(a=oe,i=S):g?(a=se,i=M):u&&(a=P,i||(i=N));const p=!(o||g||u)&&c===!1,w=x(`${e}__summary`,{[`${e}__summary--closing`]:v,[`${e}__summary--open`]:f,[`${e}__summary--invalid`]:o,[`${e}__summary--warn`]:g,[`${e}__summary--locked`]:u,[`${e}__summary--hidden`]:p});return n.createElement("div",{className:`${e}__heading`},n.createElement(ee,{ref:j,id:_,className:`${e}__title`},V),i&&n.createElement("span",{className:w,"aria-hidden":p},a&&n.createElement(a,{size:16}),n.createElement("span",{className:`${e}__summary-text`},i)))};return n.createElement(Z,{...A,className:x(e,T,`${e}--${B}`,{[`${e}--closing`]:v}),ref:d,...ne(I)},c!==void 0&&n.createElement("div",{className:`${e}__toggle-container`},n.createElement(Y,{id:`${_}-toggle`,className:`${e}__toggle`,toggled:c,"aria-labelledby":_,hideLabel:!0,onToggle:D,size:"sm",disabled:E})),U?n.createElement("details",{className:`${e}__details`,open:f,ref:b},n.createElement("summary",{className:`${e}__header`,onClick:K},n.createElement(X,{size:16,className:x(`${e}__chevron`,{[`${e}__chevron--open`]:f,[`${e}__chevron--closing`]:v})}),q()),n.createElement("div",{className:`${e}__content`,ref:s},n.createElement(te,null,E&&n.createElement("p",{className:`${e}__locked-text`},n.createElement(P,{size:16}),N),m))):n.createElement("div",{className:`${e}__static-content`},q()))});$.displayName=I;$.propTypes={children:t.node,className:t.string,enabled:t.bool,invalid:t.bool,invalidText:t.string,locked:t.bool,lockedText:t.string,onChange:t.func,onToggle:t.func,open:t.bool,size:t.oneOf(["lg","xl"]),summary:t.string,title:t.oneOfType([t.string,t.node]).isRequired,titleId:t.string,warn:t.bool,warnText:t.string};$.__docgenInfo={description:"",methods:[],displayName:"OptionsTile",props:{children:{required:!1,tsType:{name:"ReactNode"},description:`Provide content to render as expandable OptionsTile. If no children
are present, the OptionsTile will render as its variant.`,type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},enabled:{required:!1,tsType:{name:"boolean"},description:`Whether the toggle is enabled or disabled. If nothing is passed,
no toggle will be rendered.`,type:{name:"bool"}},invalid:{required:!1,tsType:{name:"boolean"},description:"Whether the OptionsTile is in invalid validation state.",type:{name:"bool"}},invalidText:{required:!1,tsType:{name:"string"},description:"Provide a text explaining why the OptionsTile is in invalid state.",type:{name:"string"}},locked:{required:!1,tsType:{name:"boolean"},description:"Whether the OptionsTile is in locked validation state.",type:{name:"bool"}},lockedText:{required:!1,tsType:{name:"string"},description:"Provide a text explaining why the OptionsTile is in locked state.",type:{name:"string"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"value"}],return:{name:"void"}}},description:"A handler for managing the controlled state of open prop. If not passed the open prop will not be honored and an uncontrolled state will be used.",type:{name:"func"}},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"value"}],return:{name:"void"}}},description:`Provide a function which will be called each time the user
interacts with the toggle.`,type:{name:"func"}},open:{required:!1,tsType:{name:"boolean"},description:"For controlled usage of the tile open state. This prop only works when an onChange prop is also passed, otherwise an uncontrolled state is used.",type:{name:"bool"}},size:{required:!1,tsType:{name:"union",raw:"'lg' | 'xl'",elements:[{name:"literal",value:"'lg'"},{name:"literal",value:"'xl'"}]},description:"Define the size of the OptionsTile.",type:{name:"enum",value:[{value:"'lg'",computed:!1},{value:"'xl'",computed:!1}]}},summary:{required:!1,tsType:{name:"string"},description:"Optionally provide a text summarizing the current state of the content.",type:{name:"string"}},title:{required:!0,tsType:{name:"ReactNode"},description:"Provide the title for this OptionsTile. Must not contain any interactive elements.",type:{name:"union",value:[{name:"string"},{name:"node"}]}},titleId:{required:!1,tsType:{name:"string"},description:"Optionally provide an id which should be used for the title.",type:{name:"string"}},warn:{required:!1,tsType:{name:"boolean"},description:"Whether the OptionsTile is in warning validation state.",type:{name:"bool"}},warnText:{required:!1,tsType:{name:"string"},description:"Provide a text explaining why the OptionsTile is in warning state.",type:{name:"string"}}}};export{$ as O};
