import{e as i,S as u,r as x}from"./iframe-HX3uP5rF.js";import{g}from"./getBatchActions-DuLtSpdy.js";import{s as w,m as E}from"./_storybook-styles-Du4BBk2J.js";import{D as f}from"./DatagridActions-XzBSGeGZ.js";import{D as S}from"./DatagridPagination-BkLVu_Cr.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-D2Epou2Y.js";import{u as h}from"./useExpandedRow-CeRmYANu.js";import{u as D}from"./useSelectRows-DMez4sq9.js";import{u as C}from"./useStickyColumn-DnWIohlm.js";import{u as R}from"./usePrefix-DNxTEn8O.js";import{E as H}from"./bucket-6-CUA0OKoV.js";import{T as b}from"./bucket-17-D_IiUgFQ.js";import"./bucket-0-BYnxl-xo.js";import"./bucket-2-B3fTYnsS.js";import"./index-BzsQW5qN.js";import"./bucket-18-KiX7pVM7.js";import"./bucket-7-C0o2ku32.js";import"./ComposedModal-Perag1HR.js";import"./index-BEhuL1MR.js";import"./index-DaYmMccZ.js";import"./LayerContext-ukaL0H1D.js";import"./clamp--00YEiB8.js";import"./ButtonSet-oAnUf3Md.js";import"./InlineLoading-BBzqH8Wg.js";import"./mergeRefs-91-mP8KM.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-DuBvmbL6.js";import"./Text-DBtsZOEn.js";import"./utils-CeAP7Zfj.js";import"./TableToolbarSearch-CETVY211.js";import"./wrapComponent-C_MeYdc2.js";import"./Search-D0434wgb.js";import"./FormContext-D8zI7Kke.js";import"./bucket-15-CLxl_Own.js";import"./Dropdown-D-M7Pgrf.js";import"./index-7Qnefi6R.js";import"./inheritsLoose-DHKJTbHM.js";import"./bucket-19-DB0RW10U.js";import"./MenuItem-BIFmRzEC.js";import"./useControllableState-D00pB8BY.js";import"./useAttachedMenu-cmTbMPST.js";import"./index-DFLvviES.js";import"./index-BDcd2g_t.js";import"./bucket-12-CwLSzf2K.js";import"./useOutsideClick-BYUuh41p.js";import"./OverflowMenuItem-Cj0lizFz.js";import"./useFilterContext-CErJQtux.js";import"./bucket-14-B4uFnJJd.js";import"./Pagination-Cpk-ood7.js";import"./Select-DO2lZfFE.js";import"./SelectItem-B8J5viA0.js";import"./MultiSelect-Gk6HO01T.js";import"./Checkbox-D4xbVJpr.js";import"./devtools-CNhWTRl7.js";import"./TableRow-ko7y-xlb.js";import"./bucket-1-CV829xS4.js";import"./TableToolbar-Pu1Eqx1y.js";import"./index-CmB6Vns6.js";import"./ErrorEmptyState-DvxCoRo3.js";import"./EmptyState-BzREjhfS.js";import"./props-helper-BQIeo-gE.js";import"./Link-Cfrp7F3L.js";import"./EmptyStateV2-BDi3BN_s.js";import"./ErrorIllustration-guoCGqLk.js";import"./useId-C7snKMrq.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-C4BRRVHZ.js";import"./NoDataIllustration-7eha6Pth.js";import"./NotFoundEmptyState-DlFX0nxF.js";import"./NotFoundIllustration-VMqpsUl5.js";import"./index.esm-Dsa8IpI1.js";import"./usePreviousValue-2yHnmDm2.js";import"./useResizeObserver-Clxhuppz.js";import"./useIsomorphicEffect-DVsAn1Kk.js";import"./getFocusableElements-BW7cf991.js";import"./index-D2lKpEPM.js";import"./useClickOutside-RpRJvgtI.js";import"./AccordionItem-C_AAt3Sd.js";import"./DatePicker-CI1fuGEG.js";import"./FormGroup-Dngd2jIR.js";import"./NumberInput-xthfq6y8.js";import"./useNormalizedInputProps-tAk74Vxi.js";import"./documentLang-E105Y72C.js";import"./bucket-16-oQ1bIA4Q.js";import"./RadioButton-B1Rnt81N.js";import"./RadioButtonGroup-D9vhiaAv.js";import"./usePrefersReducedMotion-oVmD-23-.js";import"./usePresence-BOdxUfig.js";import"./ActionSet-80ARld3N.js";import"./useWindowResize-B0CqaTIb.js";import"./TagSet-DYePRGHW.js";import"./Tag-BpNcgXsJ.js";import"./DefinitionTooltip-CRzfjG3b.js";import"./DismissibleTag-B8B-ymSl.js";import"./usePortalTarget-CISdp02a.js";import"./OperationalTag-BClxn1Ta.js";import"./SkeletonText-ChBAiwSl.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-DROxy2D4.js";import"./TableSelectRow-DPlxtiiw.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,bt={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const Bt=["ExpandableRowStory"];export{e as ExpandableRowStory,Bt as __namedExportsOrder,bt as default};
