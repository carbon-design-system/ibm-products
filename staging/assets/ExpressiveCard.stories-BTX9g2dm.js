import{e}from"./index-DzvNrmz8.js";import{b as ne,aI as te}from"./index-5As4T26e.js";import{A as ae}from"./AspectRatio-DiFZ13Bi.js";import{G as Y}from"./Grid-BZY738Do.js";import{C as Z}from"./Column-1L-H8Axx.js";import{T as ce,a as ie,b as se,A as le,c as me}from"./index-Cwsl1zwy.js";import{S as de}from"./StoryDocsPage-CMDuggIe.js";import{a as x}from"./index-B-lxVbXh.js";import{E as b}from"./ExpressiveCard-UUXrJGGf.js";import{e as pe}from"./bucket-9-DBhRplFe.js";import{A as ue,b as ge}from"./bucket-0-C6v-wDs9.js";import"./_commonjsHelpers-D6-XlEtG.js";import"./index-Cg1swjps.js";import"./index-Bv4JGo1_.js";import"./FlexGrid-SGz1UDZT.js";import"./index-P6UCShJt.js";import"./settings-DbzZchXt.js";import"./events-OVwOsPzJ.js";import"./bucket-17-F0QcB3Pi.js";import"./index-B_2-5AJB.js";import"./iframe-DJDim8wj.js";import"./index-Dytf1aFS.js";import"./index-DrFu-skq.js";import"./story-helper-DPPXKxdX.js";import"./v4-CtRu48qb.js";import"./devtools-CskDVa8y.js";import"./props-helper-BZh4EldX.js";import"./Card-QqcezDvm.js";import"./MenuItem-2b_8qYmQ.js";import"./useControllableState--uiA2kjV.js";import"./useAttachedMenu-ByErO-AK.js";import"./Text-DyBNjUAs.js";import"./bucket-2-CdrYWKja.js";import"./index-L9t50hwB.js";import"./mergeRefs-CTUecegF.js";import"./bucket-12-BMUr2nnk.js";import"./wrapFocus-DPmHpWJH.js";import"./createClassWrapper-0jMU_xgu.js";import"./index-B9LAK09p.js";import"./LayerContext-DfrloTEd.js";import"./bucket-6-BVxmYIXv.js";const Se="#root{inline-size:100%}.card-story .cds--aspect-ratio{display:flex;align-items:center;justify-content:center;background:var(--cds-layer-accent-01, #e0e0e0)}.c4p--card__media-left .c4p--card__media{inline-size:100%;max-inline-size:300px}",ee=()=>e.createElement(de,{altGuidelinesHref:"https://pages.github.ibm.com/carbon/ibm-products/components/card/expressive-card/usage/",blocks:[{story:a},{story:p},{story:c},{story:l},{story:u},{story:g},{story:i},{story:s},{story:m},{story:d},{title:"With AI Label",description:"An AI Label is intended for any scenario where something is being generated by AI to reinforce AI transparency, accountability, and explainability at the UI level.",source:{language:"html",code:`
      <ExpressiveCard
  label="Label"
  primaryButtonText="Primary"
  decorator={<AILabel><AILabelContent>{renderedContent}</AILabelContent></AILabel>}
  title="Title">
  <p>
    expressive card body content block. description inviting the user to take action on the card.
  </p>
</ExpressiveCard>
          `}},{description:"Clickable tiles only accept a boolean value of true for the decorator property.",source:{language:"html",code:`
      <ExpressiveCard
  label="Label"
  primaryButtonText="Primary"
  onClick={() => {}}
  onKeyDown={() => {}}
  decorator={true}
  title="Title">
  <p>
    expressive card body content block. description inviting the user to take action on the card.
  </p>
</ExpressiveCard>
          `}}]});ee.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const re=r=>{switch(r){case 1:return e.createElement(le,{className:"decorator-container",size:"xs"},e.createElement(me,null,e.createElement("div",null,e.createElement("p",{className:"secondary"},"AI Explained"),e.createElement("h1",null,"84%"),e.createElement("p",{className:"secondary bold"},"Confidence score"),e.createElement("p",{className:"secondary"},"This is not really Lorem Ipsum but the spell checker did not like the previous text with it's non-words which is why this unwieldy sentence, should one choose to call it that, here."),e.createElement("hr",null),e.createElement("p",{className:"secondary"},"Model type"),e.createElement("p",{className:"bold"},"Foundation model"))));case 2:return e.createElement(ce,null,e.createElement(ie,{label:"Additional information"},e.createElement(pe,null)),e.createElement(se,null,e.createElement("p",null,"Custom content here")));default:return}},tr={title:"IBM Products/Components/Cards/ExpressiveCard",component:b,tags:["autodocs"],parameters:{styles:Se,docs:{page:ee}},argTypes:{columnSizeSm:{control:{type:"select"},options:[4,8,12,16]},columnSizeMd:{control:{type:"select"},options:[4,8,12,16]},columnSizeLg:{control:{type:"select"},options:[4,8,12,16]},mediaRatio:{control:{type:"select"},options:["16x9","9x16","2x1","1x2","4x3","3x4","1x1"]},slug:{control:{type:"select",labels:{0:"No AI slug",1:"with AI Slug"},default:0},options:[!1,!0]},decorator:{control:{type:"select",labels:{0:"No AI label",1:"with AI label",2:"With non AI Label component",3:"with hollow AI label (boolean)"},default:0},options:[0,1,2,3]}},decorators:[r=>{const S=ne();return e.createElement("div",{className:`${S}--grid card-story`},r())}]},o={label:"Label",title:"Title",columnSizeSm:4,columnSizeMd:8,columnSizeLg:4,children:e.createElement("p",null,"expressive card body content block. description inviting the user to take action on the card."),primaryButtonText:"Read more"},n=r=>{const{children:S,columnSizeSm:z,columnSizeMd:C,columnSizeLg:y,decorator:t,...h}=r;return e.createElement(Y,null,e.createElement(Z,{sm:z,md:C,lg:y},e.createElement(b,{...h,decorator:t&&(t===3||re(t))},S)))},he=r=>{const{children:S,columnSizeSm:z,columnSizeMd:C,columnSizeLg:y,mediaRatio:t="1x1",decorator:h,...oe}=r;return e.createElement(Y,null,e.createElement(Z,{sm:z,md:C,lg:y},e.createElement(b,{media:e.createElement(ae,{ratio:t},t),decorator:h&&(h===3||re(h)),...oe},S)))},a=n.bind({});a.args={...o,mediaRatio:null};const c=n.bind({});c.args={...o,title:"",mediaRatio:null};const i=n.bind({});i.args={...o,caption:"Description or long caption",label:"",mediaRatio:null};const s=he.bind({});s.args={...o};const l=n.bind({});l.args={...o,actionIcons:[{id:"1",icon:r=>e.createElement(ue,{size:24,...r}),href:"#",iconDescription:"Next"}],primaryButtonText:"",mediaRatio:null};const m=n.bind({});m.args={...o,pictogram:r=>e.createElement(te,{size:32,...r}),mediaRatio:null};const d=n.bind({});d.args={...o,secondaryButtonText:"Remove",secondaryButtonKind:"ghost",mediaRatio:null};const p=n.bind({});p.args={...o,onClick:x("on click"),onKeyDown:x("on keydown"),primaryButtonText:"",mediaRatio:null};const u=n.bind({});u.args={...o,primaryButtonHref:"#",secondaryButtonHref:"#",secondaryButtonText:"Remove",secondaryButtonKind:"ghost"};const g=n.bind({});g.args={...o,primaryButtonIcon:r=>e.createElement(ge,{size:16,...r})};var E,v,f;a.parameters={...a.parameters,docs:{...(E=a.parameters)==null?void 0:E.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(f=(v=a.parameters)==null?void 0:v.docs)==null?void 0:f.source}}};var L,A,I;c.parameters={...c.parameters,docs:{...(L=c.parameters)==null?void 0:L.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(I=(A=c.parameters)==null?void 0:A.docs)==null?void 0:I.source}}};var M,G,D;i.parameters={...i.parameters,docs:{...(M=i.parameters)==null?void 0:M.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(D=(G=i.parameters)==null?void 0:G.docs)==null?void 0:D.source}}};var R,B,T;s.parameters={...s.parameters,docs:{...(R=s.parameters)==null?void 0:R.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    mediaRatio = '1x1',
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard media={<AspectRatio ratio={mediaRatio}>{mediaRatio}</AspectRatio>} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))} {...args}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(T=(B=s.parameters)==null?void 0:B.docs)==null?void 0:T.source}}};var k,W,w;l.parameters={...l.parameters,docs:{...(k=l.parameters)==null?void 0:k.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(w=(W=l.parameters)==null?void 0:W.docs)==null?void 0:w.source}}};var N,P,_;m.parameters={...m.parameters,docs:{...(N=m.parameters)==null?void 0:N.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(_=(P=m.parameters)==null?void 0:P.docs)==null?void 0:_.source}}};var H,K,O;d.parameters={...d.parameters,docs:{...(H=d.parameters)==null?void 0:H.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(O=(K=d.parameters)==null?void 0:K.docs)==null?void 0:O.source}}};var j,F,U;p.parameters={...p.parameters,docs:{...(j=p.parameters)==null?void 0:j.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(U=(F=p.parameters)==null?void 0:F.docs)==null?void 0:U.source}}};var $,q,J;u.parameters={...u.parameters,docs:{...($=u.parameters)==null?void 0:$.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(J=(q=u.parameters)==null?void 0:q.docs)==null?void 0:J.source}}};var Q,V,X;g.parameters={...g.parameters,docs:{...(Q=g.parameters)==null?void 0:Q.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(X=(V=g.parameters)==null?void 0:V.docs)==null?void 0:X.source}}};const ar=["Default","LabelOnly","WithCaption","WithMedia","WithActionIconHref","WithPictogram","WithSecondaryAction","Clickable","WithButtonHref","WithButtonIcon"];export{p as Clickable,a as Default,c as LabelOnly,l as WithActionIconHref,u as WithButtonHref,g as WithButtonIcon,i as WithCaption,s as WithMedia,m as WithPictogram,d as WithSecondaryAction,ar as __namedExportsOrder,tr as default};
