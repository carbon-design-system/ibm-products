import{e as n,I as R,c as u,p as b,P as e,r as d,B as C}from"./iframe-D7eStwkL.js";import{u as k}from"./uuidv4-BN2rGLQG.js";import{p as H}from"./props-helper-CnDIRZfz.js";import{O as F}from"./index-mKbH19hl.js";import{O as V}from"./OverflowMenuItem-UPp1xDAY.js";import{u as S}from"./useOverflowItems-BbibWCQS.js";const N="ActionBarItem",G=`${b.prefix}--action-bar-item`;let i=n.forwardRef(({label:r,className:l,renderIcon:m,...s},c)=>{const o=m;return n.createElement(R,{...s,ref:c,className:u(G,l),kind:"ghost",size:"md",align:"bottom-end",type:"button",label:r},o?n.createElement(o,null):null)});i=b.checkComponentEnabled(i,N);const J=["kind","size","align","type"],A={...R.propTypes};J.forEach(r=>{delete A[r]});i.displayName=N;i.propTypes={...A,className:e.string,label:e.string,onClick:e.func,renderIcon:e.oneOfType([e.func,e.object]),tabIndex:e.number};i.__docgenInfo={description:"The ActionBarItem is used in the page header to populate the action bar",methods:[],displayName:"ActionBarItem",props:{className:{required:!1,tsType:{name:"string"},description:`Specify an optional className to be added to your Button

(inherited from Carbon Button)`,type:{name:"string"}},label:{required:!1,tsType:{name:"string"},description:`If specifying the \`renderIcon\` prop, provide a description for that icon that can
be read by screen readers

(inherited from Carbon Button)`,type:{name:"string"}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:`Optional click handler

(inherited from Carbon Button)`,type:{name:"func"}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:`Optional prop to allow overriding the icon rendering.
Can be a React component class

(inherited from Carbon Button)`,type:{name:"union",value:[{name:"func"},{name:"object"}]}},tabIndex:{required:!1,tsType:{name:"number"},description:"Optional tab index",type:{name:"number"}}},composes:["PropsWithChildren"]};const p=`${b.prefix}--action-bar-overflow-items`,K="ActionBar",g=({className:r,menuOptionsClass:l,overflowItems:m,overflowAriaLabel:s,overflowMenuRef:c})=>{const o=d.useRef(k());return n.createElement("div",{ref:c},n.createElement(F,{"aria-label":s,className:u(p,r),direction:"bottom",flipped:!0,iconDescription:s,menuOptionsClass:u(`${p}__options`,l)},n.Children.map(m,(a,y)=>{const v=a?.props.renderIcon;return n.createElement(V,{className:`${p}__item`,onClick:a?.props.onClick,itemText:n.createElement("div",{className:`${p}__item-content`,"aria-describedby":`${o.current}-${y}--item-label`},n.createElement("span",{className:`${p}__item-label`,id:`${o.current}-${y}--item-label`},a?.props.label),typeof a?.props.renderIcon=="function"?n.createElement(v,null):a?.props.renderIcon)})})))};g.displayName=K;g.propTypes={className:e.string,menuOptionsClass:e.string,overflowAriaLabel:e.string,overflowItems:e.arrayOf(e.element),overflowMenuRef:e.oneOfType([e.shape({current:e.elementType}),e.object,e.func]),tabIndex:e.number};g.__docgenInfo={description:"",methods:[],displayName:"ActionBar",props:{className:{required:!1,tsType:{name:"string"},description:"className",type:{name:"string"}},menuOptionsClass:{required:!1,tsType:{name:"string"},description:"class name applied to the overflow options",type:{name:"string"}},overflowAriaLabel:{required:!1,tsType:{name:"string"},description:"overflowAriaLabel label for open close button overflow used for action bar items that do not fit.",type:{name:"string"}},overflowMenuRef:{required:!1,tsType:{name:"ForwardedRef",elements:[{name:"HTMLDivElement"}],raw:"ForwardedRef<HTMLDivElement>"},description:"overflowMenuRef for the overflow menu width that is needed to calculate the width of the action bar with overflow",type:{name:"union",value:[{name:"shape",value:{current:{name:"elementType",required:!1}}},{name:"object"},{name:"func"}]}},overflowItems:{required:!1,tsType:{name:"Array",elements:[{name:"ReactElement",elements:[{name:"signature",type:"object",raw:`{
  label: string;
  onClick: () => void;
  renderIcon: CarbonIconType;
}`,signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"onClick",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"renderIcon",value:{name:"CarbonIconType",required:!0}}]}}],raw:"ReactElement<OverflowItem>"}],raw:"ReactElement<OverflowItem>[]"},description:"overflowItems: items to bre shown in the ActionBar overflow menu",type:{name:"arrayOf",value:{name:"element"}}},tabIndex:{required:!1,tsType:{name:"number"},description:"Optional tab index",type:{name:"number"}}},composes:["PropsWithChildren"]};const w=`${b.prefix}--action-bar`,B="ActionBar",Q={actions:Object.freeze([])};let f=n.forwardRef(({actions:r=Q.actions,className:l,maxVisible:m,menuOptionsClass:s,onWidthChange:c,overflowAriaLabel:o,overflowMenuRef:a,rightAlign:y,...v},O)=>{const E=d.useRef(k()),x=d.useRef(null),_=d.useRef(null),I=O||_,$=d.useRef(null),T=a||$,M=r.map(t=>({id:t?.key,...t})),{visibleItems:j,hiddenItems:W,itemRefHandler:P,offsetRefHandler:D}=S(M,I,T,m,c),q=W?.map(({id:t,...h})=>n.createElement(i,{...h,key:t}));return n.createElement("div",{...v,className:u([w,l]),ref:I},n.createElement("div",{ref:x,className:u([`${w}__displayed-items`,{[`${w}__displayed-items--right`]:y}])},j.map(({key:t,id:h,...L})=>n.createElement(i,{id:h,...L,key:t,ref:z=>{P(h,z)}})),q?.length>0&&n.createElement(g,{menuOptionsClass:s,overflowAriaLabel:o,overflowMenuRef:t=>T.current=D(t),overflowItems:q,key:`overflow-menu-${E.current}`})))});f=b.checkComponentEnabled(f,B);f.displayName=B;f.propTypes={actions:e.arrayOf(e.shape({...H(C.propTypes,["kind","size","tooltipPosition","tooltipAlignment"]),id:e.string,key:e.string.isRequired,iconDescription:e.string.isRequired,label:e.string.isRequired,renderIcon:C.propTypes.renderIcon.isRequired,onClick:e.func})),className:e.string,maxVisible:e.number,menuOptionsClass:e.string,onWidthChange:e.func,overflowAriaLabel:e.string.isRequired,overflowMenuRef:e.oneOfType([e.shape({current:e.elementType}),e.object]),rightAlign:e.bool};f.__docgenInfo={description:"The ActionBar is used internally by the PageHeader to wrap ActionBarItems.",methods:[],displayName:"ActionBar",props:{actions:{required:!1,tsType:{name:"unknown"},description:`Specifies the action bar items. Each item is specified as an object
with required fields: key for array rendering, renderIcon, iconDescription and
label to provide the icon to display,
and optional 'onClick' to receive notifications when the button is clicked.
Additional fields in the object will be passed to the
Button component, and these can include 'disabled', 'ref', 'className',
and any other Button props.

Note that the Button props 'kind', 'size',
'tooltipPosition', 'tooltipAlignment' and 'type' are ignored, as these
cannot be used for an action bar item.

Carbon Button API https://react.carbondesignsystem.com/?path=/docs/components-button--default#component-api`,defaultValue:{value:"Object.freeze([])",computed:!0},type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},key:{name:"string",required:!0},iconDescription:{name:"string",required:!0},label:{name:"string",required:!0},renderIcon:{name:"custom",raw:"Button.propTypes.renderIcon.isRequired",required:!0},onClick:{name:"func",required:!1}}}}},className:{required:!1,tsType:{name:"string"},description:"className",type:{name:"string"}},maxVisible:{required:!1,tsType:{name:"number"},description:"maxVisible : Maximum action bar items visible before going into the overflow menu",type:{name:"number"}},menuOptionsClass:{required:!1,tsType:{name:"string"},description:"class name applied to the overflow options",type:{name:"string"}},onWidthChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(sizes?: { minWidth?: number; maxWidth?: number }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ minWidth?: number; maxWidth?: number }",signature:{properties:[{key:"minWidth",value:{name:"number",required:!1}},{key:"maxWidth",value:{name:"number",required:!1}}]}},name:"sizes"}],return:{name:"void"}}},description:"onItemCountChange - event reporting maxWidth",type:{name:"func"}},overflowAriaLabel:{required:!0,tsType:{name:"string"},description:"overflowAriaLabel label for open close button overflow used for action bar items that do nto fit.",type:{name:"string"}},overflowMenuRef:{required:!1,tsType:{name:"ForwardedRef",elements:[{name:"HTMLDivElement"}],raw:"ForwardedRef<HTMLDivElement>"},description:"overflowMenuRef for the overflow menu width that is needed to calculate the width of the action bar with overflow",type:{name:"union",value:[{name:"shape",value:{current:{name:"elementType",required:!1}}},{name:"object"}]}},rightAlign:{required:!1,tsType:{name:"boolean"},description:"align tags to right of available space",type:{name:"bool"}}},composes:["PropsWithChildren"]};export{f as A};
