import{r as a,$ as c,e as v,a0 as P,P as o}from"./iframe-BlQ-LkYW.js";import{d as S}from"./props-helper-DmAPJ46T.js";const d=a.createContext(P);function g({children:e,flags:l={},defaultPortalTargetBody:t=!0,enableDatagridUseInlineEdit:u=!1,enableDatagridUseEditableCell:i=!1,enableDatagridUseCustomizeColumns:n=!1,enableSidepanelResizer:p=!1,enableTestFlagA:y=!1,enableTestFlagB:F=!1}){const r=a.useContext(d),[T,h]=a.useState(r),f={"default-portal-target-body":t,"enable-datagrid-useInlineEdit":u,"enable-datagrid-useEditableCell":i,"enable-datagrid-useCustomizeColumns":n,enableSidepanelResizer:p,"enable-test-flag-a":y,"enable-test-flag-b":F,...l},[C,b]=a.useState(()=>{const s=c(f);return s.mergeWithScope(r),s});if(r!==T){const s=c(f);s.mergeWithScope(r),b(s),h(r)}return E(f,V,s=>{const m=c(s);m.mergeWithScope(r),b(m)}),v.createElement(d.Provider,{value:C},e)}g.propTypes={children:o.node,defaultPortalTargetBody:o.bool,enableDatagridUseCustomizeColumns:o.bool,enableDatagridUseEditableCell:o.bool,enableDatagridUseInlineEdit:o.bool,enableSidepanelResizer:o.bool,enableTestFlagA:o.bool,enableTestFlagB:o.bool,flags:S(o.objectOf(o.bool))};function E(e,l,t){const u=a.useRef(!1),i=a.useRef(t),[n,p]=a.useState(e);l(n,e)||p(e),a.useEffect(()=>{i.current=t}),a.useEffect(()=>{u.current&&i.current(n)},[n]),a.useEffect(()=>{u.current=!0},[])}function x(e){return a.useContext(d).enabled(e)}function D(){return a.useContext(d)}function V(e,l){if(e===l)return!0;for(const t of Object.keys(e))if(e[t]!==l[t])return!1;for(const t of Object.keys(l))if(l[t]!==e[t])return!1;return!0}g.__docgenInfo={description:"Supports an object of feature flag values with the `flags` prop, merging them\nalong with the current `FeatureFlagContext` to provide consumers to check if\na feature flag is enabled or disabled in a given React tree",methods:[],displayName:"FeatureFlags",props:{children:{required:!1,tsType:{name:"ReactNode"},description:"",type:{name:"node"}},flags:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"boolean"}],raw:"Record<string, boolean>"},description:"",defaultValue:{value:"{}",computed:!1},type:{name:"custom",raw:"deprecateProp(\n  PropTypes.objectOf(PropTypes.bool),\n  'The `flags` prop for `FeatureFlag` has been deprecated. Please pass the flags directly as props in camelCase'\n)"}},defaultPortalTargetBody:{required:!1,tsType:{name:"boolean"},description:"Provide the feature flags to enabled or disabled in the current React tree",defaultValue:{value:"true",computed:!1},type:{name:"bool"}},enableDatagridUseInlineEdit:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},enableDatagridUseEditableCell:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},enableDatagridUseCustomizeColumns:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},enableSidepanelResizer:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},enableTestFlagA:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},enableTestFlagB:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}}}};export{g as F,D as a,x as u};
