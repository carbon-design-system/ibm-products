import{b as X,d as j,P as a,L as Y}from"./index-4poXP75K.js";import{M as Z,a as ee,b as te,C as ne}from"./ComposedModal-CpTP8HrD.js";import{e,r as t}from"./index-DtHxqM--.js";import{g as J}from"./devtools-B69Kc3qg.js";import{p as A,B as M}from"./settings-Bzj6EGPa.js";import{P as ae,a as re}from"./ProgressIndicator-C5SqSulB.js";import{C as se}from"./Carousel-Cuxr4mgx.js";import{I as D}from"./InlineLoading-WqBhFG3p.js";import{c as oe}from"./clamp-CsXXRQhr.js";import{a as Q}from"./bucket-0-C0XwVn_F.js";import{u as ie}from"./useId-DyRoBmqU.js";const z=e.forwardRef((B,v)=>{const{className:N="",headerTitle:p,headerSubTitle:b,closeIconDescription:u,hideProgressIndicator:d,children:g}=B,{bodyChildrenData:o,isFullScreen:i,progStep:m,handleClose:l,stepCount:f}=e.useContext(O),y=`${A.prefix}--interstitial-screen`,n=`${y}--internal-header`,$=ie(),E=X(),k=()=>e.createElement(e.Fragment,null,(p||b)&&e.createElement("div",{className:`${y}--titleContainer`},p&&e.createElement("h1",null,p),b&&e.createElement("h2",null,b)),g,!d&&o&&Array.isArray(o)&&e.createElement("div",{className:`${y}--progress`},e.createElement(ae,{vertical:!1,currentIndex:m},o==null?void 0:o.map((s,S)=>{var c,w;if(e.isValidElement(s)){const R=`${$}_${((w=(c=s.props)==null?void 0:c.stepTitle)==null?void 0:w.replace(/\s+/g,""))||S}`;return e.createElement(re,{key:R,label:s.props.stepTitle||"",translateWithId:s.props.translateWithId})}})),e.createElement("div",{"aria-live":"polite","aria-atomic":"true",className:`${E}--visually-hidden`},"Step ",m+1," of ",f)));return i?e.createElement("header",{ref:v,className:j(n,N,{[`${n}--has-title`]:p||b||g})},k()):e.createElement(Z,{ref:v,className:j(n,N,{[`${n}--has-title`]:p||b||g}),closeModal:l,iconDescription:u},k())});z.propTypes={children:a.node,className:a.string,closeIconDescription:a.string,headerSubTitle:a.string,headerTitle:a.string,hideProgressIndicator:a.bool};z.__docgenInfo={description:"",methods:[],displayName:"InterstitialScreenHeader",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:`Provide the optional content for header section and will be render after header titles and before progress indicator.
People can make use of this if they want to have custom header.`,type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},headerTitle:{required:!1,tsType:{name:"string"},description:"Provide an optional title to be applied to the header >.",type:{name:"string"}},headerSubTitle:{required:!1,tsType:{name:"string"},description:"Provide an optional sub title to be applied to the header >.",type:{name:"string"}},closeIconDescription:{required:!1,tsType:{name:"string"},description:"Tooltip text and aria label for the Close button icon.",type:{name:"string"}},hideProgressIndicator:{required:!1,tsType:{name:"boolean"},description:"Optional parameter to hide the progress indicator when multiple steps are used.",type:{name:"bool"}}}};const W=e.forwardRef((B,v)=>{const{className:N="",contentRenderer:p,...b}=B,u=`${A.prefix}--interstitial-screen`,d=`${u}--internal-body`,[g,o]=t.useState(),{setBodyChildrenData:i,bodyChildrenData:m,isFullScreen:l,setProgStep:f,bodyScrollRef:y,scrollRef:n,handleGotoStep:$,progStep:E,setStepCount:k,disableButtonConfig:s,setDisableButtonConfig:S}=t.useContext(O),[c,w]=t.useState(-1);t.useEffect(()=>{const h=p({handleGotoStep:$,progStep:E,disableActionButton:R}),q=t.isValidElement(h),T=q?h.props.children:h;i==null||i(T),q&&Array.isArray(T)?(o("multi"),k==null||k(T.length)):o("single")},[E]),t.useEffect(()=>{if(c!==-1){const h=m&&m.length>1?parseFloat((1/(m.length-1)).toFixed(2)):0,q=c/h;f==null||f(Math.ceil(q))}},[c]);const R=h=>{S==null||S({...s,...h})},C=h=>w(h),P=()=>e.createElement("div",{className:`${u}--body ${N}`,ref:y??v,...b},e.createElement("div",{className:`${u}--content`},g==="multi"?e.createElement("div",{className:`${u}__carousel`},e.createElement(se,{disableArrowScroll:!0,ref:n,onScroll:C},m)):g==="single"?m:""));return l?P():e.createElement(ee,{ref:v,className:d},P())});W.propTypes={className:a.string,contentRenderer:a.func.isRequired};W.__docgenInfo={description:"",methods:[],displayName:"InterstitialScreenBody",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},contentRenderer:{required:!0,tsType:{name:"signature",type:"function",raw:`(
  config: contentRendererArgs
) => ReactElement<EnrichedChildren> | ReactNode`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  handleGotoStep?: (value: number) => void;
  progStep?: number;
  disableActionButton: (value: disableButtonConfigType) => void;
}`,signature:{properties:[{key:"handleGotoStep",value:{name:"signature",type:"function",raw:"(value: number) => void",signature:{arguments:[{type:{name:"number"},name:"value"}],return:{name:"void"}},required:!1}},{key:"progStep",value:{name:"number",required:!1}},{key:"disableActionButton",value:{name:"signature",type:"function",raw:"(value: disableButtonConfigType) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  skip?: boolean;
  back?: boolean;
  next?: boolean;
  start?: boolean;
}`,signature:{properties:[{key:"skip",value:{name:"boolean",required:!1}},{key:"back",value:{name:"boolean",required:!1}},{key:"next",value:{name:"boolean",required:!1}},{key:"start",value:{name:"boolean",required:!1}}]}},name:"value"}],return:{name:"void"}},required:!0}}]}},name:"config"}],return:{name:"union",raw:"ReactElement<EnrichedChildren> | ReactNode",elements:[{name:"ReactElement",elements:[{name:"signature",type:"object",raw:`{
  children: React.ReactNode;
  stepTitle: string;
  translateWithId?: (id: string) => string;
}`,signature:{properties:[{key:"children",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!0}},{key:"stepTitle",value:{name:"string",required:!0}},{key:"translateWithId",value:{name:"signature",type:"function",raw:"(id: string) => string",signature:{arguments:[{type:{name:"string"},name:"id"}],return:{name:"string"}},required:!1}}]}}],raw:"ReactElement<EnrichedChildren>"},{name:"ReactNode"}]}}},description:`This is a required callback that has to return the content to render in the body section.
It can be a single child or an array of children depending on your need`,type:{name:"func"}}}};const V=e.forwardRef((B,v)=>{const{className:N="",skipButtonLabel:p="Skip",previousButtonLabel:b="Back",nextButtonLabel:u="Next",startButtonLabel:d="Get Started",actionButtonRenderer:g,onAction:o}=B,i=`${A.prefix}--interstitial-screen`,{handleClose:m,progStep:l,handleGotoStep:f,stepCount:y,disableButtonConfig:n,isFullScreen:$}=t.useContext(O),E=t.useRef(void 0),k=t.useRef(void 0),[s,S]=t.useState(""),c=!!y,w=0,R=y-1;t.useEffect(()=>{l+1===y&&E.current&&E.current.focus()},[l]);const C=async x=>{if(S(x),await(o==null?void 0:o(x,{handleGotoStep:f,progStep:l,stepCount:y,disableButtonConfig:n})),S(""),x==="next"||x==="back"){const r=oe(l+(x==="next"?1:-1),w,R);f==null||f(r)}else m==null||m(x)},P=()=>C("start"),h=()=>C("skip"),q=()=>C("next"),T=()=>C("back"),H=t.useMemo(()=>s!=="start"&&c&&l===R?{renderIcon:Q}:{},[s,c,l,R]),F=()=>e.createElement("div",{ref:v,className:`${i}--footer ${N}`},c&&p!==""&&e.createElement(M,{className:`${i}--skip-btn`,kind:"ghost",size:"lg",title:p,onClick:h,disabled:n==null?void 0:n.skip},p,s==="skip"&&e.createElement(D,null)),e.createElement("div",{className:`${i}--footer-controls`},c&&l>0&&e.createElement(M,{className:`${i}--prev-btn`,kind:"secondary",size:"lg",title:b,disabled:n==null?void 0:n.back,onClick:T},b,s==="back"&&e.createElement(D,null)),c&&l<R&&e.createElement(M,{className:`${i}--next-btn`,renderIcon:s!=="next"?Q:null,ref:k,size:"lg",title:u,disabled:n==null?void 0:n.next,onClick:q},u,s==="next"&&e.createElement(D,null)),(c&&l===R||!c)&&e.createElement(M,{className:`${i}--start-btn`,ref:E,size:"lg",title:d,disabled:n==null?void 0:n.start,onClick:P,...H},d,s==="start"&&e.createElement(D,null))));return g?e.createElement("div",{className:`${i}--footer`},g({handleGotoStep:f,progStep:l,stepCount:y,disableButtonConfig:n})):$?F():e.createElement(te,{ref:v},F())});V.propTypes={actionButtonRenderer:a.func,className:a.string,nextButtonLabel:a.string,onAction:a.func,previousButtonLabel:a.string,skipButtonLabel:a.string,startButtonLabel:a.string};V.__docgenInfo={description:"",methods:[],displayName:"InterstitialScreenFooter",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},previousButtonLabel:{required:!1,tsType:{name:"string"},description:"The label for the Previous button.",type:{name:"string"}},skipButtonLabel:{required:!1,tsType:{name:"string"},description:"The label for the skip button.",type:{name:"string"}},startButtonLabel:{required:!1,tsType:{name:"string"},description:"The label for the start button.",type:{name:"string"}},nextButtonLabel:{required:!1,tsType:{name:"string"},description:"The label for the Next button.",type:{name:"string"}},actionButtonRenderer:{required:!1,tsType:{name:"signature",type:"function",raw:"(config: actionButtonRendererArgs) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  handleGotoStep?: (value: number) => void;
  progStep?: number;
  stepCount?: number;
  disableButtonConfig?: disableButtonConfigType;
}`,signature:{properties:[{key:"handleGotoStep",value:{name:"signature",type:"function",raw:"(value: number) => void",signature:{arguments:[{type:{name:"number"},name:"value"}],return:{name:"void"}},required:!1}},{key:"progStep",value:{name:"number",required:!1}},{key:"stepCount",value:{name:"number",required:!1}},{key:"disableButtonConfig",value:{name:"signature",type:"object",raw:`{
  skip?: boolean;
  back?: boolean;
  next?: boolean;
  start?: boolean;
}`,signature:{properties:[{key:"skip",value:{name:"boolean",required:!1}},{key:"back",value:{name:"boolean",required:!1}},{key:"next",value:{name:"boolean",required:!1}},{key:"start",value:{name:"boolean",required:!1}}]},required:!1}}]}},name:"config"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}}},description:`This is an optional callback prop that allows to render your custom footer action buttons.
note: this is applicable when not using custom actionButtonRenderer`,type:{name:"func"}},onAction:{required:!1,tsType:{name:"signature",type:"function",raw:"(actionName: ActionType, config: actionButtonRendererArgs) => void",signature:{arguments:[{type:{name:"union",raw:"'close' | 'start' | 'skip' | 'back' | 'next'",elements:[{name:"literal",value:"'close'"},{name:"literal",value:"'start'"},{name:"literal",value:"'skip'"},{name:"literal",value:"'back'"},{name:"literal",value:"'next'"}]},name:"actionName"},{type:{name:"signature",type:"object",raw:`{
  handleGotoStep?: (value: number) => void;
  progStep?: number;
  stepCount?: number;
  disableButtonConfig?: disableButtonConfigType;
}`,signature:{properties:[{key:"handleGotoStep",value:{name:"signature",type:"function",raw:"(value: number) => void",signature:{arguments:[{type:{name:"number"},name:"value"}],return:{name:"void"}},required:!1}},{key:"progStep",value:{name:"number",required:!1}},{key:"stepCount",value:{name:"number",required:!1}},{key:"disableButtonConfig",value:{name:"signature",type:"object",raw:`{
  skip?: boolean;
  back?: boolean;
  next?: boolean;
  start?: boolean;
}`,signature:{properties:[{key:"skip",value:{name:"boolean",required:!1}},{key:"back",value:{name:"boolean",required:!1}},{key:"next",value:{name:"boolean",required:!1}},{key:"start",value:{name:"boolean",required:!1}}]},required:!1}}]}},name:"config"}],return:{name:"void"}}},description:"optional asynchronous callback on action button click",type:{name:"func"}}}};const L=`${A.prefix}--interstitial-screen`,G="InterstitialScreen",O=t.createContext({progStep:0,stepCount:0});let I=e.forwardRef((B,v)=>{const{children:N,className:p,interstitialAriaLabel:b="Interstitial screen",isFullScreen:u=!1,isOpen:d=!1,launcherButtonRef:g,onClose:o,...i}=B,m=t.useRef(null),l=v||m,f=t.useRef(void 0),y=t.useRef(void 0),n=t.useRef(void 0),[$,E]=t.useState(null),[k,s]=t.useState(0),S=t.useRef(null),[c,w]=t.useState(0),[R,C]=t.useState({skip:!1,back:!1,next:!1,start:!1}),P=u?`${L}--full-screen`:`${L}--modal`,[h,q]=t.useState(null),T=t.useCallback(r=>{s(0),o==null||o(r??"close")},[o]);if(t.useEffect(()=>{var r;d||s(0),(r=y.current)==null||r.focus()},[d,k,o]),t.useEffect(()=>{var r;E(!u&&d?"is-visible":null),(r=n==null?void 0:n.current)==null||r.focus(),!d&&g&&setTimeout(()=>{g.current.focus()},0)},[g,u,d]),t.useEffect(()=>{const r=_=>{const{key:U}=_;U==="Escape"&&T("close")};return window.addEventListener("keydown",r),()=>window.removeEventListener("keydown",r)},[T]),!d)return null;const H=()=>e.createElement(Y,{enableExperimentalFocusWrapWithoutSentinels:!0},e.createElement(ne,{...i,preventCloseOnClickOutside:!0,className:j(L,p),size:"lg",onClose:T,open:d,ref:l,"aria-label":b,...J(G)},N)),F=()=>e.createElement("div",{...i,className:j(L,p,P,$),role:"main","aria-label":b,ref:v,...J(G)},e.createElement("div",{className:`${L}--container`},N)),x=r=>{s(r),f.current.scrollToView(r),K()},K=()=>{var r,_;(_=(r=S.current)==null?void 0:r.scroll)==null||_.call(r,{top:0,behavior:"smooth"})};return e.createElement(O.Provider,{value:{bodyChildrenData:h,setBodyChildrenData:q,isFullScreen:u,handleClose:T,progStep:k,setProgStep:s,bodyScrollRef:S,scrollRef:f,handleGotoStep:x,stepCount:c,setStepCount:w,disableButtonConfig:R,setDisableButtonConfig:C}},u?F():H())});I.Header=z;I.Body=W;I.Footer=V;I=A.checkComponentEnabled(I,G);I.displayName=G;I.propTypes={children:a.node,className:a.string,closeIconDescription:a.string,interstitialAriaLabel:a.string,isFullScreen:a.bool,isOpen:a.bool,launcherButtonRef:a.any,onClose:a.func};I.__docgenInfo={description:`InterstitialScreen can be a full page or an overlay, and are
shown on the first time a user accesses a new experience
(e.g. upon first login or first time opening a page where a
newly purchased capability is presented).`,methods:[],displayName:"InterstitialScreen",props:{children:{required:!1,tsType:{name:"ReactNode"},description:"Provide the contents of the InterstitialScreen.",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},interstitialAriaLabel:{required:!1,tsType:{name:"string"},description:"The aria label applied to the Interstitial Screen component",type:{name:"string"}},isFullScreen:{required:!1,tsType:{name:"boolean"},description:`Specifies whether the component is shown as a full-screen
experience, else it is shown as a modal by default.`,type:{name:"bool"}},isOpen:{required:!1,tsType:{name:"boolean"},description:"Specifies whether the component is currently open.",type:{name:"bool"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: ActionType) => void",signature:{arguments:[{type:{name:"union",raw:"'close' | 'start' | 'skip' | 'back' | 'next'",elements:[{name:"literal",value:"'close'"},{name:"literal",value:"'start'"},{name:"literal",value:"'skip'"},{name:"literal",value:"'back'"},{name:"literal",value:"'next'"}]},name:"value"}],return:{name:"void"}}},description:"Function to call when the close button is clicked.",type:{name:"func"}},launcherButtonRef:{required:!1,tsType:{name:"RefObject",elements:[{name:"HTMLElement"}],raw:"RefObject<HTMLElement>"},description:"Provide a ref to return focus to once the interstitial is closed.",type:{name:"any"}},closeIconDescription:{description:"Tooltip text and aria label for the Close button icon.",type:{name:"string"},required:!1}}};export{I};
