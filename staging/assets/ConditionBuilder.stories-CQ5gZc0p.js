import{R as t,r as b}from"./index-BwDkhjyp.js";import{j as R}from"./jsx-runtime-Yb_4y5hn.js";import{useMDXComponents as jn}from"./index-DlpNa54Y.js";import"./chunk-HLWAVYOI-BSMM31hG.js";import{e as lt,i as st,C as ut}from"./index-CHtKUyL9.js";import{b as xe,_ as ue,c as F,e as dt,v as ct,C as $n,a0 as Pn}from"./index-CO-HQMMN.js";import{T as Ln}from"./TextInput-ChL1gOHC.js";import{P as n}from"./index-Dk74W0Oi.js";import{d as Dn,az as Hn}from"./bucket-6-DcTgwLU8.js";import{W as pt,a as Bn,b0 as ne}from"./bucket-18-BI__9nmH.js";import{a5 as Fe}from"./bucket-7-4HCVGIgn.js";import{s as mt,p as Rn,T as gt,B as Gn,a0 as Fn,bj as Mn,_ as Vn}from"./settings-9_3hiHpE.js";import{a6 as Wn}from"./bucket-17-ClE8iwID.js";import{B as yt,C as je}from"./bucket-1-CErLq4nZ.js";import{u as _}from"./uuidv4-BQrI85uz.js";import{g as ft}from"./devtools-7ohusRRR.js";import{L as vt}from"./index-Y0d6iLU4.js";import{P as bt,a as ht}from"./index-DQ9l4IMz.js";import{A as zn,t as wt}from"./bucket-0-a_zZqU1p.js";import{S as Zn}from"./Search-Bca_YerL.js";import{C as Un,a_ as Tt,aY as qt}from"./bucket-2-Bt1jIBkN.js";import{N as Ct}from"./NumberInput-CIYFWR2V.js";import{T as At}from"./TextArea-v_g_tvUp.js";import{D as rn,a as Be}from"./DatePicker-DAE6aAKW.js";import{S as Re}from"./SelectItem-6Xvx7oKV.js";import{aN as Kn}from"./bucket-16-C765DF6-.js";import"./_commonjsHelpers-BosuxZz1.js";import"./iframe-BleUBiry.js";import"../sb-preview/runtime.js";import"./react-18-Dd3bHtks.js";import"./index-BONylQH5.js";import"./extends-CCbyfPlC.js";import"./index-C2eUe6cH.js";import"./index-C0xX6qoh.js";import"./index-DrFu-skq.js";import"./useNormalizedInputProps-BXOXUZo5.js";import"./Text-DeIkfaUm.js";import"./FormContext-C7kRVu4t.js";import"./useAnnouncer-Dwt0jqXi.js";import"./index-CJvxHwuA.js";import"./events-OVwOsPzJ.js";import"./LayerContext-DbU-6VX4.js";import"./bucket-14-mit-FcZ1.js";const Yn=e=>{let{hideLabel:a,className:r,...i}=e;const s=xe();return t.createElement("div",ue({className:F(`${s}--form-item`,r)},i),!a&&t.createElement("span",{className:`${s}--label ${s}--skeleton`}),t.createElement("div",{className:`${s}--select ${s}--skeleton`},t.createElement("div",{className:`${s}--select-input`})))};Yn.propTypes={className:n.string,hideLabel:n.bool};const kt=Array.from({length:mt.length-1}).map((e,a)=>a+1),Xn=t.forwardRef(function(a,r){const{as:i="div",children:s,className:l,gap:u,orientation:d="vertical",...p}=a,c=xe(),m=F(l,{[`${c}--stack-${d}`]:!0,[`${c}--stack-scale-${u}`]:typeof u=="number"}),w={};return typeof u=="string"&&(w[`--${c}-stack-gap`]=u),t.createElement(i,ue({},p,{ref:r,className:m,style:w}),s)});Xn.propTypes={as:n.elementType,children:n.node,className:n.string,gap:n.oneOfType([n.string,n.oneOf(kt)]),orientation:n.oneOf(["horizontal","vertical"])};const Ot=t.forwardRef(function(a,r){return t.createElement(Xn,ue({},a,{ref:r,orientation:"vertical"}))}),Jn=t.forwardRef(function(a,r){let{children:i,className:s,disabled:l=!1,hideLabel:u,id:d,invalidText:p="Invalid time format.",invalid:c=!1,warningText:m="Warning message.",warning:w=!1,labelText:g,light:f=!1,maxLength:q=5,onChange:C=()=>{},onClick:x=()=>{},onBlur:y=()=>{},pattern:T="(1[012]|[1-9]):[0-5][0-9](\\s)?",placeholder:D="hh:mm",readOnly:j,size:k="md",type:E="text",value:L,...M}=a;const O=xe(),[N,I]=t.useState(L),[H,J]=t.useState(L);L!==H&&(I(L),J(L));function ae(W){l||(j||I(N),x(W))}function re(W){!l&&!j&&(I(N),C(W))}function A(W){l||(j||I(N),y(W))}const v=F(`${O}--time-picker__input-field`,`${O}--text-input`,[s],{[`${O}--text-input--light`]:f,[`${O}--time-picker__input-field-error`]:c||w}),h=F({[`${O}--time-picker`]:!0,[`${O}--time-picker--light`]:f,[`${O}--time-picker--invalid`]:c,[`${O}--time-picker--warning`]:w,[`${O}--time-picker--readonly`]:j,[`${O}--time-picker--${k}`]:k,...s&&{[s]:!0}}),P=F(`${O}--label`,{[`${O}--visually-hidden`]:u,[`${O}--label--disabled`]:l}),$=g?t.createElement("label",{htmlFor:d,className:P},g):null;function S(){const W={onMouseDown:K=>{j&&(K.preventDefault(),K.target.focus())},onKeyDown:K=>{j&&["ArrowDown","ArrowUp"," "].includes(K.key)&&K.preventDefault()}};return t.Children.map(i,K=>{const X=K;if(X)return t.cloneElement(X,{...X.props,disabled:X.props.disabled??l,readOnly:j,...W})})}const V={readOnly:j};return t.createElement("div",{className:F(`${O}--form-item`,s)},$,t.createElement("div",{className:h},t.createElement("div",{className:`${O}--time-picker__input`},t.createElement("input",ue({className:v,"data-invalid":c||void 0,disabled:l,id:d,maxLength:q,onClick:ae,onChange:re,onBlur:A,placeholder:D,pattern:T,ref:r,type:E,value:L},M,V)),(c||w)&&t.createElement("div",{className:`${O}--time-picker__error__icon`},c?t.createElement(pt,{className:`${O}--checkbox__invalid-icon`,size:16}):t.createElement(Bn,{className:`${O}--text-input__invalid-icon--warning`,size:16}))),S()),(c||w)&&t.createElement("div",{className:`${O}--form-requirement`},c?p:m))});Jn.propTypes={children:n.node,className:n.string,disabled:n.bool,hideLabel:n.bool,id:n.string.isRequired,invalid:n.bool,invalidText:n.node,labelText:n.node,light:dt(n.bool),maxLength:n.number,onBlur:n.func,onChange:n.func,onClick:n.func,pattern:n.string,placeholder:n.string,readOnly:n.bool,size:n.oneOf(["sm","md","lg"]),type:n.string,value:n.string,warning:n.bool,warningText:n.node};const Me=t.forwardRef(function(a,r){let{["aria-label"]:i="open list of options",children:s,id:l,disabled:u=!1,className:d,...p}=a;const c=xe(),m=F({[`${c}--select`]:!0,[`${c}--time-picker__select`]:!0,...d&&{[d]:!0}});return t.createElement("div",{className:m},t.createElement("select",ue({"aria-label":i,className:`${c}--select-input`,disabled:u,id:l,ref:r},p),s),t.createElement(ct,{className:`${c}--select__arrow`,"aria-hidden":"true"}))});Me.propTypes={children:n.node,className:n.string,defaultValue:n.any,disabled:n.bool,id:n.string.isRequired};const Ve=t.createContext(1),Ze=t.forwardRef(function(a,r){let{as:i="section",level:s,...l}=a;const u=t.useContext(Ve),d=s??u+1,p=i;return t.createElement(Ve.Provider,{value:Math.min(d,6)},t.createElement(p,ue({ref:r},l)))});Ze.propTypes={as:n.elementType,children:n.node,className:n.string,level:n.number};const Ue=t.forwardRef(function(a,r){const i=`h${t.useContext(Ve)}`;return t.createElement(i,ue({ref:r},a))});Ue.propTypes={children:n.node,className:n.string};const o=`${Rn.prefix}--condition-builder`,de="Non-Hierarchical",z="Hierarchical",ke=(e,a)=>{e&&setTimeout(()=>{var r,i,s,l,u;U((r=e.target.closest('[role="gridcell"]'))==null?void 0:r.querySelector("button"),a),(s=(i=e.target.closest('[role="gridcell"]'))==null?void 0:i.querySelector("button"))==null||s.click(),(u=(l=e.target.closest('[role="gridcell"]'))==null?void 0:l.querySelector("button"))==null||u.focus()},0)},oe=(e,a)=>{setTimeout(()=>{U(e,a)},0)},We=(e,a,r,i,s,l)=>{e==document.activeElement?a!==r.length-1?oe(r[a+1],l):oe(r[i?0:r.length-1],l):Array.from(r).indexOf(document.activeElement)==-1&&s&&oe(r[0],l)},ze=(e,a,r,i,s,l)=>{e==document.activeElement?oe(a!==0?r[a-1]:r[i?r.length-1:0],l):Array.from(r).indexOf(document.activeElement)==-1&&s&&oe(r[r.length-1],l)},_t=(e,a)=>e[a],ge=e=>e&&e!=="INVALID",U=(e,a)=>{var i,s;const r=(e==null?void 0:e.closest(`.${o}__content-container`))??(e==null?void 0:e.closest(`.${o}__actions-container`));r&&Array.from(r.querySelectorAll('[tabindex="0"]')).map(l=>l==null?void 0:l.setAttribute("tabindex","-1")),e==null||e.setAttribute("tabindex","0"),(s=(i=a.current)==null?void 0:i.querySelector(`.${o}__statement-button`))==null||s.setAttribute("tabindex","1"),e==null||e.focus()},Ge=e=>{const a=String(e.getDate()).padStart(2,"0"),r=String(e.getMonth()+1).padStart(2,"0"),i=e.getFullYear();return`${a}/${r}/${i}`},xt={text:e=>e,textarea:e=>e,time:e=>e,number:e=>e,option:e=>e&&typeof e!="string"?(Array.isArray(e)?e:[e]).map(r=>r.label).join(", "):e,date:e=>{if(Array.isArray(e)&&e.length>1){const a=e!=null&&e[0]&&!isNaN(new Date(e[0]))?Ge(new Date(e[0])):"",r=e!=null&&e[1]&&!isNaN(new Date(e[1]))?Ge(new Date(e[1])):"";return`${a} To ${r}`}else return Array.isArray(e)&&!isNaN(new Date(e[0]))?Ge(new Date(e[0])):e},custom:e=>e},te=({className:e,label:a,hideLabel:r,tooltipAlign:i,renderIcon:s,onClick:l,showToolTip:u,wrapperProps:d,onBlur:p,onFocus:c,onMouseEnter:m,onMouseLeave:w,isInvalid:g,wrapperClassName:f,tabIndex:q,...C})=>{const x=xe(),y=()=>{const T=C["data-name"]??"";return t.createElement("button",{tabIndex:q!==void 0?q:-1,className:F([e,`${o}__button`,{[`${o}__text-ellipsis`]:u&&!r&&!g},{[`${o}__invalid-input`]:g}]),type:"button",onClick:l,onBlur:p,onFocus:c,onMouseEnter:m,onMouseLeave:w,"data-name":T,...C},s&&t.createElement(s,null),!r&&t.createElement("span",null,a),g&&t.createElement(Bn,null))};return r||u?t.createElement(gt,{label:a,align:i,className:`${f} ${o}__tooltip ${x}--icon-tooltip`,...d,leaveDelayMs:0},y()):t.createElement(t.Fragment,null,y())};te.propTypes={className:n.string,hideLabel:n.bool,isInvalid:n.bool,label:n.string,onBlur:n.func,onClick:n.func,onFocus:n.func,onMouseEnter:n.func,onMouseLeave:n.func,renderIcon:n.oneOfType([n.func,n.object]),showToolTip:n.bool,tabIndex:n.number,tooltipAlign:n.string,wrapperClassName:n.string,wrapperProps:n.object};te.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderButton",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},label:{required:!1,tsType:{name:"string"},description:"label of the button",type:{name:"string"}},hideLabel:{required:!1,tsType:{name:"boolean"},description:"decides if label and tooltip to be hidden",type:{name:"bool"}},tooltipAlign:{required:!1,tsType:{name:"PopoverAlignment"},description:"tooltip position",type:{name:"string"}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:"Optional prop to allow overriding the icon rendering.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"callback triggered on click of add button",type:{name:"func"}},onBlur:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:"mouse events callbacks",type:{name:"func"}},onFocus:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:"",type:{name:"func"}},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"",type:{name:"func"}},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"",type:{name:"func"}},showToolTip:{required:!1,tsType:{name:"boolean"},description:"decides if  tooltip to be shown",type:{name:"bool"}},wrapperProps:{required:!1,tsType:{name:"object"},description:"optional props for tree grid to add role and aria-label to wrapper span",type:{name:"object"}},isInvalid:{required:!1,tsType:{name:"boolean"},description:"boolean to know the updated value in not valid",type:{name:"bool"}},wrapperClassName:{required:!1,tsType:{name:"string"},description:"classname applies to the wrapper of popover",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index",type:{name:"number"}}}};const Et={operator:"or",groups:[{groupOperator:"and",statement:"ifAll",id:_(),conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:_()}]}]},Y=b.createContext({rootState:{groups:[]}}),Ke=e=>{const[a,r]=b.useState({groups:[]}),[i,s]=b.useState([]),l={rootState:a,setRootState:r,actionState:i,setActionState:s,inputConfig:e.inputConfig,popOverSearchThreshold:e.popOverSearchThreshold,getOptions:e.getOptions,variant:e.variant,translateWithId:e.translateWithId,conditionBuilderRef:e.conditionBuilderRef};return t.createElement(Y.Provider,{value:l},e.children)};Ke.propTypes={children:n.node.isRequired,conditionBuilderRef:n.object,getOptions:n.func,inputConfig:n.shape({properties:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object]),type:n.oneOf(["text","textarea","number","date","option","time","custom"]).isRequired,config:n.shape({options:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object])})),component:n.func,operators:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired})),long:n.bool})}))}).isRequired,popOverSearchThreshold:n.number.isRequired,translateWithId:n.func,variant:n.string.isRequired};Ke.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderProvider",props:{rootState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},description:""},setRootState:{required:!1,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}}],raw:"SetStateAction<ConditionBuilderState>"}],raw:"Dispatch<SetStateAction<ConditionBuilderState>>"},description:""},actionState:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:""},setActionState:{required:!1,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"}],raw:"SetStateAction<Action[]>"}],raw:"Dispatch<SetStateAction<Action[]>>"},description:""},children:{required:!0,tsType:{name:"ReactNode"},description:"Provide the contents of the ConditionBuilder.",type:{name:"node"}},inputConfig:{required:!0,tsType:{name:"signature",type:"object",raw:`{
  properties: Property[];
}`,signature:{properties:[{key:"properties",value:{name:"Array",elements:[{name:"intersection",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
} & (
  | PropertyConfig['option']
  | PropertyConfig['text']
  | PropertyConfig['number']
  | PropertyConfig['date']
  | PropertyConfig['textarea']
  | PropertyConfig['time']
  | PropertyConfig['custom']
)`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}},{name:"unknown"}]}],raw:"Property[]",required:!0}}]}},description:"This is a mandatory prop that defines the input to the condition builder.",type:{name:"shape",value:{properties:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'textarea'",computed:!1},{value:"'number'",computed:!1},{value:"'date'",computed:!1},{value:"'option'",computed:!1},{value:"'time'",computed:!1},{value:"'custom'",computed:!1}],required:!0},config:{name:"shape",value:{options:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1}}},required:!1},component:{name:"func",required:!1},operators:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0}}},required:!1},long:{name:"bool",required:!1}},required:!1}}},required:!1}}}},popOverSearchThreshold:{required:!0,tsType:{name:"number"},description:"Provide an mandatory numeric value that will be used to enable search option in the popovers with list.",type:{name:"number"}},getOptions:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  state: ConditionBuilderState,
  condition: Condition
) => Promise<Option[]>`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"},{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"}],raw:"Promise<Option[]>"}}},description:`This is an optional callback function that will be triggered when options array is not passed in the inputConfig against a property. 
This can be a asynchronous function that need  to  return a promise, so it will allow to fetch options from API call.
options has to be in valid format
[{
          label: 'label',
          id: 'id',
        },...]`,type:{name:"func"}},variant:{required:!0,tsType:{name:"string"},description:"Provide the condition builder variant: Non-Hierarchical/ Hierarchical",type:{name:"string"}},translateWithId:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: string) => string",signature:{arguments:[{type:{name:"string"},name:"id"}],return:{name:"string"}}},description:`Optional prop if you want to pass translation to the texts used . Otherwise this will the defined defaults.
This callback function will receive the message id and you need to return the corresponding text for that id.
The message key will be one of [   "ifText",   "addConditionText",   "addConditionGroupText",   "addSubgroupText",   "conditionText",   "propertyText",   "operatorText",   "valueText",   "connectorText",   "conditionRowText",   "removeConditionText",   "addConditionRowText",   "startText",   "endText",   "clearSearchText",   "actionsText",   "then",   "removeActionText",   "addActionText",   "invalidText",   "invalidNumberWarnText"
]`,type:{name:"func"}},conditionBuilderRef:{required:!1,tsType:{name:"ForwardedRef",elements:[{name:"HTMLDivElement"}],raw:"ForwardedRef<HTMLDivElement>"},description:"ref of condition builder",type:{name:"object"}}},composes:["PropsWithChildren"]};const on={ifText:"if",unlessText:"unless",excl_if:"excl.if",and:"and",or:"or",is:"is",ifAll:"if all",ifAny:"if any",unlessAll:"unless all",unlessAny:"unless any",greater:"is greater than",greaterEqual:"is greater than or equal to",lower:"is lower than",lowerEqual:"is lower than or equal to",startsWith:"starts with",endsWith:"ends with",contains:"contains",oneOf:"is one of",before:"is before",after:"is after",between:"is between",addConditionText:"Add condition",addConditionGroupText:"Add condition group",addSubgroupText:"Add subgroup",conditionText:"Condition",propertyText:"Property",operatorText:"Operator",valueText:"Value",connectorText:"Connector",conditionRowText:"Condition row",conditionRowGroupText:"Condition row group",removeConditionText:"Delete condition",addConditionRowText:"Add condition row",startText:"Start",endText:"End",clearSearchText:"Clear search input",actionsText:"Actions",then:"then",removeActionText:"Remove Action",addActionText:"Add action",invalidText:"Incomplete",invalidNumberWarnText:"Invalid number, must be 0 or greater",conditionBuilderText:"Condition Builder",actionSectionText:"Action Section",conditionHeadingText:"Condition",addPropertyText:"Add property",addOperatorText:"Add operator",addValueText:"Add value",conditionBuilderHierarchicalText:"Condition Builder Hierarchical"},Z=(e,a)=>{const{translateWithId:r}=b.useContext(Y);return e.map(i=>(a!=null&&a[i]&&(i=a[i]),r!=null&&r(i)?r(i):on[i]?on[i]:i))},Nt=(e,a,r)=>{var s;(s=document.activeElement.closest(`.${o}__popover`))!=null&&s.querySelector('[role="dialog"]')||$t(e,a,r)},It=(e,a,r)=>{St(e)||jt(e,r==null?void 0:r.current,a)},St=e=>!["Escape"].includes(e.key)&&(e.target.closest(`.${o}__item-date`)||e.target.closest(`.${o}__item-time`)),jt=(e,a,r)=>{var p,c,m,w,g,f;const i=e.key,s=_t(e,"shiftKey"),l=(p=a.querySelector("ul"))==null?void 0:p.dataset.multiSelect,u=(c=a.querySelectorAll('[role="option"]'))==null?void 0:c.length;let d=[];if(i==="Escape"&&(ke(e,r),e.preventDefault()),u)switch(i){case"ArrowUp":e.preventDefault(),a.querySelectorAll('[role="option"]').forEach((q,C,x)=>{ze(q,C,x,null,null,r)}),Array.from(((m=e.target.closest("ul"))==null?void 0:m.querySelectorAll("li"))??[]).indexOf(e.target)===1&&(a.querySelector(`.${o}__popover-content-wrapper`).scrollTop=0);break;case"ArrowDown":e.preventDefault(),a.querySelectorAll('[role="option"]').forEach((q,C,x)=>{We(q,C,x,null,null,r)});break;case"Tab":d=[...Array.from(a.querySelectorAll(`.${o}__selectAll-button,[role="searchbox"]`)),a.querySelector('[role="option"]')],d.forEach((q,C,x)=>{s?ze(q,C,x,!0,!0,r):We(q,C,x,!0,!0,r)}),e.preventDefault();break;case" ":l==="true"&&(document.activeElement.type!=="button"&&((w=document.activeElement)==null||w.click()),e.preventDefault());break;case"Enter":l==="true"?document.activeElement.type!=="button"&&(e.preventDefault(),(g=document.activeElement)==null||g.click()):document.activeElement.type!=="button"&&(ke(e,r),(f=document.activeElement)==null||f.click());break}},$t=(e,a,r)=>{var i,s,l,u,d,p;switch(e.key){case"ArrowRight":if(e.preventDefault(),r==z){let c=Array.from((i=e.target.closest('[role="row"]'))==null?void 0:i.querySelectorAll('[role="gridcell"] button'));if(c.length===1)e.target=e.target.closest('[role="row"]'),ln(e,a,r);else if(e.target.getAttribute("role")=="row")U(c[0],a);else{let m=c.indexOf(e.target);m<c.length-1&&oe(c[m+1],a)}}else sn(e,a);break;case"ArrowLeft":if(e.preventDefault(),r==z){if(e.target.getAttribute("role")!=="row"){let c=Array.from((s=e.target.closest('[role="row"]'))==null?void 0:s.querySelectorAll('[role="gridcell"] button')),m=c.indexOf(e.target);if(m>0)oe(c[m-1],a);else{let w=e.target.closest('[role="row"]');U(w,a)}}}else sn(e,a);break;case"ArrowUp":case"ArrowDown":e.preventDefault(),r==z?ln(e,a,r):Pt(e,a,r);break;case"Enter":((u=(l=document.activeElement)==null?void 0:l.querySelectorAll("button"))==null?void 0:u.length)===1&&((p=(d=document.activeElement)==null?void 0:d.querySelectorAll("button")[0])==null||p.click());break}},Ye=e=>{var a;return Array.from((a=e.current)==null?void 0:a.querySelectorAll('[role="row"]'))},Qn=(e,a)=>Ye(a).findIndex(i=>i.contains(e)),Pt=(e,a,r)=>{const i=Ye(a),s=Qn(e.target,a);et(e,s,i,r,a)},ln=(e,a,r)=>{const i=Ye(a),s=Qn(e.target,a);let l=s;e.target.getAttribute("role")=="row"?(["ArrowDown","ArrowRight"].includes(e.key)?l+=1:e.key==="ArrowUp"&&(l-=1),l<0?l=0:l>=i.length&&(l=i.length-1),l!==s&&U(i[l],a)):et(e,s,i,r,a)},et=(e,a,r,i,s)=>{let l=a;e.key==="ArrowUp"&&(l=a==0?a:a-1),e.key==="ArrowDown"&&(l=a===r.length-1?r.length-1:a+1);const u=r[l],d=e.target.dataset.name;u!=null&&u.querySelector(`[data-name="${d}"]`)?U(u==null?void 0:u.querySelector(`[data-name="${d}"]`),s):i===z&&U(u,s)},sn=(e,a)=>{a.current.querySelectorAll('[role="gridcell"] button').forEach((r,i,s)=>{e.key==="ArrowRight"?We(r,i,s,null,null,a):ze(r,i,s,null,null,a)})},G=({children:e,className:a,label:r,renderIcon:i,title:s,type:l,showToolTip:u,condition:d,popOverClassName:p,config:c,renderChildren:m,onChange:w,...g})=>{const f=b.useRef(null),[q,C]=b.useState(!1),x={ifAll:"if",ifAny:"if",unlessAll:"unless",unlessAny:"unless"},[y,T,D,j,k,E]=Z(["invalidText","addConditionText","addPropertyText","addOperatorText","addValueText",r],x),{conditionBuilderRef:L}=b.useContext(Y),M=()=>{const{property:v,operator:h}=d||{};return r==="INVALID"||g["data-name"]==="propertyField"&&v==="INVALID"||g["data-name"]==="operatorField"&&h==="INVALID"?{propertyLabel:y,isInvalid:!0}:{isInvalid:!1,propertyLabel:g["data-name"]=="valueField"&&l?xt[l](r,c):E}},{propertyLabel:O,isInvalid:N}=M();b.useEffect(()=>{if(d){const v=g["data-name"];(d.popoverToOpen&&v!==d.popoverToOpen||v=="valueField"&&l=="option"&&(d==null?void 0:d.operator)!=="oneOf")&&H(),d.popoverToOpen==v&&J()}else H()},[d,r]),b.useEffect(()=>{var v;if(q&&f.current){const h=(v=f==null?void 0:f.current)==null?void 0:v.querySelector("input,textarea");h&&setTimeout(()=>h.focus(),0)}},[f,q]);const I=()=>{(g["data-name"]==="propertyField"&&!(d!=null&&d.property)||g["data-name"]==="operatorField"&&!(d!=null&&d.operator)||g["data-name"]==="valueField"&&!(d!=null&&d.value))&&(w==null||w("INVALID"))},H=()=>{q&&I(),C(!1)},J=()=>C(!0),ae=()=>{(e||m)&&C(!q)},re=v=>{It(v,L,f),v.key==="Escape"&&I()},A=()=>O||(g["data-name"]==="propertyField"?D:g["data-name"]==="operatorField"?j:g["data-name"]==="valueField"?k:T);return t.createElement(bt,{open:q,isTabTip:!0,role:"gridcell",className:`${p} ${o}__popover`,ref:f,onRequestClose:H},t.createElement(te,{label:A(),hideLabel:!r,onClick:ae,className:a,"aria-haspopup":!0,"aria-expanded":q,renderIcon:i||(r==null?zn:void 0),showToolTip:u,isInvalid:N,...g}),q&&t.createElement(ht,{className:`${o}__popover-content-wrapper`,role:"dialog","aria-label":s,onKeyDown:re},t.createElement(vt,null,t.createElement("h1",{className:`${o}__item__title`},s),t.createElement("div",{className:`${o}__popover-content`},m?m(f):e))))};G.propTypes={children:n.node,className:n.string,condition:n.object,config:n.object,label:n.oneOfType([n.string,n.array,n.object]),onChange:n.func,popOverClassName:n.string,renderChildren:n.func,renderIcon:n.oneOfType([n.func,n.object]),showToolTip:n.bool,title:n.string,type:n.string};G.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItem",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},label:{required:!1,tsType:{name:"union",raw:"string | Option | Option[]",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"}]},description:"text to be displayed in the field",type:{name:"union",value:[{name:"string"},{name:"array"},{name:"object"}]}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:"Optional prop to allow overriding the icon rendering.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},title:{required:!1,tsType:{name:"string"},description:"title of the popover",type:{name:"string"}},showToolTip:{required:!1,tsType:{name:"boolean"},description:"show tool tip",type:{name:"bool"}},popOverClassName:{required:!1,tsType:{name:"string"},description:"class name for popover",type:{name:"string"}},type:{required:!1,tsType:{name:"string"},description:"input type",type:{name:"string"}},condition:{required:!1,tsType:{name:"intersection",raw:"Action & Condition",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}}]},description:"current condition state object",type:{name:"object"}},config:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  option: PropertyConfigOption;
  text: PropertyConfigText;
  textarea: PropertyConfigTextArea;
  number: PropertyConfigNumber;
  date: PropertyConfigDate;
  time: PropertyConfigTime;
  custom: PropertyConfigCustom;
}`,signature:{properties:[{key:"option",value:{name:"signature",type:"object",raw:`{
  type: 'option';
  config?: {
    options?: {
      id: string;
      label: string;
      icon?: CarbonIconType;
    }[];
  };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:"'option'",required:!0}},{key:"config",value:{name:"signature",type:"object",raw:`{
  options?: {
    id: string;
    label: string;
    icon?: CarbonIconType;
  }[];
}`,signature:{properties:[{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}[]`,required:!1}}]},required:!1}}]},required:!0}},{key:"text",value:{name:"PropertyConfigText",required:!0}},{key:"textarea",value:{name:"PropertyConfigTextArea",required:!0}},{key:"number",value:{name:"PropertyConfigNumber",required:!0}},{key:"date",value:{name:"signature",type:"object",raw:`{
  type: 'date';
  config: object;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:"'date'",required:!0}},{key:"config",value:{name:"object",required:!0}}]},required:!0}},{key:"time",value:{name:"signature",type:"object",raw:`{
  type: 'time';
  config: {
    timeZones: string[];
  };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:"'time'",required:!0}},{key:"config",value:{name:"signature",type:"object",raw:`{
  timeZones: string[];
}`,signature:{properties:[{key:"timeZones",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}}]},required:!0}}]},required:!0}},{key:"custom",value:{name:"signature",type:"object",raw:`{
  type: 'custom';
  config: {
    component: React.ComponentType<any>;
    operators: {
      label: string;
      id: string;
    }[];
  };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:"'custom'",required:!0}},{key:"config",value:{name:"signature",type:"object",raw:`{
  component: React.ComponentType<any>;
  operators: {
    label: string;
    id: string;
  }[];
}`,signature:{properties:[{key:"component",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0}},{key:"operators",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  label: string;
  id: string;
}`,signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}}]}}],raw:`{
  label: string;
  id: string;
}[]`,required:!0}}]},required:!0}}]},required:!0}}]}},description:"this is the config object again the current property from inputConfig",type:{name:"object"}},renderChildren:{required:!1,tsType:{name:"signature",type:"function",raw:"(ref: RefObject<HTMLDivElement>) => ReactNode",signature:{arguments:[{type:{name:"RefObject",elements:[{name:"HTMLDivElement"}],raw:"RefObject<HTMLDivElement>"},name:"ref"}],return:{name:"ReactNode"}}},description:"callback prop that returns the jsx for children",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(val: string) => void",signature:{arguments:[{type:{name:"string"},name:"val"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},tabIndex:{required:!1,tsType:{name:"number"},description:""},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},onFocus:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},onBlur:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},children:{description:"provide the contents of the popover",type:{name:"node"},required:!1}},composes:["PropsWithChildren"]};const le=({conditionState:e={},config:a={},onChange:r})=>{const{popOverSearchThreshold:i}=b.useContext(Y),s=b.useRef(null),[l,u]=Z(["propertyText","clearSearchText"]),d=a.options,[p,c]=b.useState(""),m=e.value,w=p?d==null?void 0:d.filter(y=>{var T;return(T=y.label)==null?void 0:T.toLowerCase().includes(p.toLowerCase())}):d;b.useEffect(()=>{var y;if(s.current){const T=(y=s.current)==null?void 0:y.querySelector("input, button,li");T&&T.focus()}},[d]);const g=(y,T)=>{r(T.id,y)},f=y=>{const{value:T}=y.target;c(T)},q=()=>e.label?e.label:l,C=y=>t.createElement("div",{className:`${o}__statement_wrapper`},t.createElement("div",null,y.text1," (",y.connector,")"),t.createElement("div",null,y.text2)),x=y=>y.preventDefault();if(d)return t.createElement("div",{className:`${o}__item-option`,ref:s},i&&d.length>i&&t.createElement("div",{className:`${o}__item-option__search`},t.createElement(Zn,{size:"sm",labelText:u,closeButtonLabelText:u,onChange:f,onKeyDown:x})),t.createElement("ul",{"aria-label":q(),role:"listbox"},w==null?void 0:w.map(y=>{const T=m===y.id,D=y.icon;return t.createElement("li",{tabIndex:0,key:y.id,role:"option","aria-selected":T,className:`${o}__item-option__option`,onKeyUp:()=>!1,onClick:j=>g(j,y)},t.createElement("div",{className:`${o}__item-option__option-content`},t.createElement("span",{className:`${o}__item-option__option-label`},D&&t.createElement(D,null),a.isStatement?C(y):y.label),T&&t.createElement(Un,{className:`${o}__checkmark`})))})))};le.propTypes={conditionState:n.object,config:n.object,onChange:n.func};le.__docgenInfo={description:"",methods:[],displayName:"ItemOption",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  label?: string;
  value?: string;
}`,signature:{properties:[{key:"label",value:{name:"string",required:!1}},{key:"value",value:{name:"string",required:!1}}]}},description:"current condition object",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},config:{required:!1,tsType:{name:"intersection",raw:"PropertyConfigOption['config'] & { isStatement?: boolean }",elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"signature",type:"object",raw:"{ isStatement?: boolean }",signature:{properties:[{key:"isStatement",value:{name:"boolean",required:!1}}]}}]},description:"current config object that this property is part of",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string, e: Event) => void",signature:{arguments:[{type:{name:"string"},name:"value"},{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const Le=()=>{const[e,a,r,i,s,l,u,d,p,c,m,w,g,f,q,C,x,y]=Z(["ifAll","ifAny","unlessAll","unlessAny","and","or","is","greater","greaterEqual","lower","lowerEqual","startsWith","endsWith","contains","oneOf","before","after","between"]);return{statementConfig:[{label:"ifText",id:"ifAll",connector:"and",text1:e,text2:"(a && b)"},{label:"ifText",id:"ifAny",connector:"or",text1:a,text2:"(a || b)"},{label:"unlessText",id:"unlessAll",connector:"and",text1:r,text2:"! (a && b)"},{label:"unlessText",id:"unlessAny",connector:"or",text1:i,text2:"! (a || b)"}],connectorConfig:[{label:s,id:"and"},{label:l,id:"or"}],operatorConfig:[{label:u,id:"is",type:"all"},{label:d,id:"greater",type:"number"},{label:p,id:"greaterEqual",type:"number"},{label:c,id:"lower",type:"number"},{label:m,id:"lowerEqual",type:"number"},{label:w,id:"startsWith",type:"text,textarea"},{label:g,id:"endsWith",type:"text,textarea"},{label:f,id:"contains",type:"text,textarea"},{label:q,id:"oneOf",type:"option"},{label:C,id:"before",type:"date,time"},{label:x,id:"after",type:"date,time"},{label:y,id:"between",type:"date"}]}},Ee=({operator:e,className:a,onChange:r,...i})=>{const{variant:s,conditionBuilderRef:l}=b.useContext(Y),[u]=Z(["connectorText"]),{connectorConfig:d}=Le(),p=b.useCallback((g,f)=>{f?g.classList.add("hoveredConnector"):g.classList.remove("hoveredConnector")},[]),c=g=>{const f=g==null?void 0:g.currentTarget.closest(".eachGroup");p(f,!0)},m=g=>{const f=g==null?void 0:g.currentTarget.closest(".eachGroup");p(f,!1)},w=(g,f)=>{r==null||r(g),ke(f,l)};return s==z?t.createElement("span",{className:`${a} ${o}__connector--disabled`},t.createElement(te,{label:e})):t.createElement(G,{label:e,title:u,"data-name":"connectorField",onMouseEnter:c,onMouseLeave:m,onFocus:c,onBlur:m,...i,popOverClassName:a,className:`${o}__connector-button`},t.createElement(le,{config:{options:d},conditionState:{value:e,label:u},onChange:w}))};Ee.propTypes={className:n.string,onChange:n.func,operator:n.string};Ee.__docgenInfo={description:"",methods:[],displayName:"ConditionConnector",props:{operator:{required:!1,tsType:{name:"string"},description:"string that defines the connector operator (and/or)",type:{name:"string"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(op: string) => void",signature:{arguments:[{type:{name:"string"},name:"op"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}}}};const Xe=({conditionState:e,config:a,onChange:r})=>{var d;const[i]=Z(["invalidNumberWarnText"]),s=(p,{value:c})=>{c!==""&&!isNaN(c)&&l(c)?r(`${c} ${a.unit??""}`):r("INVALID")},l=p=>!(a.max!==void 0&&a.min===void 0&&p>a.max||a.min!==void 0&&a.max===void 0&&p<a.min||a.max!==void 0&&a.min!==void 0&&(p>a.max||p<a.min)),u=()=>{var p,c;return((c=(p=e.value)==null?void 0:p.split(" "))==null?void 0:c[0])??""};return t.createElement("div",{className:`${o}__item-number`},t.createElement(Ct,{...a,label:e.property,hideLabel:!0,id:(d=e.property)==null?void 0:d.replace(/\s/g,""),invalidText:i,allowEmpty:!0,onChange:s,defaultValue:u()}))};Xe.propTypes={conditionState:n.object,config:n.object,onChange:n.func};Xe.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemNumber",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"current condition object",type:{name:"object"}},config:{required:!1,tsType:{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},description:"current config object that this property is part of",type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const $e=({conditionState:e,onChange:a,config:r,type:i})=>{var l;const s={...r,hideLabel:!0,value:ge(e.value)?e.value:"",id:(l=e.property)==null?void 0:l.replace(/\s/g,""),onChange:u=>{a(u.target.value)},labelText:e.property};return t.createElement("div",{className:`${o}__item-text`},i=="textarea"?t.createElement(At,{...s}):t.createElement(Ln,{...s}))};$e.propTypes={conditionState:n.object,config:n.object,onChange:n.func,type:n.string};$e.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemText",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"current condition object",type:{name:"object"}},config:{required:!1,tsType:{name:"union",raw:"PropertyConfigText | PropertyConfigTextArea",elements:[{name:"PropertyConfigText"},{name:"PropertyConfigTextArea"}]},description:"config of the current property",type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}},type:{required:!1,tsType:{name:"union",raw:"'textarea' | 'text'",elements:[{name:"literal",value:"'textarea'"},{name:"literal",value:"'text'"}]},description:"current input type",type:{name:"string"}}}};const Je=({conditionState:e,onChange:a,parentRef:r})=>{const i=b.useRef(null),[s,l]=Z(["startText","endText"]),u=e.operator=="between"?"range":"single",d=p=>{a(p&&p.length>0?p:"INVALID")};return t.createElement("div",{className:`${o}__item-date `},u=="single"&&t.createElement(rn,{ref:i,dateFormat:"d/m/Y",datePickerType:"single",value:e.value,onClose:d,appendTo:r==null?void 0:r.current},t.createElement(Be,{id:"datePicker",placeholder:"dd/mm/yyyy",labelText:e.property})),u=="range"&&t.createElement(rn,{ref:i,dateFormat:"d/m/Y",datePickerType:u,onClose:d,value:e.value,appendTo:r==null?void 0:r.current},t.createElement(Be,{id:"datePickerStart",placeholder:"dd/mm/yyyy",labelText:s}),t.createElement(Be,{id:"datePickerEnd",placeholder:"dd/mm/yyyy",labelText:l})))};Je.propTypes={conditionState:n.object,onChange:n.func,parentRef:n.object};Je.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemDate",props:{conditionState:{description:"current condition object",type:{name:"object"},required:!1},onChange:{description:"callback to update state oin date change",type:{name:"func"},required:!1},parentRef:{description:"reference to the popover node",type:{name:"object"},required:!1}}};const Qe=({onChange:e,config:a})=>{var w,g;const[r,i]=b.useState(""),[s,l]=b.useState("AM"),[u,d]=b.useState((w=a==null?void 0:a.timeZones)==null?void 0:w[0]);b.useEffect(()=>{const f=`${r??""} ${s??""} ${u??""}`;e(r?f:void 0)},[r,s,u]);const p=f=>{d(f.target.value)},c=f=>{l(f.target.value)},m=f=>{i(f.target.value)};return t.createElement("div",{className:`${o}__item-time`},t.createElement(Jn,{id:"time-picker",labelText:"Select a time",onChange:m},t.createElement(Me,{id:"time-picker-day-zone",onChange:c},t.createElement(Re,{value:"AM",text:"AM"}),t.createElement(Re,{value:"PM",text:"PM"})),t.createElement(Me,{id:"time-picker-time-zone",onChange:p},(g=a==null?void 0:a.timeZones)==null?void 0:g.map((f,q)=>t.createElement(Re,{key:q,value:f,text:f})))))};Qe.propTypes={config:n.object,onChange:n.func};Qe.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemTime",props:{config:{description:"current config object that this property is part of",type:{name:"object"},required:!1},onChange:{description:"callback to update state oin date change",type:{name:"func"},required:!1}}};const Oe=({className:e,onClick:a,addConditionSubGroupHandler:r,showConditionSubGroupPreviewHandler:i,hideConditionSubGroupPreviewHandler:s,showConditionPreviewHandler:l,hideConditionPreviewHandler:u,enableSubGroup:d,buttonLabel:p,tabIndex:c})=>{const[m,w,g]=Z(["addConditionText","addConditionRowText","addSubgroupText"]),f=()=>{u==null||u(),a()},q=()=>d?{onMouseEnter:l,onMouseLeave:u,onFocus:l,onBlur:u}:{},C=()=>({onMouseEnter:i,onMouseLeave:s,onFocus:i,onBlur:s}),x=()=>p||(d?void 0:w),y=d?{role:"gridcell"}:{};return t.createElement("div",{className:`${e} ${o}__add-button-wrapper`,role:d?"none":"gridcell","aria-label":x()},t.createElement(te,{renderIcon:wt,onClick:f,...q(),wrapperProps:y,className:`${o}__add-button`,hideLabel:!0,"data-name":"addButton",label:p??m,tabIndex:c,wrapperClassName:`${o}__add-condition-wrapper`}),d&&t.createElement(te,{renderIcon:Kn,onClick:r,className:F(`${o}__add-condition-sub-group`),hideLabel:!0,label:g,wrapperProps:y,wrapperClassName:`${o}__add-condition-sub-group-wrapper ${o}__gap-left`,...C()}))};Oe.propTypes={addConditionSubGroupHandler:n.func,buttonLabel:n.string,className:n.string,enableSubGroup:n.bool,hideConditionPreviewHandler:n.func,hideConditionSubGroupPreviewHandler:n.func,onClick:n.func,showConditionPreviewHandler:n.func,showConditionSubGroupPreviewHandler:n.func,tabIndex:n.number};Oe.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderAdd",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"callback triggered on click of add button",type:{name:"func"}},addConditionSubGroupHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},hideConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},showConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},hideConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},enableSubGroup:{required:!1,tsType:{name:"boolean"},description:"boolean to enable sub groups for the tree variant",type:{name:"bool"}},buttonLabel:{required:!1,tsType:{name:"string"},description:"tooltip label for plus button",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index",type:{name:"number"}}}};const De=({conditionState:e={},config:a={},onChange:r})=>{const i=e.operator==="oneOf",{popOverSearchThreshold:s,getOptions:l,rootState:u}=b.useContext(Y),[d,p]=Z(["propertyText","clearSearchText"]),c=b.useRef(null),[m,w]=b.useState(a.options),[g,f]=b.useState(""),q=m==null?void 0:m.filter(k=>k.label.toLowerCase().includes(g.toLowerCase())),C=Array.isArray(e.value)?e.value:e.value!==void 0?[e.value]:[];b.useEffect(()=>{!m&&l&&(async()=>{const E=await l(u,e);(E==null?void 0:E.length)>0&&Object.keys(E[0]).includes("label")&&Object.keys(E[0]).includes("id")&&w(E)})()},[]),b.useEffect(()=>{if(c.current){const k=c.current.querySelector("input, button,li");k&&(k==null||k.focus())}},[m]);const x=k=>{k.currentTarget.dataset.selectedAll=="false"?r(void 0):r(m)},y=k=>{const{value:E}=k.target;f(E)},T=(k,E,L)=>{const M=C.filter(O=>O!=="INVALID");if(i)if(L){const O=M.filter(N=>N.id!==E.id);r(O.length>0?O:void 0)}else r([...M,E]);else r(E,k)},D=()=>e.label?e.label:e.property?e.property:d,j=k=>k.preventDefault();return m?t.createElement("div",{className:`${o}__item-option`,ref:c},s&&m.length>s&&t.createElement("div",{className:`${o}__item-option__search`},t.createElement(Zn,{size:"sm",labelText:p,closeButtonLabelText:p,onChange:y,onKeyDown:j})),i&&t.createElement("div",{className:`${o}__multiselectSelectionStatusContainer`},t.createElement("h4",null,t.createElement("label",null,C.length,"/",m.length," Selected")),t.createElement(Gn,{kind:"ghost",size:"sm","data-selected-all":`${C.length==0}`,onClick:x,className:`${o}__selectAll-button`},C.length==0?"Select all":"Deselect all")),t.createElement("ul",{"aria-label":D(),role:"listbox","data-multi-select":i},q==null?void 0:q.map(k=>{const E=C.map(M=>M.id).includes(k.id),L=k.icon;return t.createElement("li",{tabIndex:0,key:k.id,role:"option","aria-selected":E,className:`${o}__item-option__option`,onKeyUp:()=>!1,onClick:M=>T(M,k,E)},t.createElement("div",{className:`${o}__item-option__option-content`},i?t.createElement(t.Fragment,null,t.createElement("span",{className:`${o}__option-check-box`},E?t.createElement(Tt,null):t.createElement(qt,null)),t.createElement("span",{className:`${o}__item-option__option-label`},k.label),L&&t.createElement("span",{className:`${o}__option-icon`},t.createElement(L,null))):t.createElement(t.Fragment,null,t.createElement("span",{className:`${o}__item-option__option-label`},L&&t.createElement(L,null),k.label),E&&t.createElement(Un,{className:`${o}__checkmark`}))))}))):t.createElement(Yn,null)};De.propTypes={conditionState:n.object,config:n.object,onChange:n.func};De.__docgenInfo={description:"",methods:[],displayName:"ItemOptionForValueField",props:{conditionState:{required:!1,tsType:{name:"intersection",raw:"Condition & { label?: string }",elements:[{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{ label?: string }",signature:{properties:[{key:"label",value:{name:"string",required:!1}}]}}]},description:"current condition object",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},config:{required:!1,tsType:{name:"signature",raw:"PropertyConfigOption['config']"},description:"current config object that this property is part of",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: any, e?: Event) => void",signature:{arguments:[{type:{name:"any"},name:"value"},{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const Pe=e=>{const{onRemove:a,onChange:r,condition:i={},conjunction:s,onConnectorOperatorChange:l,isStatement:u,group:d,onStatementChange:p,conditionIndex:c,addConditionHandler:m,addConditionSubGroupHandler:w,aria:g,hideConditionSubGroupPreviewHandler:f,showConditionSubGroupPreviewHandler:q,hideConditionPreviewHandler:C,showConditionPreviewHandler:x,isLastCondition:y}=e,{property:T,value:D,operator:j}=i,{inputConfig:k,variant:E,conditionBuilderRef:L}=b.useContext(Y),[M,O]=b.useState(!1),[N,I]=b.useState(!1),[H,J,ae,re,A]=Z(["conditionRowText","conditionText","propertyText","operatorText","removeConditionText"]),{statementConfig:v,operatorConfig:h}=Le(),P=B=>{var ee;return((ee=k==null?void 0:k.properties)==null?void 0:ee.find(ot=>ot.id==B))??{}},{icon:$,type:S,config:V,label:W}=P(T),K={text:$e,number:Xe,date:Je,time:Qe,option:De,custom:V==null?void 0:V.component,textarea:$e}[S],X=()=>{I(!0)},qe=()=>{I(!1)},Ie=(B,ee)=>{ke(ee,L),p==null||p(B)},Ce=B=>{r({...i,property:B,operator:void 0,value:"",popoverToOpen:ge(B)?"operatorField":""})},Q=B=>{r({...i,operator:B,value:void 0,popoverToOpen:ge(B)?"valueField":""})},pe=B=>{const ee={...i};delete ee.popoverToOpen,r({...ee,value:B})},Ae=()=>{O(!0)},me=()=>{O(!1)},Se=(B,ee)=>E===z?!0:y(B,ee),at=()=>V!=null&&V.operators?V.operators:h.filter(B=>B.type.indexOf(S)!=-1||B.type=="all"),rt=()=>E==z?{"aria-level":g.level,"aria-posinset":g.posinset,"aria-setsize":g.setsize}:{},it=B=>t.createElement(K,{conditionState:{property:T,operator:j,value:D},onChange:pe,config:V,"data-name":"valueField",parentRef:B,type:S});return t.createElement("div",{className:F(`${o}__condition-block`,{[`${o}__condition__deletion-preview`]:M},{[`${o}__gap-bottom`]:E==z},{[`${o}__gap ${o}__gap-bottom`]:E==de},{[`${o}__condition--interacting`]:N}),role:"row","aria-label":H,...rt(),tabIndex:-1,onMouseEnter:X,onMouseLeave:qe,onBlur:qe},s?t.createElement(Ee,{className:`${o}__gap`,operator:s,onChange:B=>l==null?void 0:l(B)}):"",u&&t.createElement(G,{label:d.statement,title:J,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`,tabIndex:0},t.createElement(le,{conditionState:{value:d.statement,label:J},onChange:Ie,config:{options:v,isStatement:!0}})),t.createElement(G,{label:W??(i==null?void 0:i.property),title:ae,renderIcon:$??void 0,className:`${o}__property-field`,"data-name":"propertyField",condition:i,type:S,onChange:Ce},t.createElement(le,{conditionState:{value:T,label:ae},onChange:Ce,config:{options:k==null?void 0:k.properties}})),ge(T)&&t.createElement(G,{label:j,title:re,"data-name":"operatorField",condition:i,type:S,onChange:Q},t.createElement(le,{config:{options:at()},conditionState:{value:j,label:re},onChange:Q})),ge(T)&&ge(j)&&t.createElement(G,{label:D,type:S,title:W,showToolTip:!0,"data-name":"valueField",condition:i,config:V,onChange:pe,renderChildren:it}),t.createElement("span",{role:"gridcell","aria-label":A},t.createElement(te,{hideLabel:!0,label:A,onClick:a,onMouseEnter:Ae,onMouseLeave:me,onFocus:Ae,onBlur:me,renderIcon:$n,className:`${o}__close-condition`,"data-name":"closeCondition",wrapperClassName:`${o}__close-condition-wrapper`})),Se(c,d.conditions)&&t.createElement(Oe,{onClick:()=>{m==null||m(c)},addConditionSubGroupHandler:()=>{w==null||w(c)},showConditionSubGroupPreviewHandler:q,hideConditionSubGroupPreviewHandler:f,enableSubGroup:E==z,showConditionPreviewHandler:x,hideConditionPreviewHandler:C,className:`${o}__gap ${o}__gap-left`}))};Pe.propTypes={addConditionHandler:n.func,addConditionSubGroupHandler:n.func,aria:n.object,condition:n.object,conditionIndex:n.number,conjunction:n.string,group:n.object,hideConditionPreviewHandler:n.func,hideConditionSubGroupPreviewHandler:n.func,isLastCondition:n.func,isStatement:n.bool,onChange:n.func,onConnectorOperatorChange:n.func,onRemove:n.func,onStatementChange:n.func,showConditionPreviewHandler:n.func,showConditionSubGroupPreviewHandler:n.func,state:n.object};Pe.__docgenInfo={description:"",methods:[],displayName:"ConditionBlock",props:{condition:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"",type:{name:"object"}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"callback for Remove a condition",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(condition: Condition) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},onConnectorOperatorChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(op: string) => void",signature:{arguments:[{type:{name:"string"},name:"op"}],return:{name:"void"}}},description:"callback to handle the connector(and/or) change",type:{name:"func"}},onStatementChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(v: string) => void",signature:{arguments:[{type:{name:"string"},name:"v"}],return:{name:"void"}}},description:"callback to handle the statement(if/ excl.if) change",type:{name:"func"}},addConditionHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(conditionIndex: number) => void",signature:{arguments:[{type:{name:"number"},name:"conditionIndex"}],return:{name:"void"}}},description:"callback to add a new condition",type:{name:"func"}},addConditionSubGroupHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(conditionIndex: number) => void",signature:{arguments:[{type:{name:"number"},name:"conditionIndex"}],return:{name:"void"}}},description:"callback to add a new condition subgroup",type:{name:"func"}},hideConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for showing sub group preview",type:{name:"func"}},hideConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for showing add condition preview",type:{name:"func"}},conjunction:{required:!1,tsType:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},description:"string that decides to show the condition connector",type:{name:"string"}},isStatement:{required:!1,tsType:{name:"boolean"},description:"boolean that decides to show the statement(if/ excl.if)",type:{name:"bool"}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"object that hold the current group object where is condition is part of",type:{name:"object"}},conditionIndex:{required:!1,tsType:{name:"number"},description:"",type:{name:"number"}},aria:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  level: number;
  posinset: number;
  setsize?: number;
}`,signature:{properties:[{key:"level",value:{name:"number",required:!0}},{key:"posinset",value:{name:"number",required:!0}},{key:"setsize",value:{name:"number",required:!1}}]}},description:"object hold aria attributes",type:{name:"object"}},isLastCondition:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  index: number,
  conditions: (ConditionGroup | Condition)[]
) => void`,signature:{arguments:[{type:{name:"number"},name:"index"},{type:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]"},name:"conditions"}],return:{name:"void"}}},description:"",type:{name:"func"}},state:{description:"object that hold the current condition",type:{name:"object"},required:!1}}};const _e=({previewType:e,group:a,colorIndex:r})=>{const[i,s]=b.useState(!1),[l,u,d,p]=Z(["valueText","operatorText","propertyText","ifText"]);b.useEffect(()=>{s(!0)},[]);const c=()=>t.createElement("div",{className:`${o}__preview-condition`},t.createElement(G,{label:l,renderIcon:yt}),t.createElement(G,{label:u}),t.createElement(G,{label:d}));return t.createElement(t.Fragment,null,e=="newGroup"&&t.createElement(t.Fragment,null,t.createElement("div",{className:F([`${o}__group__row ${o}__group-preview `,{[`${o}__group-preview-animate`]:i}])},t.createElement(G,{className:`${o}__statement-button`,label:a.groupOperator})),t.createElement("div",{"data-color-index":r,"aria-hidden":!0,className:F([`${o}__group ${o}__condition-wrapper ${o}__group-preview ${o}__group-wrapper `,{[`${o}__group-preview-animate`]:i}])},t.createElement("div",{className:`${o}__gap`},t.createElement(G,{className:`${o}__statement-button`,label:p})),c())),e=="subGroup"&&t.createElement("div",{className:F([`${o}__group__row ${o}__group-preview ${o}__gap-bottom`,{[`${o}__group-preview-animate`]:i}])},t.createElement("div",{className:`${o}__condition-block  ${o}__gap`},t.createElement(G,{label:a.groupOperator,className:`${o}__statement-button`,popOverClassName:`${o}__gap`}),t.createElement("div",{className:`${o}__group ${o}__condition-wrapper`},t.createElement(Ee,{className:`${o}__gap ${o}__groupConnector`,operator:p}),c()))),e=="condition"&&t.createElement("div",{className:F([`${o}__group__row ${o}__group-preview ${o}__gap-bottom`,{[`${o}__group-preview-animate`]:i}])},t.createElement("div",{className:`${o}__condition-block  ${o}__gap`},t.createElement(G,{label:a.groupOperator,className:`${o}__statement-button`,popOverClassName:`${o}__gap`}),c())))};_e.propTypes={colorIndex:n.number,group:n.object,previewType:n.oneOf(["condition","subGroup","newGroup"])};_e.__docgenInfo={description:"",methods:[],displayName:"ConditionPreview",props:{previewType:{required:!1,tsType:{name:"union",raw:"'newGroup' | 'subGroup' | 'condition'",elements:[{name:"literal",value:"'newGroup'"},{name:"literal",value:"'subGroup'"},{name:"literal",value:"'condition'"}]},description:"type of review to be displayed",type:{name:"enum",value:[{value:"'condition'",computed:!1},{value:"'subGroup'",computed:!1},{value:"'newGroup'",computed:!1}]}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"current conditional group",type:{name:"object"}},colorIndex:{required:!1,tsType:{name:"number"},description:"index of the color for next group",type:{name:"number"}}}};const He=({group:e,aria:a,onRemove:r,onChange:i,className:s})=>{const[l,u,d]=Z(["conditionBuilderGroupText","conditionText","conditionBuilderText"]),{statementConfig:p}=Le(),{variant:c,conditionBuilderRef:m}=b.useContext(Y),[w,g]=b.useState(-1),[f,q]=b.useState(-1);b.useState(!1);const C=b.useRef(null),x=(A,v,h)=>{var P;if(e&&e.conditions&&e.conditions.length>1)if(c==z?k(v):j(v,h),y(e.conditions,A)){const $=e.conditions.filter(S=>A!==S.id);if(($==null?void 0:$[0]).conditions){const S=$[0];$.splice(0,1,...S==null?void 0:S.conditions)}i==null||i({...e,conditions:$})}else{const $=(P=e==null?void 0:e.conditions)==null?void 0:P.reduce((S,V)=>{const W=V;return W.conditions?S.concat(W.conditions):S},[]);i==null||i({...e,conditions:$})}else r==null||r(v)},y=(A,v)=>A.find(h=>!h.conditions&&h.id!==v),T=(A,v)=>{const h=[...e!=null&&e.conditions?e.conditions.slice(0,v):[],A,...e!=null&&e.conditions?e.conditions.slice(v+1):[]];i==null||i({...e,conditions:h,id:(e==null?void 0:e.id)??_()})},D=A=>{const v={property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:_()};i==null||i({...e,conditions:[...e.conditions?e.conditions.slice(0,A+1):[],v,...e.conditions?e.conditions.slice(A+1):[]]})},j=(A,v)=>{var P;const h=(P=A.currentTarget.closest(`.${o}__group`))==null?void 0:P.querySelectorAll('[data-name="closeCondition"]');v==h.length-1?U(h[v-1],m):U(h[v+1],m)},k=A=>{var S,V,W,Ne,K,X,qe,Ie,Ce;const v=(V=(S=A.currentTarget)==null?void 0:S.closest('[role="row"]'))==null?void 0:V.getAttribute("aria-level"),h=(Ne=(W=A.currentTarget)==null?void 0:W.closest('[role="row"]'))==null?void 0:Ne.getAttribute("aria-posinset"),P=(K=C.current)==null?void 0:K.querySelector(`[aria-level="${v}"][aria-posinset="${Number(h)+1}"]`),$=(X=C.current)==null?void 0:X.querySelector(`[aria-level="${v}"][aria-posinset="${Number(h)-1}"]`);if(P!=null&&P.classList.contains(`${o}__condition-block`))U(P==null?void 0:P.querySelector('[data-name="closeCondition"]'),m);else if($!=null&&$.classList.contains(`${o}__condition-block`))U($==null?void 0:$.querySelector('[data-name="closeCondition"]'),m);else{const Q=(qe=C.current)==null?void 0:qe.querySelectorAll(`[aria-level="${Number(v)-1}"][role="row"]`),pe=(Ie=C.current)==null?void 0:Ie.querySelector(`[aria-level="${Number(v)+1}"][role="row"]`);if(pe){const Ae={ariaLevel:Number(pe.ariaLevel)-1,ariaPosInSet:pe.ariaPosInSet};setTimeout(()=>{var Se;const me=(Se=C.current)==null?void 0:Se.querySelector(`[role="row"][aria-level="${Ae.ariaLevel}"][aria-posinset="${Ae.ariaPosInSet}"]`);U(me==null?void 0:me.querySelector('[data-name="closeCondition"]'),m)},0)}else Q!=null&&Q.length&&Q.length>1&&U((Ce=Q[Q.length-2])==null?void 0:Ce.querySelector('[data-name="closeCondition"]'),m)}},E=A=>{i({...e,conditions:[...e.conditions?e.conditions.slice(0,A+1):[],{statement:"ifAll",groupOperator:"and",conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:_()}],id:_()},...e.conditions?e.conditions.slice(A+1):[]]})},L=(A,v)=>A+1>=v.length||v.length-1!=A&&v[A+1].conditions,M=A=>{q(A)},O=()=>{q(-1)},N=A=>{g(A)},I=()=>{g(-1)},H=A=>{var h;const v=(h=p.find(P=>P.id==A))==null?void 0:h.connector;i({...e,groupOperator:v,statement:A})},J=A=>{i({...e,groupOperator:A})},ae=()=>{var A;return t.createElement("div",{className:`${s}  eachGroup`},t.createElement("div",{className:`${o}__condition-wrapper`,role:"grid","aria-label":d},(A=e==null?void 0:e.conditions)==null?void 0:A.map((v,h)=>{var P;return t.createElement("div",{key:v.id,className:`${o}__group-wrapper`},t.createElement(Pe,{conjunction:h>0?e.groupOperator:void 0,aria:{level:a.level+1,posinset:h+1,setsize:(P=e==null?void 0:e.conditions)==null?void 0:P.length},isStatement:h==0,condition:v,group:e,conditionIndex:h,onChange:$=>{T($,h)},addConditionHandler:D,onRemove:$=>{x(v.id,$,h)},onConnectorOperatorChange:J,onStatementChange:H,isLastCondition:L}))})))},re=()=>{var A;return t.createElement("div",{className:`${s} ${o}__condition-wrapper`,role:a.level===1?"rowgroup":void 0,"aria-label":a.level==1?l:void 0,ref:C},t.createElement("div",{tabIndex:0,role:"row","aria-level":a.level,"aria-posinset":a.posinset,"aria-setsize":a.setsize},t.createElement(G,{label:e.statement,title:u,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`},t.createElement(le,{conditionState:{value:e.statement,label:u},onChange:(v,h)=>{ke(h,m),H(v)},config:{options:p,isStatement:!0}}))),(A=e==null?void 0:e.conditions)==null?void 0:A.map((v,h)=>{var P,$;return t.createElement(b.Fragment,{key:v.id},v.conditions?t.createElement("div",{className:F(`${o}__condition-block subgroup  ${o}__gap`,{[`${o}__gap-bottom`]:e&&e.conditions&&e.conditions.length<h+1},{})},t.createElement(Ee,{className:`${o}__gap ${o}__gap-bottom ${o}__groupConnector`,operator:e.groupOperator,"aria-hidden":!0}),t.createElement(He,{aria:{level:a.level+1,posinset:h+1,setsize:((P=e.conditions)==null?void 0:P.length)??0},className:`${o}__group`,group:v,onChange:S=>{T(S,h)},onRemove:S=>{x(v.id,S,h)}})):t.createElement("div",null,t.createElement(Pe,{conjunction:h>0?e.groupOperator:void 0,aria:{level:a.level+1,posinset:h+1,setsize:(($=e.conditions)==null?void 0:$.length)??0},isStatement:!1,condition:v,group:e,conditionIndex:h,addConditionHandler:D,addConditionSubGroupHandler:E,onChange:S=>{T(S,h)},onRemove:S=>{x(v.id,S,h)},onConnectorOperatorChange:J,onStatementChange:H,showConditionSubGroupPreviewHandler:()=>{M(h)},hideConditionSubGroupPreviewHandler:O,showConditionPreviewHandler:()=>{N(h)},hideConditionPreviewHandler:I,isLastCondition:L})),h==f&&t.createElement(_e,{previewType:"subGroup",group:e}),h==w&&t.createElement(_e,{previewType:"condition",group:e}))}))};return t.createElement(t.Fragment,null,c==z&&re(),c==de&&ae())};He.propTypes={aria:n.object,className:n.string,group:n.object,onChange:n.func,onRemove:n.func};He.__docgenInfo={description:"",methods:[],displayName:"ConditionGroupBuilder",props:{group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"",type:{name:"object"}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"call back to remove the particular group from the state tree",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(group: ConditionGroup) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},name:"group"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},aria:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  level: number;
  posinset: number;
  setsize: number;
}`,signature:{properties:[{key:"level",value:{name:"number",required:!0}},{key:"posinset",value:{name:"number",required:!0}},{key:"setsize",value:{name:"number",required:!0}}]}},description:"object contains the aria attributes",type:{name:"object"}}}};const nt=()=>{const{rootState:e,setRootState:a}=b.useContext(Y),[r]=Z(["conditionText"]),{connectorConfig:i}=Le(),s=l=>{a({...e,operator:l})};return t.createElement("div",{className:`${o}__group-separator ${o}__group-separator-row`,role:"row",tabIndex:-1,"aria-level":1},t.createElement(G,{label:e.operator,title:r,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`},t.createElement(le,{conditionState:{value:e.operator,label:r},onChange:s,config:{options:i}})))};nt.__docgenInfo={description:"",methods:[],displayName:"GroupConnector"};const en=({actions:e,className:a})=>{const{actionState:r=[],setActionState:i}=b.useContext(Y),[s,l]=b.useState(-1),[u,d,p,c,m,w]=Z(["actionsText","then","and","removeActionText","addActionText","actionSectionText"]),g=()=>{const y={id:_(),label:void 0,popoverToOpen:"valueField"};i==null||i([...r,y])},f=(y,T)=>{const j={...e.find(k=>k.id===y),id:r[T].id};i==null||i([...r.slice(0,T),j,...r.slice(T+1)])},q=y=>{i==null||i(r.filter(T=>T.id!==y))},C=y=>{l(y)},x=()=>{l(-1)};return t.createElement("div",{className:a},t.createElement(Ze,{className:`${o}__heading`,level:4},t.createElement(Ue,null,u)),t.createElement("div",{className:`${o}__condition-wrapper`,role:"grid","aria-label":w},r==null?void 0:r.map((y,T)=>t.createElement("div",{key:y.id,role:"row",className:F(`${o}__condition-block ${o}__gap ${o}__gap-bottom`,{[`${o}__condition__deletion-preview`]:s==T})},t.createElement(G,{className:`${o}__statement-button`,tabIndex:0,popOverClassName:`${o}__gap`,label:T===0?d:p}),t.createElement(G,{label:y.label,title:u,condition:y,"data-name":"valueField",type:"option"},t.createElement(De,{conditionState:{value:y.label},onChange:D=>f(D.id,T),config:{options:e}})),t.createElement("span",{role:"gridcell","aria-label":c},t.createElement(te,{hideLabel:!0,label:c,onClick:()=>q(y.id),onMouseEnter:()=>C(T),onMouseLeave:x,onFocus:()=>C(T),onBlur:x,renderIcon:$n,className:`${o}__close-condition`,"data-name":"closeCondition"})),r.length===T+1&&t.createElement(Oe,{onClick:g,className:`${o}__gap ${o}__gap-left`,buttonLabel:m,tabIndex:0}))),r.length===0&&t.createElement(Oe,{onClick:g,className:`${o}__gap ${o}__gap-left`,buttonLabel:m,tabIndex:0})))};en.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),className:n.string};en.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderActions",props:{actions:{required:!1,tsType:{name:"union",raw:"Action[] | Option[]",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"}]},description:"optional array of object that give the list of actions.",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}}}};const nn=({startConditionLabel:e,getConditionState:a,getActionsState:r,initialState:i,actions:s})=>{var O;const{rootState:l,setRootState:u,variant:d,actionState:p}=b.useContext(Y),c=b.useRef(i!=null&&i.state?JSON.parse(JSON.stringify(i==null?void 0:i.state)):null),[m,w]=b.useState(!1),[g,f]=b.useState(!1),[q,C,x]=Z(["addConditionGroupText","conditionHeadingText","conditionBuilderHierarchicalText"]),y=()=>{f(!0)},T=()=>{f(!1)};b.useEffect(()=>{var N;(N=l==null?void 0:l.groups)!=null&&N.length?w(!0):w(!1),a&&a(l??{})},[l]),b.useEffect(()=>{r==null||r(p??[])},[p]),b.useEffect(()=>{i!=null&&i.enabledDefault&&(u==null||u(c.current),c.current=null)},[i]);const D=()=>{var N,I;w(!0),(I=(N=c==null?void 0:c.current)==null?void 0:N.groups)!=null&&I.length?(u==null||u(c.current),c.current=null):u==null||u(Et)},j=b.useCallback(N=>{var I;u==null||u({...l,groups:l?(I=l==null?void 0:l.groups)==null?void 0:I.filter(H=>N!==(H==null?void 0:H.id)):[]})},[u,l]),k=(N,I)=>{if(l&&l.groups){const H=[...l.groups?l.groups.slice(0,I):[],N,...l.groups?l.groups.slice(I+1):[]];u==null||u({...l,groups:H})}},E=()=>{const N={statement:"ifAll",groupOperator:"and",id:_(),conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:_()}]};u==null||u({...l,groups:l&&l.groups?[...l.groups,N]:[N]})},L=()=>{var I;return(((I=l==null?void 0:l.groups)==null?void 0:I.length)??0)%5};if(!m)return t.createElement(Gn,{className:`${o}__addConditionText-button`,renderIcon:N=>t.createElement(zn,{...N}),iconDescription:e,kind:"ghost",size:"sm",onClick:D},e);const M=d===z?{role:"treegrid","aria-label":x}:null;return t.createElement(t.Fragment,null,t.createElement(Ze,{className:`${o}__heading`,level:4},t.createElement(Ue,null,C)),t.createElement("div",{className:`${o}__content-container`,...M},l&&((O=l==null?void 0:l.groups)==null?void 0:O.map((N,I)=>t.createElement("div",{key:N.id,className:`${o}__group-wrapper`},t.createElement(He,{className:`${o}__group`,aria:{level:1,posinset:I*2+1,setsize:(l.groups&&l.groups.length*2)??0},group:N,onRemove:()=>{j(N.id)},onChange:H=>{k(H,I)}}),l.groups&&I<l.groups.length-1&&t.createElement(nt,null)))),d==z&&t.createElement("div",{role:"row",tabIndex:-1,"aria-level":1,className:`${o}__add-group`},t.createElement(te,{renderIcon:Kn,onClick:E,onMouseEnter:y,onMouseLeave:T,onFocus:y,onBlur:T,className:`${o}__add-condition-group `,hideLabel:!0,label:q,wrapperProps:{role:"gridcell","aria-label":q}})),g&&t.createElement(_e,{previewType:"newGroup",colorIndex:L(),group:{groupOperator:l==null?void 0:l.operator,id:_()}})),s&&t.createElement(en,{actions:s,className:`${o}__actions-container`}))};nn.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),getActionsState:n.func,getConditionState:n.func.isRequired,initialState:n.shape({state:n.shape({groups:n.arrayOf(n.shape({groupOperator:n.string,statement:n.string,conditions:n.arrayOf(n.oneOfType([n.shape({property:n.string,operator:n.string,value:n.oneOfType([n.string,n.arrayOf(n.shape({id:n.string,label:n.string})),n.shape({id:n.string,label:n.string})])}),n.object]))})),operator:n.string}),enabledDefault:n.bool}),startConditionLabel:n.string.isRequired};nn.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderContent",props:{startConditionLabel:{required:!0,tsType:{name:"string"},description:"",type:{name:"string"}},getConditionState:{required:!0,tsType:{name:"signature",type:"function",raw:"(state: ConditionBuilderState) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"}],return:{name:"void"}}},description:"This is a callback function that returns the updated state",type:{name:"func"}},getActionsState:{required:!1,tsType:{name:"signature",type:"function",raw:"(state: Action[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},name:"state"}],return:{name:"void"}}},description:"callback functions that will provide the updated action state back.",type:{name:"func"}},initialState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  state: ConditionBuilderState;
  enabledDefault?: boolean;
}`,signature:{properties:[{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"enabledDefault",value:{name:"boolean",required:!1}}]}},description:"Optional prop if the condition building need to start from a predefined initial state",type:{name:"shape",value:{state:{name:"shape",value:{groups:{name:"arrayOf",value:{name:"shape",value:{groupOperator:{name:"string",required:!1},statement:{name:"string",required:!1},conditions:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{property:{name:"string",required:!1},operator:{name:"string",required:!1},value:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}},{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}],required:!1}}},{name:"object"}]},required:!1}}},required:!1},operator:{name:"string",required:!1}},required:!1},enabledDefault:{name:"bool",required:!1}}}},actions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:"optional array of object that give the list of actions.",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}}}};const tn="ConditionBuilder";let se=t.forwardRef(({className:e,inputConfig:a,startConditionLabel:r="Add Condition",popOverSearchThreshold:i,getOptions:s,initialState:l,getConditionState:u,getActionsState:d,variant:p=de,actions:c,translateWithId:m,...w},g)=>{const f=b.useRef(null),q=g||f,C=x=>{Nt(x,q,p)};return t.createElement(Ke,{inputConfig:a,popOverSearchThreshold:i,getOptions:s,variant:p,translateWithId:m,conditionBuilderRef:q},t.createElement("div",{...w,className:F(o,e,{}),ref:q,...ft(tn)},t.createElement(Ot,{className:`${o}__${p}`,onKeyDown:C},t.createElement(nn,{startConditionLabel:r,getConditionState:u,getActionsState:d,initialState:l,actions:c}))))});se=Rn.checkComponentEnabled(se,tn);se.displayName=tn;se.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),className:n.string,getActionsState:n.func,getConditionState:n.func.isRequired,getOptions:n.func,initialState:n.shape({state:n.shape({groups:n.arrayOf(n.shape({groupOperator:n.string,statement:n.string,conditions:n.arrayOf(n.oneOfType([n.shape({property:n.string,operator:n.string,value:n.oneOfType([n.string,n.arrayOf(n.shape({id:n.string,label:n.string})),n.shape({id:n.string,label:n.string})])}),n.object]))})),operator:n.string}),enabledDefault:n.bool}),inputConfig:n.shape({properties:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object]),type:n.oneOf(["text","textarea","number","date","option","time","custom"]).isRequired,config:n.shape({options:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object])})),component:n.func,operators:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired}))})}))}).isRequired,popOverSearchThreshold:n.number.isRequired,startConditionLabel:n.string,translateWithId:n.func,variant:n.oneOf(["Non-Hierarchical","Hierarchical"])};se.__docgenInfo={description:"TODO: A description of the component.",methods:[],displayName:"ConditionBuilder",props:{inputConfig:{required:!0,tsType:{name:"signature",type:"object",raw:`{
  properties: Property[];
}`,signature:{properties:[{key:"properties",value:{name:"Array",elements:[{name:"intersection",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
} & (
  | PropertyConfig['option']
  | PropertyConfig['text']
  | PropertyConfig['number']
  | PropertyConfig['date']
  | PropertyConfig['textarea']
  | PropertyConfig['time']
  | PropertyConfig['custom']
)`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}},{name:"unknown"}]}],raw:"Property[]",required:!0}}]}},description:"This is a mandatory prop that defines the input to the condition builder.",type:{name:"shape",value:{properties:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'textarea'",computed:!1},{value:"'number'",computed:!1},{value:"'date'",computed:!1},{value:"'option'",computed:!1},{value:"'time'",computed:!1},{value:"'custom'",computed:!1}],required:!0},config:{name:"shape",value:{options:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1}}},required:!1},component:{name:"func",required:!1},operators:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0}}},required:!1}},required:!1}}},required:!1}}}},initialState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  state: ConditionBuilderState;
  enabledDefault?: boolean;
}`,signature:{properties:[{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"enabledDefault",value:{name:"boolean",required:!1}}]}},description:`Optional prop if you want to pass a saved condition state, pass as "initialState.state".
"initialState.enabledDefault" will populate the builder with the provided initial state before clicking Add Condition button.

 This state should respect the structure of condition state that is available in getConditionState callback`,type:{name:"shape",value:{state:{name:"shape",value:{groups:{name:"arrayOf",value:{name:"shape",value:{groupOperator:{name:"string",required:!1},statement:{name:"string",required:!1},conditions:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{property:{name:"string",required:!1},operator:{name:"string",required:!1},value:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}},{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}],required:!1}}},{name:"object"}]},required:!1}}},required:!1},operator:{name:"string",required:!1}},required:!1},enabledDefault:{name:"bool",required:!1}}}},getActionsState:{required:!1,tsType:{name:"signature",type:"function",raw:"(state: Action[] | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"Action[] | undefined",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},{name:"undefined"}]},name:"state"}],return:{name:"void"}}},description:"This is a callback that gives back the updated action state",type:{name:"func"}},getConditionState:{required:!0,tsType:{name:"signature",type:"function",raw:"(state: ConditionBuilderState | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"ConditionBuilderState | undefined",elements:[{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},{name:"undefined"}]},name:"state"}],return:{name:"void"}}},description:"This is a callback that gives back updated condition state",type:{name:"func"}},getOptions:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  state: ConditionBuilderState,
  condition: Condition
) => Promise<Option[]>`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"},{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"}],raw:"Promise<Option[]>"}}},description:`This is a callback that get triggered when  you want to dynamically fetch options.
 Component call this when the option array is not passed against a property with type as option in the input config.
This is an asynchronous callback that can return a promise , and you need to resolve the promise with options array in the valid format.
You will receive the root condition state and current condition as the 2 arguments.
eg: const getOptions = async (conditionState,condition) => {
  switch (condition.property) {
    case 'continent':
      return new Promise((resolve) => {
        const continents=[{
      label: 'Africa',
      id: 'Africa',
    },...]
          resolve(continents);
      });
      default:
      return [];
  }
};`,type:{name:"func"}},actions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:"optional array of actions",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},popOverSearchThreshold:{required:!0,tsType:{name:"number"},description:"Provide an mandatory numeric value that will be used to enable search option in the popovers with list.",type:{name:"number"}},startConditionLabel:{required:!1,tsType:{name:"string"},description:"Provide a label to the button that starts condition builder",defaultValue:{value:"'Add Condition'",computed:!1},type:{name:"string"}},variant:{required:!1,tsType:{name:"union",raw:"'Non-Hierarchical' | 'Hierarchical'",elements:[{name:"literal",value:"'Non-Hierarchical'"},{name:"literal",value:"'Hierarchical'"}]},description:"Provide the condition builder variant: Non-Hierarchical/ Hierarchical",defaultValue:{value:"'Non-Hierarchical'",computed:!1},type:{name:"enum",value:[{value:"'Non-Hierarchical'",computed:!1},{value:"'Hierarchical'",computed:!1}]}},translateWithId:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: string) => string",signature:{arguments:[{type:{name:"string"},name:"id"}],return:{name:"string"}}},description:`Optional prop, if you need to pass translations to the texts on the component instead of the defined defaults.
This callback function will receive the message id and you need to return the corresponding text for that id.
The message id will be one of [   "ifText","addConditionText",   "addConditionGroupText",   "addSubgroupText",   "conditionText",   "propertyText",   "operatorText",   "valueText",   "connectorText",   "conditionRowText","conditionRowGroupText","conditionBuilderText","actionSectionText",   "removeConditionText",   "addConditionRowText",   "startText",   "endText",   "clearSearchText",   "actionsText",   "then",   "removeActionText",   "addActionText",   "invalidText",  "invalidNumberWarnText"]
]`,type:{name:"func"}}}};function un(e){const a={a:"a",h1:"h1",h2:"h2",li:"li",ul:"ul",...jn(),...e.components};return R.jsxs(R.Fragment,{children:[R.jsx(a.h1,{id:"conditionbuilder",children:"ConditionBuilder"}),`
`,R.jsx(a.h2,{id:"table-of-contents",children:"Table of Contents"}),`
`,R.jsxs(a.ul,{children:[`
`,R.jsx(a.li,{children:R.jsx(a.a,{href:"#overview",children:"Overview"})}),`
`,R.jsx(a.li,{children:R.jsx(a.a,{href:"#example-usage",children:"Example usage"})}),`
`,R.jsx(a.li,{children:R.jsx(a.a,{href:"#component-api",children:"Component API"})}),`
`]}),`
`,R.jsx(a.h2,{id:"overview",children:"Overview"}),`
`,`
`,R.jsx(a.h2,{id:"example-usage",children:"Example usage"}),`
`,`
`,R.jsx(lt,{children:R.jsx(st,{of:ie})}),`
`,R.jsx(a.h2,{id:"code-sample",children:"Code sample"}),`
`,`
`,R.jsx(a.h2,{id:"component-api",children:"Component API"}),`
`,R.jsx(ut,{})]})}function Lt(e={}){const{wrapper:a}={...jn(),...e.components};return a?R.jsx(a,{...e,children:R.jsx(un,{...e})}):un(e)}const Dt="",an=({onChange:e,conditionState:a})=>{const r=i=>{e(i.target.value)};return t.createElement("div",{className:"custom-component"},t.createElement(Ln,{labelText:"labelText",hideLabel:!0,value:a.value??"",id:"customInput",onChange:r}))};an.propTypes={conditionState:n.object,onChange:n.func};an.__docgenInfo={description:"",methods:[],displayName:"CustomInput",props:{conditionState:{description:"current condition state",type:{name:"object"},required:!1},onChange:{description:"This function need to be called that provides a label which should be shown in the condition after a user has made their selection / set their value",type:{name:"func"},required:!1}}};const Ht=[{label:"is greater than",id:"greater"},{label:"is greater than or equal to",id:"greaterEqual"}],Te={properties:[{id:"continent",label:"Continent",icon:Dn,type:"option",config:{options:[{label:"Africa",id:"Africa"},{label:"Antarctica",id:"Antarctica"},{label:"Asia",id:"Asia"},{label:"Australia",id:"Australia"},{label:"Europe",id:"Europe"}]}},{id:"region",label:"Region",icon:Hn,type:"option",config:{options:[{label:"Afghanistan",id:"AF",icon:ne},{label:"Albania",id:"AL",icon:ne},{label:"Algeria",id:"AG",icon:ne},{label:"Andorra",id:"AN",icon:ne},{label:"India",id:"India",icon:ne}]}},{id:"color",label:"Color",icon:Pn,type:"option",config:{options:[{label:"black",id:"black"},{label:"silver",id:"silver"},{label:"gray",id:"gray"},{label:"white",id:"white"},{label:"maroon",id:"maroon"},{label:"red",id:"red"},{label:"purple",id:"purple"},{label:"fuchsia",id:"fuchsia"},{label:"green",id:"green"},{label:"lime",id:"lime"},{label:"olive",id:"olive"},{label:"yellow",id:"yellow"},{label:"navy",id:"navy"},{label:"blue",id:"blue"},{label:"teal",id:"teal"},{label:"aqua",id:"aqua"}]}},{id:"id",label:"ID",icon:Fe,type:"text",config:{}},{id:"id_long",label:"Id Long",icon:Fe,type:"textarea",config:{}},{id:"price",label:"Price",icon:Fn,type:"number",config:{min:0,step:1,unit:"Dollars"}},{id:"date",label:"Date",icon:je,type:"date",config:{}},{id:"time",label:"Time",icon:je,type:"time",config:{timeZones:["IST","CET","UTC","LOCAL"]}},{id:"delivery",label:"Delivery",icon:Mn,type:"option",config:{options:[{label:"Processing",id:"Processing"},{label:"Preparing for dispatch",id:"Preparing for dispatch"},{label:"Dispatched",id:"Dispatched"},{label:"In delivery",id:"In delivery"},{label:"Delivered",id:"Delivered"}]}},{id:"season",label:"Season",icon:Wn,type:"option",config:{options:[{label:"Winter",id:"Winter"},{label:"Spring",id:"Spring"},{label:"Summer",id:"Summer"},{label:"Fall",id:"Fall"}]}},{id:"product",label:"Product",icon:Vn,type:"custom",config:{component:an,operators:Ht}}]},Bt={properties:[{id:"continent",label:"Continent",icon:Dn,type:"option",config:{}},{id:"region",label:"Region",icon:Hn,type:"option",config:{}},{id:"color",label:"Color",icon:Pn,type:"option",config:{}},{id:"id",label:"ID",icon:Fe,type:"text",config:{}},{id:"price",label:"Price",icon:Fn,type:"number",config:{min:0,step:1,unit:"Dollars"}},{id:"date",label:"Date",icon:je,type:"date",config:{}},{id:"time",label:"Time",icon:je,type:"time",config:{timeZones:["IST","CET","UTC","LOCAL"]}},{id:"product",label:"Product",icon:Vn,type:"text",config:{}},{id:"delivery",label:"Delivery",icon:Mn,type:"option",config:{options:[{label:"Processing",id:"Processing"},{label:"Preparing for dispatch",id:"Preparing for dispatch"},{label:"Dispatched",id:"Dispatched"},{label:"In delivery",id:"In delivery"},{label:"Delivered",id:"Delivered"}]}},{id:"season",label:"Season",icon:Wn,type:"option",config:{options:[{label:"Winter",id:"Winter"},{label:"Spring",id:"Spring"},{label:"Summer",id:"Summer"},{label:"Fall",id:"Fall"}]}}]},Rt={operator:"or",groups:[{groupOperator:"and",statement:"ifAll",id:_(),conditions:[{property:"region",operator:"is",value:{id:"India",label:"India"},id:_()},{property:"delivery",operator:"is",value:{id:"Processing",label:"Processing"},id:_()},{property:"delivery",operator:"is",value:{id:"Processing",label:"Processing"},id:_()},{property:"delivery",operator:"is",value:{id:"Processing",label:"Processing"},id:_()},{groupOperator:"and",statement:"unlessAll",id:_(),conditions:[{property:"region",operator:"is",value:{id:"India",label:"India"},id:_()},{property:"delivery",operator:"is",value:{id:"Processing",label:"Processing"},id:_()},{property:"delivery",operator:"is",value:{id:"Processing",label:"Processing"},id:_()},{property:"delivery",operator:"is",value:{id:"Processing",label:"Processing"},id:_()},{groupOperator:"or",statement:"ifAny",id:_(),conditions:[{property:"region",operator:"is",value:{id:"India",label:"India"},id:_()},{property:"delivery",operator:"is",value:{id:"Processing",label:"Processing"},id:_()},{property:"delivery",operator:"is",value:{id:"Processing",label:"Processing"},id:_()}]}]}]},{groupOperator:"and",statement:"ifAll",id:_(),conditions:[{property:"continent",operator:"is",value:{id:"Asia",label:"Asia"},id:_()},{property:"region",operator:"is",value:{id:"India",label:"India"},id:_()},{property:"price",operator:"is",value:"20",id:_()}]}]},Gt={groups:[{groupOperator:"and",statement:"ifAll",id:_(),conditions:[{property:"region",operator:"oneOf",value:[{label:"Africa",id:"Africa"},{label:{id:"India",label:"India"},id:"Ind"}],id:_()},{property:"delivery",operator:"is",value:{id:"Processing",label:"Processing"},id:_()},{property:"price",operator:"is",value:"3 Dollars",id:_()}]}]},Da={title:"Experimental/Components/ConditionBuilder",component:se,tags:["autodocs"],parameters:{layout:"fullscreen",styles:Dt,docs:{page:Lt}}},Ft=()=>[{label:"Africa",id:"Africa"},{label:"Antarctica",id:"Antarctica"},{label:"Asia",id:"Asia"},{label:"Australia",id:"Australia"},{label:"Europe",id:"Europe"}],Mt=()=>[{label:"Afghanistan",id:"AF",icon:ne},{label:"Albania",id:"AL",icon:ne},{label:"Algeria",id:"AG",icon:ne},{label:"Andorra",id:"AN",icon:ne}],Vt=()=>[{label:"black",id:"black"},{label:"silver",id:"silver"},{label:"gray",id:"gray"},{label:"white",id:"white"},{label:"maroon",id:"maroon"},{label:"red",id:"red"},{label:"purple",id:"purple"},{label:"fuchsia",id:"fuchsia"},{label:"green",id:"green"},{label:"lime",id:"lime"},{label:"olive",id:"olive"},{label:"yellow",id:"yellow"},{label:"navy",id:"navy"},{label:"blue",id:"blue"},{label:"teal",id:"teal"},{label:"aqua",id:"aqua"}],Wt=async(e,{property:a})=>{switch(a){case"continent":return new Promise(r=>{setTimeout(()=>{r(Ft())},2e3)});case"region":return new Promise(r=>{setTimeout(()=>{r(Mt())},2e3)});case"color":return new Promise(r=>{setTimeout(()=>{r(Vt())},2e3)});default:return[]}},zt={startConditionLabel:"Add condition",popOverSearchThreshold:4,getConditionState:e=>{console.log(e)}},tt=[{id:_(),label:"Add item to cart"},{id:_(),label:"Proceed item to checkout"}],Zt=e=>({ifText:"if",addConditionText:"Add condition",addConditionGroupText:"Add condition group",addSubgroupText:"Add subgroup"})[e],ce=e=>{const a=b.useRef(void 0);return t.createElement(se,{...e,ref:a,...zt})},ie=ce.bind({});ie.storyName="Condition Builder";ie.args={inputConfig:Te,variant:de};const ye=ce.bind({});ye.storyName="With dynamic options";ye.args={inputConfig:Bt,getOptions:Wt,variant:de};const fe=ce.bind({});fe.storyName="With initial state";fe.args={initialState:{state:Gt,enabledDefault:!0},inputConfig:Te,variant:de,translateWithId:Zt};const ve=ce.bind({});ve.storyName="With Actions";ve.args={inputConfig:Te,variant:de,actions:tt,getActionsState:e=>{console.log("action state",e)}};const be=ce.bind({});be.storyName="Condition Builder (Hierarchical)";be.args={inputConfig:Te,variant:z};const he=ce.bind({});he.storyName="With initial state (Hierarchical)";he.args={initialState:{state:Rt,enabledDefault:!1},inputConfig:Te,variant:z};const we=ce.bind({});we.storyName="With Actions (Hierarchical)";we.args={inputConfig:Te,variant:z,actions:tt,getActionsState:e=>{}};var dn,cn,pn,mn,gn;ie.parameters={...ie.parameters,docs:{...(dn=ie.parameters)==null?void 0:dn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(pn=(cn=ie.parameters)==null?void 0:cn.docs)==null?void 0:pn.source},description:{story:`TODO: Declare one or more stories, generally one per design scenario.
NB no need for a 'Playground' because all stories have all controls anyway.`,...(gn=(mn=ie.parameters)==null?void 0:mn.docs)==null?void 0:gn.description}}};var yn,fn,vn;ye.parameters={...ye.parameters,docs:{...(yn=ye.parameters)==null?void 0:yn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(vn=(fn=ye.parameters)==null?void 0:fn.docs)==null?void 0:vn.source}}};var bn,hn,wn;fe.parameters={...fe.parameters,docs:{...(bn=fe.parameters)==null?void 0:bn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(wn=(hn=fe.parameters)==null?void 0:hn.docs)==null?void 0:wn.source}}};var Tn,qn,Cn;ve.parameters={...ve.parameters,docs:{...(Tn=ve.parameters)==null?void 0:Tn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(Cn=(qn=ve.parameters)==null?void 0:qn.docs)==null?void 0:Cn.source}}};var An,kn,On;be.parameters={...be.parameters,docs:{...(An=be.parameters)==null?void 0:An.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(On=(kn=be.parameters)==null?void 0:kn.docs)==null?void 0:On.source}}};var _n,xn,En;he.parameters={...he.parameters,docs:{...(_n=he.parameters)==null?void 0:_n.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(En=(xn=he.parameters)==null?void 0:xn.docs)==null?void 0:En.source}}};var Nn,In,Sn;we.parameters={...we.parameters,docs:{...(Nn=we.parameters)==null?void 0:Nn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(Sn=(In=we.parameters)==null?void 0:In.docs)==null?void 0:Sn.source}}};const Ha=["conditionBuilder","conditionBuilderDynamicOptions","conditionBuilderWithInitialState","conditionBuilderWithActions","conditionBuilderHierarchical","conditionBuilderWithInitialStateHierarchical","conditionBuilderWithActionsHierarchical"];export{Ha as __namedExportsOrder,ie as conditionBuilder,ye as conditionBuilderDynamicOptions,be as conditionBuilderHierarchical,ve as conditionBuilderWithActions,we as conditionBuilderWithActionsHierarchical,fe as conditionBuilderWithInitialState,he as conditionBuilderWithInitialStateHierarchical,Da as default};
