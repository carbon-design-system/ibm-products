import{e as i,S as u,r as x}from"./iframe-DCfjJu_F.js";import{g}from"./getBatchActions-BY7DfYX_.js";import{s as w,m as E}from"./_storybook-styles-D7mUqNm0.js";import{D as f}from"./DatagridActions-C5NSruz-.js";import{D as S}from"./DatagridPagination-BdAc1oLI.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-Bn0wRTpj.js";import{u as h}from"./useExpandedRow-BRNSb9Su.js";import{u as D}from"./useSelectRows-LZhuxXrr.js";import{u as C}from"./useStickyColumn-DeqUuMc7.js";import{u as R}from"./usePrefix-BjkXB43N.js";import{E as H}from"./bucket-6-DCXoSG9N.js";import{T as b}from"./bucket-18-CAKstFHh.js";import"./bucket-0-fVXhX98s.js";import"./bucket-2-CM6WUjLH.js";import"./index-DggURKcq.js";import"./bucket-7-DyUsK330.js";import"./bucket-19-DaUFX3rW.js";import"./ComposedModal-B2bQRqbr.js";import"./index-BEhuL1MR.js";import"./index-DLE1X6F3.js";import"./LayerContext-D75seshR.js";import"./clamp--00YEiB8.js";import"./ButtonSet-euj9gTPO.js";import"./InlineLoading-CRiW5teS.js";import"./mergeRefs-D4pwfk3t.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-XuLZef_t.js";import"./Text-BBeCTcnD.js";import"./utils-CHds83dj.js";import"./TableToolbarSearch-DDmgJqvQ.js";import"./wrapComponent-J4tuQwf1.js";import"./Search-BmE2giQX.js";import"./FormContext-zJNsbdVC.js";import"./bucket-15-DPP6yuyp.js";import"./Dropdown-D1QwjIVp.js";import"./index-BgLL8Ey7.js";import"./inheritsLoose-DHKJTbHM.js";import"./MenuItem-BmxVw0NX.js";import"./useControllableState-CvJtX0qn.js";import"./useAttachedMenu-7Ip5kQ2D.js";import"./index-BC1G6xB0.js";import"./index-DIfk5cyb.js";import"./bucket-13-COHK2cHs.js";import"./useOutsideClick-tAow3AKx.js";import"./OverflowMenuItem-WI9DgxqP.js";import"./useFilterContext-BHSxgc_H.js";import"./bucket-14-hK2psUUY.js";import"./Pagination-CphljnGz.js";import"./Select-CxlEUv0c.js";import"./SelectItem-B2jTNrlm.js";import"./MultiSelect-CeCJGOxw.js";import"./Checkbox-D9UbsuV-.js";import"./devtools-Dq6cNnKA.js";import"./TableRow-Fck1UAqI.js";import"./bucket-1-QfmfktZY.js";import"./TableToolbar-DnrhumUt.js";import"./index-D5yRydeU.js";import"./ErrorEmptyState-CVZqa5cH.js";import"./EmptyState-CTxGgD0p.js";import"./EmptyStateV2.deprecated-DYMI9PQt.js";import"./Link-D1p4ezde.js";import"./ErrorIllustration-CxTq4x7O.js";import"./useId-D2QmEKez.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-y13XT-QW.js";import"./NoDataIllustration-CPRbiszZ.js";import"./NotFoundEmptyState-RO_AWlsN.js";import"./NotFoundIllustration-m0Gx9b3K.js";import"./index.esm-DxLVAyv5.js";import"./usePreviousValue-CBp7NEq-.js";import"./useResizeObserver-CSc2h2KH.js";import"./useIsomorphicEffect-Cv3WfcJG.js";import"./getFocusableElements-BW7cf991.js";import"./index-pMTGHuqE.js";import"./props-helper-z_EuKbf-.js";import"./useClickOutside-BGQNUCe3.js";import"./AccordionItem-C7en308N.js";import"./DatePicker-DKknci41.js";import"./FormGroup-Syt6qd0m.js";import"./NumberInput-6QMDORen.js";import"./useNormalizedInputProps-CNsxTdqX.js";import"./documentLang-E105Y72C.js";import"./bucket-16-FQKZxNTK.js";import"./RadioButton-DWsH_Zfh.js";import"./RadioButtonGroup-BUBw6Nws.js";import"./usePrefersReducedMotion-DsMsVVIx.js";import"./usePresence-CqSe_d7p.js";import"./ActionSet-BVtq0oD_.js";import"./useWindowResize-C4OFVNT3.js";import"./TagSet-B6xqiZ_g.js";import"./Tag-Do4AOXQ3.js";import"./DefinitionTooltip-FHGQOFPQ.js";import"./DismissibleTag-BqY_z83F.js";import"./usePortalTarget-Cjf1FlSN.js";import"./OperationalTag-DYiAg5m0.js";import"./SkeletonText-CDRuNfgd.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-C33sMDaI.js";import"./TableSelectRow-wSBu-_4c.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,Ht={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const bt=["ExpandableRowStory"];export{e as ExpandableRowStory,bt as __namedExportsOrder,Ht as default};
