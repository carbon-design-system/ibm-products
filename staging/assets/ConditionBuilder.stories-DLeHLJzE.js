import{e as t,r as f}from"./index-CPiZ6Cnx.js";import{j as M}from"./index-B83en7q5.js";import{useMDXComponents as Mn}from"./index-CUO_02de.js";import"./index-CvHaCfpW.js";import{b as Ie,_ as Se,c as R,P as n,i as bt,L as vt,e as Gn,ab as ht,C as Rn,a4 as Fn}from"./index-BPCFiO9b.js";import{T as Vn}from"./TextInput-d19WJcLV.js";import{o as Wn,aM as Kn}from"./bucket-6-CO2LLwKX.js";import{aj as We}from"./bucket-7-ouWb30ej.js";import{p as zn,T as wt,B as Un,Z as Zn,X as Jn}from"./settings-41bnSjHp.js";import{j as Yn}from"./bucket-5-B7bOdntf.js";import{q as Xn,ay as Qn}from"./bucket-17-VMH0CKri.js";import{B as Ct,C as $e}from"./bucket-1-2OIQCase.js";import{u as P}from"./uuidv4-BN2rGLQG.js";import{s as Tt}from"./index-CtW6Lsnp.js";import{g as qt}from"./devtools-Ca6Wku6c.js";import{S as Je,H as Ye}from"./index-DtQVt1M7.js";import{L as At}from"./index-C_tB4MqD.js";import{P as kt,a as Ot}from"./index-H2wBg9na.js";import{W as _t,a as et}from"./bucket-18-CAzey7tD.js";import{A as nt,s as Et}from"./bucket-0-BYIdRiFw.js";import{S as tt}from"./Search-Cc2Df4em.js";import{N as xt}from"./NumberInput-B32JHXD-.js";import{T as It}from"./TextArea-DFk7rrO3.js";import{D as un,a as Re}from"./DatePicker-ClN6dyFZ.js";import{S as Fe}from"./SelectItem-klZ169sS.js";import{b2 as St}from"./bucket-2-Bg39G-BA.js";import{E as Le}from"./bucket-19-D3HGmNQE.js";import{a as Nt,f as Pt,C as jt}from"./index-BLWQvygC.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-ZKO_qc5e.js";import"./preview-CFjW7UBg.js";import"./iframe-DX7T_URq.js";import"./DocsRenderer-CFRXHY34-C2gN1Rw9.js";import"./client-BCQEsWlk.js";import"./useNormalizedInputProps-CqoVIYpB.js";import"./Text-DJS5NTiV.js";import"./FormContext-CgeSXHS1.js";import"./useAnnouncer-Dwt0jqXi.js";import"./events-OVwOsPzJ.js";import"./LayerContext-BGhaVt7n.js";import"./bucket-15-e1AWIpaL.js";import"./bucket-16-D6LVaITE.js";import"./index-Dytf1aFS.js";import"./index-DrFu-skq.js";const at=e=>{let{hideLabel:a,className:r,...i}=e;const l=Ie();return t.createElement("div",Se({className:R(`${l}--form-item`,r)},i),!a&&t.createElement("span",{className:`${l}--label ${l}--skeleton`}),t.createElement("div",{className:`${l}--select ${l}--skeleton`},t.createElement("div",{className:`${l}--select-input`})))};at.propTypes={className:n.string,hideLabel:n.bool};const Lt=Array.from({length:Tt.length-1}).map((e,a)=>a+1),rt=t.forwardRef(function(a,r){const{as:i="div",children:l,className:s,gap:d,orientation:c="vertical",...m}=a,u=Ie(),y=R(s,{[`${u}--stack-${c}`]:!0,[`${u}--stack-scale-${d}`]:typeof d=="number"}),b={...m.style};return typeof d=="string"&&(b[`--${u}-stack-gap`]=d),t.createElement(i,Se({},m,{ref:r,className:y,style:b}),l)});rt.propTypes={as:n.elementType,children:n.node,className:n.string,gap:n.oneOfType([n.string,n.oneOf(Lt)]),orientation:n.oneOf(["horizontal","vertical"])};const $t=t.forwardRef(function(a,r){return t.createElement(rt,Se({},a,{ref:r,orientation:"vertical"}))}),it=t.forwardRef(function(a,r){let{children:i,className:l,disabled:s=!1,hideLabel:d,id:c,invalidText:m="Invalid time format.",invalid:u=!1,warningText:y="Warning message.",warning:b=!1,labelText:v,light:p=!1,maxLength:O=5,onChange:w=()=>{},onClick:_=()=>{},onBlur:g=()=>{},pattern:h="(1[012]|[1-9]):[0-5][0-9](\\s)?",placeholder:$="hh:mm",readOnly:j,size:A="md",type:S="text",value:D,...F}=a;const x=Ie(),[N,I]=t.useState(D),[V,U]=t.useState(D);D!==V&&(I(D),U(D));function Y(W){s||(j||I(N),_(W))}function ie(W){!s&&!j&&(I(N),w(W))}function k(W){s||(j||I(N),g(W))}const q=R(`${x}--time-picker__input-field`,`${x}--text-input`,[l],{[`${x}--text-input--light`]:p,[`${x}--time-picker__input-field-error`]:u||b}),T=R({[`${x}--time-picker`]:!0,[`${x}--time-picker--light`]:p,[`${x}--time-picker--invalid`]:u,[`${x}--time-picker--warning`]:b,[`${x}--time-picker--readonly`]:j,[`${x}--time-picker--${A}`]:A,...l&&{[l]:!0}}),L=R(`${x}--label`,{[`${x}--visually-hidden`]:d,[`${x}--label--disabled`]:s}),C=v?t.createElement("label",{htmlFor:c,className:L},v):null;function E(){const W={onMouseDown:X=>{j&&(X.preventDefault(),X.target.focus())},onKeyDown:X=>{j&&["ArrowDown","ArrowUp"," "].includes(X.key)&&X.preventDefault()}};return t.Children.map(i,X=>{const Q=X;if(Q)return t.cloneElement(Q,{...Q.props,disabled:Q.props.disabled??s,readOnly:j,...W})})}const B={readOnly:j};return t.createElement("div",{className:R(`${x}--form-item`,l)},C,t.createElement("div",{className:T},t.createElement("div",{className:`${x}--time-picker__input`},t.createElement("input",Se({className:q,"data-invalid":u||void 0,disabled:s,id:c,maxLength:O,onClick:Y,onChange:ie,onBlur:k,placeholder:$,pattern:h,ref:r,type:S,value:D},F,B)),(u||b)&&t.createElement("div",{className:`${x}--time-picker__error__icon`},u?t.createElement(_t,{className:`${x}--checkbox__invalid-icon`,size:16}):t.createElement(et,{className:`${x}--text-input__invalid-icon--warning`,size:16}))),E()),(u||b)&&t.createElement("div",{className:`${x}--form-requirement`},u?m:y))});it.propTypes={children:n.node,className:n.string,disabled:n.bool,hideLabel:n.bool,id:n.string.isRequired,invalid:n.bool,invalidText:n.node,labelText:n.node,light:bt(n.bool),maxLength:n.number,onBlur:n.func,onChange:n.func,onClick:n.func,pattern:n.string,placeholder:n.string,readOnly:n.bool,size:n.oneOf(["sm","md","lg"]),type:n.string,value:n.string,warning:n.bool,warningText:n.node};const Ke=t.forwardRef(function(a,r){let{["aria-label"]:i="open list of options",children:l,id:s,disabled:d=!1,className:c,...m}=a;const u=Ie(),y=R({[`${u}--select`]:!0,[`${u}--time-picker__select`]:!0,...c&&{[c]:!0}});return t.createElement("div",{className:y},t.createElement("select",Se({"aria-label":i,className:`${u}--select-input`,disabled:d,id:s,ref:r},m),l),t.createElement(vt,{className:`${u}--select__arrow`,"aria-hidden":"true"}))});Ke.propTypes={children:n.node,className:n.string,defaultValue:n.any,disabled:n.bool,id:n.string.isRequired};const o=`${zn.prefix}--condition-builder`,ae="Non-Hierarchical",K="Hierarchical",de=(e,a)=>{e&&setTimeout(()=>{var r,i,l,s,d;J((r=e.target.closest('[role="gridcell"]'))==null?void 0:r.querySelector("button"),a),(l=(i=e.target.closest('[role="gridcell"]'))==null?void 0:i.querySelector("button"))==null||l.click(),(d=(s=e.target.closest('[role="gridcell"]'))==null?void 0:s.querySelector("button"))==null||d.focus()},0)},oe=(e,a)=>{setTimeout(()=>{J(e,a)},0)},ze=(e,a,r,i,l,s)=>{e==document.activeElement?a!==r.length-1?oe(r[a+1],s):oe(r[i?0:r.length-1],s):Array.from(r).indexOf(document.activeElement)==-1&&l&&oe(r[0],s)},Ue=(e,a,r,i,l,s)=>{e==document.activeElement?oe(a!==0?r[a-1]:r[i?r.length-1:0],s):Array.from(r).indexOf(document.activeElement)==-1&&l&&oe(r[r.length-1],s)},Dt=(e,a)=>e[a],ge=e=>e&&e!=="INVALID",J=(e,a)=>{var i,l;const r=(e==null?void 0:e.closest(`.${o}__content-container`))??(e==null?void 0:e.closest(`.${o}__actions-container`));r&&Array.from(r.querySelectorAll('[tabindex="0"]')).map(s=>s==null?void 0:s.setAttribute("tabindex","-1")),e==null||e.setAttribute("tabindex","0"),(l=(i=a.current)==null?void 0:i.querySelector(`.${o}__statement-button`))==null||l.setAttribute("tabindex","1"),e==null||e.focus()},Ve=e=>{const a=String(e.getDate()).padStart(2,"0"),r=String(e.getMonth()+1).padStart(2,"0"),i=e.getFullYear();return`${a}/${r}/${i}`},Bt=(e,a,r)=>r!=null&&r.valueFormatter&&["date","custom"].includes(e)?r.valueFormatter(a):{text:l=>l,textarea:l=>l,time:l=>l,number:l=>l,option:l=>l&&typeof l!="string"?(Array.isArray(l)?l:[l]).map(d=>d.label).join(", "):l,date:l=>{if(Array.isArray(l)&&l.length>1){const s=l!=null&&l[0]&&!isNaN(new Date(l[0]))?Ve(new Date(l[0])):"",d=l!=null&&l[1]&&!isNaN(new Date(l[1]))?Ve(new Date(l[1])):"";return`${s} To ${d}`}else return Array.isArray(l)&&!isNaN(new Date(l[0]))?Ve(new Date(l[0])):l},custom:l=>l}[e](a,r),ot=(e,a)=>{var r;return(e==null?void 0:e.operator)==="oneOf"||((r=a==null?void 0:a.operators)==null?void 0:r.find(i=>(e==null?void 0:e.operator)===i.id&&i.isMultiSelect))},lt=(e,a)=>{!e.currentTarget.value&&e.key==="Escape"&&de(e,a)},te=({className:e,label:a,hideLabel:r,tooltipAlign:i,renderIcon:l,onClick:s,showToolTip:d,wrapperProps:c,onBlur:m,onFocus:u,onMouseEnter:y,onMouseLeave:b,isInvalid:v,wrapperClassName:p,tabIndex:O,description:w,..._})=>{const g=w||a,h=Ie(),$=()=>{const j=_["data-name"]??"";return t.createElement("button",{tabIndex:O!==void 0?O:-1,className:R([e,`${o}__button`,{[`${o}__text-ellipsis`]:d&&!r&&!v},{[`${o}__invalid-input`]:v}]),type:"button",onClick:s,onBlur:m,onFocus:u,onMouseEnter:y,onMouseLeave:b,"data-name":j,..._},l&&t.createElement(l,null),!r&&t.createElement("span",null,a),v&&t.createElement(et,null))};return r||d||w?t.createElement(wt,{label:g,align:i,className:`${p} ${o}__tooltip ${h}--icon-tooltip`,...c,leaveDelayMs:0},$()):t.createElement(t.Fragment,null,$())};te.propTypes={className:n.string,hideLabel:n.bool,isInvalid:n.bool,label:n.string,onBlur:n.func,onClick:n.func,onFocus:n.func,onMouseEnter:n.func,onMouseLeave:n.func,renderIcon:n.oneOfType([n.func,n.object]),showToolTip:n.bool,tabIndex:n.number,tooltipAlign:n.string,wrapperClassName:n.string,wrapperProps:n.object};te.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderButton",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},label:{required:!1,tsType:{name:"string"},description:"label of the button",type:{name:"string"}},hideLabel:{required:!1,tsType:{name:"boolean"},description:"decides if label and tooltip to be hidden",type:{name:"bool"}},tooltipAlign:{required:!1,tsType:{name:"PopoverAlignment"},description:"tooltip position",type:{name:"string"}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:"Optional prop to allow overriding the icon rendering.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"callback triggered on click of add button",type:{name:"func"}},onBlur:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:"mouse events callbacks",type:{name:"func"}},onFocus:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:"",type:{name:"func"}},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"",type:{name:"func"}},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"",type:{name:"func"}},showToolTip:{required:!1,tsType:{name:"boolean"},description:"decides if  tooltip to be shown",type:{name:"bool"}},wrapperProps:{required:!1,tsType:{name:"object"},description:"optional props for tree grid to add role and aria-label to wrapper span",type:{name:"object"}},isInvalid:{required:!1,tsType:{name:"boolean"},description:"boolean to know the updated value in not valid",type:{name:"bool"}},wrapperClassName:{required:!1,tsType:{name:"string"},description:"classname applies to the wrapper of popover",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index",type:{name:"number"}},description:{required:!1,tsType:{name:"string"},description:""}}};const Ht={operator:"or",groups:[{groupOperator:"and",statement:"ifAll",id:P(),conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:P()}]}]},z=f.createContext({rootState:{groups:[]}}),Xe=e=>{const[a,r]=f.useState({groups:[]}),[i,l]=f.useState([]),s={rootState:a,setRootState:r,actionState:i,setActionState:l,inputConfig:e.inputConfig,popOverSearchThreshold:e.popOverSearchThreshold,getOptions:e.getOptions,variant:e.variant,translateWithId:e.translateWithId,conditionBuilderRef:e.conditionBuilderRef,statementConfigCustom:e.statementConfigCustom};return t.createElement(z.Provider,{value:s},e.children)};Xe.propTypes={children:n.node.isRequired,conditionBuilderRef:n.object,getOptions:n.func,inputConfig:n.shape({properties:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object]),description:n.string,type:n.oneOf(["text","textarea","number","date","option","time","custom"]).isRequired,config:n.shape({options:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object])})),component:n.func,operators:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired})),long:n.bool})}))}).isRequired,popOverSearchThreshold:n.number.isRequired,translateWithId:n.func,variant:n.string.isRequired};Xe.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderProvider",props:{rootState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},description:""},setRootState:{required:!1,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}}],raw:"SetStateAction<ConditionBuilderState>"}],raw:"Dispatch<SetStateAction<ConditionBuilderState>>"},description:""},actionState:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:""},setActionState:{required:!1,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"}],raw:"SetStateAction<Action[]>"}],raw:"Dispatch<SetStateAction<Action[]>>"},description:""},children:{required:!0,tsType:{name:"ReactNode"},description:"Provide the contents of the ConditionBuilder.",type:{name:"node"}},inputConfig:{required:!0,tsType:{name:"signature",type:"object",raw:`{
  properties: Property[];
}`,signature:{properties:[{key:"properties",value:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
} & ConfigType`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}},{key:"description",value:{name:"string",required:!1}},{key:"type",value:{name:"any",required:!1}},{key:"config",value:{name:"any",required:!1}}]}},{name:"union",raw:`| PropertyConfigOption['config']
| PropertyConfigTextArea['config']
| PropertyConfigText['config']
| PropertyConfigNumber['config']
| PropertyConfigDate['config']
| PropertyConfigTime['config']
| PropertyConfigCustom['config']`,elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"PropertyConfigTextArea['config']",raw:"PropertyConfigTextArea['config']"},{name:"PropertyConfigText['config']",raw:"PropertyConfigText['config']"},{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},{name:"signature",raw:"PropertyConfigDate['config']"},{name:"signature",raw:"PropertyConfigTime['config']"},{name:"signature",raw:"PropertyConfigCustom['config']"}]}]}],raw:"Property[]",required:!0}}]}},description:"This is a mandatory prop that defines the input to the condition builder.",type:{name:"shape",value:{properties:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},description:{name:"string",required:!1},type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'textarea'",computed:!1},{value:"'number'",computed:!1},{value:"'date'",computed:!1},{value:"'option'",computed:!1},{value:"'time'",computed:!1},{value:"'custom'",computed:!1}],required:!0},config:{name:"shape",value:{options:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1}}},required:!1},component:{name:"func",required:!1},operators:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0}}},required:!1},long:{name:"bool",required:!1}},required:!1}}},required:!1}}}},popOverSearchThreshold:{required:!0,tsType:{name:"number"},description:"Provide an mandatory numeric value that will be used to enable search option in the popovers with list.",type:{name:"number"}},getOptions:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  state: ConditionBuilderState,
  condition: Condition
) => Promise<Option[]>`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"},{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}],raw:"Promise<Option[]>"}}},description:`This is an optional callback function that will be triggered when options array is not passed in the inputConfig against a property. 
This can be a asynchronous function that need  to  return a promise, so it will allow to fetch options from API call.
options has to be in valid format
[{
          label: 'label',
          id: 'id',
        },...]`,type:{name:"func"}},variant:{required:!0,tsType:{name:"string"},description:"Provide the condition builder variant: Non-Hierarchical/ Hierarchical",type:{name:"string"}},translateWithId:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: string) => string",signature:{arguments:[{type:{name:"string"},name:"id"}],return:{name:"string"}}},description:`Optional prop if you want to pass translation to the texts used . Otherwise this will the defined defaults.
This callback function will receive the message id and you need to return the corresponding text for that id.
The message key will be one of [   "ifText",   "addConditionText",   "addConditionGroupText",   "addSubgroupText",   "conditionText",   "propertyText",   "operatorText",   "valueText",   "connectorText",   "conditionRowText",   "removeConditionText",   "addConditionRowText",   "startText",   "endText",   "clearSearchText",   "actionsText",   "then",   "removeActionText",   "addActionText",   "invalidText",   "invalidNumberWarnText"
]`,type:{name:"func"}},statementConfigCustom:{required:!1,tsType:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,signature:{properties:[{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}]}],raw:"statementConfig[]"},description:""},conditionBuilderRef:{required:!1,tsType:{name:"ForwardedRef",elements:[{name:"HTMLDivElement"}],raw:"ForwardedRef<HTMLDivElement>"},description:"ref of condition builder",type:{name:"object"}}},composes:["PropsWithChildren"]};const ye={ifText:"if",unlessText:"unless",excl_if:"excl.if",and:"and",or:"or",is:"is",ifAll:"if all",ifAny:"if any",unlessAll:"unless all",unlessAny:"unless any",greater:"is greater than",greaterEqual:"is greater than or equal to",lower:"is lower than",lowerEqual:"is lower than or equal to",startsWith:"starts with",endsWith:"ends with",contains:"contains",oneOf:"is one of",before:"is before",after:"is after",between:"is between",addConditionText:"Add condition",addConditionGroupText:"Add condition group",addSubgroupText:"Add subgroup",conditionText:"Condition",propertyText:"Property",operatorText:"Operator",valueText:"Value",connectorText:"Connector",conditionRowText:"Condition row",conditionRowGroupText:"Condition row group",removeConditionText:"Delete condition",addConditionRowText:"Add condition row",startText:"Start",endText:"End",clearSearchText:"Clear search input",actionsText:"Actions",then:"then",removeActionText:"Remove Action",addActionText:"Add action",invalidText:"Incomplete",invalidNumberWarnText:"Invalid number, must be 0 or greater",conditionBuilderText:"Condition Builder",actionSectionText:"Action Section",conditionHeadingText:"Condition",addPropertyText:"Add property",addOperatorText:"Add operator",addValueText:"Add value",conditionBuilderHierarchicalText:"Condition Builder Hierarchical"},Z=(e,a)=>{const{translateWithId:r}=f.useContext(z);return e.map(i=>(a!=null&&a[i]&&(i=a[i]),r!=null&&r(i)?r(i):ye[i]?ye[i]:i))},Mt=(e,a,r)=>{var l;(l=document.activeElement.closest(`.${o}__popover`))!=null&&l.querySelector('[role="dialog"]')||Vt(e,a,r)},Gt=(e,a,r)=>{Rt(e)||Ft(e,r==null?void 0:r.current,a)},Rt=e=>!["Escape"].includes(e.key)&&e.target.closest(`.${o}__item-date`),Ft=(e,a,r)=>{var m,u,y,b,v,p;const i=e.key,l=Dt(e,"shiftKey"),s=(m=a.querySelector("ul"))==null?void 0:m.dataset.multiSelect,d=(u=a.querySelectorAll('[role="option"]'))==null?void 0:u.length;let c=[];if(i==="Escape"&&(de(e,r),e.preventDefault()),d)switch(i){case"ArrowUp":e.preventDefault(),a.querySelectorAll('[role="option"]').forEach((O,w,_)=>{Ue(O,w,_,null,null,r)}),Array.from(((y=e.target.closest("ul"))==null?void 0:y.querySelectorAll("li"))??[]).indexOf(e.target)===1&&(a.querySelector(`.${o}__popover-content-wrapper`).scrollTop=0);break;case"ArrowDown":e.preventDefault(),a.querySelectorAll('[role="option"]').forEach((O,w,_)=>{ze(O,w,_,null,null,r)});break;case"Tab":c=[...Array.from(a.querySelectorAll(`.${o}__selectAll-button,[role="searchbox"]`)),a.querySelector('[role="option"]')],c.forEach((O,w,_)=>{l?Ue(O,w,_,!0,!0,r):ze(O,w,_,!0,!0,r)}),e.preventDefault();break;case" ":s==="true"&&(document.activeElement.type!=="button"&&((b=document.activeElement)==null||b.click()),e.preventDefault());break;case"Enter":document.activeElement.type!=="button"&&(de(e,r),(v=document.activeElement)==null||v.click());break}else i==="Enter"&&!l&&document.activeElement.type!=="button"&&(de(e,r),(p=document.activeElement)==null||p.click())},Vt=(e,a,r)=>{var i,l,s,d,c,m;switch(e.key){case"ArrowRight":if(e.preventDefault(),r==K){let u=Array.from((i=e.target.closest('[role="row"]'))==null?void 0:i.querySelectorAll('[role="gridcell"] button'));if(u.length===1)e.target=e.target.closest('[role="row"]'),dn(e,a,r);else if(e.target.getAttribute("role")=="row")J(u[0],a);else{let y=u.indexOf(e.target);y<u.length-1&&oe(u[y+1],a)}}else cn(e,a);break;case"ArrowLeft":if(e.preventDefault(),r==K){if(e.target.getAttribute("role")!=="row"){let u=Array.from((l=e.target.closest('[role="row"]'))==null?void 0:l.querySelectorAll('[role="gridcell"] button')),y=u.indexOf(e.target);if(y>0)oe(u[y-1],a);else{let b=e.target.closest('[role="row"]');J(b,a)}}}else cn(e,a);break;case"ArrowUp":case"ArrowDown":e.preventDefault(),r==K?dn(e,a,r):Wt(e,a,r);break;case"Enter":((d=(s=document.activeElement)==null?void 0:s.querySelectorAll("button"))==null?void 0:d.length)===1&&((m=(c=document.activeElement)==null?void 0:c.querySelectorAll("button")[0])==null||m.click());break}},Qe=e=>{var a;return Array.from((a=e.current)==null?void 0:a.querySelectorAll('[role="row"]'))},st=(e,a)=>Qe(a).findIndex(i=>i.contains(e)),Wt=(e,a,r)=>{const i=Qe(a),l=st(e.target,a);ut(e,l,i,r,a)},dn=(e,a,r)=>{const i=Qe(a),l=st(e.target,a);let s=l;e.target.getAttribute("role")=="row"?(["ArrowDown","ArrowRight"].includes(e.key)?s+=1:e.key==="ArrowUp"&&(s-=1),s<0?s=0:s>=i.length&&(s=i.length-1),s!==l&&J(i[s],a)):ut(e,l,i,r,a)},ut=(e,a,r,i,l)=>{let s=a;e.key==="ArrowUp"&&(s=a==0?a:a-1),e.key==="ArrowDown"&&(s=a===r.length-1?r.length-1:a+1);const d=r[s],c=e.target.dataset.name;d!=null&&d.querySelector(`[data-name="${c}"]`)?J(d==null?void 0:d.querySelector(`[data-name="${c}"]`),l):i===K&&J(d,l)},cn=(e,a)=>{a.current.querySelectorAll('[role="gridcell"] button').forEach((r,i,l)=>{e.key==="ArrowRight"?ze(r,i,l,null,null,a):Ue(r,i,l,null,null,a)})},G=({children:e,className:a,label:r,renderIcon:i,title:l,type:s,showToolTip:d,condition:c,popOverClassName:m,config:u,renderChildren:y,onChange:b,description:v,...p})=>{const O=f.useRef(null),[w,_]=f.useState(!1),{conditionBuilderRef:g,statementConfigCustom:h}=f.useContext(z),$={ifAll:ye.ifText,ifAny:ye.ifText,unlessAll:ye.unlessText,unlessAny:ye.unlessText};h==null||h.forEach(C=>{$[C.id]=C.label});const[j,A,S,D,F,x]=Z(["invalidText","addConditionText","addPropertyText","addOperatorText","addValueText",r],$),N=()=>{const{property:C,operator:E}=c||{};return r==="INVALID"||p["data-name"]==="propertyField"&&C==="INVALID"||p["data-name"]==="operatorField"&&E==="INVALID"?{propertyLabel:j,isInvalid:!0}:{isInvalid:!1,propertyLabel:p["data-name"]=="valueField"&&s?Bt(s,r,u):x}},{propertyLabel:I,isInvalid:V}=N();f.useEffect(()=>{if(c){const C=p["data-name"];(c.popoverToOpen&&C!==c.popoverToOpen||C=="valueField"&&s==="option"&&!ot(c,u))&&Y(),c.popoverToOpen==C&&ie()}else Y()},[c,r]),f.useEffect(()=>{var C;if(w&&O.current){const E=(C=O==null?void 0:O.current)==null?void 0:C.querySelector("input,textarea");E&&setTimeout(()=>E.focus(),0)}},[O,w]);const U=()=>{(p["data-name"]==="propertyField"&&!(c!=null&&c.property)||p["data-name"]==="operatorField"&&!(c!=null&&c.operator)||p["data-name"]==="valueField"&&!(c!=null&&c.value))&&(b==null||b("INVALID"))},Y=()=>{w&&U(),_(!1)},ie=()=>_(!0),k=()=>{(e||y)&&_(!w)},q=C=>{Gt(C,g,O),C.key==="Escape"&&U()},T=C=>{var E;return C&&((E=u==null?void 0:u.operators)==null?void 0:E.find(B=>B.id===C))},L=()=>{var C;return u!=null&&u.operators&&p["data-name"]==="operatorField"?((C=T(I))==null?void 0:C.label)??I:I||(p["data-name"]==="propertyField"?S:p["data-name"]==="operatorField"?D:p["data-name"]==="valueField"?F:A)};return t.createElement(kt,{open:w,isTabTip:!0,role:"gridcell",className:`${m} ${o}__popover`,ref:O,onRequestClose:Y},t.createElement(te,{label:L(),hideLabel:!r,onClick:k,className:a,"aria-haspopup":!0,"aria-expanded":w,renderIcon:i||(r==null?nt:void 0),showToolTip:d,isInvalid:V,description:v,...p}),w&&t.createElement(Ot,{className:`${o}__popover-content-wrapper`,role:"dialog","aria-label":l,onKeyDown:q},t.createElement(At,null,t.createElement(Je,null,t.createElement(Ye,{className:`${o}__item__title`},l),t.createElement("div",{className:`${o}__popover-content`},y?y(O):e)))))};G.propTypes={children:n.node,className:n.string,condition:n.object,config:n.object,label:n.oneOfType([n.string,n.array,n.object]),onChange:n.func,popOverClassName:n.string,renderChildren:n.func,renderIcon:n.oneOfType([n.func,n.object]),showToolTip:n.bool,title:n.string,type:n.string};G.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItem",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},label:{required:!1,tsType:{name:"union",raw:"string | Option | Option[]",elements:[{name:"string"},{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]},{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}]},description:"text to be displayed in the field",type:{name:"union",value:[{name:"string"},{name:"array"},{name:"object"}]}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:"Optional prop to allow overriding the icon rendering.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},title:{required:!1,tsType:{name:"string"},description:"title of the popover",type:{name:"string"}},showToolTip:{required:!1,tsType:{name:"boolean"},description:"show tool tip",type:{name:"bool"}},popOverClassName:{required:!1,tsType:{name:"string"},description:"class name for popover",type:{name:"string"}},type:{required:!1,tsType:{name:"string"},description:"input type",type:{name:"string"}},description:{required:!1,tsType:{name:"string"},description:""},condition:{required:!1,tsType:{name:"intersection",raw:"Action & Condition",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}}]},description:"current condition state object",type:{name:"object"}},config:{required:!1,tsType:{name:"union",raw:`| PropertyConfigOption['config']
| PropertyConfigTextArea['config']
| PropertyConfigText['config']
| PropertyConfigNumber['config']
| PropertyConfigDate['config']
| PropertyConfigTime['config']
| PropertyConfigCustom['config']`,elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"PropertyConfigTextArea['config']",raw:"PropertyConfigTextArea['config']"},{name:"PropertyConfigText['config']",raw:"PropertyConfigText['config']"},{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},{name:"signature",raw:"PropertyConfigDate['config']"},{name:"signature",raw:"PropertyConfigTime['config']"},{name:"signature",raw:"PropertyConfigCustom['config']"}]},description:"this is the config object again the current property from inputConfig",type:{name:"object"}},renderChildren:{required:!1,tsType:{name:"signature",type:"function",raw:"(ref: Ref<HTMLDivElement>) => ReactNode",signature:{arguments:[{type:{name:"Ref",elements:[{name:"HTMLDivElement"}],raw:"Ref<HTMLDivElement>"},name:"ref"}],return:{name:"ReactNode"}}},description:"callback prop that returns the jsx for children",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(val: string) => void",signature:{arguments:[{type:{name:"string"},name:"val"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},tabIndex:{required:!1,tsType:{name:"number"},description:""},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},onFocus:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},onBlur:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},children:{description:"provide the contents of the popover",type:{name:"node"},required:!1}},composes:["PropsWithChildren"]};const le=({conditionState:e={},config:a={},onChange:r})=>{const{popOverSearchThreshold:i}=f.useContext(z),l=f.useRef(null),[s,d]=Z(["propertyText","clearSearchText"]),{conditionBuilderRef:c}=f.useContext(z),m=a.options,[u,y]=f.useState(""),b=e.value,v=u?m==null?void 0:m.filter(g=>{var h;return(h=g.label)==null?void 0:h.toLowerCase().includes(u.toLowerCase())}):m;f.useEffect(()=>{var g;if(l.current){const h=(g=l.current)==null?void 0:g.querySelector("input, button,li");h&&h.focus()}},[m]);const p=(g,h)=>{r(h.id,g)},O=g=>{const{value:h}=g.target;y(h)},w=()=>e.label?e.label:s,_=g=>t.createElement("div",{className:`${o}__statement_wrapper`},t.createElement("div",null,g.label," (",g.connector,")"),t.createElement("div",null,g.secondaryLabel));if(m)return t.createElement("div",{className:`${o}__item-option`,ref:l},i&&m.length>i&&t.createElement("div",{className:`${o}__item-option__search`},t.createElement(tt,{size:"sm",labelText:d,closeButtonLabelText:d,onChange:O,onKeyDown:g=>lt(g,c)})),t.createElement("ul",{"aria-label":w(),role:"listbox"},v==null?void 0:v.map(g=>{const h=b===g.id,$=g.icon;return t.createElement("li",{tabIndex:0,key:g.id,role:"option","aria-selected":h,className:`${o}__item-option__option`,onKeyUp:()=>!1,onClick:j=>p(j,g)},t.createElement("div",{className:`${o}__item-option__option-content`},t.createElement("span",{className:`${o}__item-option__option-label`},$&&t.createElement($,null),a.isStatement?_(g):g.label),h&&t.createElement(Gn,{className:`${o}__checkmark`})))})))};le.propTypes={conditionState:n.object,config:n.object,onChange:n.func};le.__docgenInfo={description:"",methods:[],displayName:"ItemOption",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  label?: string;
  value?: string;
}`,signature:{properties:[{key:"label",value:{name:"string",required:!1}},{key:"value",value:{name:"string",required:!1}}]}},description:"current condition object",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},config:{required:!1,tsType:{name:"intersection",raw:`{ options?: option[] | statementConfig[] } & {
  isStatement?: boolean;
}`,elements:[{name:"signature",type:"object",raw:"{ options?: option[] | statementConfig[] }",signature:{properties:[{key:"options",value:{name:"union",raw:"option[] | statementConfig[]",elements:[{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"option[]"},{name:"Array",elements:[{name:"intersection",raw:`Item & {
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,signature:{properties:[{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}]}],raw:"statementConfig[]"}],required:!1}}]}},{name:"signature",type:"object",raw:`{
  isStatement?: boolean;
}`,signature:{properties:[{key:"isStatement",value:{name:"boolean",required:!1}}]}}]},description:"current config object that this property is part of",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string, e: Event) => void",signature:{arguments:[{type:{name:"string"},name:"value"},{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const He=()=>{const[e,a,r,i,l,s,d,c,m,u,y,b,v,p,O,w,_,g]=Z(["ifAll","ifAny","unlessAll","unlessAny","and","or","is","greater","greaterEqual","lower","lowerEqual","startsWith","endsWith","contains","oneOf","before","after","between"]),{statementConfigCustom:h}=f.useContext(z);return{statementConfig:h??[{id:"ifAll",connector:"and",label:e,secondaryLabel:"(a && b)"},{id:"ifAny",connector:"or",label:a,secondaryLabel:"(a || b)"},{id:"unlessAll",connector:"and",label:r,secondaryLabel:"! (a && b)"},{id:"unlessAny",connector:"or",label:i,secondaryLabel:"! (a || b)"}],connectorConfig:[{label:l,id:"and"},{label:s,id:"or"}],operatorConfig:[{label:d,id:"is",type:"all"},{label:c,id:"greater",type:"number"},{label:m,id:"greaterEqual",type:"number"},{label:u,id:"lower",type:"number"},{label:y,id:"lowerEqual",type:"number"},{label:b,id:"startsWith",type:"text,textarea"},{label:v,id:"endsWith",type:"text,textarea"},{label:p,id:"contains",type:"text,textarea"},{label:O,id:"oneOf",type:"option"},{label:w,id:"before",type:"date,time"},{label:_,id:"after",type:"date,time"},{label:g,id:"between",type:"date"}]}},Ne=({operator:e,className:a,onChange:r,...i})=>{const{variant:l,conditionBuilderRef:s}=f.useContext(z),[d]=Z(["connectorText"]),{connectorConfig:c}=He(),m=f.useCallback((v,p)=>{p?v.classList.add("hoveredConnector"):v.classList.remove("hoveredConnector")},[]),u=v=>{const p=v==null?void 0:v.currentTarget.closest(".eachGroup");m(p,!0)},y=v=>{const p=v==null?void 0:v.currentTarget.closest(".eachGroup");m(p,!1)},b=(v,p)=>{r==null||r(v),de(p,s)};return l==K?t.createElement("span",{className:`${a} ${o}__connector--disabled`},t.createElement(te,{label:e})):t.createElement(G,{label:e,title:d,"data-name":"connectorField",onMouseEnter:u,onMouseLeave:y,onFocus:u,onBlur:y,...i,popOverClassName:a,className:`${o}__connector-button`},t.createElement(le,{config:{options:c},conditionState:{value:e,label:d},onChange:b}))};Ne.propTypes={className:n.string,onChange:n.func,operator:n.string};Ne.__docgenInfo={description:"",methods:[],displayName:"ConditionConnector",props:{operator:{required:!1,tsType:{name:"string"},description:"string that defines the connector operator (and/or)",type:{name:"string"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(op: string) => void",signature:{arguments:[{type:{name:"string"},name:"op"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}}}};const en=({conditionState:e,config:a,onChange:r})=>{var c;const[i]=Z(["invalidNumberWarnText"]),l=(m,{value:u})=>{u!==""&&!isNaN(u)&&s(u)?r(`${u} ${a.unit??""}`):r("INVALID")},s=m=>!(a.max!==void 0&&a.min===void 0&&m>a.max||a.min!==void 0&&a.max===void 0&&m<a.min||a.max!==void 0&&a.min!==void 0&&(m>a.max||m<a.min)),d=()=>{var m,u;return((u=(m=e.value)==null?void 0:m.split(" "))==null?void 0:u[0])??""};return t.createElement("div",{className:`${o}__item-number`},t.createElement(xt,{...a,label:e.property,hideLabel:!0,id:(c=e.property)==null?void 0:c.replace(/\s/g,""),invalidText:i,allowEmpty:!0,onChange:l,defaultValue:d()}))};en.propTypes={conditionState:n.object,config:n.object,onChange:n.func};en.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemNumber",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"current condition object",type:{name:"object"}},config:{required:!1,tsType:{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},description:"current config object that this property is part of",type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const De=({conditionState:e,onChange:a,config:r,type:i})=>{var s;const l={...r,hideLabel:!0,value:ge(e.value)?e.value:"",id:(s=e.property)==null?void 0:s.replace(/\s/g,""),onChange:d=>{a(d.target.value)},labelText:e.property};return t.createElement("div",{className:`${o}__item-text`},i=="textarea"?t.createElement(It,{...l}):t.createElement(Vn,{...l}))};De.propTypes={conditionState:n.object,config:n.object,onChange:n.func,type:n.string};De.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemText",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"current condition object",type:{name:"object"}},config:{required:!1,tsType:{name:"union",raw:"PropertyConfigText | PropertyConfigTextArea",elements:[{name:"PropertyConfigText"},{name:"PropertyConfigTextArea"}]},description:"config of the current property",type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}},type:{required:!1,tsType:{name:"union",raw:"'textarea' | 'text'",elements:[{name:"literal",value:"'textarea'"},{name:"literal",value:"'text'"}]},description:"current input type",type:{name:"string"}}}};const nn=({conditionState:e,onChange:a,parentRef:r})=>{const i=f.useRef(null),[l,s]=Z(["startText","endText"]),{conditionBuilderRef:d}=f.useContext(z),c=e.operator=="between"?"range":"single",m=u=>{a(u&&u.length>0?u:"INVALID")};return t.createElement("div",{className:`${o}__item-date `},c=="single"&&t.createElement(un,{ref:i,dateFormat:"d/m/Y",datePickerType:"single",value:e.value,onClose:m,appendTo:r==null?void 0:r.current},t.createElement(Re,{id:"datePicker",placeholder:"dd/mm/yyyy",labelText:e.property})),c=="range"&&t.createElement(un,{ref:i,dateFormat:"d/m/Y",datePickerType:c,onClose:m,value:e.value,appendTo:r==null?void 0:r.current},t.createElement(Re,{id:"datePickerStart",placeholder:"dd/mm/yyyy",labelText:l}),t.createElement(Re,{id:"datePickerEnd",placeholder:"dd/mm/yyyy",labelText:s})))};nn.propTypes={conditionState:n.object,onChange:n.func,parentRef:n.object};nn.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemDate",props:{conditionState:{description:"current condition object",type:{name:"object"},required:!1},onChange:{description:"callback to update state oin date change",type:{name:"func"},required:!1},parentRef:{description:"reference to the popover node",type:{name:"object"},required:!1}}};const tn=({onChange:e,config:a})=>{var b,v;const[r,i]=f.useState(""),[l,s]=f.useState("AM"),[d,c]=f.useState((b=a==null?void 0:a.timeZones)==null?void 0:b[0]);f.useEffect(()=>{const p=`${r??""} ${l??""} ${d??""}`;e(r?p:void 0)},[r,l,d]);const m=p=>{c(p.target.value)},u=p=>{s(p.target.value)},y=p=>{i(p.target.value)};return t.createElement("div",{className:`${o}__item-time`},t.createElement(it,{id:"time-picker",labelText:"Select a time",onChange:y},t.createElement(Ke,{id:"time-picker-day-zone",onChange:u},t.createElement(Fe,{value:"AM",text:"AM"}),t.createElement(Fe,{value:"PM",text:"PM"})),t.createElement(Ke,{id:"time-picker-time-zone",onChange:m},(v=a==null?void 0:a.timeZones)==null?void 0:v.map((p,O)=>t.createElement(Fe,{key:O,value:p,text:p})))))};tn.propTypes={config:n.object,onChange:n.func};tn.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemTime",props:{config:{description:"current config object that this property is part of",type:{name:"object"},required:!1},onChange:{description:"callback to update state oin date change",type:{name:"func"},required:!1}}};const Ee=({className:e,onClick:a,addConditionSubGroupHandler:r,showConditionSubGroupPreviewHandler:i,hideConditionSubGroupPreviewHandler:l,showConditionPreviewHandler:s,hideConditionPreviewHandler:d,enableSubGroup:c,buttonLabel:m,tabIndex:u})=>{const[y,b,v]=Z(["addConditionText","addConditionRowText","addSubgroupText"]),p=()=>{d==null||d(),a()},O=()=>c?{onMouseEnter:s,onMouseLeave:d,onFocus:s,onBlur:d}:{},w=()=>({onMouseEnter:i,onMouseLeave:l,onFocus:i,onBlur:l}),_=()=>m||(c?void 0:b),g=c?{role:"gridcell"}:{};return t.createElement("div",{className:`${e} ${o}__add-button-wrapper`,role:c?"none":"gridcell","aria-label":_()},t.createElement(te,{renderIcon:Et,onClick:p,...O(),wrapperProps:g,className:`${o}__add-button`,hideLabel:!0,"data-name":"addButton",label:m??y,tabIndex:u,wrapperClassName:`${o}__add-condition-wrapper`}),c&&t.createElement(te,{renderIcon:Xn,onClick:r,className:R(`${o}__add-condition-sub-group`),hideLabel:!0,label:v,wrapperProps:g,wrapperClassName:`${o}__add-condition-sub-group-wrapper ${o}__gap-left`,...w()}))};Ee.propTypes={addConditionSubGroupHandler:n.func,buttonLabel:n.string,className:n.string,enableSubGroup:n.bool,hideConditionPreviewHandler:n.func,hideConditionSubGroupPreviewHandler:n.func,onClick:n.func,showConditionPreviewHandler:n.func,showConditionSubGroupPreviewHandler:n.func,tabIndex:n.number};Ee.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderAdd",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"callback triggered on click of add button",type:{name:"func"}},addConditionSubGroupHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},hideConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},showConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},hideConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},enableSubGroup:{required:!1,tsType:{name:"boolean"},description:"boolean to enable sub groups for the tree variant",type:{name:"bool"}},buttonLabel:{required:!1,tsType:{name:"string"},description:"tooltip label for plus button",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index",type:{name:"number"}}}};const Me=({conditionState:e={},config:a={},onChange:r})=>{const i=ot(e,a),{popOverSearchThreshold:l,getOptions:s,rootState:d}=f.useContext(z),[c,m]=Z(["propertyText","clearSearchText"]),{conditionBuilderRef:u}=f.useContext(z),y=f.useRef(null),[b,v]=f.useState(a.options),[p,O]=f.useState(""),w=b==null?void 0:b.filter(A=>A.label.toLowerCase().includes(p.toLowerCase())),_=Array.isArray(e.value)?e.value:e.value!==void 0?[e.value]:[];f.useEffect(()=>{!b&&s&&(async()=>{const S=await s(d,e);(S==null?void 0:S.length)>0&&Object.keys(S[0]).includes("label")&&Object.keys(S[0]).includes("id")&&v(S)})()},[]),f.useEffect(()=>{if(y.current){const A=y.current.querySelector("input, button,li");A&&(A==null||A.focus())}},[b]);const g=A=>{A.currentTarget.dataset.selectedAll=="false"?r(void 0):r(b)},h=A=>{const{value:S}=A.target;O(S)},$=(A,S,D)=>{const F=_.filter(x=>x!=="INVALID");if(i)if(D){const x=F.filter(N=>N.id!==S.id);r(x.length>0?x:void 0)}else r([...F,S]);else r(S,A);A.target instanceof SVGElement&&A.stopPropagation()},j=()=>e.label?e.label:e.property?e.property:c;return b?t.createElement("div",{className:`${o}__item-option`,ref:y},l&&b.length>l&&t.createElement("div",{className:`${o}__item-option__search`},t.createElement(tt,{size:"sm",labelText:m,closeButtonLabelText:m,onChange:h,onKeyDown:A=>lt(A,u)})),i&&t.createElement("div",{className:`${o}__multiselectSelectionStatusContainer`},t.createElement("label",null,_.length,"/",b.length," Selected"),t.createElement(Un,{kind:"ghost",size:"sm","data-selected-all":`${_.length==0}`,onClick:g,className:`${o}__selectAll-button`},_.length==0?"Select all":"Deselect all")),t.createElement("ul",{"aria-label":j(),role:"listbox","data-multi-select":i},w==null?void 0:w.map(A=>{const S=_.map(F=>F.id).includes(A.id),D=A.icon;return t.createElement("li",{tabIndex:0,key:A.id,role:"option","aria-selected":S,className:`${o}__item-option__option`,onKeyUp:()=>!1,onClick:F=>$(F,A,S)},t.createElement("div",{className:`${o}__item-option__option-content`},i?t.createElement(t.Fragment,null,t.createElement("span",{className:`${o}__option-check-box`},S?t.createElement(ht,null):t.createElement(St,null)),t.createElement("span",{className:`${o}__item-option__option-label`},A.label),D&&t.createElement("span",{className:`${o}__option-icon`},t.createElement(D,null))):t.createElement(t.Fragment,null,t.createElement("span",{className:`${o}__item-option__option-label`},D&&t.createElement(D,null),A.label),S&&t.createElement(Gn,{className:`${o}__checkmark`}))))}))):t.createElement(at,null)};Me.propTypes={conditionState:n.object,config:n.object,onChange:n.func};Me.__docgenInfo={description:"",methods:[],displayName:"ItemOptionForValueField",props:{conditionState:{required:!1,tsType:{name:"intersection",raw:"Condition & { label?: string }",elements:[{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{ label?: string }",signature:{properties:[{key:"label",value:{name:"string",required:!1}}]}}]},description:"current condition object",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},config:{required:!1,tsType:{name:"signature",raw:"PropertyConfigOption['config']"},description:"current config object that this property is part of",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: any, e?: Event) => void",signature:{arguments:[{type:{name:"any"},name:"value"},{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const Be=e=>{const{onRemove:a,onChange:r,condition:i={},conjunction:l,onConnectorOperatorChange:s,isStatement:d,group:c,onStatementChange:m,conditionIndex:u,addConditionHandler:y,addConditionSubGroupHandler:b,aria:v,hideConditionSubGroupPreviewHandler:p,showConditionSubGroupPreviewHandler:O,hideConditionPreviewHandler:w,showConditionPreviewHandler:_,isLastCondition:g}=e,{property:h,value:$,operator:j}=i,{inputConfig:A,variant:S,conditionBuilderRef:D}=f.useContext(z),[F,x]=f.useState(!1),[N,I]=f.useState(!1),[V,U,Y,ie,k]=Z(["conditionRowText","conditionText","propertyText","operatorText","removeConditionText"]),{statementConfig:q,operatorConfig:T}=He(),L=H=>{var ne;return((ne=A==null?void 0:A.properties)==null?void 0:ne.find(ft=>ft.id==H))??{}},{icon:C,type:E,config:B,label:W,description:Ae}=L(h),Q={text:De,number:en,date:nn,time:tn,option:Me,custom:B==null?void 0:B.component,textarea:De}[E],Pe=()=>{I(!0)},ke=()=>{I(!1)},je=(H,ne)=>{de(ne,D),m==null||m(H)},ee=H=>{r({...i,property:H,operator:void 0,value:"",popoverToOpen:ge(H)?"operatorField":""})},me=H=>{r({...i,operator:H,value:void 0,popoverToOpen:ge(H)?"valueField":""})},Oe=H=>{const ne={...i};delete ne.popoverToOpen,r({...ne,value:H})},pe=()=>{x(!0)},_e=()=>{x(!1)},mt=(H,ne)=>S===K?!0:g(H,ne),pt=()=>B!=null&&B.operators?B.operators:T.filter(H=>H.type.indexOf(E)!=-1||H.type=="all"),gt=()=>S==K?{"aria-level":v.level,"aria-posinset":v.posinset,"aria-setsize":v.setsize}:{},yt=H=>t.createElement(Q,{conditionState:{property:h,operator:j,value:$},onChange:Oe,config:B,"data-name":"valueField",parentRef:H,type:E});return t.createElement("div",{className:R(`${o}__condition-block`,{[`${o}__condition__deletion-preview`]:F},{[`${o}__gap-bottom`]:S==K},{[`${o}__gap ${o}__gap-bottom`]:S==ae},{[`${o}__condition--interacting`]:N}),role:"row","aria-label":V,...gt(),tabIndex:-1,onMouseEnter:Pe,onMouseLeave:ke,onBlur:ke},l?t.createElement(Ne,{className:`${o}__gap`,operator:l,onChange:H=>s==null?void 0:s(H)}):"",d&&t.createElement(G,{label:c.statement,title:U,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`,tabIndex:0},t.createElement(le,{conditionState:{value:c.statement,label:U},onChange:je,config:{options:q,isStatement:!0}})),t.createElement(G,{label:W??(i==null?void 0:i.property),title:Y,renderIcon:C??void 0,className:`${o}__property-field`,"data-name":"propertyField",condition:i,type:E,description:Ae,onChange:ee},t.createElement(le,{conditionState:{value:h,label:Y},onChange:ee,config:{options:A==null?void 0:A.properties}})),ge(h)&&t.createElement(G,{label:j,title:ie,"data-name":"operatorField",condition:i,type:E,config:B,onChange:me},t.createElement(le,{config:{options:pt()},conditionState:{value:j,label:ie},onChange:me})),ge(h)&&ge(j)&&t.createElement(G,{label:$,type:E,title:W,showToolTip:!0,"data-name":"valueField",condition:i,config:B,onChange:Oe,renderChildren:yt}),t.createElement("span",{role:"gridcell","aria-label":k},t.createElement(te,{hideLabel:!0,label:k,onClick:a,onMouseEnter:pe,onMouseLeave:_e,onFocus:pe,onBlur:_e,renderIcon:Rn,className:`${o}__close-condition`,"data-name":"closeCondition",wrapperClassName:`${o}__close-condition-wrapper`})),mt(u,c.conditions)&&t.createElement(Ee,{onClick:()=>{y==null||y(u)},addConditionSubGroupHandler:()=>{b==null||b(u)},showConditionSubGroupPreviewHandler:O,hideConditionSubGroupPreviewHandler:p,enableSubGroup:S==K,showConditionPreviewHandler:_,hideConditionPreviewHandler:w,className:`${o}__gap ${o}__gap-left`}))};Be.propTypes={addConditionHandler:n.func,addConditionSubGroupHandler:n.func,aria:n.object,condition:n.object,conditionIndex:n.number,conjunction:n.string,group:n.object,hideConditionPreviewHandler:n.func,hideConditionSubGroupPreviewHandler:n.func,isLastCondition:n.func,isStatement:n.bool,onChange:n.func,onConnectorOperatorChange:n.func,onRemove:n.func,onStatementChange:n.func,showConditionPreviewHandler:n.func,showConditionSubGroupPreviewHandler:n.func,state:n.object};Be.__docgenInfo={description:"",methods:[],displayName:"ConditionBlock",props:{condition:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"",type:{name:"object"}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"callback for Remove a condition",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(condition: Condition) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},onConnectorOperatorChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(op: string) => void",signature:{arguments:[{type:{name:"string"},name:"op"}],return:{name:"void"}}},description:"callback to handle the connector(and/or) change",type:{name:"func"}},onStatementChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(v: string) => void",signature:{arguments:[{type:{name:"string"},name:"v"}],return:{name:"void"}}},description:"callback to handle the statement(if/ excl.if) change",type:{name:"func"}},addConditionHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(conditionIndex: number) => void",signature:{arguments:[{type:{name:"number"},name:"conditionIndex"}],return:{name:"void"}}},description:"callback to add a new condition",type:{name:"func"}},addConditionSubGroupHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(conditionIndex: number) => void",signature:{arguments:[{type:{name:"number"},name:"conditionIndex"}],return:{name:"void"}}},description:"callback to add a new condition subgroup",type:{name:"func"}},hideConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for showing sub group preview",type:{name:"func"}},hideConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for showing add condition preview",type:{name:"func"}},conjunction:{required:!1,tsType:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},description:"string that decides to show the condition connector",type:{name:"string"}},isStatement:{required:!1,tsType:{name:"boolean"},description:"boolean that decides to show the statement(if/ excl.if)",type:{name:"bool"}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"object that hold the current group object where is condition is part of",type:{name:"object"}},conditionIndex:{required:!1,tsType:{name:"number"},description:"",type:{name:"number"}},aria:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  level: number;
  posinset: number;
  setsize?: number;
}`,signature:{properties:[{key:"level",value:{name:"number",required:!0}},{key:"posinset",value:{name:"number",required:!0}},{key:"setsize",value:{name:"number",required:!1}}]}},description:"object hold aria attributes",type:{name:"object"}},isLastCondition:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  index: number,
  conditions: (ConditionGroup | Condition)[]
) => void`,signature:{arguments:[{type:{name:"number"},name:"index"},{type:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]"},name:"conditions"}],return:{name:"void"}}},description:"",type:{name:"func"}},state:{description:"object that hold the current condition",type:{name:"object"},required:!1}}};const xe=({previewType:e,group:a,colorIndex:r})=>{const[i,l]=f.useState(!1),[s,d,c,m]=Z(["valueText","operatorText","propertyText","ifText"]);f.useEffect(()=>{l(!0)},[]);const u=()=>t.createElement("div",{className:`${o}__preview-condition`},t.createElement(G,{label:s,renderIcon:Ct}),t.createElement(G,{label:d}),t.createElement(G,{label:c}));return t.createElement(t.Fragment,null,e=="newGroup"&&t.createElement(t.Fragment,null,t.createElement("div",{className:R([`${o}__group__row ${o}__group-preview `,{[`${o}__group-preview-animate`]:i}])},t.createElement(G,{className:`${o}__statement-button`,label:a.groupOperator})),t.createElement("div",{"data-color-index":r,"aria-hidden":!0,className:R([`${o}__group ${o}__condition-wrapper ${o}__group-preview ${o}__group-wrapper `,{[`${o}__group-preview-animate`]:i}])},t.createElement("div",{className:`${o}__gap`},t.createElement(G,{className:`${o}__statement-button`,label:m})),u())),e=="subGroup"&&t.createElement("div",{className:R([`${o}__group__row ${o}__group-preview ${o}__gap-bottom`,{[`${o}__group-preview-animate`]:i}])},t.createElement("div",{className:`${o}__condition-block  ${o}__gap`},t.createElement(G,{label:a.groupOperator,className:`${o}__statement-button`,popOverClassName:`${o}__gap`}),t.createElement("div",{className:`${o}__group ${o}__condition-wrapper`},t.createElement(Ne,{className:`${o}__gap ${o}__groupConnector`,operator:m}),u()))),e=="condition"&&t.createElement("div",{className:R([`${o}__group__row ${o}__group-preview ${o}__gap-bottom`,{[`${o}__group-preview-animate`]:i}])},t.createElement("div",{className:`${o}__condition-block  ${o}__gap`},t.createElement(G,{label:a.groupOperator,className:`${o}__statement-button`,popOverClassName:`${o}__gap`}),u())))};xe.propTypes={colorIndex:n.number,group:n.object,previewType:n.oneOf(["condition","subGroup","newGroup"])};xe.__docgenInfo={description:"",methods:[],displayName:"ConditionPreview",props:{previewType:{required:!1,tsType:{name:"union",raw:"'newGroup' | 'subGroup' | 'condition'",elements:[{name:"literal",value:"'newGroup'"},{name:"literal",value:"'subGroup'"},{name:"literal",value:"'condition'"}]},description:"type of review to be displayed",type:{name:"enum",value:[{value:"'condition'",computed:!1},{value:"'subGroup'",computed:!1},{value:"'newGroup'",computed:!1}]}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"current conditional group",type:{name:"object"}},colorIndex:{required:!1,tsType:{name:"number"},description:"index of the color for next group",type:{name:"number"}}}};const Ge=({group:e,aria:a,onRemove:r,onChange:i,className:l})=>{const[s,d,c]=Z(["conditionBuilderGroupText","conditionText","conditionBuilderText"]),{statementConfig:m}=He(),{variant:u,conditionBuilderRef:y}=f.useContext(z),[b,v]=f.useState(-1),[p,O]=f.useState(-1);f.useState(!1);const w=f.useRef(null),_=(k,q,T)=>{var L;if(e&&e.conditions&&e.conditions.length>1)if(u==K?A(q):j(q,T),g(e.conditions,k)){const C=e.conditions.filter(E=>k!==E.id);if((C==null?void 0:C[0]).conditions){const E=C[0];C.splice(0,1,...E==null?void 0:E.conditions)}i==null||i({...e,conditions:C})}else{const C=(L=e==null?void 0:e.conditions)==null?void 0:L.reduce((E,B)=>{const W=B;return W.conditions?E.concat(W.conditions):E},[]);i==null||i({...e,conditions:C})}else r==null||r(q)},g=(k,q)=>k.find(T=>!T.conditions&&T.id!==q),h=(k,q)=>{const T=[...e!=null&&e.conditions?e.conditions.slice(0,q):[],k,...e!=null&&e.conditions?e.conditions.slice(q+1):[]];i==null||i({...e,conditions:T,id:(e==null?void 0:e.id)??P()})},$=k=>{const q={property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:P()};i==null||i({...e,conditions:[...e.conditions?e.conditions.slice(0,k+1):[],q,...e.conditions?e.conditions.slice(k+1):[]]})},j=(k,q)=>{var L;const T=(L=k.currentTarget.closest(`.${o}__group`))==null?void 0:L.querySelectorAll('[data-name="closeCondition"]');q==T.length-1?J(T[q-1],y):J(T[q+1],y)},A=k=>{var E,B,W,Ae,X,Q,Pe,ke,je;const q=(B=(E=k.currentTarget)==null?void 0:E.closest('[role="row"]'))==null?void 0:B.getAttribute("aria-level"),T=(Ae=(W=k.currentTarget)==null?void 0:W.closest('[role="row"]'))==null?void 0:Ae.getAttribute("aria-posinset"),L=(X=w.current)==null?void 0:X.querySelector(`[aria-level="${q}"][aria-posinset="${Number(T)+1}"]`),C=(Q=w.current)==null?void 0:Q.querySelector(`[aria-level="${q}"][aria-posinset="${Number(T)-1}"]`);if(L!=null&&L.classList.contains(`${o}__condition-block`))J(L==null?void 0:L.querySelector('[data-name="closeCondition"]'),y);else if(C!=null&&C.classList.contains(`${o}__condition-block`))J(C==null?void 0:C.querySelector('[data-name="closeCondition"]'),y);else{const ee=(Pe=w.current)==null?void 0:Pe.querySelectorAll(`[aria-level="${Number(q)-1}"][role="row"]`),me=(ke=w.current)==null?void 0:ke.querySelector(`[aria-level="${Number(q)+1}"][role="row"]`);if(me){const Oe={ariaLevel:Number(me.ariaLevel)-1,ariaPosInSet:me.ariaPosInSet};setTimeout(()=>{var _e;const pe=(_e=w.current)==null?void 0:_e.querySelector(`[role="row"][aria-level="${Oe.ariaLevel}"][aria-posinset="${Oe.ariaPosInSet}"]`);J(pe==null?void 0:pe.querySelector('[data-name="closeCondition"]'),y)},0)}else ee!=null&&ee.length&&ee.length>1&&J((je=ee[ee.length-2])==null?void 0:je.querySelector('[data-name="closeCondition"]'),y)}},S=k=>{i({...e,conditions:[...e.conditions?e.conditions.slice(0,k+1):[],{statement:"ifAll",groupOperator:"and",conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:P()}],id:P()},...e.conditions?e.conditions.slice(k+1):[]]})},D=(k,q)=>k+1>=q.length||q.length-1!=k&&q[k+1].conditions,F=k=>{O(k)},x=()=>{O(-1)},N=k=>{v(k)},I=()=>{v(-1)},V=k=>{var T;const q=(T=m.find(L=>L.id==k))==null?void 0:T.connector;i({...e,groupOperator:q,statement:k})},U=k=>{i({...e,groupOperator:k})},Y=()=>{var k;return t.createElement("div",{className:`${l}  eachGroup`},t.createElement("div",{className:`${o}__condition-wrapper`,role:"grid","aria-label":c},(k=e==null?void 0:e.conditions)==null?void 0:k.map((q,T)=>{var L;return t.createElement("div",{key:q.id,className:`${o}__group-wrapper`},t.createElement(Be,{conjunction:T>0?e.groupOperator:void 0,aria:{level:a.level+1,posinset:T+1,setsize:(L=e==null?void 0:e.conditions)==null?void 0:L.length},isStatement:T==0,condition:q,group:e,conditionIndex:T,onChange:C=>{h(C,T)},addConditionHandler:$,onRemove:C=>{_(q.id,C,T)},onConnectorOperatorChange:U,onStatementChange:V,isLastCondition:D}))})))},ie=()=>{var k;return t.createElement("div",{className:`${l} ${o}__condition-wrapper`,role:a.level===1?"rowgroup":void 0,"aria-label":a.level==1?s:void 0,ref:w},t.createElement("div",{tabIndex:0,role:"row","aria-level":a.level,"aria-posinset":a.posinset,"aria-setsize":a.setsize},t.createElement(G,{label:e.statement,title:d,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`},t.createElement(le,{conditionState:{value:e.statement,label:d},onChange:(q,T)=>{de(T,y),V(q)},config:{options:m,isStatement:!0}}))),(k=e==null?void 0:e.conditions)==null?void 0:k.map((q,T)=>{var L,C;return t.createElement(f.Fragment,{key:q.id},q.conditions?t.createElement("div",{className:R(`${o}__condition-block subgroup  ${o}__gap`,{[`${o}__gap-bottom`]:e&&e.conditions&&e.conditions.length<T+1},{})},t.createElement(Ne,{className:`${o}__gap ${o}__gap-bottom ${o}__groupConnector`,operator:e.groupOperator,"aria-hidden":!0}),t.createElement(Ge,{aria:{level:a.level+1,posinset:T+1,setsize:((L=e.conditions)==null?void 0:L.length)??0},className:`${o}__group`,group:q,onChange:E=>{h(E,T)},onRemove:E=>{_(q.id,E,T)}})):t.createElement("div",null,t.createElement(Be,{conjunction:T>0?e.groupOperator:void 0,aria:{level:a.level+1,posinset:T+1,setsize:((C=e.conditions)==null?void 0:C.length)??0},isStatement:!1,condition:q,group:e,conditionIndex:T,addConditionHandler:$,addConditionSubGroupHandler:S,onChange:E=>{h(E,T)},onRemove:E=>{_(q.id,E,T)},onConnectorOperatorChange:U,onStatementChange:V,showConditionSubGroupPreviewHandler:()=>{F(T)},hideConditionSubGroupPreviewHandler:x,showConditionPreviewHandler:()=>{N(T)},hideConditionPreviewHandler:I,isLastCondition:D})),T==p&&t.createElement(xe,{previewType:"subGroup",group:e}),T==b&&t.createElement(xe,{previewType:"condition",group:e}))}))};return t.createElement(t.Fragment,null,u==K&&ie(),u==ae&&Y())};Ge.propTypes={aria:n.object,className:n.string,group:n.object,onChange:n.func,onRemove:n.func};Ge.__docgenInfo={description:"",methods:[],displayName:"ConditionGroupBuilder",props:{group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"",type:{name:"object"}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"call back to remove the particular group from the state tree",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(group: ConditionGroup) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},name:"group"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},aria:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  level: number;
  posinset: number;
  setsize: number;
}`,signature:{properties:[{key:"level",value:{name:"number",required:!0}},{key:"posinset",value:{name:"number",required:!0}},{key:"setsize",value:{name:"number",required:!0}}]}},description:"object contains the aria attributes",type:{name:"object"}}}};const dt=()=>{const{rootState:e,setRootState:a}=f.useContext(z),[r]=Z(["conditionText"]),{connectorConfig:i}=He(),l=s=>{a({...e,operator:s})};return t.createElement("div",{className:`${o}__group-separator ${o}__group-separator-row`,role:"row",tabIndex:-1,"aria-level":1},t.createElement(G,{label:e.operator,title:r,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`},t.createElement(le,{conditionState:{value:e.operator,label:r},onChange:l,config:{options:i}})))};dt.__docgenInfo={description:"",methods:[],displayName:"GroupConnector"};const an=({actions:e,className:a})=>{const{actionState:r=[],setActionState:i}=f.useContext(z),[l,s]=f.useState(-1),[d,c,m,u,y,b]=Z(["actionsText","then","and","removeActionText","addActionText","actionSectionText"]),v=()=>{const g={id:P(),label:void 0,popoverToOpen:"valueField"};i==null||i([...r,g])},p=(g,h)=>{const j={...e.find(A=>A.id===g),id:r[h].id};i==null||i([...r.slice(0,h),j,...r.slice(h+1)])},O=g=>{i==null||i(r.filter(h=>h.id!==g))},w=g=>{s(g)},_=()=>{s(-1)};return t.createElement("div",{className:a},t.createElement(Je,{className:`${o}__heading`,level:4},t.createElement(Ye,null,d)),t.createElement("div",{className:`${o}__condition-wrapper`,role:"grid","aria-label":b},r==null?void 0:r.map((g,h)=>t.createElement("div",{key:g.id,role:"row",className:R(`${o}__condition-block ${o}__gap ${o}__gap-bottom`,{[`${o}__condition__deletion-preview`]:l==h})},t.createElement(G,{className:`${o}__statement-button`,tabIndex:0,popOverClassName:`${o}__gap`,label:h===0?c:m}),t.createElement(G,{label:g.label,title:d,condition:g,"data-name":"valueField",type:"option"},t.createElement(Me,{conditionState:{value:g.label},onChange:$=>p($.id,h),config:{options:e}})),t.createElement("span",{role:"gridcell","aria-label":u},t.createElement(te,{hideLabel:!0,label:u,onClick:()=>O(g.id),onMouseEnter:()=>w(h),onMouseLeave:_,onFocus:()=>w(h),onBlur:_,renderIcon:Rn,className:`${o}__close-condition`,"data-name":"closeCondition"})),r.length===h+1&&t.createElement(Ee,{onClick:v,className:`${o}__gap ${o}__gap-left`,buttonLabel:y,tabIndex:0}))),r.length===0&&t.createElement(Ee,{onClick:v,className:`${o}__gap ${o}__gap-left`,buttonLabel:y,tabIndex:0})))};an.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),className:n.string};an.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderActions",props:{actions:{required:!1,tsType:{name:"union",raw:"Action[] | Option[]",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}]},description:"optional array of object that give the list of actions.",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}}}};const rn=({startConditionLabel:e,getConditionState:a,getActionsState:r,initialState:i,actions:l})=>{var x;const{rootState:s,setRootState:d,variant:c,actionState:m}=f.useContext(z),u=f.useRef(i!=null&&i.state?JSON.parse(JSON.stringify(i==null?void 0:i.state)):null),[y,b]=f.useState(!1),[v,p]=f.useState(!1),[O,w,_]=Z(["addConditionGroupText","conditionHeadingText","conditionBuilderHierarchicalText"]),g=()=>{p(!0)},h=()=>{p(!1)};f.useEffect(()=>{var N;(N=s==null?void 0:s.groups)!=null&&N.length?b(!0):b(!1),a&&a(s??{})},[s]),f.useEffect(()=>{r==null||r(m??[])},[m]),f.useEffect(()=>{i!=null&&i.enabledDefault&&(d==null||d(i.state))},[i]);const $=()=>{var N,I;b(!0),(I=(N=u==null?void 0:u.current)==null?void 0:N.groups)!=null&&I.length?(d==null||d(u.current),u.current=null):d==null||d(Ht)},j=f.useCallback(N=>{var V;const I=(V=s==null?void 0:s.groups)==null?void 0:V.filter(U=>N!==(U==null?void 0:U.id));d==null||d({...s,groups:s?I:[]}),(I==null?void 0:I.length)===0&&(u.current=null)},[d,s]),A=(N,I)=>{if(s&&s.groups){const V=[...s.groups?s.groups.slice(0,I):[],N,...s.groups?s.groups.slice(I+1):[]];d==null||d({...s,groups:V})}},S=()=>{const N={statement:"ifAll",groupOperator:"and",id:P(),conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:P()}]};d==null||d({...s,groups:s&&s.groups?[...s.groups,N]:[N]})},D=()=>{var I;return(((I=s==null?void 0:s.groups)==null?void 0:I.length)??0)%5};if(!y)return t.createElement(Un,{className:`${o}__addConditionText-button`,renderIcon:N=>t.createElement(nt,{...N}),iconDescription:e,kind:"ghost",size:"sm",onClick:$},e);const F=c===K?{role:"treegrid","aria-label":_}:null;return t.createElement(t.Fragment,null,t.createElement(Je,{className:`${o}__heading`,level:4},t.createElement(Ye,null,w)),t.createElement("div",{className:`${o}__content-container`,...F},s&&((x=s==null?void 0:s.groups)==null?void 0:x.map((N,I)=>t.createElement("div",{key:N.id,className:`${o}__group-wrapper`},t.createElement(Ge,{className:`${o}__group`,aria:{level:1,posinset:I*2+1,setsize:(s.groups&&s.groups.length*2)??0},group:N,onRemove:()=>{j(N.id)},onChange:V=>{A(V,I)}}),s.groups&&I<s.groups.length-1&&t.createElement(dt,null)))),c==K&&t.createElement("div",{role:"row",tabIndex:-1,"aria-level":1,className:`${o}__add-group`},t.createElement(te,{renderIcon:Xn,onClick:S,onMouseEnter:g,onMouseLeave:h,onFocus:g,onBlur:h,className:`${o}__add-condition-group `,hideLabel:!0,label:O,wrapperProps:{role:"gridcell","aria-label":O}})),v&&t.createElement(xe,{previewType:"newGroup",colorIndex:D(),group:{groupOperator:s==null?void 0:s.operator,id:P()}})),l&&t.createElement(an,{actions:l,className:`${o}__actions-container`}))};rn.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),getActionsState:n.func,getConditionState:n.func.isRequired,initialState:n.shape({state:n.shape({groups:n.arrayOf(n.shape({groupOperator:n.string,statement:n.string,conditions:n.arrayOf(n.oneOfType([n.shape({property:n.string,operator:n.string,value:n.oneOfType([n.string,n.arrayOf(n.shape({id:n.string,label:n.string})),n.shape({id:n.string,label:n.string})])}),n.object]))})),operator:n.string}),enabledDefault:n.bool}),startConditionLabel:n.string.isRequired};rn.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderContent",props:{startConditionLabel:{required:!0,tsType:{name:"string"},description:"",type:{name:"string"}},getConditionState:{required:!0,tsType:{name:"signature",type:"function",raw:"(state: ConditionBuilderState) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"}],return:{name:"void"}}},description:"This is a callback function that returns the updated state",type:{name:"func"}},getActionsState:{required:!1,tsType:{name:"signature",type:"function",raw:"(state: Action[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},name:"state"}],return:{name:"void"}}},description:"callback functions that will provide the updated action state back.",type:{name:"func"}},initialState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  state: ConditionBuilderState;
  enabledDefault?: boolean;
}`,signature:{properties:[{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"enabledDefault",value:{name:"boolean",required:!1}}]}},description:"Optional prop if the condition building need to start from a predefined initial state",type:{name:"shape",value:{state:{name:"shape",value:{groups:{name:"arrayOf",value:{name:"shape",value:{groupOperator:{name:"string",required:!1},statement:{name:"string",required:!1},conditions:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{property:{name:"string",required:!1},operator:{name:"string",required:!1},value:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}},{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}],required:!1}}},{name:"object"}]},required:!1}}},required:!1},operator:{name:"string",required:!1}},required:!1},enabledDefault:{name:"bool",required:!1}}}},actions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:"optional array of object that give the list of actions.",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}}}};const on="ConditionBuilder";let ce=t.forwardRef(({className:e,inputConfig:a,startConditionLabel:r="Add Condition",popOverSearchThreshold:i,getOptions:l,initialState:s,getConditionState:d,getActionsState:c,variant:m=ae,actions:u,translateWithId:y,statementConfigCustom:b,...v},p)=>{const O=f.useRef(null),w=p||O,_=g=>{Mt(g,w,m)};return t.createElement(Xe,{inputConfig:a,popOverSearchThreshold:i,getOptions:l,variant:m,translateWithId:y,conditionBuilderRef:w,statementConfigCustom:b},t.createElement("div",{...v,className:R(o,e,{}),ref:w,...qt(on)},t.createElement($t,{className:`${o}__${m}`,onKeyDown:_},t.createElement(rn,{startConditionLabel:r,getConditionState:d,getActionsState:c,initialState:s,actions:u}))))});ce=zn.checkComponentEnabled(ce,on);ce.displayName=on;ce.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),className:n.string,getActionsState:n.func,getConditionState:n.func.isRequired,getOptions:n.func,initialState:n.shape({state:n.shape({groups:n.arrayOf(n.shape({groupOperator:n.string,statement:n.string,conditions:n.arrayOf(n.oneOfType([n.shape({property:n.string,operator:n.string,value:n.oneOfType([n.string,n.arrayOf(n.shape({id:n.string,label:n.string})),n.shape({id:n.string,label:n.string})])}),n.object]))})),operator:n.string}),enabledDefault:n.bool}),inputConfig:n.shape({properties:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object]),type:n.oneOf(["text","textarea","number","date","option","time","custom"]).isRequired,description:n.string,config:n.shape({options:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object])})),component:n.func,operators:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired})),valueFormatter:n.func})}))}).isRequired,popOverSearchThreshold:n.number.isRequired,startConditionLabel:n.string,statementConfigCustom:n.arrayOf(n.shape({id:n.string.isRequired,connector:n.oneOf(["and","or"]).isRequired,label:n.string.isRequired,secondaryLabel:n.string})),translateWithId:n.func,variant:n.oneOf(["Non-Hierarchical","Hierarchical"])};ce.__docgenInfo={description:"TODO: A description of the component.",methods:[],displayName:"ConditionBuilder",props:{inputConfig:{required:!0,tsType:{name:"signature",type:"object",raw:`{
  properties: Property[];
}`,signature:{properties:[{key:"properties",value:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
} & ConfigType`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
  description?: string;
  type?: any;
  config?: any;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}},{key:"description",value:{name:"string",required:!1}},{key:"type",value:{name:"any",required:!1}},{key:"config",value:{name:"any",required:!1}}]}},{name:"union",raw:`| PropertyConfigOption['config']
| PropertyConfigTextArea['config']
| PropertyConfigText['config']
| PropertyConfigNumber['config']
| PropertyConfigDate['config']
| PropertyConfigTime['config']
| PropertyConfigCustom['config']`,elements:[{name:"signature",raw:"PropertyConfigOption['config']"},{name:"PropertyConfigTextArea['config']",raw:"PropertyConfigTextArea['config']"},{name:"PropertyConfigText['config']",raw:"PropertyConfigText['config']"},{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},{name:"signature",raw:"PropertyConfigDate['config']"},{name:"signature",raw:"PropertyConfigTime['config']"},{name:"signature",raw:"PropertyConfigCustom['config']"}]}]}],raw:"Property[]",required:!0}}]}},description:"This is a mandatory prop that defines the input to the condition builder.",type:{name:"shape",value:{properties:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'textarea'",computed:!1},{value:"'number'",computed:!1},{value:"'date'",computed:!1},{value:"'option'",computed:!1},{value:"'time'",computed:!1},{value:"'custom'",computed:!1}],required:!0},description:{name:"string",required:!1},config:{name:"shape",value:{options:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1}}},required:!1},component:{name:"func",required:!1},operators:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0}}},required:!1},valueFormatter:{name:"func",required:!1}},required:!1}}},required:!1}}}},initialState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  state: ConditionBuilderState;
  enabledDefault?: boolean;
}`,signature:{properties:[{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"enabledDefault",value:{name:"boolean",required:!1}}]}},description:`Optional prop if you want to pass a saved condition state, pass as "initialState.state".
"initialState.enabledDefault" will populate the builder with the provided initial state before clicking Add Condition button.

 This state should respect the structure of condition state that is available in getConditionState callback`,type:{name:"shape",value:{state:{name:"shape",value:{groups:{name:"arrayOf",value:{name:"shape",value:{groupOperator:{name:"string",required:!1},statement:{name:"string",required:!1},conditions:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{property:{name:"string",required:!1},operator:{name:"string",required:!1},value:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}},{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}],required:!1}}},{name:"object"}]},required:!1}}},required:!1},operator:{name:"string",required:!1}},required:!1},enabledDefault:{name:"bool",required:!1}}}},getActionsState:{required:!1,tsType:{name:"signature",type:"function",raw:"(state: Action[] | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"Action[] | undefined",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},{name:"undefined"}]},name:"state"}],return:{name:"void"}}},description:"This is a callback that gives back the updated action state",type:{name:"func"}},getConditionState:{required:!0,tsType:{name:"signature",type:"function",raw:"(state: ConditionBuilderState | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"ConditionBuilderState | undefined",elements:[{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},{name:"undefined"}]},name:"state"}],return:{name:"void"}}},description:"This is a callback that gives back updated condition state",type:{name:"func"}},getOptions:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  state: ConditionBuilderState,
  condition: Condition
) => Promise<Option[]>`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"},{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"},{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"intersection",raw:`Item & {
  icon?: CarbonIconType;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}]}],raw:"Option[]"}],raw:"Promise<Option[]>"}}},description:`This is a callback that get triggered when  you want to dynamically fetch options.
 Component call this when the option array is not passed against a property with type as option in the input config.
This is an asynchronous callback that can return a promise , and you need to resolve the promise with options array in the valid format.
You will receive the root condition state and current condition as the 2 arguments.
eg: const getOptions = async (conditionState,condition) => {
  switch (condition.property) {
    case 'continent':
      return new Promise((resolve) => {
        const continents=[{
      label: 'Africa',
      id: 'Africa',
    },...]
          resolve(continents);
      });
      default:
      return [];
  }
};`,type:{name:"func"}},actions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:"optional array of actions",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},popOverSearchThreshold:{required:!0,tsType:{name:"number"},description:"Provide an mandatory numeric value that will be used to enable search option in the popovers with list.",type:{name:"number"}},startConditionLabel:{required:!1,tsType:{name:"string"},description:"Provide a label to the button that starts condition builder",defaultValue:{value:"'Add Condition'",computed:!1},type:{name:"string"}},variant:{required:!1,tsType:{name:"union",raw:"'Non-Hierarchical' | 'Hierarchical'",elements:[{name:"literal",value:"'Non-Hierarchical'"},{name:"literal",value:"'Hierarchical'"}]},description:"Provide the condition builder variant: Non-Hierarchical/ Hierarchical",defaultValue:{value:"'Non-Hierarchical'",computed:!1},type:{name:"enum",value:[{value:"'Non-Hierarchical'",computed:!1},{value:"'Hierarchical'",computed:!1}]}},translateWithId:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: string) => string",signature:{arguments:[{type:{name:"string"},name:"id"}],return:{name:"string"}}},description:`Optional prop, if you need to pass translations to the texts on the component instead of the defined defaults.
This callback function will receive the message id and you need to return the corresponding text for that id.
The message id will be one of [   "ifText","addConditionText",   "addConditionGroupText",   "addSubgroupText",   "conditionText",   "propertyText",   "operatorText",   "valueText",   "connectorText",   "conditionRowText","conditionRowGroupText","conditionBuilderText","actionSectionText",   "removeConditionText",   "addConditionRowText",   "startText",   "endText",   "clearSearchText",   "actionsText",   "then",   "removeActionText",   "addActionText",   "invalidText",  "invalidNumberWarnText"]
]`,type:{name:"func"}},statementConfigCustom:{required:!1,tsType:{name:"Array",elements:[{name:"intersection",raw:`Item & {
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,elements:[{name:"signature",type:"object",raw:"{ id: string; label: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}}]}},{name:"signature",type:"object",raw:`{
  connector: 'and' | 'or';
  secondaryLabel?: string;
}`,signature:{properties:[{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}]}],raw:"statementConfig[]"},description:"Optional prop for passing custom configuration for statement option from default op",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},connector:{name:"enum",value:[{value:"'and'",computed:!1},{value:"'or'",computed:!1}],required:!0},label:{name:"string",required:!0},secondaryLabel:{name:"string",required:!1}}}}}}};function mn(e){const a={a:"a",h1:"h1",h2:"h2",li:"li",ul:"ul",...Mn(),...e.components};return M.jsxs(M.Fragment,{children:[M.jsx(a.h1,{id:"conditionbuilder",children:"ConditionBuilder"}),`
`,M.jsx(a.h2,{id:"table-of-contents",children:"Table of Contents"}),`
`,M.jsxs(a.ul,{children:[`
`,M.jsx(a.li,{children:M.jsx(a.a,{href:"#overview",children:"Overview"})}),`
`,M.jsx(a.li,{children:M.jsx(a.a,{href:"#example-usage",children:"Example usage"})}),`
`,M.jsx(a.li,{children:M.jsx(a.a,{href:"#component-api",children:"Component API"})}),`
`]}),`
`,M.jsx(a.h2,{id:"overview",children:"Overview"}),`
`,`
`,M.jsx(a.h2,{id:"example-usage",children:"Example usage"}),`
`,`
`,M.jsx(Nt,{children:M.jsx(Pt,{of:ue})}),`
`,M.jsx(a.h2,{id:"code-sample",children:"Code sample"}),`
`,`
`,M.jsx(a.h2,{id:"component-api",children:"Component API"}),`
`,M.jsx(jt,{})]})}function Kt(e={}){const{wrapper:a}={...Mn(),...e.components};return a?M.jsx(a,{...e,children:M.jsx(mn,{...e})}):mn(e)}const zt=".c4p--condition-builder{padding:1.5rem}",ln=({onChange:e,conditionState:a})=>{const r=i=>{e(i.target.value)};return t.createElement("div",{className:"custom-component"},t.createElement(Vn,{labelText:"labelText",hideLabel:!0,value:a.value??"",id:"customInput",onChange:r}))};ln.propTypes={conditionState:n.object,onChange:n.func};ln.__docgenInfo={description:"",methods:[],displayName:"CustomInput",props:{conditionState:{description:"current condition state",type:{name:"object"},required:!1},onChange:{description:"This function need to be called that provides a label which should be shown in the condition after a user has made their selection / set their value",type:{name:"func"},required:!1}}};const Ut=[["AF","Afghanistan"],["AX","Åland Islands"],["AL","Albania"],["DZ","Algeria"],["AS","American Samoa"],["AD","Andorra"],["AO","Angola"],["AI","Anguilla"],["AQ","Antarctica"],["AG","Antigua & Barbuda"],["AR","Argentina"],["AM","Armenia"],["AW","Aruba"],["AC","Ascension Island"],["AU","Australia"],["AT","Austria"],["AZ","Azerbaijan"],["BS","Bahamas"],["BH","Bahrain"],["BD","Bangladesh"],["BB","Barbados"],["BY","Belarus"],["BE","Belgium"],["BZ","Belize"],["BJ","Benin"],["BM","Bermuda"],["BT","Bhutan"],["BO","Bolivia"],["BA","Bosnia & Herzegovina"],["BW","Botswana"],["BV","Bouvet Island"],["BR","Brazil"],["IO","British Indian Ocean Territory"],["VG","British Virgin Islands"],["BN","Brunei"],["BG","Bulgaria"],["BF","Burkina Faso"],["BI","Burundi"],["KH","Cambodia"],["CM","Cameroon"],["CA","Canada"],["IC","Canary Islands"],["CV","Cape Verde"],["BQ","Caribbean Netherlands"],["KY","Cayman Islands"],["CF","Central African Republic"],["EA","Ceuta & Melilla"],["TD","Chad"],["CL","Chile"],["CN","China"],["CX","Christmas Island"],["CP","Clipperton Island"],["CC","Cocos (Keeling) Islands"],["CO","Colombia"],["KM","Comoros"],["CG","Congo - Brazzaville"],["CD","Congo - Kinshasa"],["CK","Cook Islands"],["CR","Costa Rica"],["CI","Côte d'Ivoire"],["HR","Croatia"],["CU","Cuba"],["CW","Curaçao"],["CY","Cyprus"],["CZ","Czechia"],["DK","Denmark"],["DG","Diego Garcia"],["DJ","Djibouti"],["DM","Dominica"],["DO","Dominican Republic"],["EC","Ecuador"],["EG","Egypt"],["SV","El Salvador"],["GQ","Equatorial Guinea"],["ER","Eritrea"],["EE","Estonia"],["SZ","Eswatini"],["ET","Ethiopia"],["EU","European Union"],["FK","Falkland Islands"],["FO","Faroe Islands"],["FJ","Fiji"],["FI","Finland"],["FR","France"],["GF","French Guiana"],["PF","French Polynesia"],["TF","French Southern Territories"],["GA","Gabon"],["GM","Gambia"],["GE","Georgia"],["DE","Germany"],["GH","Ghana"],["GI","Gibraltar"],["GR","Greece"],["GL","Greenland"],["GD","Grenada"],["GP","Guadeloupe"],["GU","Guam"],["GT","Guatemala"],["GG","Guernsey"],["GN","Guinea"],["GW","Guinea-Bissau"],["GY","Guyana"],["HT","Haiti"],["HM","Heard & McDonald Islands"],["HN","Honduras"],["HK","Hong Kong SAR China"],["HU","Hungary"],["IS","Iceland"],["IN","India"],["ID","Indonesia"],["IR","Iran"],["IQ","Iraq"],["IE","Ireland"],["IM","Isle of Man"],["IL","Israel"],["IT","Italy"],["JM","Jamaica"],["JP","Japan"],["JE","Jersey"],["JO","Jordan"],["KZ","Kazakhstan"],["KE","Kenya"],["KI","Kiribati"],["XK","Kosovo"],["KW","Kuwait"],["KG","Kyrgyzstan"],["LA","Laos"],["LV","Latvia"],["LB","Lebanon"],["LS","Lesotho"],["LR","Liberia"],["LY","Libya"],["LI","Liechtenstein"],["LT","Lithuania"],["LU","Luxembourg"],["MO","Macao SAR China"],["MG","Madagascar"],["MW","Malawi"],["MY","Malaysia"],["MV","Maldives"],["ML","Mali"],["MT","Malta"],["MH","Marshall Islands"],["MQ","Martinique"],["MR","Mauritania"],["MU","Mauritius"],["YT","Mayotte"],["MX","Mexico"],["FM","Micronesia"],["MD","Moldova"],["MC","Monaco"],["MN","Mongolia"],["ME","Montenegro"],["MS","Montserrat"],["MA","Morocco"],["MZ","Mozambique"],["MM","Myanmar (Burma)"],["NA","Namibia"],["NR","Nauru"],["NP","Nepal"],["NL","Netherlands"],["NC","New Caledonia"],["NZ","New Zealand"],["NI","Nicaragua"],["NE","Niger"],["NG","Nigeria"],["NU","Niue"],["NF","Norfolk Island"],["KP","North Korea"],["MK","North Macedonia"],["MP","Northern Mariana Islands"],["NO","Norway"],["OM","Oman"],["PK","Pakistan"],["PW","Palau"],["PS","Palestinian Territories"],["PA","Panama"],["PG","Papua New Guinea"],["PY","Paraguay"],["PE","Peru"],["PH","Philippines"],["PN","Pitcairn Islands"],["PL","Poland"],["PT","Portugal"],["PR","Puerto Rico"],["QA","Qatar"],["RE","Réunion"],["RO","Romania"],["RU","Russia"],["RW","Rwanda"],["BL","St. Barthélemy"],["SH","St. Helena"],["KN","St. Kitts & Nevis"],["LC","St. Lucia"],["MF","St. Martin"],["PM","St. Pierre & Miquelon"],["VC","St. Vincent & Grenadines"],["WS","Samoa"],["SM","San Marino"],["ST","São Tomé & Príncipe"],["SA","Saudi Arabia"],["SN","Senegal"],["RS","Serbia"],["SC","Seychelles"],["SL","Sierra Leone"],["SG","Singapore"],["SX","Sint Maarten"],["SK","Slovakia"],["SI","Slovenia"],["SB","Solomon Islands"],["SO","Somalia"],["ZA","South Africa"],["GS","South Georgia & South Sandwich Islands"],["KR","South Korea"],["SS","South Sudan"],["ES","Spain"],["LK","Sri Lanka"],["SD","Sudan"],["SR","Suriname"],["SJ","Svalbard & Jan Mayen"],["SE","Sweden"],["CH","Switzerland"],["SY","Syria"],["TW","Taiwan"],["TJ","Tajikistan"],["TZ","Tanzania"],["TH","Thailand"],["TL","Timor-Leste"],["TG","Togo"],["TK","Tokelau"],["TO","Tonga"],["TT","Trinidad & Tobago"],["TA","Tristan da Cunha"],["TN","Tunisia"],["TR","Turkey"],["TM","Turkmenistan"],["TC","Turks & Caicos Islands"],["TV","Tuvalu"],["UG","Uganda"],["UA","Ukraine"],["AE","United Arab Emirates"],["GB","United Kingdom"],["UN","United Nations"],["US","United States"],["UM","U.S. Outlying Islands"],["VI","U.S. Virgin Islands"],["UY","Uruguay"],["UZ","Uzbekistan"],["VU","Vanuatu"],["VA","Vatican City"],["VE","Venezuela"],["VN","Vietnam"],["WF","Wallis & Futuna"],["EH","Western Sahara"],["YE","Yemen"],["ZM","Zambia"],["ZW","Zimbabwe"]],Zt=["black","silver","gray","white","maroon","red","purple","fuchsia","green","lime","olive","yellow","navy","blue","teal","aqua","orange","aliceblue","antiquewhite","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson",`cyan
(synonym of aqua)`,"darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","gainsboro","ghostwhite","gold","goldenrod","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","limegreen","linen","magenta","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","oldlace","olivedrab","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","thistle","tomato","transparent","turquoise","violet","wheat","whitesmoke","yellowgreen","rebeccapurple"],Ze=[{label:"has value",id:"hasValue"},{label:"has no value",id:"hasNoValue"},{label:"has values",id:"hasValues",isMultiSelect:!0}],se={properties:[{id:"continent",label:"Continent",icon:Wn,type:"option",description:"Continent",config:{options:[{label:"Africa",id:"Africa"},{label:"Antarctica",id:"Antarctica"},{label:"Asia",id:"Asia"},{label:"Australia",id:"Australia"},{label:"Europe",id:"Europe"}]}},{id:"region",label:"Region",icon:Kn,type:"option",config:{options:Ut.map(([e,a])=>({id:e,label:a,icon:()=>t.createElement("span",null,String.fromCodePoint(...[...e].map(r=>127397+r.charCodeAt(0))))}))}},{id:"color",label:"Color",icon:Fn,type:"option",config:{options:Zt.map(e=>({id:e,label:e,icon:()=>t.createElement("svg",{width:"12",height:"12",viewBox:"0 0 12 12"},t.createElement("rect",{x:"0",y:"0",width:"12",height:"12",rx:"1",fill:e}))}))}},{id:"id",label:"ID",icon:We,type:"text",config:{}},{id:"id_long",label:"Id Long",icon:We,type:"textarea",config:{}},{id:"price",label:"Price",icon:Zn,type:"number",config:{min:0,step:1,unit:"Dollars"}},{id:"date",label:"Date",icon:$e,type:"date",config:{}},{id:"time",label:"Time",icon:$e,type:"time",config:{timeZones:["IST","CET","UTC","LOCAL"]}},{id:"delivery",label:"Delivery",icon:Yn,type:"option",config:{options:[{label:"Processing",id:"Processing"},{label:"Preparing for dispatch",id:"Preparing for dispatch"},{label:"Dispatched",id:"Dispatched"},{label:"In delivery",id:"In delivery"},{label:"Delivered",id:"Delivered"}]}},{id:"season",label:"Season",icon:Qn,type:"option",config:{options:[{label:"Winter",id:"Winter"},{label:"Spring",id:"Spring"},{label:"Summer",id:"Summer"},{label:"Fall",id:"Fall"}]}},{id:"product",label:"Product",icon:Jn,type:"custom",config:{component:ln,operators:Ze,valueFormatter:e=>e}}]};function Jt(e){const a=e.properties.map(r=>r.id==="continent"?{...r,config:{...r.config,operators:Ze}}:r.id==="id"?{...r,config:{...r.config,operators:Ze.slice(0,2)}}:r);return{...e,properties:a}}const Yt=Jt(se),Xt={properties:[{id:"continent",label:"Continent",icon:Wn,type:"option",config:{}},{id:"region",label:"Region",icon:Kn,type:"option",config:{}},{id:"color",label:"Color",icon:Fn,type:"option",config:{}},{id:"id",label:"ID",icon:We,type:"text",config:{}},{id:"price",label:"Price",icon:Zn,type:"number",config:{min:0,step:1,unit:"Dollars"}},{id:"date",label:"Date",icon:$e,type:"date",config:{}},{id:"time",label:"Time",icon:$e,type:"time",config:{timeZones:["IST","CET","UTC","LOCAL"]}},{id:"product",label:"Product",icon:Jn,type:"text",config:{}},{id:"delivery",label:"Delivery",icon:Yn,type:"option",config:{options:[{label:"Processing",id:"Processing"},{label:"Preparing for dispatch",id:"Preparing for dispatch"},{label:"Dispatched",id:"Dispatched"},{label:"In delivery",id:"In delivery"},{label:"Delivered",id:"Delivered"}]}},{id:"season",label:"Season",icon:Qn,type:"option",config:{options:[{label:"Winter",id:"Winter"},{label:"Spring",id:"Spring"},{label:"Summer",id:"Summer"},{label:"Fall",id:"Fall"}]}}]},Qt={operator:"or",groups:[{groupOperator:"and",statement:"ifAll",id:P(),conditions:[{property:"continent",operator:"is",value:{label:"Africa",id:"Africa"},id:P()},{property:"region",operator:"oneOf",value:[{label:"Algeria",id:"DZ"},{label:"Andorra",id:"AD"}],id:P()},{statement:"unlessAll",groupOperator:"and",conditions:[{property:"delivery",operator:"is",value:{label:"Delivered",id:"Delivered"},id:P()},{property:"id",operator:"startsWith",value:"#delivered",id:P()}],id:P()},{statement:"ifAny",groupOperator:"or",conditions:[{property:"season",operator:"is",value:{label:"Summer",id:"Summer"},id:P()},{property:"season",operator:"is",value:{label:"Fall",id:"Fall"},id:P()}],id:P()}]},{statement:"ifAll",groupOperator:"and",id:P(),conditions:[{property:"delivery",operator:"oneOf",value:[{label:"Processing",id:"Processing"},{label:"Preparing for dispatch",id:"Preparing for dispatch"}],id:P()},{statement:"ifAll",groupOperator:"and",conditions:[{property:"price",operator:"greater",value:"50 Dollars",id:P()},{property:"id",operator:"is",value:"#proccessing",id:P()}],id:P()}]}]},ea={groups:[{groupOperator:"and",statement:"ifAll",id:P(),conditions:[{property:"continent",operator:"is",value:{label:"Asia",id:"Asia"},id:P()},{property:"region",operator:"oneOf",value:[{label:"Afghanistan",id:"AF"},{label:"India",id:"IN"}],id:P()},{property:"date",operator:"between",value:["2024-12-04T18:30:00.000Z","2024-12-18T18:30:00.000Z"],id:P()},{property:"season",operator:"is",value:{label:"Fall",id:"Fall"},id:P()}]}],operator:"or"},na={operator:"or",groups:[{groupOperator:"and",statement:"ifAll",id:"e1c37cb2-3e11-4eb6-937a-b9add468345b",conditions:[{property:"continent",operator:"hasValues",value:[{label:"Africa",id:"Africa"},{label:"Antarctica",id:"Antarctica"}],id:"b7720ec9-e52a-4a7b-90c1-b4aa3c55daeb"},{property:"id",operator:"hasValue",value:"test",id:"eba8a891-7203-4b22-bf44-c4a9f0c80c4b"}]}]},Xa={title:"Experimental/Components/ConditionBuilder",component:ce,tags:["autodocs"],parameters:{layout:"fullscreen",styles:zt,docs:{page:Kt}}},ta=()=>[{label:"Africa",id:"Africa"},{label:"Antarctica",id:"Antarctica"},{label:"Asia",id:"Asia"},{label:"Australia",id:"Australia"},{label:"Europe",id:"Europe"}],aa=()=>[{label:"Afghanistan",id:"AF",icon:Le},{label:"Albania",id:"AL",icon:Le},{label:"Algeria",id:"AG",icon:Le},{label:"Andorra",id:"AN",icon:Le}],ra=()=>[{label:"black",id:"black"},{label:"silver",id:"silver"},{label:"gray",id:"gray"},{label:"white",id:"white"},{label:"maroon",id:"maroon"},{label:"red",id:"red"},{label:"purple",id:"purple"},{label:"fuchsia",id:"fuchsia"},{label:"green",id:"green"},{label:"lime",id:"lime"},{label:"olive",id:"olive"},{label:"yellow",id:"yellow"},{label:"navy",id:"navy"},{label:"blue",id:"blue"},{label:"teal",id:"teal"},{label:"aqua",id:"aqua"}],ia=async(e,{property:a})=>{switch(a){case"continent":return new Promise(r=>{setTimeout(()=>{r(ta())},2e3)});case"region":return new Promise(r=>{setTimeout(()=>{r(aa())},2e3)});case"color":return new Promise(r=>{setTimeout(()=>{r(ra())},2e3)});default:return[]}},oa={startConditionLabel:"Add condition",popOverSearchThreshold:4,getConditionState:e=>{console.log(e)}},ct=[{id:P(),label:"Add item to cart"},{id:P(),label:"Proceed item to checkout"}],sn=e=>({ifText:"if",addConditionText:"Add condition",addConditionGroupText:"Add condition group",addSubgroupText:"Add subgroup"})[e],re=e=>{const a=f.useRef(void 0);return t.createElement(ce,{...e,ref:a,...oa})},la=[{id:"if",connector:"and",label:"if"},{id:"exclIf",connector:"or",label:"excl. if"}],ue=re.bind({});ue.storyName="Condition Builder";ue.args={inputConfig:se,variant:ae};const fe=re.bind({});fe.storyName="With dynamic options";fe.args={inputConfig:Xt,getOptions:ia,variant:ae};const be=re.bind({});be.storyName="With initial state";be.args={initialState:{state:ea,enabledDefault:!0},inputConfig:se,variant:ae,translateWithId:sn};const ve=re.bind({});ve.storyName="With Custom statement configuration";ve.args={inputConfig:se,variant:ae,translateWithId:sn,statementConfigCustom:la};const he=re.bind({});he.storyName="With Custom operator configuration";he.args={inputConfig:Yt,initialState:{state:na,enabledDefault:!0},variant:ae,translateWithId:sn};const we=re.bind({});we.storyName="With Actions";we.args={inputConfig:se,variant:ae,actions:ct,getActionsState:e=>{console.log("action state",e)}};const Ce=re.bind({});Ce.storyName="Condition Builder (Hierarchical)";Ce.args={inputConfig:se,variant:K};const Te=re.bind({});Te.storyName="With initial state (Hierarchical)";Te.args={initialState:{state:Qt,enabledDefault:!1},inputConfig:se,variant:K};const qe=re.bind({});qe.storyName="With Actions (Hierarchical)";qe.args={inputConfig:se,variant:K,actions:ct,getActionsState:e=>{}};var pn,gn,yn;ue.parameters={...ue.parameters,docs:{...(pn=ue.parameters)==null?void 0:pn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(yn=(gn=ue.parameters)==null?void 0:gn.docs)==null?void 0:yn.source}}};var fn,bn,vn;fe.parameters={...fe.parameters,docs:{...(fn=fe.parameters)==null?void 0:fn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(vn=(bn=fe.parameters)==null?void 0:bn.docs)==null?void 0:vn.source}}};var hn,wn,Cn;be.parameters={...be.parameters,docs:{...(hn=be.parameters)==null?void 0:hn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(Cn=(wn=be.parameters)==null?void 0:wn.docs)==null?void 0:Cn.source}}};var Tn,qn,An;ve.parameters={...ve.parameters,docs:{...(Tn=ve.parameters)==null?void 0:Tn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(An=(qn=ve.parameters)==null?void 0:qn.docs)==null?void 0:An.source}}};var kn,On,_n;he.parameters={...he.parameters,docs:{...(kn=he.parameters)==null?void 0:kn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(_n=(On=he.parameters)==null?void 0:On.docs)==null?void 0:_n.source}}};var En,xn,In;we.parameters={...we.parameters,docs:{...(En=we.parameters)==null?void 0:En.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(In=(xn=we.parameters)==null?void 0:xn.docs)==null?void 0:In.source}}};var Sn,Nn,Pn;Ce.parameters={...Ce.parameters,docs:{...(Sn=Ce.parameters)==null?void 0:Sn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(Pn=(Nn=Ce.parameters)==null?void 0:Nn.docs)==null?void 0:Pn.source}}};var jn,Ln,$n;Te.parameters={...Te.parameters,docs:{...(jn=Te.parameters)==null?void 0:jn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...($n=(Ln=Te.parameters)==null?void 0:Ln.docs)==null?void 0:$n.source}}};var Dn,Bn,Hn;qe.parameters={...qe.parameters,docs:{...(Dn=qe.parameters)==null?void 0:Dn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(Hn=(Bn=qe.parameters)==null?void 0:Bn.docs)==null?void 0:Hn.source}}};const Qa=["conditionBuilder","conditionBuilderDynamicOptions","conditionBuilderWithInitialState","conditionBuilderWithCustomStatements","conditionBuilderWithCustomOperators","conditionBuilderWithActions","conditionBuilderHierarchical","conditionBuilderWithInitialStateHierarchical","conditionBuilderWithActionsHierarchical"];export{Qa as __namedExportsOrder,ue as conditionBuilder,fe as conditionBuilderDynamicOptions,Ce as conditionBuilderHierarchical,we as conditionBuilderWithActions,qe as conditionBuilderWithActionsHierarchical,he as conditionBuilderWithCustomOperators,ve as conditionBuilderWithCustomStatements,be as conditionBuilderWithInitialState,Te as conditionBuilderWithInitialStateHierarchical,Xa as default};
