import{r as i,u as Z,e as n,c as q,p as ee,V as E,l as te,C as ne,P as e}from"./iframe-BCQS5_Al.js";import{g as ae}from"./devtools-BnxPUADb.js";import{W as ie}from"./bucket-19-PZtVqhwH.js";import{E as re}from"./bucket-6-BnWBUhiK.js";const N="EditInPlace",t=`${ee.prefix}--edit-in-place`,le={tooltipAlignment:"top"},_=i.forwardRef(({cancelLabel:A,editAlwaysVisible:I,editLabel:S,id:H,inheritTypography:L,invalid:l,invalidLabel:V=" ",invalidText:z,labelText:B,onCancel:F,onChange:O,onSave:W,onBlur:$,saveLabel:j,size:o="sm",tooltipAlignment:d,value:s,placeholder:D,...K},G)=>{const[P,u]=i.useState(!1),[m,k]=i.useState(""),[f,g]=i.useState(!1),r=i.useRef(null),h=s!==m&&!l,v=i.useRef(!1),x=Z(),J=typeof d=="object",y=["edit","save","cancel"].reduce((a,p)=>(a[p]=(J?d[p]:d)??le.tooltipAlignment,a),{});i.useEffect(()=>{!m&&!f&&k(s)},[m,f,s]);const b=({currentTarget:a,relatedTarget:p})=>a.contains(p),M=({target:a})=>{f||g(!0),O(a.value)},C=a=>{b(a)||(r.current?.focus(),u(!0))},T=()=>{k(s),g(!1),W(),u(!1)},w=()=>{g(!1),F(m)},Q=a=>{if(typeof $=="function"&&!b(a))$(m),u(!1);else{if(v.current)return;b(a)||(h?T():(w(),u(!1)))}},U=()=>{h&&T()},X=()=>{w()},R=()=>{r.current?.blur(),u(!1)},Y=a=>{switch(v.current=!0,a.key){case"Escape":R(),X();break;case"Enter":R(),U();break}v.current=!1};return n.createElement("div",{...K,ref:G,...ae(N)},n.createElement("div",{className:q(t,`${t}--${o}`,{[`${t}--focused`]:P,[`${t}--invalid`]:l,[`${t}--inherit-type`]:L,[`${t}--overflows`]:r.current&&r.current.scrollWidth>r.current.offsetWidth}),onFocus:C,onBlur:Q},n.createElement("input",{id:H,className:q(`${t}__text-input`,`${x}--text-input`,`${x}--text-input--${o}`),type:"text",placeholder:D,value:s,onChange:M,ref:r,onKeyDown:Y,"aria-label":B,"aria-invalid":l}),n.createElement("div",{className:`${t}__toolbar`},l&&n.createElement(ie,{size:16,className:`${t}__warning-icon`}),P?n.createElement(n.Fragment,null,n.createElement(E,{align:y.cancel,size:o,label:A,onClick:w,kind:"ghost",key:"cancel",className:`${t}__btn ${t}__btn-cancel`},n.createElement(te,{size:16})),n.createElement(E,{align:y.save,size:o,label:j,onClick:T,kind:"ghost",key:"save",className:`${t}__btn ${t}__btn-save`,disabled:!h},n.createElement(ne,{size:16}))):n.createElement(E,{align:y.edit,className:q(`${t}__btn`,`${t}__btn-edit`,{[`${t}__btn-edit--always-visible`]:I}),size:o,label:S,onClick:C,kind:"ghost",key:"edit"},n.createElement(re,{size:16})))),l&&n.createElement("p",{className:`${t}__warning-text`},z??V))});_.displayName=N;const oe={invalidText:e.string},c=e.oneOf(["top","top-left","top-right","bottom","bottom-left","bottom-right","left","right"]);_.propTypes={cancelLabel:e.string.isRequired,editAlwaysVisible:e.bool,editLabel:e.string.isRequired,id:e.string.isRequired,inheritTypography:e.bool,invalid:e.bool,invalidText:e.string,labelText:e.string.isRequired,onBlur:e.func,onCancel:e.func.isRequired,onChange:e.func.isRequired,onSave:e.func.isRequired,placeholder:e.string,saveLabel:e.string.isRequired,size:e.oneOf(["sm","md","lg"]),tooltipAlignment:e.oneOfType([c,e.shape({cancel:c,edit:c,save:c})]),value:e.string.isRequired,...oe};_.__docgenInfo={description:"",methods:[],displayName:"EditInPlace",props:{cancelLabel:{required:!0,tsType:{name:"string"},description:"label for cancel button",type:{name:"string"}},editAlwaysVisible:{required:!1,tsType:{name:"boolean"},description:"By default the edit icon is shown on hover only.",type:{name:"bool"}},editLabel:{required:!0,tsType:{name:"string"},description:"label for edit button",type:{name:"string"}},id:{required:!0,tsType:{name:"string"},description:"Specify a custom id for the input",type:{name:"string"}},inheritTypography:{required:!1,tsType:{name:"boolean"},description:`inheritTypography - causes the text entry field to inherit typography settings
assigned to the container. This is useful when editing titles for instance.

NOTE: The size property limits the vertical size of the input element.
Inherited font's should be selected to fit within the size selected.`,type:{name:"bool"}},invalid:{required:!1,tsType:{name:"boolean"},description:"determines if the input is invalid",type:{name:"bool"}},invalidText:{required:!1,tsType:{name:"string"},description:"text that is displayed if the input is invalid",type:{name:"string"}},labelText:{required:!0,tsType:{name:"string"},description:"Provide the text that will be read by a screen reader when visiting this control",type:{name:"string"}},onBlur:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"handler to add custom onBlur event",type:{name:"func"}},onCancel:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"handler that is called when the cancel button is pressed or when the user removes focus from the input and there is no new value",type:{name:"func"}},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"handler that is called when the input is updated",type:{name:"func"}},onSave:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler that is called when the save button is pressed or when the user removes focus from the input if it has a new value",type:{name:"func"}},saveLabel:{required:!0,tsType:{name:"string"},description:"label for save button",type:{name:"string"}},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"vertical size of control",defaultValue:{value:"'sm'",computed:!1},type:{name:"enum",value:[{value:"'sm'",computed:!1},{value:"'md'",computed:!1},{value:"'lg'",computed:!1}]}},tooltipAlignment:{required:!1,tsType:{name:"union",raw:"AlignPropType | Shape",elements:[{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}],required:!0},{name:"signature",type:"object",raw:`{
  cancel: AlignPropType;
  edit: AlignPropType;
  save: AlignPropType;
}`,signature:{properties:[{key:"cancel",value:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}],required:!0}},{key:"edit",value:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}],required:!0}},{key:"save",value:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}],required:!0}}]}}]},description:`tooltipAlignment from the standard tooltip. Default center.

Can be passed either as one of tooltip options or as an object specifying cancel, edit and save separately`,type:{name:"union",value:[{name:"custom",raw:"alignPropType"},{name:"shape",value:{cancel:{name:"custom",raw:"alignPropType",required:!1},edit:{name:"custom",raw:"alignPropType",required:!1},save:{name:"custom",raw:"alignPropType",required:!1}}}]}},value:{required:!0,tsType:{name:"string"},description:"current value of the input",type:{name:"string"}},placeholder:{required:!1,tsType:{name:"string"},description:"placeholder for the input",type:{name:"string"}},invalidLabel:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"' '",computed:!1}}},composes:["PropsWithChildren"]};export{_ as E};
