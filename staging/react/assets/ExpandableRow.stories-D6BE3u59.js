import{e as i,S as u,r as x}from"./iframe-BfCV3bOI.js";import{g}from"./getBatchActions-IqB7hmTs.js";import{s as w,m as E}from"./_storybook-styles-Cm6ufsjy.js";import{D as f}from"./DatagridActions-CutloQ9C.js";import{D as S}from"./DatagridPagination-BfRmSmzU.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-BsRbYwqM.js";import{u as h}from"./useExpandedRow-2jKZUwYg.js";import{u as D}from"./useSelectRows-yE9Gk8BE.js";import{u as C}from"./useStickyColumn-gaDxlnKJ.js";import{u as R}from"./usePrefix-MS1KRy2_.js";import{E as H}from"./bucket-6-BUNG1ZbU.js";import{T as b}from"./bucket-18-C-6Yai3b.js";import"./bucket-0-Ciw2Dsly.js";import"./bucket-2-DscS7k4t.js";import"./index-CErJu9sK.js";import"./bucket-7-BlpeiSNu.js";import"./bucket-19-DXGPPlEX.js";import"./ComposedModal-DDr7rI1V.js";import"./index-BEhuL1MR.js";import"./index-DCClf6mH.js";import"./LayerContext-8SWqIeSi.js";import"./clamp--00YEiB8.js";import"./ButtonSet-DRScrKx_.js";import"./InlineLoading-BCFikEd9.js";import"./mergeRefs-D4pwfk3t.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-CtpBtbaA.js";import"./Text-CfUeD5YQ.js";import"./utils-DPQn4WAo.js";import"./TableToolbarSearch-BG-IM1t3.js";import"./wrapComponent-DjdlSN6x.js";import"./Search-DoApKEoI.js";import"./FormContext-DqvfHl8l.js";import"./bucket-15-B07QhFi5.js";import"./Dropdown-BBIIB9NB.js";import"./index-HRsRazA4.js";import"./inheritsLoose-DHKJTbHM.js";import"./MenuItem-CmMwkeOB.js";import"./useControllableState-DFU9FhNB.js";import"./useAttachedMenu-4VE0fpzo.js";import"./index-DEgrfpg6.js";import"./index-Dgw2jygY.js";import"./bucket-13-nosdxnow.js";import"./useOutsideClick-U-60qH6M.js";import"./OverflowMenuItem-CxOBAhX2.js";import"./useFilterContext-ByBTjWZN.js";import"./bucket-14-COfNRyTY.js";import"./Pagination-or5V6_ki.js";import"./Select-v6EoOGap.js";import"./SelectItem-Cgvlje2B.js";import"./MultiSelect-CDCE22uF.js";import"./Checkbox-Bpl7rgf3.js";import"./devtools-mGs0wnY2.js";import"./TableRow-C0W-tUi3.js";import"./bucket-1-59toT3oJ.js";import"./TableToolbar-wgb9xB32.js";import"./index-Rp0dLXSw.js";import"./ErrorEmptyState-B-iTFFq5.js";import"./EmptyState-uM4OJknX.js";import"./EmptyStateV2.deprecated-g_CB9kyt.js";import"./Link-DwEnb7bw.js";import"./ErrorIllustration-Do_HgjZI.js";import"./useId-Bnc4iy3Y.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-DIv675NA.js";import"./NoDataIllustration-DwplAzsf.js";import"./NotFoundEmptyState-B2dSBol2.js";import"./NotFoundIllustration-DkmUMrFP.js";import"./index.esm-B2VHsvLW.js";import"./usePreviousValue-CIIC2c5_.js";import"./useResizeObserver-7trOekg4.js";import"./useIsomorphicEffect-CGC_2bjf.js";import"./getFocusableElements-BW7cf991.js";import"./index-2L8Eb6nd.js";import"./props-helper-B1pqY6OD.js";import"./useClickOutside-KpiYEaiC.js";import"./AccordionItem-C-x_NN9b.js";import"./DatePicker-BAOwiFbZ.js";import"./FormGroup-B8pJBJeD.js";import"./NumberInput-CrBT28od.js";import"./useNormalizedInputProps-BrwBC_vx.js";import"./documentLang-E105Y72C.js";import"./bucket-16-Lh1Yht85.js";import"./RadioButton-bwzgKOtN.js";import"./RadioButtonGroup-B4RvMw_Q.js";import"./usePrefersReducedMotion-BjFD9GIF.js";import"./usePresence-C_6nB3Ag.js";import"./ActionSet-BqEOyzaW.js";import"./useWindowResize-BODwJyRa.js";import"./TagSet-UmvG7OFG.js";import"./Tag-NIrrbvG7.js";import"./DefinitionTooltip-BKrU3q75.js";import"./DismissibleTag-DaGnLvfq.js";import"./usePortalTarget-DJLB0SuP.js";import"./OperationalTag-C6Zst86w.js";import"./SkeletonText-BwaOM_ry.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-4YNvg0wJ.js";import"./TableSelectRow-CoXmN1Ig.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,Ht={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const bt=["ExpandableRowStory"];export{e as ExpandableRowStory,bt as __namedExportsOrder,Ht as default};
