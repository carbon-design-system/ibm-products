import{r as m,e as t,c as $,p as g,B as N,n as le,P as n,Y as me}from"./iframe-BlQ-LkYW.js";import{u as ue}from"./uuidv4-BN2rGLQG.js";import{g as Y}from"./devtools-BJZSxg-N.js";import{i as de}from"./bucket-6-C4pRq2Bl.js";import{u as pe}from"./useIsomorphicEffect-BIhftj2z.js";import{c as K}from"./clamp-CsXXRQhr.js";import{C as fe}from"./Carousel-KzevvHGP.js";var he=(e=>(e.DEFAULT="default",e))(he||{}),_=(e=>(e.TOOLTIP="tooltip",e.FLOATING="floating",e.FIXED="fixed",e.STACKED="stacked",e))(_||{}),y=(e=>(e.BOTTOM="bottom",e.BOTTOM_LEFT="bottom-left",e.BOTTOM_RIGHT="bottom-right",e.LEFT="left",e.LEFT_TOP="left-top",e.LEFT_BOTTOM="left-bottom",e.RIGHT="right",e.RIGHT_TOP="right-top",e.RIGHT_BOTTOM="right-bottom",e.TOP="top",e.TOP_LEFT="top-left",e.TOP_RIGHT="top-right",e))(y||{});const ye=m.createContext(null),J=()=>m.useContext(ye),ne=`${g.prefix}--coachmark-dragbar`,ae=`${g.prefix}--coachmark-overlay`,ee="CoachmarkDragbar",j={onDrag:()=>{},onClose:()=>{},showCloseButton:!0,theme:"light"};let q=t.forwardRef(({a11yKeyboardHandler:e,onClose:d=j.onClose,onDrag:r=j.onDrag,showCloseButton:i=j.showCloseButton,theme:c=j.theme,...s},l)=>{const[v,x]=m.useState(!1);m.useEffect(()=>{const k=()=>x(!1);return window.addEventListener("mouseup",k),()=>{window.removeEventListener("mouseup",k)}},[]),m.useEffect(()=>{const k=p=>{r(p.movementX,p.movementY)};return v&&window.addEventListener("mousemove",k),()=>{window.removeEventListener("mousemove",k)}},[v,r]);const F=()=>x(!0),V=J()?.closeIconDescription;return t.createElement("header",{...s,className:$(ne,`${ne}__${c}`,{}),ref:l,...Y(ee)},t.createElement("button",{type:"button",className:`${ae}__handle`,onMouseDown:F,onKeyDown:e,title:"Drag Handle"},t.createElement(de,{size:"16"})),i&&t.createElement(N,{kind:"ghost",size:"sm",renderIcon:le,iconDescription:V,hasIconOnly:!0,className:`${ae}--close-btn`,onClick:d}))});q=g.checkComponentEnabled(q,ee);q.displayName=ee;q.propTypes={a11yKeyboardHandler:n.func.isRequired,onClose:n.func,onDrag:n.func,showCloseButton:n.bool,theme:n.oneOf(["light","dark"])};q.__docgenInfo={description:`DO NOT USE. This component is for the exclusive use
of other Onboarding components.`,methods:[],displayName:"CoachmarkDragbar",props:{a11yKeyboardHandler:{required:!0,tsType:{name:"signature",type:"function",raw:"(event: React.KeyboardEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactKeyboardEvent",raw:"React.KeyboardEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"event"}],return:{name:"void"}}},description:"Handler to manage keyboard interactions with the dragbar.",type:{name:"func"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function to call when the close button is clicked.",defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},onDrag:{required:!1,tsType:{name:"signature",type:"function",raw:"(movementX: number, movementY: number) => void",signature:{arguments:[{type:{name:"number"},name:"movementX"},{type:{name:"number"},name:"movementY"}],return:{name:"void"}}},description:`Function to call when the user clicks and drags the Coachmark.
For internal use only by the parent CoachmarkOverlay.`,defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},showCloseButton:{required:!1,tsType:{name:"boolean"},description:'Show/hide the "X" close button.',defaultValue:{value:"true",computed:!1},type:{name:"bool"}},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Determines the theme of the component.",defaultValue:{value:"'light'",computed:!1},type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]}}}};const oe=`${g.prefix}--coachmark-header`,re=`${g.prefix}--coachmark-overlay`,te="CoachmarkHeader",A={onClose:()=>{},showCloseButton:!0,theme:"light"};let R=t.forwardRef(({onClose:e=A.onClose,showCloseButton:d=A.showCloseButton,theme:r=A.theme,...i},c)=>{const s=J()?.closeIconDescription;return t.createElement("header",{...i,className:$(oe,`${oe}__${r}`),ref:c,...Y(te)},d&&t.createElement("div",{className:`${re}--close-btn-container`},t.createElement(N,{kind:"ghost",size:"sm",renderIcon:le,iconDescription:s,hasIconOnly:!0,className:`${re}--close-btn`,onClick:e})))});R=g.checkComponentEnabled(R,te);R.displayName=te;R.propTypes={closeIconDescription:n.string,onClose:n.func,showCloseButton:n.bool,theme:n.oneOf(["light","dark"])};R.__docgenInfo={description:`DO NOT USE. This component is for the exclusive use
of other Onboarding components.`,methods:[],displayName:"CoachmarkHeader",props:{onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function to call when the close button is clicked.",defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},showCloseButton:{required:!1,tsType:{name:"boolean"},description:'Show/hide the "X" close button.',defaultValue:{value:"true",computed:!1},type:{name:"bool"}},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Determines the theme of the component.",defaultValue:{value:"'light'",computed:!1},type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]}},closeIconDescription:{description:"Tooltip text and aria label for the Close button icon.",type:{name:"string"},required:!1}}};const ge=(e,d)=>{const{width:r,height:i}=e.targetRect,c=24;let s=0,l=0;if(d!==_.TOOLTIP)switch(e.align){case y.TOP:l=r/2;break;case y.TOP_LEFT:l=c;break;case y.TOP_RIGHT:l=r-c;break;case y.BOTTOM:s=i,l=r/2;break;case y.BOTTOM_LEFT:s=i,l=c;break;case y.BOTTOM_RIGHT:s=i,l=r-c;break;case y.LEFT:s=i/2;break;case y.LEFT_TOP:s=c;break;case y.LEFT_BOTTOM:s=i-c;break;case y.RIGHT:s=i/2,l=r;break;case y.RIGHT_TOP:s=c,l=r;break;case y.RIGHT_BOTTOM:s=i-c,l=r;break}return{top:s,left:l}},C=`${g.prefix}--coachmark-overlay`,Q="CoachmarkOverlay",se={kind:_.FLOATING,theme:"light"};let P=m.forwardRef((e,d)=>{const{children:r,onClose:i,fixedIsVisible:c,className:s,kind:l=se.kind,theme:v=se.theme,...x}=e,{winHeight:F,winWidth:V}=be(),[k,p]=m.useState(!1),T=m.useRef(null),b=J(),B=l===_.TOOLTIP,h=l===_.FLOATING,M=s?.includes("is-visible"),L=a=>{const{shiftKey:o,key:u}=a;if(u==="Enter"||u===" ")p(f=>!f);else if(k){const f=o?128:32;switch(u){case"ArrowLeft":w(f*-1,0);break;case"ArrowRight":w(f,0);break;case"ArrowUp":w(0,f*-1);break;case"ArrowDown":w(0,f);break}}},D=m.useMemo(()=>{const a={};if((B||h)&&(b?.targetRect&&(a.left=b.targetRect.x+window.scrollX,a.top=b.targetRect.y+window.scrollY),a.left&&a.top&&(B&&(a.left=a.left+16,a.top=a.top+16),h))){const o=ge(b,l);a.left=a.left+o.left,a.top=a.top+o.top}return a},[B,h,b,l]);function H(a,o){let u=a,f=o;const U=V-288,G=F-150;return u<0?u=0:u>U&&(u=U),f<0?f=0:f>G&&(f=G),{targetX:u,targetY:f}}function w(a,o){const u=T.current;if(!u)return;const{x:f,y:U}=u.getBoundingClientRect(),{targetX:G,targetY:ce}=H(f+a,U+o);u.style.transform="none",u.style.position="fixed",u.style.left=`${G}px`,u.style.top=`${ce}px`,u.style.bottom="auto"}const E=ue();return pe(()=>{if(T.current){const a=T.current?.style;Object.keys(D).forEach(o=>{const u=D[o];a.setProperty(o,`${u}px`)})}},[D,T]),t.createElement("div",{...x,className:$(C,`${C}--${l}`,`${C}__${v}`,(B||h)&&b?.align&&`${C}--${b.align}`,c&&`${C}--is-visible`,k&&`${C}--is-dragmode`,s),ref:T,"aria-labelledby":E,tabIndex:-1,...Y(Q)},h?t.createElement(q,{a11yKeyboardHandler:L,onBlur:()=>p(!1),onDrag:w,theme:v,onClose:i}):t.createElement(R,{onClose:i}),t.createElement("div",{className:`${C}__body`,ref:d,id:E},t.Children.map(r,a=>t.cloneElement(a,{isVisible:M}))))});function ie(){const{innerWidth:e,innerHeight:d}=window;return{winWidth:e,winHeight:d}}const be=()=>{const[e,d]=m.useState(ie());return m.useEffect(()=>{function r(){d(ie())}return window.addEventListener("resize",r),()=>window.removeEventListener("resize",r)},[]),e};P.deprecated={level:"warn",details:`${Q} is deprecated.`};P=g.checkComponentEnabled(P,Q);P.displayName=Q;P.propTypes={children:n.node.isRequired,className:n.string,fixedIsVisible:n.bool.isRequired,kind:n.oneOf(Object.values(_)),onClose:n.func.isRequired,theme:n.oneOf(["light","dark"])};P.__docgenInfo={description:`DO NOT USE. This component is for the exclusive use
of other Onboarding components.`,methods:[],displayName:"CoachmarkOverlay",props:{children:{required:!0,tsType:{name:"ReactNode"},description:`The CoachmarkOverlayElements child components.
Validation is handled in the parent Coachmark component.`,type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Optional class name for this component.",type:{name:"string"}},fixedIsVisible:{required:!0,tsType:{name:"boolean"},description:`The visibility of CoachmarkOverlay is
managed in the parent Coachmark component.`,type:{name:"bool"}},kind:{required:!1,tsType:{name:"COACHMARK_OVERLAY_KIND"},description:"What kind or style of Coachmark to render.",type:{name:"enum",computed:!0,value:"Object.values(COACHMARK_OVERLAY_KIND)"}},onClose:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function to call when the Coachmark closes.",type:{name:"func"}},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Determines the theme of the component.",type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]}}}};const z=`${g.prefix}--coachmark-overlay-element`,Z="CoachmarkOverlayElement";let S=t.forwardRef(({button:e,className:d,description:r,title:i,...c},s)=>t.createElement("div",{...c,className:$(z,d,{}),ref:s,...Y(Z)},t.createElement("div",{className:`${z}__content`},i&&t.createElement("h2",{className:`${z}__title`},i),r&&t.createElement("p",{className:`${z}__body`},r)),e&&t.createElement("div",{className:`${z}__button`},e)));S.deprecated={level:"warn",details:`${Z} is deprecated.`};S=g.checkComponentEnabled(S,Z);S.displayName=Z;S.propTypes={button:n.node,className:n.string,description:n.node.isRequired,title:n.string.isRequired};S.__docgenInfo={description:`Component to be displayed within a CoachmarkOverlayElements container.
Can be used 1 to N number, to display content in a Coachmark's overlay
in a carousel fashion.`,methods:[],displayName:"CoachmarkOverlayElement",props:{button:{required:!1,tsType:{name:"ReactNode"},description:`An optional button can be rendered below the description.
This can be a link, button, Coachmark button, etc.`,type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Optional class name for this component.",type:{name:"string"}},description:{required:!0,tsType:{name:"ReactNode"},description:"The description of the Coachmark.",type:{name:"node"}},title:{required:!0,tsType:{name:"string"},description:"The title of the Coachmark.",type:{name:"string"}}}};const X=`${g.prefix}--coachmark-overlay-elements`,W="CoachmarkOverlayElements",O={isVisible:!1,nextButtonText:"Next",previousButtonLabel:"Back",closeButtonLabel:"Got it",onNext:void 0,onBack:void 0,currentStep:0};let I=t.forwardRef(({className:e,children:d,isVisible:r=O.isVisible,renderMedia:i,currentStep:c=O.currentStep,nextButtonText:s=O.nextButtonText,previousButtonLabel:l=O.previousButtonLabel,closeButtonLabel:v=O.closeButtonLabel,onNext:x=O.onNext,onBack:F=O.onBack,...V},k)=>{const p=m.useRef(void 0),T=m.useRef(void 0),[b,B]=m.useState(0),[h,M]=m.useState(c),L=J(),D=o=>{h>0&&o===0&&p.current&&setTimeout(()=>{p.current?.focus()},1e3),M(o)},H=m.Children.count(d),w=0,E=H-1,a=m.useMemo(()=>i?.({playStep:h}),[h,i]);return m.useEffect(()=>{const o=K(c,w,E);T?.current?.scrollToView?.(o)},[c]),m.useEffect(()=>{p.current&&p.current.focus()},[]),m.useEffect(()=>{setTimeout(()=>{p.current&&r&&p.current.focus()},100)},[r]),L?t.createElement("section",{...V,className:$(X,e,{}),ref:k,...Y(W)},i&&t.createElement("div",{className:`${X}__element-stepped-media`},a),H===1?t.createElement(t.Fragment,null,d,v&&t.createElement("div",{className:$(`${X}__footer`,"coachmark-carousel-controls")},t.createElement(N,{size:"sm",...L.closeButtonProps,ref:p},v))):t.createElement(t.Fragment,null,t.createElement(fe,{ref:T,onScroll:o=>{B(o)}},d),t.createElement("div",{className:$(`${X}__footer`)},t.createElement("div",{className:`${X}--controls-progress`},`${h+1} / ${H}`),b>0&&t.createElement(N,{size:"sm",kind:"ghost",title:l,disabled:b===0,onClick:()=>{const o=K(h-1,w,E);T?.current?.scrollToView?.(o),D(o),F?.()}},l),h<E?t.createElement(N,{size:"sm",ref:p,title:s,disabled:b===1,onClick:()=>{const o=K(h+1,w,E);T?.current?.scrollToView?.(o),D(o),x?.()}},s):v&&t.createElement(N,{size:"sm",ref:p,...L.closeButtonProps},v)))):me.warn(`The ${W} is a composable container element which should be used only within the scope of a Coachmark or a CoachmarkFixed component.`)});I.deprecated={level:"warn",details:`${W} is deprecated.`};I=g.checkComponentEnabled(I,W);I.displayName=W;I.propTypes={children:n.node.isRequired,className:n.string,closeButtonLabel:n.string,currentStep:n.number,isVisible:n.bool,nextButtonText:n.string,onBack:n.func,onNext:n.func,previousButtonLabel:n.string,renderMedia:n.func};I.__docgenInfo={description:`Composable container to allow for the displaying of CoachmarkOverlayElement
components in a carousel fashion.`,methods:[],displayName:"CoachmarkOverlayElements",props:{children:{required:!0,tsType:{name:"ReactNode"},description:`CoachmarkOverlayElements should be used with one or many CoachmarkOverlayElement components as children.
@see CoachmarkOverlayElement`,type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Optional class name for this component.",type:{name:"string"}},isVisible:{required:!1,tsType:{name:"boolean"},description:`The visibility of CoachmarkOverlayElements is
managed in the parent component.`,defaultValue:{value:"false",computed:!1},type:{name:"bool"}},renderMedia:{required:!1,tsType:{name:"signature",type:"function",raw:"(params) => ReactNode",signature:{arguments:[{name:"params"}],return:{name:"ReactNode"}}},description:"Optional prop to render any media like images or any animated media.",type:{name:"func"}},nextButtonText:{required:!1,tsType:{name:"string"},description:"The label for the Next button.",defaultValue:{value:"'Next'",computed:!1},type:{name:"string"}},previousButtonLabel:{required:!1,tsType:{name:"string"},description:"The label for the Previous button.",defaultValue:{value:"'Back'",computed:!1},type:{name:"string"}},closeButtonLabel:{required:!1,tsType:{name:"string"},description:"The label for the Close button.",defaultValue:{value:"'Got it'",computed:!1},type:{name:"string"}},onNext:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Callback called when clicking on the Next button.",defaultValue:{value:"undefined",computed:!0},type:{name:"func"}},onBack:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Callback called when clicking on the Previous button.",defaultValue:{value:"undefined",computed:!0},type:{name:"func"}},currentStep:{required:!1,tsType:{name:"number"},description:"Current step of the coachmarks.",defaultValue:{value:"0",computed:!1},type:{name:"number"}}}};export{he as B,ye as C,P as a,_ as b,R as c,I as d,S as e,J as u};
