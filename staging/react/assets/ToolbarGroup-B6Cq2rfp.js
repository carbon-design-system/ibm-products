import{r as e,e as s,c as h,p as $,aa as o,V as D}from"./iframe-Cff_uvRq.js";import{g as k}from"./getFocusableElements-BW7cf991.js";import{g as A}from"./devtools-CBto78fy.js";const{checkComponentEnabled:V,prefix:C}=$,m=`${C}--toolbar`,E=e.createContext({}),g=e.forwardRef(({children:i,className:l,vertical:n,...p},f)=>{const d=e.useRef(void 0),r=e.useCallback(()=>d.current,[d]),b=e.useRef(null),u=f||b,[c,w]=e.useState(-1);e.useEffect(()=>{d.current=k(u?.current),c!==-1&&r()?.forEach((a,t)=>{a[t!==c?"setAttribute":"removeAttribute"]("tabindex","-1")})}),e.useEffect(()=>{c!==-1&&r()?.[c].focus()},[c,r]);const[R,x]=n?["ArrowDown","ArrowUp"]:["ArrowRight","ArrowLeft"];function N(a){const t=c+a;r()?.[t]&&w(t)}function _({target:a}){const t=r();t?.includes(a)&&w(t.indexOf(a))}function P({key:a,target:t}){if(r()?.includes(t))switch(a){case R:N(1);break;case x:N(-1);break}}return s.createElement("div",{...p,ref:u,className:h(m,l,{[`${m}--vertical`]:n}),onFocus:_,onKeyDown:P,...n&&{"aria-orientation":"vertical"},...A(q),role:"toolbar"},s.createElement(E.Provider,{value:{vertical:n}},i))}),q="Toolbar";g.displayName=q;g.propTypes={children:o.node.isRequired,className:o.string,vertical:o.bool};g.__docgenInfo={description:"Toolbars are a collection of action items that organize a programâ€™s interaction patterns into a series of closely related commands.",methods:[],displayName:"Toolbar",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node",type:{name:"custom",raw:"string"}},vertical:{required:!1,tsType:{name:"boolean"},description:"Determines whether the `Toolbar` is rendered vertically",type:{name:"custom",raw:"bool"}},children:{description:"Provide the content of the `Toolbar`",type:{name:"node"},required:!0}}};const v=`${m}__button`,y=e.forwardRef(({caret:i=!1,children:l,className:n,renderIcon:p,iconDescription:f="",label:d,...r},b)=>{const u=p;return s.createElement(D,{align:e.useContext(E)?.vertical?"right":"top",...r,label:d??f,ref:b,className:h(n,{[`${v}--caret`]:i}),kind:"ghost",size:"md"},s.createElement(s.Fragment,null,u?s.createElement(u,null):null,l,i&&s.createElement("span",{className:`${v}__caret`})))}),I="ToolbarButton";y.displayName=I;const B={iconDescription:o.string};y.propTypes={caret:o.bool,children:o.node,className:o.string,label:o.string.isRequired,renderIcon:o.func.isRequired,...B};y.__docgenInfo={description:"Toolbar buttons are common functions performed as part of a products interface or an open window.",methods:[],displayName:"ToolbarButton",props:{caret:{required:!1,tsType:{name:"boolean"},description:"Determines whether the caret is rendered",defaultValue:{value:"false",computed:!1},type:{name:"custom",raw:"bool"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node",type:{name:"custom",raw:"string"}},iconDescription:{required:!1,tsType:{name:"string"},description:"@deprecated use `label` instead\nSpecifies the label for the icon button",defaultValue:{value:"''",computed:!1},type:{name:"custom",raw:"string"}},label:{required:!0,tsType:{name:"string"},description:"Specifies the label for the icon button",type:{name:"string"}},renderIcon:{required:!0,tsType:{name:"ReactElementType",raw:"React.ElementType"},description:"Specifies the icon to be used by the ToolbarButton component",type:{name:"func"}},children:{description:"Provide the content of the `ToolbarButton`",type:{name:"custom",raw:"node"},required:!1}}};const T=e.forwardRef(({className:i,children:l,...n},p)=>s.createElement("div",{...n,ref:p,className:h(`${m}__group`,i)},l)),F="ToolbarGroup";T.displayName=F;T.propTypes={children:o.node.isRequired,className:o.string};T.__docgenInfo={description:"Toolbar groups organize the commands within a toolbar into related groups.",methods:[],displayName:"ToolbarGroup",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Provide the content of the `ToolbarGroup`",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node",type:{name:"custom",raw:"string"}}}};export{g as T,T as a,y as b};
