import{e as i,S as u,r as x}from"./iframe-Bt_4wi2_.js";import{g}from"./getBatchActions-vmJkVJY-.js";import{s as w,m as E}from"./_storybook-styles-CWbGVUaz.js";import{D as f}from"./DatagridActions-mbamOpu9.js";import{D as S}from"./DatagridPagination-YmR0XqPq.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-CCIMJzFR.js";import{u as h}from"./useExpandedRow-CtjQuxTb.js";import{u as D}from"./useSelectRows-CQcJfkqG.js";import{u as C}from"./useStickyColumn-C5bV6exo.js";import{u as R}from"./usePrefix-BnsGijOj.js";import{E as H}from"./bucket-6-DqzXE5dN.js";import{T as b}from"./bucket-17-B1WDuKPt.js";import"./bucket-0-Bj1c77ki.js";import"./bucket-2-Boc44dor.js";import"./index-xWfRmBau.js";import"./bucket-18-BNKdAP26.js";import"./bucket-7-B-udVZOd.js";import"./ComposedModal-47wjLjIr.js";import"./index-BEhuL1MR.js";import"./index-Dj5IO_sl.js";import"./LayerContext-BkO66YUX.js";import"./clamp--00YEiB8.js";import"./ButtonSet-CKUC8hVh.js";import"./InlineLoading-DVx1EWEO.js";import"./mergeRefs-91-mP8KM.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-DVXZPRDf.js";import"./Text-CKKshe8_.js";import"./utils-Dx5MzUE-.js";import"./TableToolbarSearch-CkHJo2ev.js";import"./wrapComponent-IgFyV2G4.js";import"./Search-CVSTT5z7.js";import"./FormContext-DZ5Pn6PQ.js";import"./bucket-15-Ch_KyqBs.js";import"./Dropdown-DALH0kRg.js";import"./index-Z1YAyleP.js";import"./inheritsLoose-DHKJTbHM.js";import"./bucket-19-Cu112eOp.js";import"./MenuItem-D2pnsW7j.js";import"./useControllableState-DNtleL3k.js";import"./useAttachedMenu-C0yi6pnT.js";import"./index-C7wi-ghb.js";import"./index-DHyu7IcT.js";import"./bucket-12-CDc9yP7i.js";import"./useOutsideClick-D3OyQuUM.js";import"./OverflowMenuItem-ggN1m3Mj.js";import"./useFilterContext-DTR90qo_.js";import"./bucket-14-CUPfehuY.js";import"./Pagination-BeAzhfTN.js";import"./Select-CtL1yraa.js";import"./SelectItem-B-4g44IU.js";import"./MultiSelect-CJqcHJtI.js";import"./Checkbox-CKmGiswn.js";import"./devtools-BCl7cib1.js";import"./TableRow-C6xYuB6Q.js";import"./bucket-1-CILBsbE8.js";import"./TableToolbar-CjRb7GXR.js";import"./index-C6rFndyw.js";import"./ErrorEmptyState-zemEyeeQ.js";import"./EmptyState-O7tb8Xec.js";import"./EmptyStateV2.deprecated-CzR5da4a.js";import"./Link-BtVCBSi3.js";import"./ErrorIllustration-C20suZyp.js";import"./useId-C7vEoo7Q.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-DHayk9gF.js";import"./NoDataIllustration-CzVtwb_5.js";import"./NotFoundEmptyState-D-iN-Km6.js";import"./NotFoundIllustration-CK78gLt7.js";import"./index.esm-Cd3d2ndm.js";import"./usePreviousValue-D6jr6a1I.js";import"./useResizeObserver-B7TK2lQu.js";import"./useIsomorphicEffect-D_1zDqSu.js";import"./getFocusableElements-BW7cf991.js";import"./index-BMUscg6k.js";import"./props-helper-uQ141h4h.js";import"./useClickOutside-DTdVa_Sp.js";import"./AccordionItem-CYO3lCiP.js";import"./DatePicker-C791D37O.js";import"./FormGroup-C8xiXSF6.js";import"./NumberInput-Crv8I7dK.js";import"./useNormalizedInputProps-Bd-xcf7G.js";import"./documentLang-E105Y72C.js";import"./bucket-16-D2Z2Dhjh.js";import"./RadioButton-W7ipeTeg.js";import"./RadioButtonGroup-DuAVjpvV.js";import"./usePrefersReducedMotion-BzmCcU9p.js";import"./usePresence-CoAJwV67.js";import"./ActionSet-I4afg10P.js";import"./useWindowResize-Cg0SJ3kR.js";import"./TagSet-DlcjLTtL.js";import"./Tag-Ex8z9_ne.js";import"./DefinitionTooltip-DhipDxYz.js";import"./DismissibleTag-CgEG4X9m.js";import"./usePortalTarget-BMZMDMfJ.js";import"./OperationalTag-DwMFZI3B.js";import"./SkeletonText-XtlMg-au.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-BxptPYQA.js";import"./TableSelectRow--WiDynAN.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,bt={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const Bt=["ExpandableRowStory"];export{e as ExpandableRowStory,Bt as __namedExportsOrder,bt as default};
