import{r,e}from"./index-DxDX2vOa.js";import{a as w}from"./chunk-D5ZWXAHU-CGElDDNX.js";import{p as F,B as k}from"./settings-0ThqPtR3.js";import"./index-B_euquWE.js";import{F as G}from"./Form-Cr9ynH8v.js";import{F as U}from"./FormGroup-BHxKds7u.js";import{A as j,a as q}from"./index-DkxCE0a1.js";import{T as H}from"./TextInput-CqIwQ22u.js";import{T as y,d as J}from"./TearsheetNarrow-Bb2dZdIc.js";import{s as K,a as Q,b as V,c as W}from"./_storybook-styles-PO4T6scg.js";import{g as X}from"./props-helper-DmbAnr2a.js";import"./_commonjsHelpers-BosuxZz1.js";import"./v4-CQkTLCs1.js";import"./events-OVwOsPzJ.js";import"./index-YDq2Pj7F.js";import"./index-CaMJXrh2.js";import"./bucket-17-BLAXVSDb.js";import"./useNormalizedInputProps-BaY27oQV.js";import"./Text-9AedOkae.js";import"./bucket-18-Dvh787Y8.js";import"./FormContext-Dj7olUH1.js";import"./useAnnouncer-Dwt0jqXi.js";import"./TearsheetShell-DL71VJCc.js";import"./useResizeObserver-DUmvKY5Q.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./ComposedModal-BsLCo1xi.js";import"./index-B1YmXwfC.js";import"./LayerContext-BLFdRioi.js";import"./ButtonSet-epghEKVn.js";import"./InlineLoading-CIMtbZ0Q.js";import"./bucket-6-Cw3hdw1e.js";import"./bucket-2-BDpMY3Ys.js";import"./mergeRefs-CTUecegF.js";import"./requiredIfGivenPropIsTruthy-CU7JwK8h.js";import"./wrapFocus-ChZuRP4g.js";import"./usePortalTarget-BfZpr1XQ.js";import"./feature-flags-BboNqy5q.js";import"./index-DYXyeV2p.js";import"./useFocus-57u9QJvZ.js";import"./wait-CTNFjQS8.js";import"./usePreviousValue-CLgSY5iR.js";import"./ActionSet-0Lk-L5n-.js";import"./devtools-BlxCaI1L.js";const je={title:"IBM Products/Components/Tearsheet/TearsheetNarrow",component:y,tags:["autodocs"],parameters:{layout:"fullscreen",styles:K},argTypes:{...X(J),actions:{control:{type:"select",labels:Q},options:V,mapping:W({primary:"Create",secondary:"Close",secondary2:"Save",ghost:"Cancel"},w)},description:{control:{type:"text"}},label:{control:{type:"text"}},title:{control:{type:"text"}},onClose:{control:{disable:!0}},open:{control:{disable:!0}},portalTarget:{control:{disable:!0}},aiLabel:{control:{type:"select",labels:{0:"No AI Label",1:"with AI Label"},default:0},description:"Optional prop that is intended for any scenario where something is being generated by AI to reinforce AI transparency, accountability, and explainability at the UI level.",options:[0,1]},slug:{control:{type:"select",labels:{0:"No AI Slug",1:"with AI Slug"},default:0},description:'deprecated Property replaced by "aiLabel"',options:[0,1]}}},A="Close the tearsheet",T="This is a description for the tearsheet, providing an opportunity to   describe the flow.",M="The label of the tearsheet",Y=e.createElement("div",{className:"tearsheet-stories__narrow-content-block"},e.createElement(G,null,e.createElement("p",null,"Main content"),e.createElement(U,{legendId:"tearsheetNarrow-form-group",legendText:"FormGroup Legend"},e.createElement(H,{id:"tss-ft1",labelText:"Enter an important value here"})))),P="Title of the tearsheet",o=e.createElement(j,{className:"ai-label-container",size:"xs"},e.createElement(q,null,e.createElement("div",null,e.createElement("p",{className:"secondary"},"AI Explained"),e.createElement("h1",null,"84%"),e.createElement("p",{className:"secondary bold"},"Confidence score"),e.createElement("p",{className:"secondary"},"This is not really Lorem Ipsum but the spell checker did not like the previous text with it's non-words which is why this unwieldy sentence, should one choose to call it that, here."),e.createElement("hr",null),e.createElement("p",{className:"secondary"},"Model type"),e.createElement("p",{className:"bold"},"Foundation model")))),R=({actions:c,aiLabel:p,slug:m,...u})=>{const[C,n]=r.useState(!1),g=r.useRef(void 0),d=Array.prototype.map.call(c,a=>{if(a.label==="Cancel"){const f=a.onClick;return{...a,onClick:v=>{n(!1),f(v)}}}return a});return e.createElement(e.Fragment,null,e.createElement("style",null,`.${F.prefix}--tearsheet { opacity: 0 }`,";"),e.createElement(k,{onClick:()=>n(!0)},"Open Tearsheet"),e.createElement("div",{ref:g},e.createElement(y,{...u,actions:d,open:C,onClose:()=>n(!1),aiLabel:p&&o,slug:m&&o},Y)))},Z=({actions:c,aiLabel:p,slug:m,...u})=>{const[C,n]=r.useState(!1),[g,d]=r.useState(!1),[a,f]=r.useState(!1),v=r.useRef(void 0),$=Array.prototype.map.call(c,t=>{if(t.label==="Cancel"){const h=t.onClick;return{...t,onClick:b=>{n(!1),h(b)}}}return t}),z=Array.prototype.map.call(c,t=>{if(t.label==="Cancel"){const h=t.onClick;return{...t,onClick:b=>{d(!1),h(b)}}}return t}),D=Array.prototype.map.call(c,t=>{if(t.label==="Cancel"){const h=t.onClick;return{...t,onClick:b=>{f(!1),h(b)}}}return t});return e.createElement(e.Fragment,null,e.createElement("style",null,`.${F.prefix}--tearsheet { opacity: 0 }`,";"),e.createElement("div",{style:{height:"3rem"},"data-reserve-space":"for toggle buttons"}),e.createElement("div",{style:{display:"flex",position:"fixed",top:0,left:0,zIndex:1e4}},e.createElement(k,{onClick:()=>n(!C)},"Toggle #1"),e.createElement(k,{onClick:()=>d(!g)},"Toggle #2"),e.createElement(k,{onClick:()=>f(!a)},"Toggle #3")),e.createElement("div",{ref:v},e.createElement(y,{...u,actions:$,title:"Tearsheet #1",open:C,onClose:()=>n(!1),aiLabel:p&&o,slug:m&&o},e.createElement("div",{className:"tearsheet-stories__narrow-content-block"},"Main content 1")),e.createElement(y,{...u,actions:z,title:"Tearsheet #2",open:g,onClose:()=>d(!1),aiLabel:p&&o,slug:m&&o,selectorPrimaryFocus:"#main-content"},e.createElement("div",{className:"tearsheet-stories__narrow-content-block"},"Main content 2")),e.createElement(y,{...u,actions:D,title:"Tearsheet #3",open:a,onClose:()=>f(!1),aiLabel:p&&o,slug:m&&o,selectorPrimaryFocus:"#main-content"},e.createElement("div",{className:"tearsheet-stories__narrow-content-block"},"Main content 3"))))},s=R.bind({});s.storyName="Narrow tearsheet";s.args={closeIconDescription:A,description:T,onClose:w("onClose called"),title:P,actions:7};const l=R.bind({});l.storyName="Narrow tearsheet with all header items";l.args={closeIconDescription:A,description:T,hasCloseIcon:!0,label:M,onClose:w("onClose called"),title:P,actions:0,aiLabel:1,slug:0};const i=Z.bind({});i.storyName="Stacking narrow tearsheets";i.args={closeIconDescription:A,description:T,height:"lower",label:M,actions:7};var E,L,N;s.parameters={...s.parameters,docs:{...(E=s.parameters)==null?void 0:E.docs,source:{originalSource:`({
  actions,
  aiLabel,
  slug,
  ...args
}) => {
  const [open, setOpen] = useState(false);
  const ref = useRef(undefined);
  const wiredActions = Array.prototype.map.call(actions, action => {
    if (action.label === 'Cancel') {
      const previousClick = action.onClick;
      return {
        ...action,
        onClick: evt => {
          setOpen(false);
          previousClick(evt);
        }
      };
    }
    return action;
  });
  return <>
      <style>{\`.\${pkg.prefix}--tearsheet { opacity: 0 }\`};</style>
      <Button onClick={() => setOpen(true)}>Open Tearsheet</Button>
      <div ref={ref}>
        <TearsheetNarrow {...args} actions={wiredActions} open={open} onClose={() => setOpen(false)} aiLabel={aiLabel && sampleAILabel} slug={slug && sampleAILabel}>
          {mainContent}
        </TearsheetNarrow>
      </div>
    </>;
}`,...(N=(L=s.parameters)==null?void 0:L.docs)==null?void 0:N.source}}};var O,I,x;l.parameters={...l.parameters,docs:{...(O=l.parameters)==null?void 0:O.docs,source:{originalSource:`({
  actions,
  aiLabel,
  slug,
  ...args
}) => {
  const [open, setOpen] = useState(false);
  const ref = useRef(undefined);
  const wiredActions = Array.prototype.map.call(actions, action => {
    if (action.label === 'Cancel') {
      const previousClick = action.onClick;
      return {
        ...action,
        onClick: evt => {
          setOpen(false);
          previousClick(evt);
        }
      };
    }
    return action;
  });
  return <>
      <style>{\`.\${pkg.prefix}--tearsheet { opacity: 0 }\`};</style>
      <Button onClick={() => setOpen(true)}>Open Tearsheet</Button>
      <div ref={ref}>
        <TearsheetNarrow {...args} actions={wiredActions} open={open} onClose={() => setOpen(false)} aiLabel={aiLabel && sampleAILabel} slug={slug && sampleAILabel}>
          {mainContent}
        </TearsheetNarrow>
      </div>
    </>;
}`,...(x=(I=l.parameters)==null?void 0:I.docs)==null?void 0:x.source}}};var S,_,B;i.parameters={...i.parameters,docs:{...(S=i.parameters)==null?void 0:S.docs,source:{originalSource:`({
  actions,
  aiLabel,
  slug,
  ...args
}) => {
  const [open1, setOpen1] = useState(false);
  const [open2, setOpen2] = useState(false);
  const [open3, setOpen3] = useState(false);
  const ref = useRef(undefined);
  const wiredActions1 = Array.prototype.map.call(actions, action => {
    if (action.label === 'Cancel') {
      const previousClick = action.onClick;
      return {
        ...action,
        onClick: evt => {
          setOpen1(false);
          previousClick(evt);
        }
      };
    }
    return action;
  });
  const wiredActions2 = Array.prototype.map.call(actions, action => {
    if (action.label === 'Cancel') {
      const previousClick = action.onClick;
      return {
        ...action,
        onClick: evt => {
          setOpen2(false);
          previousClick(evt);
        }
      };
    }
    return action;
  });
  const wiredActions3 = Array.prototype.map.call(actions, action => {
    if (action.label === 'Cancel') {
      const previousClick = action.onClick;
      return {
        ...action,
        onClick: evt => {
          setOpen3(false);
          previousClick(evt);
        }
      };
    }
    return action;
  });
  return <>
      <style>{\`.\${pkg.prefix}--tearsheet { opacity: 0 }\`};</style>
      <div style={{
      height: '3rem'
    }} data-reserve-space="for toggle buttons" />
      <div style={{
      display: 'flex',
      position: 'fixed',
      top: 0,
      left: 0,
      zIndex: 10000
    }}>
        <Button onClick={() => setOpen1(!open1)}>Toggle #1</Button>
        <Button onClick={() => setOpen2(!open2)}>Toggle #2</Button>
        <Button onClick={() => setOpen3(!open3)}>Toggle #3</Button>
      </div>
      <div ref={ref}>
        <TearsheetNarrow {...args} actions={wiredActions1} title="Tearsheet #1" open={open1} onClose={() => setOpen1(false)} aiLabel={aiLabel && sampleAILabel} slug={slug && sampleAILabel}>
          <div className="tearsheet-stories__narrow-content-block">
            Main content 1
          </div>
        </TearsheetNarrow>
        <TearsheetNarrow {...args} actions={wiredActions2} title="Tearsheet #2" open={open2} onClose={() => setOpen2(false)} aiLabel={aiLabel && sampleAILabel} slug={slug && sampleAILabel} selectorPrimaryFocus="#main-content">
          <div className="tearsheet-stories__narrow-content-block">
            Main content 2
          </div>
        </TearsheetNarrow>
        <TearsheetNarrow {...args} actions={wiredActions3} title="Tearsheet #3" open={open3} onClose={() => setOpen3(false)} aiLabel={aiLabel && sampleAILabel} slug={slug && sampleAILabel} selectorPrimaryFocus="#main-content">
          <div className="tearsheet-stories__narrow-content-block">
            Main content 3
          </div>
        </TearsheetNarrow>
      </div>
    </>;
}`,...(B=(_=i.parameters)==null?void 0:_.docs)==null?void 0:B.source}}};const qe=["tearsheetNarrow","fullyLoaded","stacked"];export{qe as __namedExportsOrder,je as default,l as fullyLoaded,i as stacked,s as tearsheetNarrow};
