import{e as P,m as C}from"./index-DYQz9bQ1.js";import{d as $,n as Q,P as t}from"./index-C360Eztx.js";import{T as X}from"./Toggle-CShY17k1.js";import{S as Z,H as ee}from"./index-D_6HqJlS.js";import{L as te}from"./index-B0hq8c5O.js";import{r as l,e as n}from"./index-DtHxqM--.js";import{g as ne}from"./devtools-XPxnGn1y.js";import{p as S}from"./settings-CFkY3W_8.js";import{u as ae}from"./uuidv4-BN2rGLQG.js";import{u as ie}from"./usePrefersReducedMotion-DvL5kgOM.js";import{aY as I}from"./bucket-10-F-tNiG7L.js";import{W as oe,a as se}from"./bucket-19-D7HYZr93.js";function re(d,o){if(typeof d=="function")throw new TypeError("Functions are not supported");const[u,v]=l.useState(d),c=l.useCallback(s=>{o==null||o(s)},[o]);return typeof o=="function"?[d,c]:[u,v]}const e=`${S.prefix}--options-tile`,N="OptionsTile",le={size:"lg"};let m=n.forwardRef((d,o)=>{const{children:u,className:v,enabled:c,invalid:s,invalidText:W,locked:g,lockedText:E,onChange:D,onToggle:L,open:B,size:F=le.size,summary:V,title:H,titleId:M,warn:f,warnText:A,...U}=d,[b,O]=l.useState(!1),[h,y]=re(B??!1,D),_=l.useRef(null),r=l.useRef(null),Y=l.useRef(null),w=M??`${ae()}-title`,j=u!==void 0,k=!s&&!(!s&&f)&&g,q=ie(),G=()=>{if(_.current&&r.current&&!q){y(!0),_.current.open=!0;const{paddingTop:a,paddingBottom:i,height:T}=getComputedStyle(r.current);r.current.animate([{paddingTop:0,paddingBottom:0,height:0,opacity:0,overflow:"hidden"},{paddingTop:a,paddingBottom:i,height:T,opacity:1,overflow:"hidden"}],{duration:Number(C.replace("ms","")),easing:P.entrance.productive})}else y(!0)},J=()=>{if(r.current&&!q){O(!0);const{paddingTop:a,paddingBottom:i,height:T}=getComputedStyle(r.current),p=Number(C.replace("ms","")),x=r.current.animate([{paddingTop:a,paddingBottom:i,height:T,opacity:1},{paddingTop:0,paddingBottom:0,height:0,opacity:0}],{duration:p,easing:P.entrance.productive}),z=()=>{y(!1),O(!1)};setTimeout(()=>{z()},p*.9),x.oncancel=z}else y(!1)},K=a=>{a.preventDefault(),h?J():G()},R=()=>{let a=null,i=V;s?(a=oe,i=W):f?(a=se,i=A):g&&(a=I,i||(i=E));const p=!(s||f||g)&&c===!1,x=$(`${e}__summary`,{[`${e}__summary--closing`]:b,[`${e}__summary--open`]:h,[`${e}__summary--invalid`]:s,[`${e}__summary--warn`]:f,[`${e}__summary--locked`]:g,[`${e}__summary--hidden`]:p});return n.createElement("div",{className:`${e}__heading`},n.createElement(ee,{ref:Y,id:w,className:`${e}__title`},H),i&&n.createElement("span",{className:x,"aria-hidden":p},a&&n.createElement(a,{size:16}),n.createElement("span",{className:`${e}__summary-text`},i)))};return n.createElement(Z,{...U,className:$(e,v,`${e}--${F}`,{[`${e}--closing`]:b}),ref:o,...ne(N)},c!==void 0&&n.createElement("div",{className:`${e}__toggle-container`},n.createElement(X,{id:`${w}-toggle`,className:`${e}__toggle`,toggled:c,"aria-labelledby":w,hideLabel:!0,onToggle:L,size:"sm",disabled:k})),j?n.createElement("details",{className:`${e}__details`,open:h,ref:_},n.createElement("summary",{className:`${e}__header`,onClick:K},n.createElement(Q,{size:16,className:$(`${e}__chevron`,{[`${e}__chevron--open`]:h,[`${e}__chevron--closing`]:b})}),R()),n.createElement("div",{className:`${e}__content`,ref:r},n.createElement(te,null,k&&n.createElement("p",{className:`${e}__locked-text`},n.createElement(I,{size:16}),E),u))):n.createElement("div",{className:`${e}__static-content`},R()))});m=S.checkComponentEnabled(m,N);m.displayName=N;m.propTypes={children:t.node,className:t.string,enabled:t.bool,invalid:t.bool,invalidText:t.string,locked:t.bool,lockedText:t.string,onChange:t.func,onToggle:t.func,open:t.bool,size:t.oneOf(["lg","xl"]),summary:t.string,title:t.oneOfType([t.string,t.node]).isRequired,titleId:t.string,warn:t.bool,warnText:t.string};m.__docgenInfo={description:"",methods:[],displayName:"OptionsTile",props:{children:{required:!1,tsType:{name:"ReactNode"},description:`Provide content to render as expandable OptionsTile. If no children
are present, the OptionsTile will render as its variant.`,type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},enabled:{required:!1,tsType:{name:"boolean"},description:`Whether the toggle is enabled or disabled. If nothing is passed,
no toggle will be rendered.`,type:{name:"bool"}},invalid:{required:!1,tsType:{name:"boolean"},description:"Whether the OptionsTile is in invalid validation state.",type:{name:"bool"}},invalidText:{required:!1,tsType:{name:"string"},description:"Provide a text explaining why the OptionsTile is in invalid state.",type:{name:"string"}},locked:{required:!1,tsType:{name:"boolean"},description:"Whether the OptionsTile is in locked validation state.",type:{name:"bool"}},lockedText:{required:!1,tsType:{name:"string"},description:"Provide a text explaining why the OptionsTile is in locked state.",type:{name:"string"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"value"}],return:{name:"void"}}},description:"A handler for managing the controlled state of open prop. If not passed the open prop will not be honored and an uncontrolled state will be used.",type:{name:"func"}},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"value"}],return:{name:"void"}}},description:`Provide a function which will be called each time the user
interacts with the toggle.`,type:{name:"func"}},open:{required:!1,tsType:{name:"boolean"},description:"For controlled usage of the tile open state. This prop only works when an onChange prop is also passed, otherwise an uncontrolled state is used.",type:{name:"bool"}},size:{required:!1,tsType:{name:"union",raw:"'lg' | 'xl'",elements:[{name:"literal",value:"'lg'"},{name:"literal",value:"'xl'"}]},description:"Define the size of the OptionsTile.",type:{name:"enum",value:[{value:"'lg'",computed:!1},{value:"'xl'",computed:!1}]}},summary:{required:!1,tsType:{name:"string"},description:"Optionally provide a text summarizing the current state of the content.",type:{name:"string"}},title:{required:!0,tsType:{name:"ReactNode"},description:"Provide the title for this OptionsTile. Must not contain any interactive elements.",type:{name:"union",value:[{name:"string"},{name:"node"}]}},titleId:{required:!1,tsType:{name:"string"},description:"Optionally provide an id which should be used for the title.",type:{name:"string"}},warn:{required:!1,tsType:{name:"boolean"},description:"Whether the OptionsTile is in warning validation state.",type:{name:"bool"}},warnText:{required:!1,tsType:{name:"string"},description:"Provide a text explaining why the OptionsTile is in warning state.",type:{name:"string"}}}};export{m as O};
