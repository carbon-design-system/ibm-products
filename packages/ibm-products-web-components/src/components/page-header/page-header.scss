//
// Copyright IBM Corp. 2025, 2025
//
// This source code is licensed under the Apache-2.0 license found in the
// LICENSE file in the root directory of this source tree.
//

@use 'sass:math';

$css--plex: true !default;

@use '@carbon/styles/scss/config' as *;
@use '@carbon/styles/scss/theme' as *;
@use '@carbon/styles/scss/type' as *;
@use '@carbon/styles/scss/spacing' as *;
@use '@carbon/styles/scss/breakpoint' as *;
@use '@carbon/styles/scss/utilities/convert';
@use '@carbon/grid';
@use '@carbon/styles/scss/components/page-header/index' as *;
@use 'sass:map';

$prefix: 'c4p';
$carbon-prefix: 'cds';

:host(#{$prefix}-page-header) {
  // @extend .#{$prefix}--page-header;
  display: block;
  background-color: $layer-01;
  border-block-end: 1px solid $border-subtle-01;
}

:host(#{$prefix}-page-header-breadcrumb),
:host(#{$prefix}-page-header-content),
:host(#{$prefix}-page-header-tabs) {
  @include grid.css-grid();

  display: block;
}

:host(#{$prefix}-page-header-breadcrumb) {
  block-size: convert.to-rem(40px);
  // TODO: remove above styles when styles from React have been migrated
  // and use the extend below

  // @extend .#{$prefix}--page-header__breadcrumb-bar;
  ::slotted([slot='icon']) {
    margin-inline-end: $spacing-03;
    // TODO: remove above styles when styles from React have been migrated
    // and use the extend below

    // @extend .#{$prefix}--page-header__breadcrumb__icon;
  }

  // TODO: remove this section
  .#{$prefix}--page-header__breadcrumb-container {
    display: inline-flex;
    align-items: center;
    justify-content: space-between;
    block-size: 100%;
    inline-size: 100%;
  }
}

:host(#{$prefix}-page-header-breadcrumb:not([content-actions-flush]))
  ::slotted([slot='content-actions']) {
  //stylelint-disable declaration-no-important
  margin-inline-end: $spacing-04 !important;
}

:host(#{$prefix}-page-header-breadcrumb[page-actions-flush]) {
  .#{$prefix}--css-grid {
    margin-inline-end: 0;
    padding-inline-end: 0;
  }

  .#{$prefix}--css-grid-column {
    margin-inline-end: 0;
  }
}

:host(#{$prefix}-page-header-breadcrumb[border='true']) {
  border-block-end: 1px solid $border-subtle-01;
  // TODO: remove above styles when styles from React have been migrated
  // and use the extend below

  // @extend .#{$prefix}--page-header__breadcrumb-bar-border;
}

:host(#{$prefix}-page-header-content) {
  padding: $spacing-06 0;
  // TODO: remove above styles when styles from React have been migrated
  // and use the extend below

  // @extend .#{$prefix}--page-header__content;

  .#{$prefix}--page-header__content__title {
    @include type-style('productive-heading-04');

    display: -webkit-box;
    overflow: hidden;
    // TODO: remove above styles when styles from React have been migrated
    // and use the extend below

    // @extend .#{$prefix}--page-header__content__title;
    margin: 0;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    max-inline-size: convert.to-rem(640px);
    text-overflow: ellipsis;
    white-space: normal;
  }

  // TODO: remove this section
  .#{$prefix}--page-header__content__title-wrapper {
    @include breakpoint-down(md) {
      display: flex;
      flex-direction: column;
      grid-gap: $spacing-05;
    }

    display: grid;
    gap: $spacing-05;

    // overriding until the responsive behavior is implemented
    grid-template-columns: auto minmax(auto, auto);
    margin-block-end: $spacing-05;
    min-block-size: convert.to-rem(40px);
  }

  ::slotted([slot='icon']) {
    // @extend .#{$prefix}--page-header__content__icon;
  }

  ::slotted([slot='contextual-actions']) {
    display: flex;

    // @extend .#{$prefix}--page-header__content__contextual-actions;
  }
}

:host(#{$prefix}-page-header-content[contextual-actions]) {
  .#{$prefix}--page-header__content__title {
    -webkit-line-clamp: 1;
  }
}

:host(#{$prefix}-page-header-content[contextual-actions]) {
  .#{$prefix}--page-header__content__title {
    -webkit-line-clamp: 1;
  }
}

:host(#{$prefix}-page-header-content-text) {
  // @extend .#{$prefix}--page-header__content__body;
  display: block;
  margin-block-start: $spacing-05;

  .#{$prefix}--page-header__content__subtitle {
    margin-block-start: 0;
  }
}

:host(#{$prefix}-page-header-hero-image) {
  // @extend .#{$prefix}--page-header__hero-image;
  position: relative;
}

:host(#{$prefix}-page-header-hero-image)::before {
  block-size: 0;
  content: '';
  float: inline-start;
  inline-size: 1px;
  margin-inline-start: -1px;

  padding-block-start: math.percentage(math.div(2, 3));

  @include grid.breakpoint-up('lg') {
    padding-block-start: math.percentage(math.div(1, 2));
  }
}

:host(#{$prefix}-page-header-hero-image)::after {
  display: table;
  clear: both;
  content: '';
}

:host(#{$prefix}-page-header-tabs) {
  // @extend .#{$prefix}--page-header__tab-bar;
}

:host(#{$prefix}-page-header-tabs) .#{$prefix}--page-header__tab-bar--tablist {
  display: flex;
  justify-content: space-between;
  inline-size: 100%;

  // TODO: remove once responsive logic for tags is implemented
  @include breakpoint-down(md) {
    flex-direction: column-reverse;
    grid-gap: $spacing-05;
  }
}

:host(#{$prefix}-page-header-tabs) ::slotted([slot='tags']) {
  // @extend .#{$prefix}--page-header__tags;
  inline-size: 100%;

  // TODO: remove once responsive logic for tags is implemented
  @include breakpoint-down(md) {
    justify-content: left;
  }
}

:host(#{$prefix}-page-header-breadcrumb),
:host(#{$prefix}-page-header-content),
:host(#{$prefix}-page-header-tabs) {
  .#{$prefix}--css-grid {
    inline-size: initial;
  }
}

#{$prefix}-definition-tooltip::part(definition-term) {
  border: none;
}

:host(#{$prefix}-page-header-tabs) ::slotted(cds-tabs) {
  --tabs-overflow-button-background: $layer-01;
}
