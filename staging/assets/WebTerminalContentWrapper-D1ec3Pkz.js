import{P as e,d as C,j as S}from"./index-CMVdkQrl.js";import{p as f,B as k}from"./settings-C3kz8lqM.js";import{O as V}from"./index-CrpWSFad.js";import{O as E}from"./OverflowMenuItem-CqnmCkEJ.js";import{T as B}from"./index-DKqhk86f.js";import{r as a,e as n}from"./index-DtHxqM--.js";import{g as G}from"./devtools-CJD9WatR.js";import{u as H}from"./usePrefersReducedMotion-DvL5kgOM.js";import{ax as U}from"./bucket-7-Ca02d0BY.js";const I=a.createContext({}),F="WebTerminalProvider";let b=({children:l})=>{const[o,r]=a.useState(!1),c=a.useCallback(()=>r(!0),[]),m=a.useCallback(()=>r(!1),[]),y=a.useCallback(()=>r(!o),[o]);return n.createElement(I.Provider,{value:{open:o,openWebTerminal:c,closeWebTerminal:m,toggleWebTerminal:y}},l)};b=f.checkComponentEnabled(b,F);b.propTypes={children:e.oneOfType([e.arrayOf(e.node),e.node]).isRequired};const N=()=>a.useContext(I);b.__docgenInfo={description:"",methods:[],displayName:"WebTerminalProvider",props:{children:{required:!0,tsType:{name:"union",raw:"ReactNode | ReactNode[]",elements:[{name:"ReactNode"},{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]"}]},description:"Provide your own terminal component as children to show up in the web terminal",type:{name:"union",value:[{name:"arrayOf",value:{name:"node"}},{name:"node"}]}}}};const O="WebTerminal",i=`${f.prefix}--web-terminal`,d={actions:Object.freeze([]),documentationLinks:Object.freeze([]),documentationLinksIconDescription:"Show documentation links",isInitiallyOpen:!1,webTerminalAriaLabel:"Web terminal header"};let p=n.forwardRef(({actions:l=d.actions,children:o,className:r,closeIconDescription:c,documentationLinks:m=d.documentationLinks,documentationLinksIconDescription:y=d.documentationLinksIconDescription,isInitiallyOpen:q=d.isInitiallyOpen,webTerminalAriaLabel:_=d.webTerminalAriaLabel,...P},$)=>{const D=a.useRef(null),L=$??D,{open:s,closeWebTerminal:h,openWebTerminal:T}=N(),[x,v]=a.useState(s),A=H(),z=a.useMemo(()=>m.length>0,[m]);a.useEffect(()=>{s&&v(!0)},[s]),a.useEffect(()=>{q&&(T==null||T())},[]);const j=()=>{s||v(!1)},M=()=>{A&&v(!1),h==null||h()};return x?n.createElement("div",{...P,...G(O),ref:L,className:C([i,r,{[`${i}--open`]:s,[`${i}--closed`]:!s}]),onAnimationEnd:j},n.createElement("header",{"aria-label":_,className:`${i}__bar`},n.createElement("div",{className:`${i}__actions`},z&&n.createElement(V,{renderIcon:t=>n.createElement(U,{size:16,...t}),iconDescription:y,"aria-label":y,menuOptionsClass:`${i}__documentation-overflow`,size:"lg"},m.map(({...t},w)=>n.createElement(E,{key:w,...t}))),l.map(({renderIcon:t,onClick:w,iconDescription:g})=>n.createElement(k,{key:g,hasIconOnly:!0,renderIcon:t,onClick:w,iconDescription:g,kind:"ghost","aria-label":g}))),n.createElement(k,{hasIconOnly:!0,renderIcon:t=>n.createElement(S,{size:16,...t}),kind:"ghost",iconDescription:c,onClick:M,onAnimationEnd:t=>t.stopPropagation()})),n.createElement(B,{theme:"g100"},n.createElement("div",{className:`${i}__body`},o))):null});p=f.checkComponentEnabled(p,O);p.displayName=O;p.propTypes={actions:e.arrayOf(e.shape({renderIcon:e.func.isRequired,onClick:e.func.isRequired,iconDescription:e.string.isRequired})),children:e.oneOfType([e.arrayOf(e.node),e.node]).isRequired,className:e.string,closeIconDescription:e.string.isRequired,documentationLinks:e.arrayOf(e.shape({...E.propTypes})),documentationLinksIconDescription:e.string,isInitiallyOpen:e.bool,webTerminalAriaLabel:e.string};p.__docgenInfo={description:"The `WebTerminal` is prompted by the user and is persistent until dismissed. The purpose of a web terminal is to provide users with the ability to type commands manually instead of using the GUI.",methods:[],displayName:"WebTerminal",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Provide your own terminal component as children to show up in the web terminal",type:{name:"union",value:[{name:"arrayOf",value:{name:"node"}},{name:"node"}]}},actions:{required:!1,tsType:{name:"unknown"},description:"An array of actions to be displayed in the web terminal header bar",defaultValue:{value:"Object.freeze([])",computed:!0},type:{name:"arrayOf",value:{name:"shape",value:{renderIcon:{name:"func",required:!0},onClick:{name:"func",required:!0},iconDescription:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Custom classname for additional styling of the web terminal",type:{name:"string"}},closeIconDescription:{required:!0,tsType:{name:"string"},description:"Icon description for the close button",type:{name:"string"}},documentationLinks:{required:!1,tsType:{name:"unknown"},description:"Array of objects for each documentation link. Each documentation link uses the prop types of OverflowMenuItems. See more: https://react.carbondesignsystem.com/?path=/docs/components-overflowmenu--default",defaultValue:{value:"Object.freeze([])",computed:!0},type:{name:"arrayOf",value:{name:"shape",value:{}}}},documentationLinksIconDescription:{required:!1,tsType:{name:"string"},description:"Description for the documentation link overflow menu tooltip",defaultValue:{value:"'Show documentation links'",computed:!1},type:{name:"string"}},isInitiallyOpen:{required:!1,tsType:{name:"boolean"},description:"Optionally pass if the web terminal should be open by default",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},webTerminalAriaLabel:{required:!1,tsType:{name:"string"},description:"Specifies aria label for Web terminal",defaultValue:{value:"'Web terminal header'",computed:!1},type:{name:"string"}}},composes:["PropsWithChildren"]};const W="WebTerminalContentWrapper",R=`${f.prefix}--web-terminal-content-wrapper`;let u=n.forwardRef(({children:l,...o},r)=>{const{open:c}=N();return n.createElement("div",{ref:r,className:C([R,{[`${R}--open`]:c}]),...o},l)});u=f.checkComponentEnabled(u,W);u.displayName=W;u.propTypes={children:e.oneOfType([e.arrayOf(e.node),e.node]).isRequired};u.__docgenInfo={description:"",methods:[],displayName:"WebTerminalContentWrapper",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Pass in content as children.",type:{name:"union",value:[{name:"arrayOf",value:{name:"node"}},{name:"node"}]}}}};export{p as W,u as a,b,N as u};
