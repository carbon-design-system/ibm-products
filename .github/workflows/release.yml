name: v2 release inner # Builds and releases @carbon/v11 supported version of @carbon/ibm-products

on:
  workflow_call:
    inputs:
      release-type:
        default: ''
        type: string

jobs:
  Release:
    runs-on: ubuntu-latest
    # Recommended by npm for publishing with provenance https://docs.npmjs.com/generating-provenance-statements
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # https://github.com/actions/checkout/issues/217
          token: ${{ secrets.GH_TOKEN_LERNA }} # https://github.com/lerna/lerna/issues/1957
          ref: 'main'

      # https://github.com/actions/checkout#push-a-commit-using-the-built-in-token
      - run: |
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git config user.name $GITHUB_ACTOR

      - name: Setup Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0 # https://github.com/actions/setup-node
        with:
          node-version: '20.x'
          registry-url: https://registry.npmjs.org
          cache: yarn

      - name: Install
        run: yarn

      - name:
          Run @ibm/telemetry-js-config-generator to regenerate telemetry config
          file
        working-directory: ./packages/ibm-products
        run: |
          yarn telemetry-config

      # This can be removed once @ibm/telemetry-js-config-generator has params to set the js scope
      - name: Add js scope to telemetry config
        working-directory: ./packages/ibm-products
        run: |
          echo "  js:
              functions: {}
              tokens: null" >> telemetry.yml
          if [ -z "$(git status --porcelain)" ]; then
            echo "Mirror is clean, exiting..."
          else
            git add telemetry.yml
            git commit -m "chore(telemetry): update telemetry config"
            git push origin
          fi

      - name: Continuous integration check (includes build)
        run: yarn ci-check

      # Dry run - `yarn lerna publish --dist-tag next --no-verify-access --create-release github --yes --no-push --no-git-tag-version`
      - name: Publish
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN_LERNA }}
          NODE_AUTH_TOKEN: ${{ secrets.CARBON_BOT_NPM_TOKEN }}
        run:
          yarn lerna publish ${{ inputs.release-type }} --no-verify-access
          --create-release github --yes
