import{e as t,r as h}from"./index-CPiZ6Cnx.js";import{aw as B,al as ut,ax as dt,ak as ct}from"./index--RGRayqE.js";import{useMDXComponents as In}from"./index-CUO_02de.js";import"./chunk-NUUEMKO5-C8YL0vlq.js";import{b as Ee,_ as xe,c as R,P as n,e as mt,H as pt,C as Pn,a1 as Ln}from"./index-CXyjPnaX.js";import{T as jn}from"./TextInput-D6QswYlg.js";import{d as $n,az as Dn}from"./bucket-6-BQYdmIZX.js";import{a5 as Ve}from"./bucket-7-DdSKRZLi.js";import{s as gt,p as Bn,T as yt,B as Hn,a0 as Gn,bj as Mn,_ as Rn}from"./settings-iwZeeh4T.js";import{a6 as Fn}from"./bucket-17-Ddrrb1BH.js";import{B as ft,C as je}from"./bucket-1-EQaPuUyr.js";import{u as x}from"./uuidv4-BQrI85uz.js";import{g as vt}from"./devtools-CjVY-wQW.js";import{S as Vn,H as Wn}from"./index-Bd5XT4xl.js";import{L as bt}from"./index-Dcfl0vi2.js";import{P as ht,a as wt}from"./index-DJK44odq.js";import{W as Ct,a as zn,b0 as Le}from"./bucket-18-By6NmkK1.js";import{A as Kn,t as Tt}from"./bucket-0-DUfmGMOu.js";import{S as Un}from"./Search-soxfLq4A.js";import{C as Zn,a_ as qt,aY as At}from"./bucket-2-L5Cs0C3i.js";import{N as kt}from"./NumberInput-7N1NynOx.js";import{T as Ot}from"./TextArea-q8NMVixJ.js";import{D as an,a as Me}from"./DatePicker-BtYXwe2U.js";import{S as Re}from"./SelectItem-CBhng3Ob.js";import{aN as Yn}from"./bucket-16-DAqQSLfq.js";import"./_commonjsHelpers-BosuxZz1.js";import"./iframe-B0XBN4z8.js";import"../sb-preview/runtime.js";import"./index-BSHYryQu.js";import"./index-Bsyy8W_U.js";import"./index-Df9so8jS.js";import"./index-DMCuvgYY.js";import"./index-DrFu-skq.js";import"./react-18-C6q_qjn2.js";import"./useNormalizedInputProps-Dv8FHz9Q.js";import"./Text-vNWzJqus.js";import"./FormContext-CgeSXHS1.js";import"./useAnnouncer-Dwt0jqXi.js";import"./events-OVwOsPzJ.js";import"./LayerContext-BGhaVt7n.js";import"./bucket-14-BKxafgTW.js";const Jn=e=>{let{hideLabel:a,className:r,...i}=e;const s=Ee();return t.createElement("div",xe({className:R(`${s}--form-item`,r)},i),!a&&t.createElement("span",{className:`${s}--label ${s}--skeleton`}),t.createElement("div",{className:`${s}--select ${s}--skeleton`},t.createElement("div",{className:`${s}--select-input`})))};Jn.propTypes={className:n.string,hideLabel:n.bool};const _t=Array.from({length:gt.length-1}).map((e,a)=>a+1),Xn=t.forwardRef(function(a,r){const{as:i="div",children:s,className:l,gap:u,orientation:d="vertical",...m}=a,c=Ee(),p=R(l,{[`${c}--stack-${d}`]:!0,[`${c}--stack-scale-${u}`]:typeof u=="number"}),w={};return typeof u=="string"&&(w[`--${c}-stack-gap`]=u),t.createElement(i,xe({},m,{ref:r,className:p,style:w}),s)});Xn.propTypes={as:n.elementType,children:n.node,className:n.string,gap:n.oneOfType([n.string,n.oneOf(_t)]),orientation:n.oneOf(["horizontal","vertical"])};const Et=t.forwardRef(function(a,r){return t.createElement(Xn,xe({},a,{ref:r,orientation:"vertical"}))}),Qn=t.forwardRef(function(a,r){let{children:i,className:s,disabled:l=!1,hideLabel:u,id:d,invalidText:m="Invalid time format.",invalid:c=!1,warningText:p="Warning message.",warning:w=!1,labelText:g,light:f=!1,maxLength:A=5,onChange:C=()=>{},onClick:v=()=>{},onBlur:b=()=>{},pattern:O="(1[012]|[1-9]):[0-5][0-9](\\s)?",placeholder:H="hh:mm",readOnly:T,size:_="md",type:$="text",value:j,...K}=a;const E=Ee(),[S,N]=t.useState(j),[M,F]=t.useState(j);j!==M&&(N(j),F(j));function te(W){l||(T||N(S),v(W))}function ae(W){!l&&!T&&(N(S),C(W))}function k(W){l||(T||N(S),b(W))}const q=R(`${E}--time-picker__input-field`,`${E}--text-input`,[s],{[`${E}--text-input--light`]:f,[`${E}--time-picker__input-field-error`]:c||w}),y=R({[`${E}--time-picker`]:!0,[`${E}--time-picker--light`]:f,[`${E}--time-picker--invalid`]:c,[`${E}--time-picker--warning`]:w,[`${E}--time-picker--readonly`]:T,[`${E}--time-picker--${_}`]:_,...s&&{[s]:!0}}),I=R(`${E}--label`,{[`${E}--visually-hidden`]:u,[`${E}--label--disabled`]:l}),L=g?t.createElement("label",{htmlFor:d,className:I},g):null;function P(){const W={onMouseDown:Y=>{T&&(Y.preventDefault(),Y.target.focus())},onKeyDown:Y=>{T&&["ArrowDown","ArrowUp"," "].includes(Y.key)&&Y.preventDefault()}};return t.Children.map(i,Y=>{const X=Y;if(X)return t.cloneElement(X,{...X.props,disabled:X.props.disabled??l,readOnly:T,...W})})}const V={readOnly:T};return t.createElement("div",{className:R(`${E}--form-item`,s)},L,t.createElement("div",{className:y},t.createElement("div",{className:`${E}--time-picker__input`},t.createElement("input",xe({className:q,"data-invalid":c||void 0,disabled:l,id:d,maxLength:A,onClick:te,onChange:ae,onBlur:k,placeholder:H,pattern:O,ref:r,type:$,value:j},K,V)),(c||w)&&t.createElement("div",{className:`${E}--time-picker__error__icon`},c?t.createElement(Ct,{className:`${E}--checkbox__invalid-icon`,size:16}):t.createElement(zn,{className:`${E}--text-input__invalid-icon--warning`,size:16}))),P()),(c||w)&&t.createElement("div",{className:`${E}--form-requirement`},c?m:p))});Qn.propTypes={children:n.node,className:n.string,disabled:n.bool,hideLabel:n.bool,id:n.string.isRequired,invalid:n.bool,invalidText:n.node,labelText:n.node,light:mt(n.bool),maxLength:n.number,onBlur:n.func,onChange:n.func,onClick:n.func,pattern:n.string,placeholder:n.string,readOnly:n.bool,size:n.oneOf(["sm","md","lg"]),type:n.string,value:n.string,warning:n.bool,warningText:n.node};const We=t.forwardRef(function(a,r){let{["aria-label"]:i="open list of options",children:s,id:l,disabled:u=!1,className:d,...m}=a;const c=Ee(),p=R({[`${c}--select`]:!0,[`${c}--time-picker__select`]:!0,...d&&{[d]:!0}});return t.createElement("div",{className:p},t.createElement("select",xe({"aria-label":i,className:`${c}--select-input`,disabled:u,id:l,ref:r},m),s),t.createElement(pt,{className:`${c}--select__arrow`,"aria-hidden":"true"}))});We.propTypes={children:n.node,className:n.string,defaultValue:n.any,disabled:n.bool,id:n.string.isRequired};const o=`${Bn.prefix}--condition-builder`,oe="Non-Hierarchical",z="Hierarchical",ke=(e,a)=>{e&&setTimeout(()=>{var r,i,s,l,u;Z((r=e.target.closest('[role="gridcell"]'))==null?void 0:r.querySelector("button"),a),(s=(i=e.target.closest('[role="gridcell"]'))==null?void 0:i.querySelector("button"))==null||s.click(),(u=(l=e.target.closest('[role="gridcell"]'))==null?void 0:l.querySelector("button"))==null||u.focus()},0)},re=(e,a)=>{setTimeout(()=>{Z(e,a)},0)},ze=(e,a,r,i,s,l)=>{e==document.activeElement?a!==r.length-1?re(r[a+1],l):re(r[i?0:r.length-1],l):Array.from(r).indexOf(document.activeElement)==-1&&s&&re(r[0],l)},Ke=(e,a,r,i,s,l)=>{e==document.activeElement?re(a!==0?r[a-1]:r[i?r.length-1:0],l):Array.from(r).indexOf(document.activeElement)==-1&&s&&re(r[r.length-1],l)},xt=(e,a)=>e[a],pe=e=>e&&e!=="INVALID",Z=(e,a)=>{var i,s;const r=(e==null?void 0:e.closest(`.${o}__content-container`))??(e==null?void 0:e.closest(`.${o}__actions-container`));r&&Array.from(r.querySelectorAll('[tabindex="0"]')).map(l=>l==null?void 0:l.setAttribute("tabindex","-1")),e==null||e.setAttribute("tabindex","0"),(s=(i=a.current)==null?void 0:i.querySelector(`.${o}__statement-button`))==null||s.setAttribute("tabindex","1"),e==null||e.focus()},Fe=e=>{const a=String(e.getDate()).padStart(2,"0"),r=String(e.getMonth()+1).padStart(2,"0"),i=e.getFullYear();return`${a}/${r}/${i}`},St={text:e=>e,textarea:e=>e,time:e=>e,number:e=>e,option:e=>e&&typeof e!="string"?(Array.isArray(e)?e:[e]).map(r=>r.label).join(", "):e,date:e=>{if(Array.isArray(e)&&e.length>1){const a=e!=null&&e[0]&&!isNaN(new Date(e[0]))?Fe(new Date(e[0])):"",r=e!=null&&e[1]&&!isNaN(new Date(e[1]))?Fe(new Date(e[1])):"";return`${a} To ${r}`}else return Array.isArray(e)&&!isNaN(new Date(e[0]))?Fe(new Date(e[0])):e},custom:e=>e},ne=({className:e,label:a,hideLabel:r,tooltipAlign:i,renderIcon:s,onClick:l,showToolTip:u,wrapperProps:d,onBlur:m,onFocus:c,onMouseEnter:p,onMouseLeave:w,isInvalid:g,wrapperClassName:f,tabIndex:A,...C})=>{const v=Ee(),b=()=>{const O=C["data-name"]??"";return t.createElement("button",{tabIndex:A!==void 0?A:-1,className:R([e,`${o}__button`,{[`${o}__text-ellipsis`]:u&&!r&&!g},{[`${o}__invalid-input`]:g}]),type:"button",onClick:l,onBlur:m,onFocus:c,onMouseEnter:p,onMouseLeave:w,"data-name":O,...C},s&&t.createElement(s,null),!r&&t.createElement("span",null,a),g&&t.createElement(zn,null))};return r||u?t.createElement(yt,{label:a,align:i,className:`${f} ${o}__tooltip ${v}--icon-tooltip`,...d,leaveDelayMs:0},b()):t.createElement(t.Fragment,null,b())};ne.propTypes={className:n.string,hideLabel:n.bool,isInvalid:n.bool,label:n.string,onBlur:n.func,onClick:n.func,onFocus:n.func,onMouseEnter:n.func,onMouseLeave:n.func,renderIcon:n.oneOfType([n.func,n.object]),showToolTip:n.bool,tabIndex:n.number,tooltipAlign:n.string,wrapperClassName:n.string,wrapperProps:n.object};ne.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderButton",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},label:{required:!1,tsType:{name:"string"},description:"label of the button",type:{name:"string"}},hideLabel:{required:!1,tsType:{name:"boolean"},description:"decides if label and tooltip to be hidden",type:{name:"bool"}},tooltipAlign:{required:!1,tsType:{name:"PopoverAlignment"},description:"tooltip position",type:{name:"string"}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:"Optional prop to allow overriding the icon rendering.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"callback triggered on click of add button",type:{name:"func"}},onBlur:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:"mouse events callbacks",type:{name:"func"}},onFocus:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:"",type:{name:"func"}},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"",type:{name:"func"}},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"",type:{name:"func"}},showToolTip:{required:!1,tsType:{name:"boolean"},description:"decides if  tooltip to be shown",type:{name:"bool"}},wrapperProps:{required:!1,tsType:{name:"object"},description:"optional props for tree grid to add role and aria-label to wrapper span",type:{name:"object"}},isInvalid:{required:!1,tsType:{name:"boolean"},description:"boolean to know the updated value in not valid",type:{name:"bool"}},wrapperClassName:{required:!1,tsType:{name:"string"},description:"classname applies to the wrapper of popover",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index",type:{name:"number"}}}};const Nt={operator:"or",groups:[{groupOperator:"and",statement:"ifAll",id:x(),conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:x()}]}]},J=h.createContext({rootState:{groups:[]}}),Ue=e=>{const[a,r]=h.useState({groups:[]}),[i,s]=h.useState([]),l={rootState:a,setRootState:r,actionState:i,setActionState:s,inputConfig:e.inputConfig,popOverSearchThreshold:e.popOverSearchThreshold,getOptions:e.getOptions,variant:e.variant,translateWithId:e.translateWithId,conditionBuilderRef:e.conditionBuilderRef,statementConfigCustom:e.statementConfigCustom};return t.createElement(J.Provider,{value:l},e.children)};Ue.propTypes={children:n.node.isRequired,conditionBuilderRef:n.object,getOptions:n.func,inputConfig:n.shape({properties:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object]),type:n.oneOf(["text","textarea","number","date","option","time","custom"]).isRequired,config:n.shape({options:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object])})),component:n.func,operators:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired})),long:n.bool})}))}).isRequired,popOverSearchThreshold:n.number.isRequired,translateWithId:n.func,variant:n.string.isRequired};Ue.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderProvider",props:{rootState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},description:""},setRootState:{required:!1,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}}],raw:"SetStateAction<ConditionBuilderState>"}],raw:"Dispatch<SetStateAction<ConditionBuilderState>>"},description:""},actionState:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:""},setActionState:{required:!1,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"}],raw:"SetStateAction<Action[]>"}],raw:"Dispatch<SetStateAction<Action[]>>"},description:""},children:{required:!0,tsType:{name:"ReactNode"},description:"Provide the contents of the ConditionBuilder.",type:{name:"node"}},inputConfig:{required:!0,tsType:{name:"signature",type:"object",raw:`{
  properties: Property[];
}`,signature:{properties:[{key:"properties",value:{name:"Array",elements:[{name:"intersection",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
} & (
  | PropertyConfig['option']
  | PropertyConfig['text']
  | PropertyConfig['number']
  | PropertyConfig['date']
  | PropertyConfig['textarea']
  | PropertyConfig['time']
  | PropertyConfig['custom']
)`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}},{name:"unknown"}]}],raw:"Property[]",required:!0}}]}},description:"This is a mandatory prop that defines the input to the condition builder.",type:{name:"shape",value:{properties:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'textarea'",computed:!1},{value:"'number'",computed:!1},{value:"'date'",computed:!1},{value:"'option'",computed:!1},{value:"'time'",computed:!1},{value:"'custom'",computed:!1}],required:!0},config:{name:"shape",value:{options:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1}}},required:!1},component:{name:"func",required:!1},operators:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0}}},required:!1},long:{name:"bool",required:!1}},required:!1}}},required:!1}}}},popOverSearchThreshold:{required:!0,tsType:{name:"number"},description:"Provide an mandatory numeric value that will be used to enable search option in the popovers with list.",type:{name:"number"}},getOptions:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  state: ConditionBuilderState,
  condition: Condition
) => Promise<Option[]>`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"},{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"}],raw:"Promise<Option[]>"}}},description:`This is an optional callback function that will be triggered when options array is not passed in the inputConfig against a property. 
This can be a asynchronous function that need  to  return a promise, so it will allow to fetch options from API call.
options has to be in valid format
[{
          label: 'label',
          id: 'id',
        },...]`,type:{name:"func"}},variant:{required:!0,tsType:{name:"string"},description:"Provide the condition builder variant: Non-Hierarchical/ Hierarchical",type:{name:"string"}},translateWithId:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: string) => string",signature:{arguments:[{type:{name:"string"},name:"id"}],return:{name:"string"}}},description:`Optional prop if you want to pass translation to the texts used . Otherwise this will the defined defaults.
This callback function will receive the message id and you need to return the corresponding text for that id.
The message key will be one of [   "ifText",   "addConditionText",   "addConditionGroupText",   "addSubgroupText",   "conditionText",   "propertyText",   "operatorText",   "valueText",   "connectorText",   "conditionRowText",   "removeConditionText",   "addConditionRowText",   "startText",   "endText",   "clearSearchText",   "actionsText",   "then",   "removeActionText",   "addActionText",   "invalidText",   "invalidNumberWarnText"
]`,type:{name:"func"}},statementConfigCustom:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  connector: 'and' | 'or';
  label: string;
  secondaryLabel?: string;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}],raw:"statementConfig[]"},description:""},conditionBuilderRef:{required:!1,tsType:{name:"ForwardedRef",elements:[{name:"HTMLDivElement"}],raw:"ForwardedRef<HTMLDivElement>"},description:"ref of condition builder",type:{name:"object"}}},composes:["PropsWithChildren"]};const ge={ifText:"if",unlessText:"unless",excl_if:"excl.if",and:"and",or:"or",is:"is",ifAll:"if all",ifAny:"if any",unlessAll:"unless all",unlessAny:"unless any",greater:"is greater than",greaterEqual:"is greater than or equal to",lower:"is lower than",lowerEqual:"is lower than or equal to",startsWith:"starts with",endsWith:"ends with",contains:"contains",oneOf:"is one of",before:"is before",after:"is after",between:"is between",addConditionText:"Add condition",addConditionGroupText:"Add condition group",addSubgroupText:"Add subgroup",conditionText:"Condition",propertyText:"Property",operatorText:"Operator",valueText:"Value",connectorText:"Connector",conditionRowText:"Condition row",conditionRowGroupText:"Condition row group",removeConditionText:"Delete condition",addConditionRowText:"Add condition row",startText:"Start",endText:"End",clearSearchText:"Clear search input",actionsText:"Actions",then:"then",removeActionText:"Remove Action",addActionText:"Add action",invalidText:"Incomplete",invalidNumberWarnText:"Invalid number, must be 0 or greater",conditionBuilderText:"Condition Builder",actionSectionText:"Action Section",conditionHeadingText:"Condition",addPropertyText:"Add property",addOperatorText:"Add operator",addValueText:"Add value",conditionBuilderHierarchicalText:"Condition Builder Hierarchical"},U=(e,a)=>{const{translateWithId:r}=h.useContext(J);return e.map(i=>(a!=null&&a[i]&&(i=a[i]),r!=null&&r(i)?r(i):ge[i]?ge[i]:i))},It=(e,a,r)=>{var s;(s=document.activeElement.closest(`.${o}__popover`))!=null&&s.querySelector('[role="dialog"]')||$t(e,a,r)},Pt=(e,a,r)=>{Lt(e)||jt(e,r==null?void 0:r.current,a)},Lt=e=>!["Escape"].includes(e.key)&&(e.target.closest(`.${o}__item-date`)||e.target.closest(`.${o}__item-time`)),jt=(e,a,r)=>{var m,c,p,w,g,f;const i=e.key,s=xt(e,"shiftKey"),l=(m=a.querySelector("ul"))==null?void 0:m.dataset.multiSelect,u=(c=a.querySelectorAll('[role="option"]'))==null?void 0:c.length;let d=[];if(i==="Escape"&&(ke(e,r),e.preventDefault()),u)switch(i){case"ArrowUp":e.preventDefault(),a.querySelectorAll('[role="option"]').forEach((A,C,v)=>{Ke(A,C,v,null,null,r)}),Array.from(((p=e.target.closest("ul"))==null?void 0:p.querySelectorAll("li"))??[]).indexOf(e.target)===1&&(a.querySelector(`.${o}__popover-content-wrapper`).scrollTop=0);break;case"ArrowDown":e.preventDefault(),a.querySelectorAll('[role="option"]').forEach((A,C,v)=>{ze(A,C,v,null,null,r)});break;case"Tab":d=[...Array.from(a.querySelectorAll(`.${o}__selectAll-button,[role="searchbox"]`)),a.querySelector('[role="option"]')],d.forEach((A,C,v)=>{s?Ke(A,C,v,!0,!0,r):ze(A,C,v,!0,!0,r)}),e.preventDefault();break;case" ":l==="true"&&(document.activeElement.type!=="button"&&((w=document.activeElement)==null||w.click()),e.preventDefault());break;case"Enter":l==="true"?document.activeElement.type!=="button"&&(e.preventDefault(),(g=document.activeElement)==null||g.click()):document.activeElement.type!=="button"&&(ke(e,r),(f=document.activeElement)==null||f.click());break}},$t=(e,a,r)=>{var i,s,l,u,d,m;switch(e.key){case"ArrowRight":if(e.preventDefault(),r==z){let c=Array.from((i=e.target.closest('[role="row"]'))==null?void 0:i.querySelectorAll('[role="gridcell"] button'));if(c.length===1)e.target=e.target.closest('[role="row"]'),rn(e,a,r);else if(e.target.getAttribute("role")=="row")Z(c[0],a);else{let p=c.indexOf(e.target);p<c.length-1&&re(c[p+1],a)}}else on(e,a);break;case"ArrowLeft":if(e.preventDefault(),r==z){if(e.target.getAttribute("role")!=="row"){let c=Array.from((s=e.target.closest('[role="row"]'))==null?void 0:s.querySelectorAll('[role="gridcell"] button')),p=c.indexOf(e.target);if(p>0)re(c[p-1],a);else{let w=e.target.closest('[role="row"]');Z(w,a)}}}else on(e,a);break;case"ArrowUp":case"ArrowDown":e.preventDefault(),r==z?rn(e,a,r):Dt(e,a,r);break;case"Enter":((u=(l=document.activeElement)==null?void 0:l.querySelectorAll("button"))==null?void 0:u.length)===1&&((m=(d=document.activeElement)==null?void 0:d.querySelectorAll("button")[0])==null||m.click());break}},Ze=e=>{var a;return Array.from((a=e.current)==null?void 0:a.querySelectorAll('[role="row"]'))},et=(e,a)=>Ze(a).findIndex(i=>i.contains(e)),Dt=(e,a,r)=>{const i=Ze(a),s=et(e.target,a);nt(e,s,i,r,a)},rn=(e,a,r)=>{const i=Ze(a),s=et(e.target,a);let l=s;e.target.getAttribute("role")=="row"?(["ArrowDown","ArrowRight"].includes(e.key)?l+=1:e.key==="ArrowUp"&&(l-=1),l<0?l=0:l>=i.length&&(l=i.length-1),l!==s&&Z(i[l],a)):nt(e,s,i,r,a)},nt=(e,a,r,i,s)=>{let l=a;e.key==="ArrowUp"&&(l=a==0?a:a-1),e.key==="ArrowDown"&&(l=a===r.length-1?r.length-1:a+1);const u=r[l],d=e.target.dataset.name;u!=null&&u.querySelector(`[data-name="${d}"]`)?Z(u==null?void 0:u.querySelector(`[data-name="${d}"]`),s):i===z&&Z(u,s)},on=(e,a)=>{a.current.querySelectorAll('[role="gridcell"] button').forEach((r,i,s)=>{e.key==="ArrowRight"?ze(r,i,s,null,null,a):Ke(r,i,s,null,null,a)})},G=({children:e,className:a,label:r,renderIcon:i,title:s,type:l,showToolTip:u,condition:d,popOverClassName:m,config:c,renderChildren:p,onChange:w,...g})=>{const f=h.useRef(null),[A,C]=h.useState(!1),{conditionBuilderRef:v,statementConfigCustom:b}=h.useContext(J),O={ifAll:ge.ifText,ifAny:ge.ifText,unlessAll:ge.unlessText,unlessAny:ge.unlessText};b==null||b.forEach(y=>{O[y.id]=y.label});const[H,T,_,$,j,K]=U(["invalidText","addConditionText","addPropertyText","addOperatorText","addValueText",r],O),E=()=>{const{property:y,operator:I}=d||{};return r==="INVALID"||g["data-name"]==="propertyField"&&y==="INVALID"||g["data-name"]==="operatorField"&&I==="INVALID"?{propertyLabel:H,isInvalid:!0}:{isInvalid:!1,propertyLabel:g["data-name"]=="valueField"&&l?St[l](r,c):K}},{propertyLabel:S,isInvalid:N}=E();h.useEffect(()=>{if(d){const y=g["data-name"];(d.popoverToOpen&&y!==d.popoverToOpen||y=="valueField"&&l=="option"&&(d==null?void 0:d.operator)!=="oneOf")&&F(),d.popoverToOpen==y&&te()}else F()},[d,r]),h.useEffect(()=>{var y;if(A&&f.current){const I=(y=f==null?void 0:f.current)==null?void 0:y.querySelector("input,textarea");I&&setTimeout(()=>I.focus(),0)}},[f,A]);const M=()=>{(g["data-name"]==="propertyField"&&!(d!=null&&d.property)||g["data-name"]==="operatorField"&&!(d!=null&&d.operator)||g["data-name"]==="valueField"&&!(d!=null&&d.value))&&(w==null||w("INVALID"))},F=()=>{A&&M(),C(!1)},te=()=>C(!0),ae=()=>{(e||p)&&C(!A)},k=y=>{Pt(y,v,f),y.key==="Escape"&&M()},q=()=>S||(g["data-name"]==="propertyField"?_:g["data-name"]==="operatorField"?$:g["data-name"]==="valueField"?j:T);return t.createElement(ht,{open:A,isTabTip:!0,role:"gridcell",className:`${m} ${o}__popover`,ref:f,onRequestClose:F},t.createElement(ne,{label:q(),hideLabel:!r,onClick:ae,className:a,"aria-haspopup":!0,"aria-expanded":A,renderIcon:i||(r==null?Kn:void 0),showToolTip:u,isInvalid:N,...g}),A&&t.createElement(wt,{className:`${o}__popover-content-wrapper`,role:"dialog","aria-label":s,onKeyDown:k},t.createElement(bt,null,t.createElement("h1",{className:`${o}__item__title`},s),t.createElement("div",{className:`${o}__popover-content`},p?p(f):e))))};G.propTypes={children:n.node,className:n.string,condition:n.object,config:n.object,label:n.oneOfType([n.string,n.array,n.object]),onChange:n.func,popOverClassName:n.string,renderChildren:n.func,renderIcon:n.oneOfType([n.func,n.object]),showToolTip:n.bool,title:n.string,type:n.string};G.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItem",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},label:{required:!1,tsType:{name:"union",raw:"string | Option | Option[]",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"}]},description:"text to be displayed in the field",type:{name:"union",value:[{name:"string"},{name:"array"},{name:"object"}]}},renderIcon:{required:!1,tsType:{name:"CarbonIconType"},description:"Optional prop to allow overriding the icon rendering.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},title:{required:!1,tsType:{name:"string"},description:"title of the popover",type:{name:"string"}},showToolTip:{required:!1,tsType:{name:"boolean"},description:"show tool tip",type:{name:"bool"}},popOverClassName:{required:!1,tsType:{name:"string"},description:"class name for popover",type:{name:"string"}},type:{required:!1,tsType:{name:"string"},description:"input type",type:{name:"string"}},condition:{required:!1,tsType:{name:"intersection",raw:"Action & Condition",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}}]},description:"current condition state object",type:{name:"object"}},config:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  option: PropertyConfigOption;
  text: PropertyConfigText;
  textarea: PropertyConfigTextArea;
  number: PropertyConfigNumber;
  date: PropertyConfigDate;
  time: PropertyConfigTime;
  custom: PropertyConfigCustom;
}`,signature:{properties:[{key:"option",value:{name:"signature",type:"object",raw:`{
  type: 'option';
  config?: {
    options?: option[];
  };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:"'option'",required:!0}},{key:"config",value:{name:"signature",type:"object",raw:`{
  options?: option[];
}`,signature:{properties:[{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"option[]",required:!1}}]},required:!1}}]},required:!0}},{key:"text",value:{name:"PropertyConfigText",required:!0}},{key:"textarea",value:{name:"PropertyConfigTextArea",required:!0}},{key:"number",value:{name:"PropertyConfigNumber",required:!0}},{key:"date",value:{name:"signature",type:"object",raw:`{
  type: 'date';
  config: object;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:"'date'",required:!0}},{key:"config",value:{name:"object",required:!0}}]},required:!0}},{key:"time",value:{name:"signature",type:"object",raw:`{
  type: 'time';
  config: {
    timeZones: string[];
  };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:"'time'",required:!0}},{key:"config",value:{name:"signature",type:"object",raw:`{
  timeZones: string[];
}`,signature:{properties:[{key:"timeZones",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}}]},required:!0}}]},required:!0}},{key:"custom",value:{name:"signature",type:"object",raw:`{
  type: 'custom';
  config: {
    component: React.ComponentType<any>;
    operators: {
      label: string;
      id: string;
    }[];
  };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:"'custom'",required:!0}},{key:"config",value:{name:"signature",type:"object",raw:`{
  component: React.ComponentType<any>;
  operators: {
    label: string;
    id: string;
  }[];
}`,signature:{properties:[{key:"component",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0}},{key:"operators",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  label: string;
  id: string;
}`,signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}}]}}],raw:`{
  label: string;
  id: string;
}[]`,required:!0}}]},required:!0}}]},required:!0}}]}},description:"this is the config object again the current property from inputConfig",type:{name:"object"}},renderChildren:{required:!1,tsType:{name:"signature",type:"function",raw:"(ref: RefObject<HTMLDivElement>) => ReactNode",signature:{arguments:[{type:{name:"RefObject",elements:[{name:"HTMLDivElement"}],raw:"RefObject<HTMLDivElement>"},name:"ref"}],return:{name:"ReactNode"}}},description:"callback prop that returns the jsx for children",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(val: string) => void",signature:{arguments:[{type:{name:"string"},name:"val"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},tabIndex:{required:!1,tsType:{name:"number"},description:""},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},onFocus:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},onBlur:{required:!1,tsType:{name:"ReactFocusEventHandler",raw:"React.FocusEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},children:{description:"provide the contents of the popover",type:{name:"node"},required:!1}},composes:["PropsWithChildren"]};const ie=({conditionState:e={},config:a={},onChange:r})=>{const{popOverSearchThreshold:i}=h.useContext(J),s=h.useRef(null),[l,u]=U(["propertyText","clearSearchText"]),d=a.options,[m,c]=h.useState(""),p=e.value,w=m?d==null?void 0:d.filter(v=>{var b;return(b=v.label)==null?void 0:b.toLowerCase().includes(m.toLowerCase())}):d;h.useEffect(()=>{var v;if(s.current){const b=(v=s.current)==null?void 0:v.querySelector("input, button,li");b&&b.focus()}},[d]);const g=(v,b)=>{r(b.id,v)},f=v=>{const{value:b}=v.target;c(b)},A=()=>e.label?e.label:l,C=v=>t.createElement("div",{className:`${o}__statement_wrapper`},t.createElement("div",null,v.label," (",v.connector,")"),t.createElement("div",null,v.secondaryLabel));if(d)return t.createElement("div",{className:`${o}__item-option`,ref:s},i&&d.length>i&&t.createElement("div",{className:`${o}__item-option__search`},t.createElement(Un,{size:"sm",labelText:u,closeButtonLabelText:u,onChange:f})),t.createElement("ul",{"aria-label":A(),role:"listbox"},w==null?void 0:w.map(v=>{const b=p===v.id,O=v.icon;return t.createElement("li",{tabIndex:0,key:v.id,role:"option","aria-selected":b,className:`${o}__item-option__option`,onKeyUp:()=>!1,onClick:H=>g(H,v)},t.createElement("div",{className:`${o}__item-option__option-content`},t.createElement("span",{className:`${o}__item-option__option-label`},O&&t.createElement(O,null),a.isStatement?C(v):v.label),b&&t.createElement(Zn,{className:`${o}__checkmark`})))})))};ie.propTypes={conditionState:n.object,config:n.object,onChange:n.func};ie.__docgenInfo={description:"",methods:[],displayName:"ItemOption",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  label?: string;
  value?: string;
}`,signature:{properties:[{key:"label",value:{name:"string",required:!1}},{key:"value",value:{name:"string",required:!1}}]}},description:"current condition object",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},config:{required:!1,tsType:{name:"intersection",raw:`{ options?: option[] | statementConfig[] } & {
  isStatement?: boolean;
}`,elements:[{name:"signature",type:"object",raw:"{ options?: option[] | statementConfig[] }",signature:{properties:[{key:"options",value:{name:"union",raw:"option[] | statementConfig[]",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"option[]"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  connector: 'and' | 'or';
  label: string;
  secondaryLabel?: string;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}],raw:"statementConfig[]"}],required:!1}}]}},{name:"signature",type:"object",raw:`{
  isStatement?: boolean;
}`,signature:{properties:[{key:"isStatement",value:{name:"boolean",required:!1}}]}}]},description:"current config object that this property is part of",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string, e: Event) => void",signature:{arguments:[{type:{name:"string"},name:"value"},{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const Be=()=>{const[e,a,r,i,s,l,u,d,m,c,p,w,g,f,A,C,v,b]=U(["ifAll","ifAny","unlessAll","unlessAny","and","or","is","greater","greaterEqual","lower","lowerEqual","startsWith","endsWith","contains","oneOf","before","after","between"]),{statementConfigCustom:O}=h.useContext(J);return{statementConfig:O??[{id:"ifAll",connector:"and",label:e,secondaryLabel:"(a && b)"},{id:"ifAny",connector:"or",label:a,secondaryLabel:"(a || b)"},{id:"unlessAll",connector:"and",label:r,secondaryLabel:"! (a && b)"},{id:"unlessAny",connector:"or",label:i,secondaryLabel:"! (a || b)"}],connectorConfig:[{label:s,id:"and"},{label:l,id:"or"}],operatorConfig:[{label:u,id:"is",type:"all"},{label:d,id:"greater",type:"number"},{label:m,id:"greaterEqual",type:"number"},{label:c,id:"lower",type:"number"},{label:p,id:"lowerEqual",type:"number"},{label:w,id:"startsWith",type:"text,textarea"},{label:g,id:"endsWith",type:"text,textarea"},{label:f,id:"contains",type:"text,textarea"},{label:A,id:"oneOf",type:"option"},{label:C,id:"before",type:"date,time"},{label:v,id:"after",type:"date,time"},{label:b,id:"between",type:"date"}]}},Se=({operator:e,className:a,onChange:r,...i})=>{const{variant:s,conditionBuilderRef:l}=h.useContext(J),[u]=U(["connectorText"]),{connectorConfig:d}=Be(),m=h.useCallback((g,f)=>{f?g.classList.add("hoveredConnector"):g.classList.remove("hoveredConnector")},[]),c=g=>{const f=g==null?void 0:g.currentTarget.closest(".eachGroup");m(f,!0)},p=g=>{const f=g==null?void 0:g.currentTarget.closest(".eachGroup");m(f,!1)},w=(g,f)=>{r==null||r(g),ke(f,l)};return s==z?t.createElement("span",{className:`${a} ${o}__connector--disabled`},t.createElement(ne,{label:e})):t.createElement(G,{label:e,title:u,"data-name":"connectorField",onMouseEnter:c,onMouseLeave:p,onFocus:c,onBlur:p,...i,popOverClassName:a,className:`${o}__connector-button`},t.createElement(ie,{config:{options:d},conditionState:{value:e,label:u},onChange:w}))};Se.propTypes={className:n.string,onChange:n.func,operator:n.string};Se.__docgenInfo={description:"",methods:[],displayName:"ConditionConnector",props:{operator:{required:!1,tsType:{name:"string"},description:"string that defines the connector operator (and/or)",type:{name:"string"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(op: string) => void",signature:{arguments:[{type:{name:"string"},name:"op"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}}}};const Ye=({conditionState:e,config:a,onChange:r})=>{var d;const[i]=U(["invalidNumberWarnText"]),s=(m,{value:c})=>{c!==""&&!isNaN(c)&&l(c)?r(`${c} ${a.unit??""}`):r("INVALID")},l=m=>!(a.max!==void 0&&a.min===void 0&&m>a.max||a.min!==void 0&&a.max===void 0&&m<a.min||a.max!==void 0&&a.min!==void 0&&(m>a.max||m<a.min)),u=()=>{var m,c;return((c=(m=e.value)==null?void 0:m.split(" "))==null?void 0:c[0])??""};return t.createElement("div",{className:`${o}__item-number`},t.createElement(kt,{...a,label:e.property,hideLabel:!0,id:(d=e.property)==null?void 0:d.replace(/\s/g,""),invalidText:i,allowEmpty:!0,onChange:s,defaultValue:u()}))};Ye.propTypes={conditionState:n.object,config:n.object,onChange:n.func};Ye.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemNumber",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"current condition object",type:{name:"object"}},config:{required:!1,tsType:{name:"PropertyConfigNumber['config']",raw:"PropertyConfigNumber['config']"},description:"current config object that this property is part of",type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const $e=({conditionState:e,onChange:a,config:r,type:i})=>{var l;const s={...r,hideLabel:!0,value:pe(e.value)?e.value:"",id:(l=e.property)==null?void 0:l.replace(/\s/g,""),onChange:u=>{a(u.target.value)},labelText:e.property};return t.createElement("div",{className:`${o}__item-text`},i=="textarea"?t.createElement(Ot,{...s}):t.createElement(jn,{...s}))};$e.propTypes={conditionState:n.object,config:n.object,onChange:n.func,type:n.string};$e.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemText",props:{conditionState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"current condition object",type:{name:"object"}},config:{required:!1,tsType:{name:"union",raw:"PropertyConfigText | PropertyConfigTextArea",elements:[{name:"PropertyConfigText"},{name:"PropertyConfigTextArea"}]},description:"config of the current property",type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}},type:{required:!1,tsType:{name:"union",raw:"'textarea' | 'text'",elements:[{name:"literal",value:"'textarea'"},{name:"literal",value:"'text'"}]},description:"current input type",type:{name:"string"}}}};const Je=({conditionState:e,onChange:a,parentRef:r})=>{const i=h.useRef(null),[s,l]=U(["startText","endText"]),u=e.operator=="between"?"range":"single",d=m=>{a(m&&m.length>0?m:"INVALID")};return t.createElement("div",{className:`${o}__item-date `},u=="single"&&t.createElement(an,{ref:i,dateFormat:"d/m/Y",datePickerType:"single",value:e.value,onClose:d,appendTo:r==null?void 0:r.current},t.createElement(Me,{id:"datePicker",placeholder:"dd/mm/yyyy",labelText:e.property})),u=="range"&&t.createElement(an,{ref:i,dateFormat:"d/m/Y",datePickerType:u,onClose:d,value:e.value,appendTo:r==null?void 0:r.current},t.createElement(Me,{id:"datePickerStart",placeholder:"dd/mm/yyyy",labelText:s}),t.createElement(Me,{id:"datePickerEnd",placeholder:"dd/mm/yyyy",labelText:l})))};Je.propTypes={conditionState:n.object,onChange:n.func,parentRef:n.object};Je.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemDate",props:{conditionState:{description:"current condition object",type:{name:"object"},required:!1},onChange:{description:"callback to update state oin date change",type:{name:"func"},required:!1},parentRef:{description:"reference to the popover node",type:{name:"object"},required:!1}}};const Xe=({onChange:e,config:a})=>{var w,g;const[r,i]=h.useState(""),[s,l]=h.useState("AM"),[u,d]=h.useState((w=a==null?void 0:a.timeZones)==null?void 0:w[0]);h.useEffect(()=>{const f=`${r??""} ${s??""} ${u??""}`;e(r?f:void 0)},[r,s,u]);const m=f=>{d(f.target.value)},c=f=>{l(f.target.value)},p=f=>{i(f.target.value)};return t.createElement("div",{className:`${o}__item-time`},t.createElement(Qn,{id:"time-picker",labelText:"Select a time",onChange:p},t.createElement(We,{id:"time-picker-day-zone",onChange:c},t.createElement(Re,{value:"AM",text:"AM"}),t.createElement(Re,{value:"PM",text:"PM"})),t.createElement(We,{id:"time-picker-time-zone",onChange:m},(g=a==null?void 0:a.timeZones)==null?void 0:g.map((f,A)=>t.createElement(Re,{key:A,value:f,text:f})))))};Xe.propTypes={config:n.object,onChange:n.func};Xe.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderItemTime",props:{config:{description:"current config object that this property is part of",type:{name:"object"},required:!1},onChange:{description:"callback to update state oin date change",type:{name:"func"},required:!1}}};const Oe=({className:e,onClick:a,addConditionSubGroupHandler:r,showConditionSubGroupPreviewHandler:i,hideConditionSubGroupPreviewHandler:s,showConditionPreviewHandler:l,hideConditionPreviewHandler:u,enableSubGroup:d,buttonLabel:m,tabIndex:c})=>{const[p,w,g]=U(["addConditionText","addConditionRowText","addSubgroupText"]),f=()=>{u==null||u(),a()},A=()=>d?{onMouseEnter:l,onMouseLeave:u,onFocus:l,onBlur:u}:{},C=()=>({onMouseEnter:i,onMouseLeave:s,onFocus:i,onBlur:s}),v=()=>m||(d?void 0:w),b=d?{role:"gridcell"}:{};return t.createElement("div",{className:`${e} ${o}__add-button-wrapper`,role:d?"none":"gridcell","aria-label":v()},t.createElement(ne,{renderIcon:Tt,onClick:f,...A(),wrapperProps:b,className:`${o}__add-button`,hideLabel:!0,"data-name":"addButton",label:m??p,tabIndex:c,wrapperClassName:`${o}__add-condition-wrapper`}),d&&t.createElement(ne,{renderIcon:Yn,onClick:r,className:R(`${o}__add-condition-sub-group`),hideLabel:!0,label:g,wrapperProps:b,wrapperClassName:`${o}__add-condition-sub-group-wrapper ${o}__gap-left`,...C()}))};Oe.propTypes={addConditionSubGroupHandler:n.func,buttonLabel:n.string,className:n.string,enableSubGroup:n.bool,hideConditionPreviewHandler:n.func,hideConditionSubGroupPreviewHandler:n.func,onClick:n.func,showConditionPreviewHandler:n.func,showConditionSubGroupPreviewHandler:n.func,tabIndex:n.number};Oe.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderAdd",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"callback triggered on click of add button",type:{name:"func"}},addConditionSubGroupHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},hideConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},showConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",type:{name:"func"}},hideConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},enableSubGroup:{required:!1,tsType:{name:"boolean"},description:"boolean to enable sub groups for the tree variant",type:{name:"bool"}},buttonLabel:{required:!1,tsType:{name:"string"},description:"tooltip label for plus button",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index",type:{name:"number"}}}};const He=({conditionState:e={},config:a={},onChange:r})=>{const i=e.operator==="oneOf",{popOverSearchThreshold:s,getOptions:l,rootState:u}=h.useContext(J),[d,m]=U(["propertyText","clearSearchText"]),c=h.useRef(null),[p,w]=h.useState(a.options),[g,f]=h.useState(""),A=p==null?void 0:p.filter(T=>T.label.toLowerCase().includes(g.toLowerCase())),C=Array.isArray(e.value)?e.value:e.value!==void 0?[e.value]:[];h.useEffect(()=>{!p&&l&&(async()=>{const _=await l(u,e);(_==null?void 0:_.length)>0&&Object.keys(_[0]).includes("label")&&Object.keys(_[0]).includes("id")&&w(_)})()},[]),h.useEffect(()=>{if(c.current){const T=c.current.querySelector("input, button,li");T&&(T==null||T.focus())}},[p]);const v=T=>{T.currentTarget.dataset.selectedAll=="false"?r(void 0):r(p)},b=T=>{const{value:_}=T.target;f(_)},O=(T,_,$)=>{const j=C.filter(K=>K!=="INVALID");if(i)if($){const K=j.filter(E=>E.id!==_.id);r(K.length>0?K:void 0)}else r([...j,_]);else r(_,T);T.target instanceof SVGElement&&T.stopPropagation()},H=()=>e.label?e.label:e.property?e.property:d;return p?t.createElement("div",{className:`${o}__item-option`,ref:c},s&&p.length>s&&t.createElement("div",{className:`${o}__item-option__search`},t.createElement(Un,{size:"sm",labelText:m,closeButtonLabelText:m,onChange:b})),i&&t.createElement("div",{className:`${o}__multiselectSelectionStatusContainer`},t.createElement("h4",null,t.createElement("label",null,C.length,"/",p.length," Selected")),t.createElement(Hn,{kind:"ghost",size:"sm","data-selected-all":`${C.length==0}`,onClick:v,className:`${o}__selectAll-button`},C.length==0?"Select all":"Deselect all")),t.createElement("ul",{"aria-label":H(),role:"listbox","data-multi-select":i},A==null?void 0:A.map(T=>{const _=C.map(j=>j.id).includes(T.id),$=T.icon;return t.createElement("li",{tabIndex:0,key:T.id,role:"option","aria-selected":_,className:`${o}__item-option__option`,onKeyUp:()=>!1,onClick:j=>O(j,T,_)},t.createElement("div",{className:`${o}__item-option__option-content`},i?t.createElement(t.Fragment,null,t.createElement("span",{className:`${o}__option-check-box`},_?t.createElement(qt,null):t.createElement(At,null)),t.createElement("span",{className:`${o}__item-option__option-label`},T.label),$&&t.createElement("span",{className:`${o}__option-icon`},t.createElement($,null))):t.createElement(t.Fragment,null,t.createElement("span",{className:`${o}__item-option__option-label`},$&&t.createElement($,null),T.label),_&&t.createElement(Zn,{className:`${o}__checkmark`}))))}))):t.createElement(Jn,null)};He.propTypes={conditionState:n.object,config:n.object,onChange:n.func};He.__docgenInfo={description:"",methods:[],displayName:"ItemOptionForValueField",props:{conditionState:{required:!1,tsType:{name:"intersection",raw:"Condition & { label?: string }",elements:[{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{ label?: string }",signature:{properties:[{key:"label",value:{name:"string",required:!1}}]}}]},description:"current condition object",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},config:{required:!1,tsType:{name:"signature",raw:"PropertyConfigOption['config']"},description:"current config object that this property is part of",defaultValue:{value:"{}",computed:!1},type:{name:"object"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: any, e?: Event) => void",signature:{arguments:[{type:{name:"any"},name:"value"},{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"callback to update state oin date change",type:{name:"func"}}}};const De=e=>{const{onRemove:a,onChange:r,condition:i={},conjunction:s,onConnectorOperatorChange:l,isStatement:u,group:d,onStatementChange:m,conditionIndex:c,addConditionHandler:p,addConditionSubGroupHandler:w,aria:g,hideConditionSubGroupPreviewHandler:f,showConditionSubGroupPreviewHandler:A,hideConditionPreviewHandler:C,showConditionPreviewHandler:v,isLastCondition:b}=e,{property:O,value:H,operator:T}=i,{inputConfig:_,variant:$,conditionBuilderRef:j}=h.useContext(J),[K,E]=h.useState(!1),[S,N]=h.useState(!1),[M,F,te,ae,k]=U(["conditionRowText","conditionText","propertyText","operatorText","removeConditionText"]),{statementConfig:q,operatorConfig:y}=Be(),I=D=>{var ee;return((ee=_==null?void 0:_.properties)==null?void 0:ee.find(st=>st.id==D))??{}},{icon:L,type:P,config:V,label:W}=I(O),Y={text:$e,number:Ye,date:Je,time:Xe,option:He,custom:V==null?void 0:V.component,textarea:$e}[P],X=()=>{N(!0)},Te=()=>{N(!1)},Ie=(D,ee)=>{ke(ee,j),m==null||m(D)},qe=D=>{r({...i,property:D,operator:void 0,value:"",popoverToOpen:pe(D)?"operatorField":""})},Q=D=>{r({...i,operator:D,value:void 0,popoverToOpen:pe(D)?"valueField":""})},ce=D=>{const ee={...i};delete ee.popoverToOpen,r({...ee,value:D})},Ae=()=>{E(!0)},me=()=>{E(!1)},Pe=(D,ee)=>$===z?!0:b(D,ee),it=()=>V!=null&&V.operators?V.operators:y.filter(D=>D.type.indexOf(P)!=-1||D.type=="all"),ot=()=>$==z?{"aria-level":g.level,"aria-posinset":g.posinset,"aria-setsize":g.setsize}:{},lt=D=>t.createElement(Y,{conditionState:{property:O,operator:T,value:H},onChange:ce,config:V,"data-name":"valueField",parentRef:D,type:P});return t.createElement("div",{className:R(`${o}__condition-block`,{[`${o}__condition__deletion-preview`]:K},{[`${o}__gap-bottom`]:$==z},{[`${o}__gap ${o}__gap-bottom`]:$==oe},{[`${o}__condition--interacting`]:S}),role:"row","aria-label":M,...ot(),tabIndex:-1,onMouseEnter:X,onMouseLeave:Te,onBlur:Te},s?t.createElement(Se,{className:`${o}__gap`,operator:s,onChange:D=>l==null?void 0:l(D)}):"",u&&t.createElement(G,{label:d.statement,title:F,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`,tabIndex:0},t.createElement(ie,{conditionState:{value:d.statement,label:F},onChange:Ie,config:{options:q,isStatement:!0}})),t.createElement(G,{label:W??(i==null?void 0:i.property),title:te,renderIcon:L??void 0,className:`${o}__property-field`,"data-name":"propertyField",condition:i,type:P,onChange:qe},t.createElement(ie,{conditionState:{value:O,label:te},onChange:qe,config:{options:_==null?void 0:_.properties}})),pe(O)&&t.createElement(G,{label:T,title:ae,"data-name":"operatorField",condition:i,type:P,onChange:Q},t.createElement(ie,{config:{options:it()},conditionState:{value:T,label:ae},onChange:Q})),pe(O)&&pe(T)&&t.createElement(G,{label:H,type:P,title:W,showToolTip:!0,"data-name":"valueField",condition:i,config:V,onChange:ce,renderChildren:lt}),t.createElement("span",{role:"gridcell","aria-label":k},t.createElement(ne,{hideLabel:!0,label:k,onClick:a,onMouseEnter:Ae,onMouseLeave:me,onFocus:Ae,onBlur:me,renderIcon:Pn,className:`${o}__close-condition`,"data-name":"closeCondition",wrapperClassName:`${o}__close-condition-wrapper`})),Pe(c,d.conditions)&&t.createElement(Oe,{onClick:()=>{p==null||p(c)},addConditionSubGroupHandler:()=>{w==null||w(c)},showConditionSubGroupPreviewHandler:A,hideConditionSubGroupPreviewHandler:f,enableSubGroup:$==z,showConditionPreviewHandler:v,hideConditionPreviewHandler:C,className:`${o}__gap ${o}__gap-left`}))};De.propTypes={addConditionHandler:n.func,addConditionSubGroupHandler:n.func,aria:n.object,condition:n.object,conditionIndex:n.number,conjunction:n.string,group:n.object,hideConditionPreviewHandler:n.func,hideConditionSubGroupPreviewHandler:n.func,isLastCondition:n.func,isStatement:n.bool,onChange:n.func,onConnectorOperatorChange:n.func,onRemove:n.func,onStatementChange:n.func,showConditionPreviewHandler:n.func,showConditionSubGroupPreviewHandler:n.func,state:n.object};De.__docgenInfo={description:"",methods:[],displayName:"ConditionBlock",props:{condition:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},description:"",type:{name:"object"}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:"callback for Remove a condition",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(condition: Condition) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}]},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},onConnectorOperatorChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(op: string) => void",signature:{arguments:[{type:{name:"string"},name:"op"}],return:{name:"void"}}},description:"callback to handle the connector(and/or) change",type:{name:"func"}},onStatementChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(v: string) => void",signature:{arguments:[{type:{name:"string"},name:"v"}],return:{name:"void"}}},description:"callback to handle the statement(if/ excl.if) change",type:{name:"func"}},addConditionHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(conditionIndex: number) => void",signature:{arguments:[{type:{name:"number"},name:"conditionIndex"}],return:{name:"void"}}},description:"callback to add a new condition",type:{name:"func"}},addConditionSubGroupHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(conditionIndex: number) => void",signature:{arguments:[{type:{name:"number"},name:"conditionIndex"}],return:{name:"void"}}},description:"callback to add a new condition subgroup",type:{name:"func"}},hideConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionSubGroupPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for showing sub group preview",type:{name:"func"}},hideConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for hiding sub group preview",type:{name:"func"}},showConditionPreviewHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler for showing add condition preview",type:{name:"func"}},conjunction:{required:!1,tsType:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}]},description:"string that decides to show the condition connector",type:{name:"string"}},isStatement:{required:!1,tsType:{name:"boolean"},description:"boolean that decides to show the statement(if/ excl.if)",type:{name:"bool"}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"object that hold the current group object where is condition is part of",type:{name:"object"}},conditionIndex:{required:!1,tsType:{name:"number"},description:"",type:{name:"number"}},aria:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  level: number;
  posinset: number;
  setsize?: number;
}`,signature:{properties:[{key:"level",value:{name:"number",required:!0}},{key:"posinset",value:{name:"number",required:!0}},{key:"setsize",value:{name:"number",required:!1}}]}},description:"object hold aria attributes",type:{name:"object"}},isLastCondition:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  index: number,
  conditions: (ConditionGroup | Condition)[]
) => void`,signature:{arguments:[{type:{name:"number"},name:"index"},{type:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]"},name:"conditions"}],return:{name:"void"}}},description:"",type:{name:"func"}},state:{description:"object that hold the current condition",type:{name:"object"},required:!1}}};const _e=({previewType:e,group:a,colorIndex:r})=>{const[i,s]=h.useState(!1),[l,u,d,m]=U(["valueText","operatorText","propertyText","ifText"]);h.useEffect(()=>{s(!0)},[]);const c=()=>t.createElement("div",{className:`${o}__preview-condition`},t.createElement(G,{label:l,renderIcon:ft}),t.createElement(G,{label:u}),t.createElement(G,{label:d}));return t.createElement(t.Fragment,null,e=="newGroup"&&t.createElement(t.Fragment,null,t.createElement("div",{className:R([`${o}__group__row ${o}__group-preview `,{[`${o}__group-preview-animate`]:i}])},t.createElement(G,{className:`${o}__statement-button`,label:a.groupOperator})),t.createElement("div",{"data-color-index":r,"aria-hidden":!0,className:R([`${o}__group ${o}__condition-wrapper ${o}__group-preview ${o}__group-wrapper `,{[`${o}__group-preview-animate`]:i}])},t.createElement("div",{className:`${o}__gap`},t.createElement(G,{className:`${o}__statement-button`,label:m})),c())),e=="subGroup"&&t.createElement("div",{className:R([`${o}__group__row ${o}__group-preview ${o}__gap-bottom`,{[`${o}__group-preview-animate`]:i}])},t.createElement("div",{className:`${o}__condition-block  ${o}__gap`},t.createElement(G,{label:a.groupOperator,className:`${o}__statement-button`,popOverClassName:`${o}__gap`}),t.createElement("div",{className:`${o}__group ${o}__condition-wrapper`},t.createElement(Se,{className:`${o}__gap ${o}__groupConnector`,operator:m}),c()))),e=="condition"&&t.createElement("div",{className:R([`${o}__group__row ${o}__group-preview ${o}__gap-bottom`,{[`${o}__group-preview-animate`]:i}])},t.createElement("div",{className:`${o}__condition-block  ${o}__gap`},t.createElement(G,{label:a.groupOperator,className:`${o}__statement-button`,popOverClassName:`${o}__gap`}),c())))};_e.propTypes={colorIndex:n.number,group:n.object,previewType:n.oneOf(["condition","subGroup","newGroup"])};_e.__docgenInfo={description:"",methods:[],displayName:"ConditionPreview",props:{previewType:{required:!1,tsType:{name:"union",raw:"'newGroup' | 'subGroup' | 'condition'",elements:[{name:"literal",value:"'newGroup'"},{name:"literal",value:"'subGroup'"},{name:"literal",value:"'condition'"}]},description:"type of review to be displayed",type:{name:"enum",value:[{value:"'condition'",computed:!1},{value:"'subGroup'",computed:!1},{value:"'newGroup'",computed:!1}]}},group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"current conditional group",type:{name:"object"}},colorIndex:{required:!1,tsType:{name:"number"},description:"index of the color for next group",type:{name:"number"}}}};const Ge=({group:e,aria:a,onRemove:r,onChange:i,className:s})=>{const[l,u,d]=U(["conditionBuilderGroupText","conditionText","conditionBuilderText"]),{statementConfig:m}=Be(),{variant:c,conditionBuilderRef:p}=h.useContext(J),[w,g]=h.useState(-1),[f,A]=h.useState(-1);h.useState(!1);const C=h.useRef(null),v=(k,q,y)=>{var I;if(e&&e.conditions&&e.conditions.length>1)if(c==z?_(q):T(q,y),b(e.conditions,k)){const L=e.conditions.filter(P=>k!==P.id);if((L==null?void 0:L[0]).conditions){const P=L[0];L.splice(0,1,...P==null?void 0:P.conditions)}i==null||i({...e,conditions:L})}else{const L=(I=e==null?void 0:e.conditions)==null?void 0:I.reduce((P,V)=>{const W=V;return W.conditions?P.concat(W.conditions):P},[]);i==null||i({...e,conditions:L})}else r==null||r(q)},b=(k,q)=>k.find(y=>!y.conditions&&y.id!==q),O=(k,q)=>{const y=[...e!=null&&e.conditions?e.conditions.slice(0,q):[],k,...e!=null&&e.conditions?e.conditions.slice(q+1):[]];i==null||i({...e,conditions:y,id:(e==null?void 0:e.id)??x()})},H=k=>{const q={property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:x()};i==null||i({...e,conditions:[...e.conditions?e.conditions.slice(0,k+1):[],q,...e.conditions?e.conditions.slice(k+1):[]]})},T=(k,q)=>{var I;const y=(I=k.currentTarget.closest(`.${o}__group`))==null?void 0:I.querySelectorAll('[data-name="closeCondition"]');q==y.length-1?Z(y[q-1],p):Z(y[q+1],p)},_=k=>{var P,V,W,Ne,Y,X,Te,Ie,qe;const q=(V=(P=k.currentTarget)==null?void 0:P.closest('[role="row"]'))==null?void 0:V.getAttribute("aria-level"),y=(Ne=(W=k.currentTarget)==null?void 0:W.closest('[role="row"]'))==null?void 0:Ne.getAttribute("aria-posinset"),I=(Y=C.current)==null?void 0:Y.querySelector(`[aria-level="${q}"][aria-posinset="${Number(y)+1}"]`),L=(X=C.current)==null?void 0:X.querySelector(`[aria-level="${q}"][aria-posinset="${Number(y)-1}"]`);if(I!=null&&I.classList.contains(`${o}__condition-block`))Z(I==null?void 0:I.querySelector('[data-name="closeCondition"]'),p);else if(L!=null&&L.classList.contains(`${o}__condition-block`))Z(L==null?void 0:L.querySelector('[data-name="closeCondition"]'),p);else{const Q=(Te=C.current)==null?void 0:Te.querySelectorAll(`[aria-level="${Number(q)-1}"][role="row"]`),ce=(Ie=C.current)==null?void 0:Ie.querySelector(`[aria-level="${Number(q)+1}"][role="row"]`);if(ce){const Ae={ariaLevel:Number(ce.ariaLevel)-1,ariaPosInSet:ce.ariaPosInSet};setTimeout(()=>{var Pe;const me=(Pe=C.current)==null?void 0:Pe.querySelector(`[role="row"][aria-level="${Ae.ariaLevel}"][aria-posinset="${Ae.ariaPosInSet}"]`);Z(me==null?void 0:me.querySelector('[data-name="closeCondition"]'),p)},0)}else Q!=null&&Q.length&&Q.length>1&&Z((qe=Q[Q.length-2])==null?void 0:qe.querySelector('[data-name="closeCondition"]'),p)}},$=k=>{i({...e,conditions:[...e.conditions?e.conditions.slice(0,k+1):[],{statement:"ifAll",groupOperator:"and",conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:x()}],id:x()},...e.conditions?e.conditions.slice(k+1):[]]})},j=(k,q)=>k+1>=q.length||q.length-1!=k&&q[k+1].conditions,K=k=>{A(k)},E=()=>{A(-1)},S=k=>{g(k)},N=()=>{g(-1)},M=k=>{var y;const q=(y=m.find(I=>I.id==k))==null?void 0:y.connector;i({...e,groupOperator:q,statement:k})},F=k=>{i({...e,groupOperator:k})},te=()=>{var k;return t.createElement("div",{className:`${s}  eachGroup`},t.createElement("div",{className:`${o}__condition-wrapper`,role:"grid","aria-label":d},(k=e==null?void 0:e.conditions)==null?void 0:k.map((q,y)=>{var I;return t.createElement("div",{key:q.id,className:`${o}__group-wrapper`},t.createElement(De,{conjunction:y>0?e.groupOperator:void 0,aria:{level:a.level+1,posinset:y+1,setsize:(I=e==null?void 0:e.conditions)==null?void 0:I.length},isStatement:y==0,condition:q,group:e,conditionIndex:y,onChange:L=>{O(L,y)},addConditionHandler:H,onRemove:L=>{v(q.id,L,y)},onConnectorOperatorChange:F,onStatementChange:M,isLastCondition:j}))})))},ae=()=>{var k;return t.createElement("div",{className:`${s} ${o}__condition-wrapper`,role:a.level===1?"rowgroup":void 0,"aria-label":a.level==1?l:void 0,ref:C},t.createElement("div",{tabIndex:0,role:"row","aria-level":a.level,"aria-posinset":a.posinset,"aria-setsize":a.setsize},t.createElement(G,{label:e.statement,title:u,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`},t.createElement(ie,{conditionState:{value:e.statement,label:u},onChange:(q,y)=>{ke(y,p),M(q)},config:{options:m,isStatement:!0}}))),(k=e==null?void 0:e.conditions)==null?void 0:k.map((q,y)=>{var I,L;return t.createElement(h.Fragment,{key:q.id},q.conditions?t.createElement("div",{className:R(`${o}__condition-block subgroup  ${o}__gap`,{[`${o}__gap-bottom`]:e&&e.conditions&&e.conditions.length<y+1},{})},t.createElement(Se,{className:`${o}__gap ${o}__gap-bottom ${o}__groupConnector`,operator:e.groupOperator,"aria-hidden":!0}),t.createElement(Ge,{aria:{level:a.level+1,posinset:y+1,setsize:((I=e.conditions)==null?void 0:I.length)??0},className:`${o}__group`,group:q,onChange:P=>{O(P,y)},onRemove:P=>{v(q.id,P,y)}})):t.createElement("div",null,t.createElement(De,{conjunction:y>0?e.groupOperator:void 0,aria:{level:a.level+1,posinset:y+1,setsize:((L=e.conditions)==null?void 0:L.length)??0},isStatement:!1,condition:q,group:e,conditionIndex:y,addConditionHandler:H,addConditionSubGroupHandler:$,onChange:P=>{O(P,y)},onRemove:P=>{v(q.id,P,y)},onConnectorOperatorChange:F,onStatementChange:M,showConditionSubGroupPreviewHandler:()=>{K(y)},hideConditionSubGroupPreviewHandler:E,showConditionPreviewHandler:()=>{S(y)},hideConditionPreviewHandler:N,isLastCondition:j})),y==f&&t.createElement(_e,{previewType:"subGroup",group:e}),y==w&&t.createElement(_e,{previewType:"condition",group:e}))}))};return t.createElement(t.Fragment,null,c==z&&ae(),c==oe&&te())};Ge.propTypes={aria:n.object,className:n.string,group:n.object,onChange:n.func,onRemove:n.func};Ge.__docgenInfo={description:"",methods:[],displayName:"ConditionGroupBuilder",props:{group:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},description:"",type:{name:"object"}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:"call back to remove the particular group from the state tree",type:{name:"func"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(group: ConditionGroup) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}},name:"group"}],return:{name:"void"}}},description:"callback to update the current condition of the state tree",type:{name:"func"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},aria:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  level: number;
  posinset: number;
  setsize: number;
}`,signature:{properties:[{key:"level",value:{name:"number",required:!0}},{key:"posinset",value:{name:"number",required:!0}},{key:"setsize",value:{name:"number",required:!0}}]}},description:"object contains the aria attributes",type:{name:"object"}}}};const tt=()=>{const{rootState:e,setRootState:a}=h.useContext(J),[r]=U(["conditionText"]),{connectorConfig:i}=Be(),s=l=>{a({...e,operator:l})};return t.createElement("div",{className:`${o}__group-separator ${o}__group-separator-row`,role:"row",tabIndex:-1,"aria-level":1},t.createElement(G,{label:e.operator,title:r,"data-name":"connectorField",popOverClassName:`${o}__gap`,className:`${o}__statement-button`},t.createElement(ie,{conditionState:{value:e.operator,label:r},onChange:s,config:{options:i}})))};tt.__docgenInfo={description:"",methods:[],displayName:"GroupConnector"};const Qe=({actions:e,className:a})=>{const{actionState:r=[],setActionState:i}=h.useContext(J),[s,l]=h.useState(-1),[u,d,m,c,p,w]=U(["actionsText","then","and","removeActionText","addActionText","actionSectionText"]),g=()=>{const b={id:x(),label:void 0,popoverToOpen:"valueField"};i==null||i([...r,b])},f=(b,O)=>{const T={...e.find(_=>_.id===b),id:r[O].id};i==null||i([...r.slice(0,O),T,...r.slice(O+1)])},A=b=>{i==null||i(r.filter(O=>O.id!==b))},C=b=>{l(b)},v=()=>{l(-1)};return t.createElement("div",{className:a},t.createElement(Vn,{className:`${o}__heading`,level:4},t.createElement(Wn,null,u)),t.createElement("div",{className:`${o}__condition-wrapper`,role:"grid","aria-label":w},r==null?void 0:r.map((b,O)=>t.createElement("div",{key:b.id,role:"row",className:R(`${o}__condition-block ${o}__gap ${o}__gap-bottom`,{[`${o}__condition__deletion-preview`]:s==O})},t.createElement(G,{className:`${o}__statement-button`,tabIndex:0,popOverClassName:`${o}__gap`,label:O===0?d:m}),t.createElement(G,{label:b.label,title:u,condition:b,"data-name":"valueField",type:"option"},t.createElement(He,{conditionState:{value:b.label},onChange:H=>f(H.id,O),config:{options:e}})),t.createElement("span",{role:"gridcell","aria-label":c},t.createElement(ne,{hideLabel:!0,label:c,onClick:()=>A(b.id),onMouseEnter:()=>C(O),onMouseLeave:v,onFocus:()=>C(O),onBlur:v,renderIcon:Pn,className:`${o}__close-condition`,"data-name":"closeCondition"})),r.length===O+1&&t.createElement(Oe,{onClick:g,className:`${o}__gap ${o}__gap-left`,buttonLabel:p,tabIndex:0}))),r.length===0&&t.createElement(Oe,{onClick:g,className:`${o}__gap ${o}__gap-left`,buttonLabel:p,tabIndex:0})))};Qe.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),className:n.string};Qe.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderActions",props:{actions:{required:!1,tsType:{name:"union",raw:"Action[] | Option[]",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"}]},description:"optional array of object that give the list of actions.",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}}}};const en=({startConditionLabel:e,getConditionState:a,getActionsState:r,initialState:i,actions:s})=>{var E;const{rootState:l,setRootState:u,variant:d,actionState:m}=h.useContext(J),c=h.useRef(i!=null&&i.state?JSON.parse(JSON.stringify(i==null?void 0:i.state)):null),[p,w]=h.useState(!1),[g,f]=h.useState(!1),[A,C,v]=U(["addConditionGroupText","conditionHeadingText","conditionBuilderHierarchicalText"]),b=()=>{f(!0)},O=()=>{f(!1)};h.useEffect(()=>{var S;(S=l==null?void 0:l.groups)!=null&&S.length?w(!0):w(!1),a&&a(l??{})},[l]),h.useEffect(()=>{r==null||r(m??[])},[m]),h.useEffect(()=>{i!=null&&i.enabledDefault&&(u==null||u(i.state))},[i]);const H=()=>{var S,N;w(!0),(N=(S=c==null?void 0:c.current)==null?void 0:S.groups)!=null&&N.length?(u==null||u(c.current),c.current=null):u==null||u(Nt)},T=h.useCallback(S=>{var M;const N=(M=l==null?void 0:l.groups)==null?void 0:M.filter(F=>S!==(F==null?void 0:F.id));u==null||u({...l,groups:l?N:[]}),(N==null?void 0:N.length)===0&&(c.current=null)},[u,l]),_=(S,N)=>{if(l&&l.groups){const M=[...l.groups?l.groups.slice(0,N):[],S,...l.groups?l.groups.slice(N+1):[]];u==null||u({...l,groups:M})}},$=()=>{const S={statement:"ifAll",groupOperator:"and",id:x(),conditions:[{property:void 0,operator:"",value:"",popoverToOpen:"propertyField",id:x()}]};u==null||u({...l,groups:l&&l.groups?[...l.groups,S]:[S]})},j=()=>{var N;return(((N=l==null?void 0:l.groups)==null?void 0:N.length)??0)%5};if(!p)return t.createElement(Hn,{className:`${o}__addConditionText-button`,renderIcon:S=>t.createElement(Kn,{...S}),iconDescription:e,kind:"ghost",size:"sm",onClick:H},e);const K=d===z?{role:"treegrid","aria-label":v}:null;return t.createElement(t.Fragment,null,t.createElement(Vn,{className:`${o}__heading`,level:4},t.createElement(Wn,null,C)),t.createElement("div",{className:`${o}__content-container`,...K},l&&((E=l==null?void 0:l.groups)==null?void 0:E.map((S,N)=>t.createElement("div",{key:S.id,className:`${o}__group-wrapper`},t.createElement(Ge,{className:`${o}__group`,aria:{level:1,posinset:N*2+1,setsize:(l.groups&&l.groups.length*2)??0},group:S,onRemove:()=>{T(S.id)},onChange:M=>{_(M,N)}}),l.groups&&N<l.groups.length-1&&t.createElement(tt,null)))),d==z&&t.createElement("div",{role:"row",tabIndex:-1,"aria-level":1,className:`${o}__add-group`},t.createElement(ne,{renderIcon:Yn,onClick:$,onMouseEnter:b,onMouseLeave:O,onFocus:b,onBlur:O,className:`${o}__add-condition-group `,hideLabel:!0,label:A,wrapperProps:{role:"gridcell","aria-label":A}})),g&&t.createElement(_e,{previewType:"newGroup",colorIndex:j(),group:{groupOperator:l==null?void 0:l.operator,id:x()}})),s&&t.createElement(Qe,{actions:s,className:`${o}__actions-container`}))};en.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),getActionsState:n.func,getConditionState:n.func.isRequired,initialState:n.shape({state:n.shape({groups:n.arrayOf(n.shape({groupOperator:n.string,statement:n.string,conditions:n.arrayOf(n.oneOfType([n.shape({property:n.string,operator:n.string,value:n.oneOfType([n.string,n.arrayOf(n.shape({id:n.string,label:n.string})),n.shape({id:n.string,label:n.string})])}),n.object]))})),operator:n.string}),enabledDefault:n.bool}),startConditionLabel:n.string.isRequired};en.__docgenInfo={description:"",methods:[],displayName:"ConditionBuilderContent",props:{startConditionLabel:{required:!0,tsType:{name:"string"},description:"",type:{name:"string"}},getConditionState:{required:!0,tsType:{name:"signature",type:"function",raw:"(state: ConditionBuilderState) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"}],return:{name:"void"}}},description:"This is a callback function that returns the updated state",type:{name:"func"}},getActionsState:{required:!1,tsType:{name:"signature",type:"function",raw:"(state: Action[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},name:"state"}],return:{name:"void"}}},description:"callback functions that will provide the updated action state back.",type:{name:"func"}},initialState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  state: ConditionBuilderState;
  enabledDefault?: boolean;
}`,signature:{properties:[{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"enabledDefault",value:{name:"boolean",required:!1}}]}},description:"Optional prop if the condition building need to start from a predefined initial state",type:{name:"shape",value:{state:{name:"shape",value:{groups:{name:"arrayOf",value:{name:"shape",value:{groupOperator:{name:"string",required:!1},statement:{name:"string",required:!1},conditions:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{property:{name:"string",required:!1},operator:{name:"string",required:!1},value:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}},{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}],required:!1}}},{name:"object"}]},required:!1}}},required:!1},operator:{name:"string",required:!1}},required:!1},enabledDefault:{name:"bool",required:!1}}}},actions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:"optional array of object that give the list of actions.",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}}}};const nn="ConditionBuilder";let ue=t.forwardRef(({className:e,inputConfig:a,startConditionLabel:r="Add Condition",popOverSearchThreshold:i,getOptions:s,initialState:l,getConditionState:u,getActionsState:d,variant:m=oe,actions:c,translateWithId:p,statementConfigCustom:w,...g},f)=>{const A=h.useRef(null),C=f||A,v=b=>{It(b,C,m)};return t.createElement(Ue,{inputConfig:a,popOverSearchThreshold:i,getOptions:s,variant:m,translateWithId:p,conditionBuilderRef:C,statementConfigCustom:w},t.createElement("div",{...g,className:R(o,e,{}),ref:C,...vt(nn)},t.createElement(Et,{className:`${o}__${m}`,onKeyDown:v},t.createElement(en,{startConditionLabel:r,getConditionState:u,getActionsState:d,initialState:l,actions:c}))))});ue=Bn.checkComponentEnabled(ue,nn);ue.displayName=nn;ue.propTypes={actions:n.arrayOf(n.shape({id:n.oneOfType([n.string,n.number]).isRequired,label:n.string.isRequired})),className:n.string,getActionsState:n.func,getConditionState:n.func.isRequired,getOptions:n.func,initialState:n.shape({state:n.shape({groups:n.arrayOf(n.shape({groupOperator:n.string,statement:n.string,conditions:n.arrayOf(n.oneOfType([n.shape({property:n.string,operator:n.string,value:n.oneOfType([n.string,n.arrayOf(n.shape({id:n.string,label:n.string})),n.shape({id:n.string,label:n.string})])}),n.object]))})),operator:n.string}),enabledDefault:n.bool}),inputConfig:n.shape({properties:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object]),type:n.oneOf(["text","textarea","number","date","option","time","custom"]).isRequired,config:n.shape({options:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired,icon:n.oneOfType([n.func,n.object])})),component:n.func,operators:n.arrayOf(n.shape({id:n.string.isRequired,label:n.string.isRequired}))})}))}).isRequired,popOverSearchThreshold:n.number.isRequired,startConditionLabel:n.string,statementConfigCustom:n.arrayOf(n.shape({id:n.string.isRequired,connector:n.oneOf(["and","or"]).isRequired,label:n.string.isRequired,secondaryLabel:n.string})),translateWithId:n.func,variant:n.oneOf(["Non-Hierarchical","Hierarchical"])};ue.__docgenInfo={description:"TODO: A description of the component.",methods:[],displayName:"ConditionBuilder",props:{inputConfig:{required:!0,tsType:{name:"signature",type:"object",raw:`{
  properties: Property[];
}`,signature:{properties:[{key:"properties",value:{name:"Array",elements:[{name:"intersection",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
} & (
  | PropertyConfig['option']
  | PropertyConfig['text']
  | PropertyConfig['number']
  | PropertyConfig['date']
  | PropertyConfig['textarea']
  | PropertyConfig['time']
  | PropertyConfig['custom']
)`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}},{name:"unknown"}]}],raw:"Property[]",required:!0}}]}},description:"This is a mandatory prop that defines the input to the condition builder.",type:{name:"shape",value:{properties:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1},type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'textarea'",computed:!1},{value:"'number'",computed:!1},{value:"'date'",computed:!1},{value:"'option'",computed:!1},{value:"'time'",computed:!1},{value:"'custom'",computed:!1}],required:!0},config:{name:"shape",value:{options:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},icon:{name:"union",value:[{name:"func"},{name:"object"}],required:!1}}},required:!1},component:{name:"func",required:!1},operators:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0}}},required:!1}},required:!1}}},required:!1}}}},initialState:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  state: ConditionBuilderState;
  enabledDefault?: boolean;
}`,signature:{properties:[{key:"state",value:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]},required:!0}},{key:"enabledDefault",value:{name:"boolean",required:!1}}]}},description:`Optional prop if you want to pass a saved condition state, pass as "initialState.state".
"initialState.enabledDefault" will populate the builder with the provided initial state before clicking Add Condition button.

 This state should respect the structure of condition state that is available in getConditionState callback`,type:{name:"shape",value:{state:{name:"shape",value:{groups:{name:"arrayOf",value:{name:"shape",value:{groupOperator:{name:"string",required:!1},statement:{name:"string",required:!1},conditions:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{property:{name:"string",required:!1},operator:{name:"string",required:!1},value:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}},{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}],required:!1}}},{name:"object"}]},required:!1}}},required:!1},operator:{name:"string",required:!1}},required:!1},enabledDefault:{name:"bool",required:!1}}}},getActionsState:{required:!1,tsType:{name:"signature",type:"function",raw:"(state: Action[] | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"Action[] | undefined",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},{name:"undefined"}]},name:"state"}],return:{name:"void"}}},description:"This is a callback that gives back the updated action state",type:{name:"func"}},getConditionState:{required:!0,tsType:{name:"signature",type:"function",raw:"(state: ConditionBuilderState | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"ConditionBuilderState | undefined",elements:[{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},{name:"undefined"}]},name:"state"}],return:{name:"void"}}},description:"This is a callback that gives back updated condition state",type:{name:"func"}},getOptions:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  state: ConditionBuilderState,
  condition: Condition
) => Promise<Option[]>`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  groups?: ConditionGroup[];
  operator?: LogicalOperator;
}`,signature:{properties:[{key:"groups",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  conditions?: (ConditionGroup | Condition)[];
  groupOperator?: LogicalOperator;
  statement?: StatementOperator;
  id: string;
}`,signature:{properties:[{key:"conditions",value:{name:"Array",elements:[{name:"unknown"}],raw:"(ConditionGroup | Condition)[]",required:!1}},{key:"groupOperator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"statement",value:{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1}},{key:"id",value:{name:"string",required:!0}}]}}],raw:"ConditionGroup[]",required:!1}},{key:"operator",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}}]}},name:"state"},{type:{name:"signature",type:"object",raw:`{
  property?: string;
  operator?: Operator | '' | 'INVALID';
  value?: string | Option[] | Option;
  id?: string | number;
  popoverToOpen?: string;
}`,signature:{properties:[{key:"property",value:{name:"string",required:!1}},{key:"operator",value:{name:"union",raw:"Operator | '' | 'INVALID'",elements:[{name:"union",raw:`| LogicalOperator
| StatementOperator
| CoreOperator
| NumberOperator
| StringOperator
| ArrayOperator
| OptionOperator
| DateOperator`,elements:[{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1},{name:"union",raw:"'ifAll' | 'ifAny' | 'unlessAll' | 'unlessAny'",elements:[{name:"literal",value:"'ifAll'"},{name:"literal",value:"'ifAny'"},{name:"literal",value:"'unlessAll'"},{name:"literal",value:"'unlessAny'"}],required:!1},{name:"literal",value:"'is'"},{name:"union",raw:"'greater' | 'greaterEqual' | 'lower' | 'lowerEqual'",elements:[{name:"literal",value:"'greater'"},{name:"literal",value:"'greaterEqual'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerEqual'"}]},{name:"union",raw:"'startsWith' | 'endsWith'",elements:[{name:"literal",value:"'startsWith'"},{name:"literal",value:"'endsWith'"}]},{name:"literal",value:"'contains'"},{name:"literal",value:"'oneOf'"},{name:"union",raw:"'before' | 'after'",elements:[{name:"literal",value:"'before'"},{name:"literal",value:"'after'"}]}]},{name:"literal",value:"''"},{name:"literal",value:"'INVALID'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | Option[] | Option",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"},{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],required:!1}},{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"popoverToOpen",value:{name:"string",required:!1}}]}},name:"condition"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  icon?: CarbonIconType;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"icon",value:{name:"CarbonIconType",required:!1}}]}}],raw:"Option[]"}],raw:"Promise<Option[]>"}}},description:`This is a callback that get triggered when  you want to dynamically fetch options.
 Component call this when the option array is not passed against a property with type as option in the input config.
This is an asynchronous callback that can return a promise , and you need to resolve the promise with options array in the valid format.
You will receive the root condition state and current condition as the 2 arguments.
eg: const getOptions = async (conditionState,condition) => {
  switch (condition.property) {
    case 'continent':
      return new Promise((resolve) => {
        const continents=[{
      label: 'Africa',
      id: 'Africa',
    },...]
          resolve(continents);
      });
      default:
      return [];
  }
};`,type:{name:"func"}},actions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string | number;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Action[]"},description:"optional array of actions",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!0},label:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},popOverSearchThreshold:{required:!0,tsType:{name:"number"},description:"Provide an mandatory numeric value that will be used to enable search option in the popovers with list.",type:{name:"number"}},startConditionLabel:{required:!1,tsType:{name:"string"},description:"Provide a label to the button that starts condition builder",defaultValue:{value:"'Add Condition'",computed:!1},type:{name:"string"}},variant:{required:!1,tsType:{name:"union",raw:"'Non-Hierarchical' | 'Hierarchical'",elements:[{name:"literal",value:"'Non-Hierarchical'"},{name:"literal",value:"'Hierarchical'"}]},description:"Provide the condition builder variant: Non-Hierarchical/ Hierarchical",defaultValue:{value:"'Non-Hierarchical'",computed:!1},type:{name:"enum",value:[{value:"'Non-Hierarchical'",computed:!1},{value:"'Hierarchical'",computed:!1}]}},translateWithId:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: string) => string",signature:{arguments:[{type:{name:"string"},name:"id"}],return:{name:"string"}}},description:`Optional prop, if you need to pass translations to the texts on the component instead of the defined defaults.
This callback function will receive the message id and you need to return the corresponding text for that id.
The message id will be one of [   "ifText","addConditionText",   "addConditionGroupText",   "addSubgroupText",   "conditionText",   "propertyText",   "operatorText",   "valueText",   "connectorText",   "conditionRowText","conditionRowGroupText","conditionBuilderText","actionSectionText",   "removeConditionText",   "addConditionRowText",   "startText",   "endText",   "clearSearchText",   "actionsText",   "then",   "removeActionText",   "addActionText",   "invalidText",  "invalidNumberWarnText"]
]`,type:{name:"func"}},statementConfigCustom:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  connector: 'and' | 'or';
  label: string;
  secondaryLabel?: string;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"connector",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}}]}}],raw:"statementConfig[]"},description:"Optional prop for passing custom configuration for statement option from default op",type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},connector:{name:"enum",value:[{value:"'and'",computed:!1},{value:"'or'",computed:!1}],required:!0},label:{name:"string",required:!0},secondaryLabel:{name:"string",required:!1}}}}}}};function ln(e){const a={a:"a",h1:"h1",h2:"h2",li:"li",ul:"ul",...In(),...e.components};return B.jsxs(B.Fragment,{children:[B.jsx(a.h1,{id:"conditionbuilder",children:"ConditionBuilder"}),`
`,B.jsx(a.h2,{id:"table-of-contents",children:"Table of Contents"}),`
`,B.jsxs(a.ul,{children:[`
`,B.jsx(a.li,{children:B.jsx(a.a,{href:"#overview",children:"Overview"})}),`
`,B.jsx(a.li,{children:B.jsx(a.a,{href:"#example-usage",children:"Example usage"})}),`
`,B.jsx(a.li,{children:B.jsx(a.a,{href:"#component-api",children:"Component API"})}),`
`]}),`
`,B.jsx(a.h2,{id:"overview",children:"Overview"}),`
`,`
`,B.jsx(a.h2,{id:"example-usage",children:"Example usage"}),`
`,`
`,B.jsx(ut,{children:B.jsx(dt,{of:se})}),`
`,B.jsx(a.h2,{id:"code-sample",children:"Code sample"}),`
`,`
`,B.jsx(a.h2,{id:"component-api",children:"Component API"}),`
`,B.jsx(ct,{})]})}function Bt(e={}){const{wrapper:a}={...In(),...e.components};return a?B.jsx(a,{...e,children:B.jsx(ln,{...e})}):ln(e)}const Ht="",tn=({onChange:e,conditionState:a})=>{const r=i=>{e(i.target.value)};return t.createElement("div",{className:"custom-component"},t.createElement(jn,{labelText:"labelText",hideLabel:!0,value:a.value??"",id:"customInput",onChange:r}))};tn.propTypes={conditionState:n.object,onChange:n.func};tn.__docgenInfo={description:"",methods:[],displayName:"CustomInput",props:{conditionState:{description:"current condition state",type:{name:"object"},required:!1},onChange:{description:"This function need to be called that provides a label which should be shown in the condition after a user has made their selection / set their value",type:{name:"func"},required:!1}}};const Gt=[["AF","Afghanistan"],["AX","Åland Islands"],["AL","Albania"],["DZ","Algeria"],["AS","American Samoa"],["AD","Andorra"],["AO","Angola"],["AI","Anguilla"],["AQ","Antarctica"],["AG","Antigua & Barbuda"],["AR","Argentina"],["AM","Armenia"],["AW","Aruba"],["AC","Ascension Island"],["AU","Australia"],["AT","Austria"],["AZ","Azerbaijan"],["BS","Bahamas"],["BH","Bahrain"],["BD","Bangladesh"],["BB","Barbados"],["BY","Belarus"],["BE","Belgium"],["BZ","Belize"],["BJ","Benin"],["BM","Bermuda"],["BT","Bhutan"],["BO","Bolivia"],["BA","Bosnia & Herzegovina"],["BW","Botswana"],["BV","Bouvet Island"],["BR","Brazil"],["IO","British Indian Ocean Territory"],["VG","British Virgin Islands"],["BN","Brunei"],["BG","Bulgaria"],["BF","Burkina Faso"],["BI","Burundi"],["KH","Cambodia"],["CM","Cameroon"],["CA","Canada"],["IC","Canary Islands"],["CV","Cape Verde"],["BQ","Caribbean Netherlands"],["KY","Cayman Islands"],["CF","Central African Republic"],["EA","Ceuta & Melilla"],["TD","Chad"],["CL","Chile"],["CN","China"],["CX","Christmas Island"],["CP","Clipperton Island"],["CC","Cocos (Keeling) Islands"],["CO","Colombia"],["KM","Comoros"],["CG","Congo - Brazzaville"],["CD","Congo - Kinshasa"],["CK","Cook Islands"],["CR","Costa Rica"],["CI","Côte d'Ivoire"],["HR","Croatia"],["CU","Cuba"],["CW","Curaçao"],["CY","Cyprus"],["CZ","Czechia"],["DK","Denmark"],["DG","Diego Garcia"],["DJ","Djibouti"],["DM","Dominica"],["DO","Dominican Republic"],["EC","Ecuador"],["EG","Egypt"],["SV","El Salvador"],["GQ","Equatorial Guinea"],["ER","Eritrea"],["EE","Estonia"],["SZ","Eswatini"],["ET","Ethiopia"],["EU","European Union"],["FK","Falkland Islands"],["FO","Faroe Islands"],["FJ","Fiji"],["FI","Finland"],["FR","France"],["GF","French Guiana"],["PF","French Polynesia"],["TF","French Southern Territories"],["GA","Gabon"],["GM","Gambia"],["GE","Georgia"],["DE","Germany"],["GH","Ghana"],["GI","Gibraltar"],["GR","Greece"],["GL","Greenland"],["GD","Grenada"],["GP","Guadeloupe"],["GU","Guam"],["GT","Guatemala"],["GG","Guernsey"],["GN","Guinea"],["GW","Guinea-Bissau"],["GY","Guyana"],["HT","Haiti"],["HM","Heard & McDonald Islands"],["HN","Honduras"],["HK","Hong Kong SAR China"],["HU","Hungary"],["IS","Iceland"],["IN","India"],["ID","Indonesia"],["IR","Iran"],["IQ","Iraq"],["IE","Ireland"],["IM","Isle of Man"],["IL","Israel"],["IT","Italy"],["JM","Jamaica"],["JP","Japan"],["JE","Jersey"],["JO","Jordan"],["KZ","Kazakhstan"],["KE","Kenya"],["KI","Kiribati"],["XK","Kosovo"],["KW","Kuwait"],["KG","Kyrgyzstan"],["LA","Laos"],["LV","Latvia"],["LB","Lebanon"],["LS","Lesotho"],["LR","Liberia"],["LY","Libya"],["LI","Liechtenstein"],["LT","Lithuania"],["LU","Luxembourg"],["MO","Macao SAR China"],["MG","Madagascar"],["MW","Malawi"],["MY","Malaysia"],["MV","Maldives"],["ML","Mali"],["MT","Malta"],["MH","Marshall Islands"],["MQ","Martinique"],["MR","Mauritania"],["MU","Mauritius"],["YT","Mayotte"],["MX","Mexico"],["FM","Micronesia"],["MD","Moldova"],["MC","Monaco"],["MN","Mongolia"],["ME","Montenegro"],["MS","Montserrat"],["MA","Morocco"],["MZ","Mozambique"],["MM","Myanmar (Burma)"],["NA","Namibia"],["NR","Nauru"],["NP","Nepal"],["NL","Netherlands"],["NC","New Caledonia"],["NZ","New Zealand"],["NI","Nicaragua"],["NE","Niger"],["NG","Nigeria"],["NU","Niue"],["NF","Norfolk Island"],["KP","North Korea"],["MK","North Macedonia"],["MP","Northern Mariana Islands"],["NO","Norway"],["OM","Oman"],["PK","Pakistan"],["PW","Palau"],["PS","Palestinian Territories"],["PA","Panama"],["PG","Papua New Guinea"],["PY","Paraguay"],["PE","Peru"],["PH","Philippines"],["PN","Pitcairn Islands"],["PL","Poland"],["PT","Portugal"],["PR","Puerto Rico"],["QA","Qatar"],["RE","Réunion"],["RO","Romania"],["RU","Russia"],["RW","Rwanda"],["BL","St. Barthélemy"],["SH","St. Helena"],["KN","St. Kitts & Nevis"],["LC","St. Lucia"],["MF","St. Martin"],["PM","St. Pierre & Miquelon"],["VC","St. Vincent & Grenadines"],["WS","Samoa"],["SM","San Marino"],["ST","São Tomé & Príncipe"],["SA","Saudi Arabia"],["SN","Senegal"],["RS","Serbia"],["SC","Seychelles"],["SL","Sierra Leone"],["SG","Singapore"],["SX","Sint Maarten"],["SK","Slovakia"],["SI","Slovenia"],["SB","Solomon Islands"],["SO","Somalia"],["ZA","South Africa"],["GS","South Georgia & South Sandwich Islands"],["KR","South Korea"],["SS","South Sudan"],["ES","Spain"],["LK","Sri Lanka"],["SD","Sudan"],["SR","Suriname"],["SJ","Svalbard & Jan Mayen"],["SE","Sweden"],["CH","Switzerland"],["SY","Syria"],["TW","Taiwan"],["TJ","Tajikistan"],["TZ","Tanzania"],["TH","Thailand"],["TL","Timor-Leste"],["TG","Togo"],["TK","Tokelau"],["TO","Tonga"],["TT","Trinidad & Tobago"],["TA","Tristan da Cunha"],["TN","Tunisia"],["TR","Turkey"],["TM","Turkmenistan"],["TC","Turks & Caicos Islands"],["TV","Tuvalu"],["UG","Uganda"],["UA","Ukraine"],["AE","United Arab Emirates"],["GB","United Kingdom"],["UN","United Nations"],["US","United States"],["UM","U.S. Outlying Islands"],["VI","U.S. Virgin Islands"],["UY","Uruguay"],["UZ","Uzbekistan"],["VU","Vanuatu"],["VA","Vatican City"],["VE","Venezuela"],["VN","Vietnam"],["WF","Wallis & Futuna"],["EH","Western Sahara"],["YE","Yemen"],["ZM","Zambia"],["ZW","Zimbabwe"]],Mt=["black","silver","gray","white","maroon","red","purple","fuchsia","green","lime","olive","yellow","navy","blue","teal","aqua","orange","aliceblue","antiquewhite","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson",`cyan
(synonym of aqua)`,"darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","gainsboro","ghostwhite","gold","goldenrod","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","limegreen","linen","magenta","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","oldlace","olivedrab","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","thistle","tomato","transparent","turquoise","violet","wheat","whitesmoke","yellowgreen","rebeccapurple"],Rt=[{label:"is greater than",id:"greater"},{label:"is greater than or equal to",id:"greaterEqual"}],de={properties:[{id:"continent",label:"Continent",icon:$n,type:"option",config:{options:[{label:"Africa",id:"Africa"},{label:"Antarctica",id:"Antarctica"},{label:"Asia",id:"Asia"},{label:"Australia",id:"Australia"},{label:"Europe",id:"Europe"}]}},{id:"region",label:"Region",icon:Dn,type:"option",config:{options:Gt.map(([e,a])=>({id:e,label:a,icon:()=>t.createElement("span",null,String.fromCodePoint(...[...e].map(r=>127397+r.charCodeAt(0))))}))}},{id:"color",label:"Color",icon:Ln,type:"option",config:{options:Mt.map(e=>({id:e,label:e,icon:()=>t.createElement("svg",{width:"12",height:"12",viewBox:"0 0 12 12"},t.createElement("rect",{x:"0",y:"0",width:"12",height:"12",rx:"1",fill:e}))}))}},{id:"id",label:"ID",icon:Ve,type:"text",config:{}},{id:"id_long",label:"Id Long",icon:Ve,type:"textarea",config:{}},{id:"price",label:"Price",icon:Gn,type:"number",config:{min:0,step:1,unit:"Dollars"}},{id:"date",label:"Date",icon:je,type:"date",config:{}},{id:"time",label:"Time",icon:je,type:"time",config:{timeZones:["IST","CET","UTC","LOCAL"]}},{id:"delivery",label:"Delivery",icon:Mn,type:"option",config:{options:[{label:"Processing",id:"Processing"},{label:"Preparing for dispatch",id:"Preparing for dispatch"},{label:"Dispatched",id:"Dispatched"},{label:"In delivery",id:"In delivery"},{label:"Delivered",id:"Delivered"}]}},{id:"season",label:"Season",icon:Fn,type:"option",config:{options:[{label:"Winter",id:"Winter"},{label:"Spring",id:"Spring"},{label:"Summer",id:"Summer"},{label:"Fall",id:"Fall"}]}},{id:"product",label:"Product",icon:Rn,type:"custom",config:{component:tn,operators:Rt}}]},Ft={properties:[{id:"continent",label:"Continent",icon:$n,type:"option",config:{}},{id:"region",label:"Region",icon:Dn,type:"option",config:{}},{id:"color",label:"Color",icon:Ln,type:"option",config:{}},{id:"id",label:"ID",icon:Ve,type:"text",config:{}},{id:"price",label:"Price",icon:Gn,type:"number",config:{min:0,step:1,unit:"Dollars"}},{id:"date",label:"Date",icon:je,type:"date",config:{}},{id:"time",label:"Time",icon:je,type:"time",config:{timeZones:["IST","CET","UTC","LOCAL"]}},{id:"product",label:"Product",icon:Rn,type:"text",config:{}},{id:"delivery",label:"Delivery",icon:Mn,type:"option",config:{options:[{label:"Processing",id:"Processing"},{label:"Preparing for dispatch",id:"Preparing for dispatch"},{label:"Dispatched",id:"Dispatched"},{label:"In delivery",id:"In delivery"},{label:"Delivered",id:"Delivered"}]}},{id:"season",label:"Season",icon:Fn,type:"option",config:{options:[{label:"Winter",id:"Winter"},{label:"Spring",id:"Spring"},{label:"Summer",id:"Summer"},{label:"Fall",id:"Fall"}]}}]},Vt={operator:"or",groups:[{groupOperator:"and",statement:"ifAll",id:x(),conditions:[{property:"continent",operator:"is",value:{label:"Africa",id:"Africa"},id:x()},{property:"region",operator:"oneOf",value:[{label:"Algeria",id:"DZ"},{label:"Andorra",id:"AD"}],id:x()},{statement:"unlessAll",groupOperator:"and",conditions:[{property:"delivery",operator:"is",value:{label:"Delivered",id:"Delivered"},id:x()},{property:"id",operator:"startsWith",value:"#delivered",id:x()}],id:x()},{statement:"ifAny",groupOperator:"or",conditions:[{property:"season",operator:"is",value:{label:"Summer",id:"Summer"},id:x()},{property:"season",operator:"is",value:{label:"Fall",id:"Fall"},id:x()}],id:x()}]},{statement:"ifAll",groupOperator:"and",id:x(),conditions:[{property:"delivery",operator:"oneOf",value:[{label:"Processing",id:"Processing"},{label:"Preparing for dispatch",id:"Preparing for dispatch"}],id:x()},{statement:"ifAll",groupOperator:"and",conditions:[{property:"price",operator:"greater",value:"50 Dollars",id:x()},{property:"id",operator:"is",value:"#proccessing",id:x()}],id:x()}]}]},Wt={groups:[{groupOperator:"and",statement:"ifAll",id:x(),conditions:[{property:"continent",operator:"is",value:{label:"Asia",id:"Asia"},id:x()},{property:"region",operator:"oneOf",value:[{label:"Afghanistan",id:"AF"},{label:"India",id:"IN"}],id:x()},{property:"date",operator:"between",value:["2024-12-04T18:30:00.000Z","2024-12-18T18:30:00.000Z"],id:x()},{property:"season",operator:"is",value:{label:"Fall",id:"Fall"},id:x()}]}],operator:"or"},Ha={title:"Experimental/Components/ConditionBuilder",component:ue,tags:["autodocs"],parameters:{layout:"fullscreen",styles:Ht,docs:{page:Bt}}},zt=()=>[{label:"Africa",id:"Africa"},{label:"Antarctica",id:"Antarctica"},{label:"Asia",id:"Asia"},{label:"Australia",id:"Australia"},{label:"Europe",id:"Europe"}],Kt=()=>[{label:"Afghanistan",id:"AF",icon:Le},{label:"Albania",id:"AL",icon:Le},{label:"Algeria",id:"AG",icon:Le},{label:"Andorra",id:"AN",icon:Le}],Ut=()=>[{label:"black",id:"black"},{label:"silver",id:"silver"},{label:"gray",id:"gray"},{label:"white",id:"white"},{label:"maroon",id:"maroon"},{label:"red",id:"red"},{label:"purple",id:"purple"},{label:"fuchsia",id:"fuchsia"},{label:"green",id:"green"},{label:"lime",id:"lime"},{label:"olive",id:"olive"},{label:"yellow",id:"yellow"},{label:"navy",id:"navy"},{label:"blue",id:"blue"},{label:"teal",id:"teal"},{label:"aqua",id:"aqua"}],Zt=async(e,{property:a})=>{switch(a){case"continent":return new Promise(r=>{setTimeout(()=>{r(zt())},2e3)});case"region":return new Promise(r=>{setTimeout(()=>{r(Kt())},2e3)});case"color":return new Promise(r=>{setTimeout(()=>{r(Ut())},2e3)});default:return[]}},Yt={startConditionLabel:"Add condition",popOverSearchThreshold:4,getConditionState:e=>{console.log(e)}},at=[{id:x(),label:"Add item to cart"},{id:x(),label:"Proceed item to checkout"}],rt=e=>({ifText:"if",addConditionText:"Add condition",addConditionGroupText:"Add condition group",addSubgroupText:"Add subgroup"})[e],le=e=>{const a=h.useRef(void 0);return t.createElement(ue,{...e,ref:a,...Yt})},Jt=[{id:"if",connector:"and",label:"if"},{id:"exclIf",connector:"or",label:"excl. if"}],se=le.bind({});se.storyName="Condition Builder";se.args={inputConfig:de,variant:oe};const ye=le.bind({});ye.storyName="With dynamic options";ye.args={inputConfig:Ft,getOptions:Zt,variant:oe};const fe=le.bind({});fe.storyName="With initial state";fe.args={initialState:{state:Wt,enabledDefault:!0},inputConfig:de,variant:oe,translateWithId:rt};const ve=le.bind({});ve.storyName="With Custom statement configuration";ve.args={inputConfig:de,variant:oe,translateWithId:rt,statementConfigCustom:Jt};const be=le.bind({});be.storyName="With Actions";be.args={inputConfig:de,variant:oe,actions:at,getActionsState:e=>{console.log("action state",e)}};const he=le.bind({});he.storyName="Condition Builder (Hierarchical)";he.args={inputConfig:de,variant:z};const we=le.bind({});we.storyName="With initial state (Hierarchical)";we.args={initialState:{state:Vt,enabledDefault:!1},inputConfig:de,variant:z};const Ce=le.bind({});Ce.storyName="With Actions (Hierarchical)";Ce.args={inputConfig:de,variant:z,actions:at,getActionsState:e=>{}};var sn,un,dn;se.parameters={...se.parameters,docs:{...(sn=se.parameters)==null?void 0:sn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(dn=(un=se.parameters)==null?void 0:un.docs)==null?void 0:dn.source}}};var cn,mn,pn;ye.parameters={...ye.parameters,docs:{...(cn=ye.parameters)==null?void 0:cn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(pn=(mn=ye.parameters)==null?void 0:mn.docs)==null?void 0:pn.source}}};var gn,yn,fn;fe.parameters={...fe.parameters,docs:{...(gn=fe.parameters)==null?void 0:gn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(fn=(yn=fe.parameters)==null?void 0:yn.docs)==null?void 0:fn.source}}};var vn,bn,hn;ve.parameters={...ve.parameters,docs:{...(vn=ve.parameters)==null?void 0:vn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(hn=(bn=ve.parameters)==null?void 0:bn.docs)==null?void 0:hn.source}}};var wn,Cn,Tn;be.parameters={...be.parameters,docs:{...(wn=be.parameters)==null?void 0:wn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(Tn=(Cn=be.parameters)==null?void 0:Cn.docs)==null?void 0:Tn.source}}};var qn,An,kn;he.parameters={...he.parameters,docs:{...(qn=he.parameters)==null?void 0:qn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(kn=(An=he.parameters)==null?void 0:An.docs)==null?void 0:kn.source}}};var On,_n,En;we.parameters={...we.parameters,docs:{...(On=we.parameters)==null?void 0:On.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(En=(_n=we.parameters)==null?void 0:_n.docs)==null?void 0:En.source}}};var xn,Sn,Nn;Ce.parameters={...Ce.parameters,docs:{...(xn=Ce.parameters)==null?void 0:xn.docs,source:{originalSource:`args => {
  const ref = useRef(undefined);
  return <ConditionBuilder {...args} ref={ref} {...requiredProps} />;
}`,...(Nn=(Sn=Ce.parameters)==null?void 0:Sn.docs)==null?void 0:Nn.source}}};const Ga=["conditionBuilder","conditionBuilderDynamicOptions","conditionBuilderWithInitialState","conditionBuilderWithCustomStatements","conditionBuilderWithActions","conditionBuilderHierarchical","conditionBuilderWithInitialStateHierarchical","conditionBuilderWithActionsHierarchical"];export{Ga as __namedExportsOrder,se as conditionBuilder,ye as conditionBuilderDynamicOptions,he as conditionBuilderHierarchical,be as conditionBuilderWithActions,Ce as conditionBuilderWithActionsHierarchical,ve as conditionBuilderWithCustomStatements,fe as conditionBuilderWithInitialState,we as conditionBuilderWithInitialStateHierarchical,Ha as default};
