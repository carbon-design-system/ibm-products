import{r as i,u as ee,e as n,c as E,p as A,I as _,n as te,C as ne,P as e}from"./iframe-YKw9nL_F.js";import{g as ae}from"./devtools-DSZ92uOv.js";import{W as ie}from"./bucket-19-BU_wesH_.js";import{E as re}from"./bucket-6-BAcs6e6G.js";const $="EditInPlace",t=`${A.prefix}--edit-in-place`,le={tooltipAlignment:"top"};let p=i.forwardRef(({cancelLabel:I,editAlwaysVisible:S,editLabel:H,id:L,inheritTypography:z,invalid:l,invalidLabel:B=" ",invalidText:F,labelText:V,onCancel:O,onChange:W,onSave:j,onBlur:k,saveLabel:D,size:o="sm",tooltipAlignment:f,value:s,placeholder:K,...G},J)=>{const[P,u]=i.useState(!1),[m,x]=i.useState(""),[g,h]=i.useState(!1),r=i.useRef(null),v=s!==m&&!l,y=i.useRef(!1),C=ee(),M=typeof f=="object",b=["edit","save","cancel"].reduce((a,c)=>(a[c]=(M?f[c]:f)??le.tooltipAlignment,a),{});i.useEffect(()=>{!m&&!g&&x(s)},[m,g,s]);const T=({currentTarget:a,relatedTarget:c})=>a.contains(c),Q=({target:a})=>{g||h(!0),W(a.value)},R=a=>{T(a)||(r.current?.focus(),u(!0))},w=()=>{x(s),h(!1),j(),u(!1)},q=()=>{h(!1),O(m)},U=a=>{if(typeof k=="function"&&!T(a))k(m),u(!1);else{if(y.current)return;T(a)||(v?w():(q(),u(!1)))}},X=()=>{v&&w()},Y=()=>{q()},N=()=>{r.current?.blur(),u(!1)},Z=a=>{switch(y.current=!0,a.key){case"Escape":N(),Y();break;case"Enter":N(),X();break}y.current=!1};return n.createElement("div",{...G,ref:J,...ae($)},n.createElement("div",{className:E(t,`${t}--${o}`,{[`${t}--focused`]:P,[`${t}--invalid`]:l,[`${t}--inherit-type`]:z,[`${t}--overflows`]:r.current&&r.current.scrollWidth>r.current.offsetWidth}),onFocus:R,onBlur:U},n.createElement("input",{id:L,className:E(`${t}__text-input`,`${C}--text-input`,`${C}--text-input--${o}`),type:"text",placeholder:K,value:s,onChange:Q,ref:r,onKeyDown:Z,"aria-label":V,"aria-invalid":l}),n.createElement("div",{className:`${t}__toolbar`},l&&n.createElement(ie,{size:16,className:`${t}__warning-icon`}),P?n.createElement(n.Fragment,null,n.createElement(_,{align:b.cancel,size:o,label:I,onClick:q,kind:"ghost",key:"cancel",className:`${t}__btn ${t}__btn-cancel`},n.createElement(te,{size:16})),n.createElement(_,{align:b.save,size:o,label:D,onClick:w,kind:"ghost",key:"save",className:`${t}__btn ${t}__btn-save`,disabled:!v},n.createElement(ne,{size:16}))):n.createElement(_,{align:b.edit,className:E(`${t}__btn`,`${t}__btn-edit`,{[`${t}__btn-edit--always-visible`]:S}),size:o,label:H,onClick:R,kind:"ghost",key:"edit"},n.createElement(re,{size:16})))),l&&n.createElement("p",{className:`${t}__warning-text`},F??B))});p=A.checkComponentEnabled(p,$);p.displayName=$;const oe={invalidText:e.string},d=e.oneOf(["top","top-left","top-right","bottom","bottom-left","bottom-right","left","right"]);p.propTypes={cancelLabel:e.string.isRequired,editAlwaysVisible:e.bool,editLabel:e.string.isRequired,id:e.string.isRequired,inheritTypography:e.bool,invalid:e.bool,invalidText:e.string,labelText:e.string.isRequired,onBlur:e.func,onCancel:e.func.isRequired,onChange:e.func.isRequired,onSave:e.func.isRequired,placeholder:e.string,saveLabel:e.string.isRequired,size:e.oneOf(["sm","md","lg"]),tooltipAlignment:e.oneOfType([d,e.shape({cancel:d,edit:d,save:d})]),value:e.string.isRequired,...oe};p.__docgenInfo={description:"",methods:[],displayName:"EditInPlace",props:{cancelLabel:{required:!0,tsType:{name:"string"},description:"label for cancel button",type:{name:"string"}},editAlwaysVisible:{required:!1,tsType:{name:"boolean"},description:"By default the edit icon is shown on hover only.",type:{name:"bool"}},editLabel:{required:!0,tsType:{name:"string"},description:"label for edit button",type:{name:"string"}},id:{required:!0,tsType:{name:"string"},description:"Specify a custom id for the input",type:{name:"string"}},inheritTypography:{required:!1,tsType:{name:"boolean"},description:`inheritTypography - causes the text entry field to inherit typography settings
assigned to the container. This is useful when editing titles for instance.

NOTE: The size property limits the vertical size of the input element.
Inherited font's should be selected to fit within the size selected.`,type:{name:"bool"}},invalid:{required:!1,tsType:{name:"boolean"},description:"determines if the input is invalid",type:{name:"bool"}},invalidText:{required:!1,tsType:{name:"string"},description:"text that is displayed if the input is invalid",type:{name:"string"}},labelText:{required:!0,tsType:{name:"string"},description:"Provide the text that will be read by a screen reader when visiting this control",type:{name:"string"}},onBlur:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"handler to add custom onBlur event",type:{name:"func"}},onCancel:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"handler that is called when the cancel button is pressed or when the user removes focus from the input and there is no new value",type:{name:"func"}},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"handler that is called when the input is updated",type:{name:"func"}},onSave:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler that is called when the save button is pressed or when the user removes focus from the input if it has a new value",type:{name:"func"}},saveLabel:{required:!0,tsType:{name:"string"},description:"label for save button",type:{name:"string"}},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"vertical size of control",defaultValue:{value:"'sm'",computed:!1},type:{name:"enum",value:[{value:"'sm'",computed:!1},{value:"'md'",computed:!1},{value:"'lg'",computed:!1}]}},tooltipAlignment:{required:!1,tsType:{name:"union",raw:"AlignPropType | Shape",elements:[{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}],required:!0},{name:"signature",type:"object",raw:`{
  cancel: AlignPropType;
  edit: AlignPropType;
  save: AlignPropType;
}`,signature:{properties:[{key:"cancel",value:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}],required:!0}},{key:"edit",value:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}],required:!0}},{key:"save",value:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}],required:!0}}]}}]},description:`tooltipAlignment from the standard tooltip. Default center.

Can be passed either as one of tooltip options or as an object specifying cancel, edit and save separately`,type:{name:"union",value:[{name:"custom",raw:"alignPropType"},{name:"shape",value:{cancel:{name:"custom",raw:"alignPropType",required:!1},edit:{name:"custom",raw:"alignPropType",required:!1},save:{name:"custom",raw:"alignPropType",required:!1}}}]}},value:{required:!0,tsType:{name:"string"},description:"current value of the input",type:{name:"string"}},placeholder:{required:!1,tsType:{name:"string"},description:"placeholder for the input",type:{name:"string"}},invalidLabel:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"' '",computed:!1}}},composes:["PropsWithChildren"]};export{p as E};
