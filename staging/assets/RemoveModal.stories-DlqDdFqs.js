import{r as s,e as t}from"./index-CPiZ6Cnx.js";import{c as oe,P as e}from"./index-CXyjPnaX.js";import{p as _,B as v}from"./settings-iwZeeh4T.js";import{L as re}from"./Link-EP4KkhUp.js";import{S as ae}from"./StoryDocsPage-BfvnOk2Z.js";import{ae as se}from"./index-B_DdD064.js";import{b as ie}from"./story-helper-U7E6Psyp.js";import{C as pe,M as me,a as le,b as ce}from"./ComposedModal-BZzRRIGC.js";import{T as de}from"./TextInput-D6QswYlg.js";import{g as ue}from"./devtools-CjVY-wQW.js";import{u as ye}from"./usePortalTarget-2TvXB9Ir.js";import{u as fe}from"./uuidv4-BQrI85uz.js";import{u as ge}from"./usePreviousValue-CSEZflXC.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-BSHYryQu.js";import"./index-Bsyy8W_U.js";import"./events-OVwOsPzJ.js";import"./index-DJK44odq.js";import"./iframe-BFx4DPzL.js";import"../sb-preview/runtime.js";import"./jsx-runtime-Dc-z7RWI.js";import"./index-Df9so8jS.js";import"./index-DMCuvgYY.js";import"./index-DrFu-skq.js";import"./tslib.es6-rrx6G-_s.js";import"./index-Dcfl0vi2.js";import"./LayerContext-BGhaVt7n.js";import"./ButtonSet-DCPCKVSR.js";import"./InlineLoading-DZri6jHG.js";import"./bucket-6-BQYdmIZX.js";import"./bucket-2-L5Cs0C3i.js";import"./mergeRefs-CTUecegF.js";import"./requiredIfGivenPropIsTruthy-CU7JwK8h.js";import"./wrapFocus-i_P_nIQh.js";import"./useNormalizedInputProps-Dv8FHz9Q.js";import"./Text-vNWzJqus.js";import"./bucket-18-By6NmkK1.js";import"./FormContext-CgeSXHS1.js";import"./useAnnouncer-Dwt0jqXi.js";import"./feature-flags-B_abUzZ5.js";import"./index-BLF2Ep9P.js";const x="RemoveModal";let r=s.forwardRef(({body:o,className:f,iconDescription:g,inputInvalidText:b,inputLabelText:c,inputPlaceholderText:H,label:G,onClose:C,onRequestSubmit:U,open:d,portalTarget:z,preventCloseOnClickOutside:A,primaryButtonDisabled:V,primaryButtonText:j,primaryDangerDescription:J,resourceName:K,secondaryButtonText:Q,textConfirmation:h,title:O,...W},X)=>{const a=ge({open:d}),[R,B]=s.useState(""),Y=s.useRef(fe()),Z=ye(z),ee=ne=>{B(ne.target.value)},te=V?!0:!!(h&&R!==K),T=`${_.prefix}--remove-modal`;return s.useEffect(()=>{!d&&(a!=null&&a.open)&&B("")},[d,a==null?void 0:a.open]),Z(t.createElement(pe,{...W,className:oe(T,f),size:"sm","aria-label":O,open:d,ref:X,preventCloseOnClickOutside:A,onClose:C,...ue(x)},t.createElement(me,{title:O,label:G,iconDescription:g}),t.createElement(le,null,typeof o=="string"?t.createElement("p",{className:`${T}__body`},o):o,h&&t.createElement(de,{id:`${Y.current}-confirmation-input`,className:`${T}__input`,invalidText:b,labelText:c,placeholder:H,onChange:ee,value:R,"data-modal-primary-focus":!0})),t.createElement(ce,null,t.createElement(v,{type:"button",kind:"secondary",onClick:C,"data-modal-primary-focus":!h},Q),t.createElement(v,{type:"submit",kind:"danger",dangerDescription:J,onClick:U,disabled:te},j))))});r=_.checkComponentEnabled(r,x);r.propTypes={body:e.node.isRequired,className:e.string,iconDescription:e.string.isRequired,inputInvalidText:e.string,inputLabelText:e.node,inputPlaceholderText:e.string,label:e.string,onClose:e.func,onRequestSubmit:e.func,open:e.bool.isRequired,portalTarget:e.node,preventCloseOnClickOutside:e.bool,primaryButtonDisabled:e.bool,primaryButtonText:e.string,primaryDangerDescription:e.string,resourceName:e.string.isRequired,secondaryButtonText:e.string,textConfirmation:e.bool,title:e.string.isRequired};r.displayName=x;r.__docgenInfo={description:"",methods:[],displayName:"RemoveModal",props:{body:{required:!0,tsType:{name:"ReactNode"},description:"The content to be displayed in the body of the modal",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Optional classname",type:{name:"string"}},iconDescription:{required:!0,tsType:{name:"string"},description:'Provide a description for "close" icon that can be read by screen readers',type:{name:"string"}},inputInvalidText:{required:!1,tsType:{name:"string"},description:"Message showed when user input fails validation",type:{name:"string"}},inputLabelText:{required:!1,tsType:{name:"ReactNode"},description:"Label for text box",type:{name:"node"}},inputPlaceholderText:{required:!1,tsType:{name:"string"},description:"Placeholder for text box",type:{name:"string"}},label:{required:!1,tsType:{name:"string"},description:"Specify the modal label texts",type:{name:"string"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Callback function that runs when user closes the modal",type:{name:"func"}},onRequestSubmit:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Callback function that runs when user submits the modal",type:{name:"func"}},open:{required:!0,tsType:{name:"boolean"},description:"Specify whether the Modal is currently open",type:{name:"bool"}},portalTarget:{required:!1,tsType:{name:"ReactNode"},description:"The DOM node the tearsheet should be rendered within. Defaults to document.body.",type:{name:"node"}},preventCloseOnClickOutside:{required:!1,tsType:{name:"boolean"},description:"Prevent closing on click outside of modal",type:{name:"bool"}},primaryButtonDisabled:{required:!1,tsType:{name:"boolean"},description:"Specify whether the primary button should be disabled. This value will override textConfirmation",type:{name:"bool"}},primaryButtonText:{required:!1,tsType:{name:"string"},description:"Specify the text for the primary button",type:{name:"string"}},primaryDangerDescription:{required:!1,tsType:{name:"string"},description:"Specify the danger description on the primary button",type:{name:"string"}},resourceName:{required:!0,tsType:{name:"string"},description:"The name of the resource being acted upon",type:{name:"string"}},secondaryButtonText:{required:!1,tsType:{name:"string"},description:"Specify the text for the secondary button",type:{name:"string"}},textConfirmation:{required:!1,tsType:{name:"boolean"},description:"Specify whether or not to show the text confirmation input",type:{name:"bool"}},title:{required:!0,tsType:{name:"string"},description:"The text displayed at the top of the modal",type:{name:"string"}}}};const F=()=>{const{csfFile:o}=se("meta",["meta"]);return t.createElement(ae,{altGuidelinesHref:[ie(o),{href:"https://www.carbondesignsystem.com/components/modal/usage",label:"Carbon Modal usage guidelines"},{href:"https://react.carbondesignsystem.com/?path=/docs/modal--default",label:"Carbon Modal documentation"}]})};F.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const at={title:"IBM Products/Patterns/Remove/RemoveModal",component:r,tags:["autodocs"],parameters:{docs:{page:F}},argTypes:{portalTarget:{control:!1}}},n="bx1001",u={body:`Deleting ${n} will permanently delete the configuration. This action cannot be undone.`,className:"remove-modal-test",title:"Confirm delete",iconDescription:"Close",inputInvalidText:"A valid value is required",inputLabelText:`Type ${n} to confirm`,inputPlaceholderText:"Name of resourceName",onClose:()=>!1,open:!0,primaryButtonDisabled:!1,primaryButtonText:"Delete",resourceName:n,secondaryButtonText:"Cancel",label:`Delete ${n}`,preventCloseOnClickOutside:!0},y=({open:o,...f},g)=>{const[b,c]=s.useState(g.viewMode!=="docs"&&o);return t.createElement(t.Fragment,null,t.createElement(r,{...f,open:b,onClose:()=>c(!1)}),t.createElement(v,{onClick:()=>c(!0)},"Launch modal"))},i=y.bind({});i.args={...u,body:`Removing ${n} will permanently remove the configuration. This action cannot be undone.`,title:"Confirm removal",primaryButtonText:"Remove",label:`Remove ${n}`};const p=y.bind({});p.args={...u,body:`Removing ${n} will permanently remove the configuration. This action cannot be undone.`,title:"Confirm removal",primaryButtonText:"Remove",label:`Remove ${n}`,open:!0};const m=y.bind({});m.args={...u,textConfirmation:!0};const l=y.bind({});l.args={...u,body:t.createElement(t.Fragment,null,`Before removing ${n}, you can find out more information on the `,t.createElement(re,{href:"https://www.carbondesignsystem.com"},"Carbon Design System")," website.")};var w,q,D;i.parameters={...i.parameters,docs:{...(w=i.parameters)==null?void 0:w.docs,source:{originalSource:`({
  open: initOpen,
  ...args
}, context) => {
  const [open, setOpen] = useState(context.viewMode !== 'docs' && initOpen);
  return <>
      <RemoveModal {...args} open={open} onClose={() => setOpen(false)} />
      <Button onClick={() => setOpen(true)}>Launch modal</Button>
    </>;
}`,...(D=(q=i.parameters)==null?void 0:q.docs)==null?void 0:D.source}}};var P,M,S;p.parameters={...p.parameters,docs:{...(P=p.parameters)==null?void 0:P.docs,source:{originalSource:`({
  open: initOpen,
  ...args
}, context) => {
  const [open, setOpen] = useState(context.viewMode !== 'docs' && initOpen);
  return <>
      <RemoveModal {...args} open={open} onClose={() => setOpen(false)} />
      <Button onClick={() => setOpen(true)}>Launch modal</Button>
    </>;
}`,...(S=(M=p.parameters)==null?void 0:M.docs)==null?void 0:S.source}}};var k,E,N;m.parameters={...m.parameters,docs:{...(k=m.parameters)==null?void 0:k.docs,source:{originalSource:`({
  open: initOpen,
  ...args
}, context) => {
  const [open, setOpen] = useState(context.viewMode !== 'docs' && initOpen);
  return <>
      <RemoveModal {...args} open={open} onClose={() => setOpen(false)} />
      <Button onClick={() => setOpen(true)}>Launch modal</Button>
    </>;
}`,...(N=(E=m.parameters)==null?void 0:E.docs)==null?void 0:N.source}}};var $,I,L;l.parameters={...l.parameters,docs:{...($=l.parameters)==null?void 0:$.docs,source:{originalSource:`({
  open: initOpen,
  ...args
}, context) => {
  const [open, setOpen] = useState(context.viewMode !== 'docs' && initOpen);
  return <>
      <RemoveModal {...args} open={open} onClose={() => setOpen(false)} />
      <Button onClick={() => setOpen(true)}>Launch modal</Button>
    </>;
}`,...(L=(I=l.parameters)==null?void 0:I.docs)==null?void 0:L.source}}};const st=["Standard","RemovePattern","DeletePattern","ComponentInBodyPattern"];export{l as ComponentInBodyPattern,m as DeletePattern,p as RemovePattern,i as Standard,st as __namedExportsOrder,at as default};
