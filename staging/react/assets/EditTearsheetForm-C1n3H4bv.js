import{r as n,e as t,c as R,p as $,P as e,O as j}from"./iframe-DoONWhft.js";import{F as D}from"./FormGroup-Bo25NDoU.js";import{G as S}from"./Grid-Bf4j0Z5G.js";import{C as F}from"./Column-lwC6RJlb.js";import{F as M}from"./Form-BPhIljGx.js";import{a as H,b as J}from"./SideNavLinkText-D6fH2ijm.js";import{S as K}from"./SideNavMenuItem-niAHjEZA.js";import{g as Q}from"./devtools-Bope-Kcp.js";import{T as X}from"./TearsheetShell-BvezJUGw.js";import{p as Z}from"./props-helper-CgHaYMy-.js";const w="EditTearsheet",g=`${$.prefix}--tearsheet-edit`,_=n.createContext(null),k=n.createContext(0),T={verticalPosition:"normal",influencerWidth:"narrow",sideNavAriaLabel:"Side navigation"},y=n.forwardRef(({cancelButtonText:a,children:r,className:o,description:i,influencerWidth:f=T.influencerWidth,label:d,onClose:c,open:h,submitButtonText:b,title:v,verticalPosition:m=T.verticalPosition,onRequestSubmit:u,onFormChange:N,sideNavAriaLabel:I=T.sideNavAriaLabel,...x},A)=>{const[L,q]=n.useState(!1),O=async()=>{q(!0);try{await u()}catch(s){console.warn(`${w} submit error: ${s}`)}q(!1)},W=[{key:"edit-action-button-submit",label:b,onClick:()=>O(),loading:L,kind:"primary"},{key:"edit-action-button-cancel",label:a,onClick:c,kind:"ghost"}],[E,B]=n.useState(0),[G,V]=n.useState([]),U=n.useRef(null),Y=s=>{B(s),N&&N(s)};function z(){return t.createElement("div",{className:`${g}__side-nav-wrapper`},t.createElement(H,{"aria-label":I,className:`${g}__side-nav`,expanded:!0,isFixedNav:!1},t.createElement(J,null,G.map((s,p)=>t.createElement(K,{key:p,onClick:()=>Y(p),isActive:E===p},s)))))}return t.createElement(X,{...Q(w),...Z(x),actions:W,children:r,className:R(g,o),description:i,influencerPosition:"left",influencerWidth:f,label:d,onClose:c,open:h,size:"wide",title:v,verticalPosition:m,...x,hasCloseIcon:!1,influencer:z(),ref:A},t.createElement("div",{className:`${g}__content`,ref:U,role:"main"},t.createElement(M,null,t.createElement(_.Provider,{value:{currentForm:E,setFormTitles:V}},t.Children.map(r,(s,p)=>t.createElement(k.Provider,{value:p},s))))))});y.deprecated={level:"warn",details:"This component is deprecated and will be removed in the next major version."};y.displayName=w;y.propTypes={cancelButtonText:e.string,children:e.node,className:e.string,description:e.node,influencerWidth:e.oneOf(["narrow","wide"]),label:e.node,onClose:e.func,onFormChange:e.func,onRequestSubmit:e.func.isRequired,open:e.bool,sideNavAriaLabel:e.string,submitButtonText:e.string,title:e.node,verticalPosition:e.oneOf(["normal","lower"])};y.__docgenInfo={description:`**This component is deprecated.** <br>
Use Tearsheet with medium to complex edits. See usage guidance for further information.
@deprecated`,methods:[],displayName:"EditTearsheet",props:{cancelButtonText:{required:!1,tsType:{name:"string"},description:"The cancel button text",type:{name:"string"}},children:{required:!1,tsType:{name:"ReactNode"},description:"The main content of the tearsheet",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"An optional class or classes to be added to the outermost element.",type:{name:"string"}},description:{required:!1,tsType:{name:"ReactNode"},description:"A description of the flow, displayed in the header area of the tearsheet.",type:{name:"node"}},influencerWidth:{required:!1,tsType:{name:"union",raw:"'narrow' | 'wide'",elements:[{name:"literal",value:"'narrow'"},{name:"literal",value:"'wide'"}]},description:"Used to set the size of the influencer",defaultValue:{value:"'narrow'",computed:!1},type:{name:"enum",value:[{value:"'narrow'",computed:!1},{value:"'wide'",computed:!1}]}},label:{required:!1,tsType:{name:"ReactNode"},description:`A label for the tearsheet, displayed in the header area of the tearsheet
to maintain context for the tearsheet (e.g. as the title changes from page
to page of a multi-page task).`,type:{name:"node"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => boolean | void",signature:{arguments:[],return:{name:"union",raw:"boolean | void",elements:[{name:"boolean"},{name:"void"}]}}},description:"An optional handler that is called when the user closes the tearsheet (by\nclicking the close button, if enabled, or clicking outside, if enabled).\nReturning `false` here prevents the modal from closing.",type:{name:"func"}},onFormChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(formIndex: number) => number",signature:{arguments:[{type:{name:"number"},name:"formIndex"}],return:{name:"number"}}},description:`An optional handler that is called when a user changes forms via clicking
an influencer nav item.
Returns the index of the selected form.`,type:{name:"func"}},onRequestSubmit:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:`Specify a handler for submitting the tearsheet. Throughout its execution
the submit button will be disabled and include a loading indicator.`,type:{name:"func"}},open:{required:!1,tsType:{name:"boolean"},description:"Specifies whether the tearsheet is currently open.",type:{name:"bool"}},sideNavAriaLabel:{required:!1,tsType:{name:"string"},description:"Specifies the aria label for the SideNav from Carbon UIShell",defaultValue:{value:"'Side navigation'",computed:!1},type:{name:"string"}},submitButtonText:{required:!1,tsType:{name:"string"},description:"The submit button text",type:{name:"string"}},title:{required:!1,tsType:{name:"ReactNode"},description:"The main title of the tearsheet, displayed in the header area.",type:{name:"node"}},verticalPosition:{required:!1,tsType:{name:"union",raw:"'normal' | 'lower'",elements:[{name:"literal",value:"'normal'"},{name:"literal",value:"'lower'"}]},description:`The position of the top of tearsheet in the viewport. The 'normal'
position (the default) is a short distance down from the top of the
viewport, leaving room at the top for a global header bar to show through
from below. The 'lower' position provides a little extra room at the top
to allow an action bar navigation or breadcrumbs to also show through.`,defaultValue:{value:"'normal'",computed:!1},type:{name:"enum",value:[{value:"'normal'",computed:!1},{value:"'lower'",computed:!1}]}}},composes:["PropsWithChildren"]};const ee=({formContext:a,formNumber:r,title:o})=>{n.useEffect(()=>{a&&a.setFormTitles(i=>{if(i[r]!==o){const d=[...i];return d[r]=o,d}return i})},[o,a,r])},C="EditTearsheetForm",l=`${$.prefix}--tearsheet-edit__form`,te={hasFieldset:!0},P=n.forwardRef(({children:a,className:r,description:o,fieldsetLegendText:i,fieldsetLegendId:f,hasFieldset:d=te.hasFieldset,subtitle:c,title:h,...b},v)=>{const m=n.useContext(_),u=n.useContext(k);return ee({formContext:m,formNumber:u,title:h}),m?t.createElement("div",{...b,className:R(l,r,{[`${l}__form--hidden-form`]:u!==m?.currentForm,[`${l}__form--visible-form`]:u===m?.currentForm}),ref:v},t.createElement(S,null,t.createElement(F,{xlg:12,lg:12,md:8,sm:4},t.createElement("h4",{className:`${l}--title`},h),c&&t.createElement("h5",{className:`${l}--subtitle`},c),o&&t.createElement("p",{className:`${l}--description`},o)),t.createElement(F,{span:100},d?t.createElement(D,{legendText:i,className:`${l}--fieldset`,legendId:f},t.createElement(S,null,a)):a))):j.warn(`You have tried using a ${C} component outside of a EditTearsheet. This is not allowed. ${C}s should always be children of the EditTearsheet`)});P.propTypes={children:e.node,className:e.string,description:e.string,fieldsetLegendId:e.node,fieldsetLegendText:e.string,hasFieldset:e.bool,subtitle:e.string,title:e.node.isRequired};P.__docgenInfo={description:"",methods:[],displayName:"EditTearsheetForm",props:{children:{required:!1,tsType:{name:"ReactNode"},description:"Content that shows in the tearsheet form",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Sets an optional className to be added to the tearsheet form",type:{name:"string"}},description:{required:!1,tsType:{name:"string"},description:"Sets an optional description on the form component",type:{name:"string"}},hasFieldset:{required:!1,tsType:{name:"boolean"},description:"This optional prop will render your form content inside of a fieldset html element\nand is defaulted to true.\nYou can set this prop to `false` if you have multiple fieldset elements or want to control the children of your Full Page's form content.",defaultValue:{value:"true",computed:!1},type:{name:"bool"}},subtitle:{required:!1,tsType:{name:"string"},description:"Sets an optional subtitle on the form component",type:{name:"string"}},title:{required:!0,tsType:{name:"ReactNode"},description:"Sets the title text for a tearsheet form",type:{name:"node"}},fieldsetLegendId:{description:"This is the required legend id that appears as the aria-labelledby of fieldset for accessibility purposes.",type:{name:"node"},required:!1},fieldsetLegendText:{description:"This is the required legend text that appears above a fieldset html element for accessibility purposes.\nYou can set the `hasFieldset` prop to false if you have multiple fieldset elements or want to control the children of your Full Page's form content.\nOtherwise, use CSS to hide/remove this label text.",type:{name:"string"},required:!1}}};export{y as E,P as a};
