import{r as a,e as t,c as w,p as B,P as e,U as Te,V as we}from"./iframe-DMSo7fNu.js";import{T as W}from"./Tag-D28a0JZP.js";import{D as ee}from"./DismissibleTag-BAfTJg1F.js";import{C as Se,M as _e,a as Ce}from"./ComposedModal-OT4_uwBu.js";import{S as Ne}from"./Search-Ck63I16p.js";import{p as qe,i as Ee}from"./props-helper-CdGlpuWB.js";import{u as ke}from"./usePortalTarget-CHvIgtI6.js";import{L as $e}from"./Link-BdXLZ6TX.js";import{O as te}from"./OperationalTag-BrXVeuQ3.js";import{u as Oe}from"./useClickOutside-CAidSw2p.js";import{g as Ae}from"./devtools-BJavCYMb.js";import{u as ae}from"./useResizeObserver-DBjG5WR6.js";const Re="TagSetModal",V=`${B.prefix}--tag-set-modal`,le={modalAriaLabel:"List of all tags",searchLabel:""},I=({allTags:r,className:E,title:P,modalAriaLabel:M=le.modalAriaLabel,onClose:g,open:S,portalTarget:n,searchLabel:h=le.searchLabel,searchPlaceholder:L,..._})=>{const[y,z]=a.useState([]),[C,N]=a.useState(""),v=ke(n);a.useEffect(()=>{let s=[];if(S)if(C===""&&r)s=r?.slice(0);else{const c=C.toLocaleLowerCase();r?.forEach(f=>{const m=f["data-search"]?.toLocaleLowerCase()?.indexOf(c),d=f.label?.toLocaleLowerCase()?.indexOf(c);(m>-1||d>-1)&&s.push(f)})}z(s)},[r,S,C]);const o=s=>{N(s.target.value||"")};return v(t.createElement(Se,{..._,containerClassName:`${V}__container`,className:w(E,`${V}`),size:"sm",open:S,onClose:g},t.createElement(_e,{className:`${V}__header`,closeModal:g,title:P},t.createElement(Ne,{"data-modal-primary-focus":!0,className:`${V}__search`,labelText:h,placeholder:L,onChange:o,size:"lg"})),t.createElement(Ce,{className:`${V}__body`,hasForm:!0,hasScrollingContent:!0,"aria-label":M},y.map(({label:s,...c},f)=>t.createElement(W,{...c,key:`all-tags-${f}`},s)),t.createElement("div",{className:`${V}__fade`}))))};I.propTypes={allTags:e.arrayOf(e.shape({...qe(W.propTypes,"filter"),label:e.string.isRequired})),className:e.string,onClose:e.func,open:e.bool,portalTarget:e.node,searchLabel:e.string,searchPlaceholder:e.string,title:e.string};I.displayName=Re;const Me="TagSetOverflow",u=`${B.prefix}--tag-set-overflow`,Le={allTagsModalSearchThreshold:10},U=t.forwardRef(({allTagsModalSearchThreshold:r=Le.allTagsModalSearchThreshold,onOverflowClick:E,className:P,onShowAllClick:M,overflowAlign:g="bottom",overflowAutoAlign:S,overflowTags:n,overflowType:h,showAllTagsLabel:L,popoverOpen:_=!1,setPopoverOpen:y,size:z,...C},N)=>{const v=a.useRef(null),o=a.useRef(null);Oe(N||v,()=>{_&&y(!1)});const s=m=>{m.stopPropagation(),m.preventDefault(),y(!1),M()},c=m=>{const{key:d}=m;d==="Escape"&&y(!1)},f=()=>{E?E(n):y(!_)};return E?t.createElement("span",{...C,"aria-hidden":n.length===0,className:w(`${u}`,{[`${u}--hidden`]:n.length===0}),ref:N||v},t.createElement(te,{onClick:()=>f(),className:`${u}__popover-trigger`,size:z,text:`+${n.length}`})):t.createElement("span",{...C,"aria-hidden":n.length===0,className:w(`${u}`,{[`${u}--hidden`]:n.length===0}),ref:N||v},t.createElement(Te,{align:g,className:w(P,`${u}__tagset-popover`),dropShadow:!0,highContrast:!0,onKeyDown:c,open:_,autoAlign:S},t.createElement(te,{onClick:()=>y(!_),className:w(`${u}__popover-trigger`),size:z,text:`+${n.length}`}),t.createElement(we,null,t.createElement("div",{ref:o,className:`${u}__content`},t.createElement("ul",{className:`${u}__tag-list`},n.filter((m,d)=>n.length>r?d<r:d<=r).map((m,d)=>{const b={};if(h==="tag"&&(b.type="high-contrast"),h==="default"&&(b.filter=!1),t.isValidElement(m))return t.createElement("li",{className:w(`${u}__tag-item`,{[`${u}__tag-item--default`]:h==="default",[`${u}__tag-item--tag`]:h==="tag"}),key:d},t.cloneElement(m,b))})),n.length>r&&t.createElement($e,{className:`${u}__show-all-tags-link`,href:"",onClick:s,role:"button"},L)))))});U.displayName=Me;U.propTypes={allTagsModalSearchThreshold:e.number,className:e.string,onOverflowClick:e.func,onShowAllClick:e.func.isRequired,overflowAlign:e.oneOf(["top","top-left","top-right","bottom","bottom-left","bottom-right","left","left-bottom","left-top","right","right-bottom","right-top"]),overflowAutoAlign:e.bool,overflowTags:e.arrayOf(e.object).isRequired,overflowType:e.oneOf(["default","tag"]),popoverOpen:e.bool,setPopoverOpen:e.func.isRequired,showAllTagsLabel:e.string,size:e.string};U.__docgenInfo={description:"",methods:[],displayName:"TagSetOverflow",props:{allTagsModalSearchThreshold:{required:!1,tsType:{name:"number"},description:"count of overflowTags over which a modal is offered",defaultValue:{value:"10",computed:!1},type:{name:"number"}},className:{required:!1,tsType:{name:"string"},description:"className",type:{name:"string"}},onOverflowClick:{required:!1,tsType:{name:"union",raw:"((overFlowTags: ReactNode[]) => void) | undefined",elements:[{name:"unknown"},{name:"undefined"}]},description:"An optional click handler that overrides the default functionality of displaying all tags in a modal",type:{name:"func"}},onShowAllClick:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"function to execute on clicking show all",type:{name:"func"}},overflowAlign:{required:!1,tsType:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'left-bottom'
| 'left-top'
| 'right'
| 'right-bottom'
| 'right-top'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'left-bottom'"},{name:"literal",value:"'left-top'"},{name:"literal",value:"'right'"},{name:"literal",value:"'right-bottom'"},{name:"literal",value:"'right-top'"}]},description:"overflowAlign from the standard tooltip",defaultValue:{value:"'bottom'",computed:!1},type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'top-left'",computed:!1},{value:"'top-right'",computed:!1},{value:"'bottom'",computed:!1},{value:"'bottom-left'",computed:!1},{value:"'bottom-right'",computed:!1},{value:"'left'",computed:!1},{value:"'left-bottom'",computed:!1},{value:"'left-top'",computed:!1},{value:"'right'",computed:!1},{value:"'right-bottom'",computed:!1},{value:"'right-top'",computed:!1}]}},overflowTags:{required:!0,tsType:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]"},description:`@type {Array<any>}
tags shown in overflow`,type:{name:"arrayOf",value:{name:"object"}}},overflowType:{required:!1,tsType:{name:"union",raw:"'default' | 'tag'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'tag'"}]},description:"Type of rendering displayed inside of the tag overflow component",type:{name:"enum",value:[{value:"'default'",computed:!1},{value:"'tag'",computed:!1}]}},overflowAutoAlign:{required:!1,tsType:{name:"boolean"},description:"Will auto-align the popover on first render if it is not visible. This prop is currently experimental and is subject to future changes.",type:{name:"bool"}},popoverOpen:{required:!1,tsType:{name:"boolean"},description:"Open state of the popover",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},setPopoverOpen:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"value"}],return:{name:"void"}}},description:"Setter function for the popoverOpen state value",type:{name:"func"}},showAllTagsLabel:{required:!1,tsType:{name:"string"},description:"label for the overflow show all tags link",type:{name:"string"}},size:{required:!1,tsType:{name:"string"},description:"Size of the overflow tag",type:{name:"string"}}}};const K="TagSet",T=`${B.prefix}--tag-set`,ne=10,oe={measurementOffset:0,onOverflowTagChange:()=>{}};let x=t.forwardRef(({align:r="start",allTagsModalTarget:E,className:P,maxVisible:M,multiline:g,overflowAutoAlign:S,overflowAlign:n="bottom",overflowClassName:h,overflowType:L="default",allTagsModalAriaLabel:_,allTagsModalTitle:y="All tags",allTagsModalSearchLabel:z="Search all tags",allTagsModalSearchPlaceholderText:C="Search all tags",showAllTagsLabel:N="View all tags",onOverflowClick:v,tags:o,containingElementRef:s,measurementOffset:c=oe.measurementOffset,onOverflowTagChange:f=oe.onOverflowTagChange,...m},d)=>{const[b,G]=a.useState(3),[re,ie]=a.useState([]),[ue,me]=a.useState([]),[pe,Y]=a.useState(!1),ce=a.useRef(null),j=d||ce,J=a.useRef(null),fe=a.useRef(null),[k,de]=a.useState([]),F=a.useRef(null),[D,ge]=a.useState(0),[Q,X]=a.useState(!1),he=()=>{Y(!0)};a.useEffect(()=>{const l=M||o?.length||0;ge(l)},[M,o]),a.useEffect(()=>{const l=[];me(o&&o.length>0?o.map(({label:i,id:$,filter:p,onClose:q,...O},A)=>t.createElement("div",{key:A,className:`${T}__sizing-tag`,ref:R=>{R!=null&&(l[A]=R)}},typeof q=="function"||p?t.createElement(ee,{...O,"data-original-id":$,text:i}):t.createElement(W,{...O,"data-original-id":$},i))):[]),de(l)},[o]);const Z=a.useCallback((l,i)=>{l?.(),i<=b-1&&X(!1)},[b]);a.useEffect(()=>{let l="md",i=o&&o.length>0?o.map(({label:p,onClose:q,filter:O,...A},R)=>(R==o.length-1&&A.size&&(l=A.size),typeof q=="function"||O?t.createElement(ee,{...A,key:`displayed-tag-${R}`,onClose:()=>Z(q,R),text:p}):t.createElement(W,{...A,key:`displayed-tag-${R}`},p))):[];const $=i.splice(b,i.length-b);i=i.map((p,q)=>t.createElement("div",{key:q,className:`${T}__displayed-tag`},p)),i.push(t.createElement(U,{allTagsModalSearchThreshold:ne,overflowAutoAlign:S,className:h,onShowAllClick:he,overflowTags:$,overflowAlign:n,overflowType:L,showAllTagsLabel:N,size:l,key:"displayed-tag-overflow",ref:F,popoverOpen:Q,onOverflowClick:v,setPopoverOpen:X})),f?.($),ie(i)},[b,n,h,L,N,v,o,f,Q,Z,S]);const H=a.useCallback(()=>{if(g)return G(D);let l=0;if(k.length>0){const i=typeof s!="function"&&s?.current,$=typeof c=="number"?c:0;let p=i?i.offsetWidth-$:j?.current.offsetWidth;for(const q in k){const O=k[q]?.offsetWidth||0;if(p>=O)p-=O,l+=1;else break}if(l<k.length&&F.current)for(;l>0&&p<F.current.offsetWidth;)l-=1,p+=k[l].offsetWidth}l<1?G(0):G(D?Math.min(l,D):l)},[D,g,k,j,c,s]);a.useEffect(()=>{H()},[H,D,g,k]);const ye=()=>{H()},ve=()=>{H()},be=()=>{Y(!1);const l=F.current?.querySelector("button");setTimeout(()=>l?.focus(),0)};return ae(J,ve),ae(s||j,ye),t.createElement("div",{...m,className:w([T,P]),ref:j,...Ae(K)},t.createElement("div",{className:w([`${T}__space`,`${T}__space--align-${r}`])},t.createElement("div",{className:`${T}__tag-container ${T}__tag-container--hidden`,"aria-hidden":!0,ref:J},ue),t.createElement("div",{className:w([`${T}__tag-container`,g&&`${T}__tag-container--multiline`]),ref:fe},re)),!v&&t.createElement(I,{allTags:o,open:pe,title:y,onClose:be,modalAriaLabel:_,searchLabel:z,searchPlaceholder:C,portalTarget:E}))});x=B.checkComponentEnabled(x,K);const Ye=Ee(e.string,({tags:r})=>r&&r.length>ne),ze={red:"Red",magenta:"Magenta",purple:"Purple",blue:"Blue",cyan:"Cyan",teal:"Teal",green:"Green",gray:"Gray","cool-gray":"Cool-Gray","warm-gray":"Warm-Gray","high-contrast":"High-Contrast",outline:"Outline"},se=Object.keys(ze);x.types=se;x.propTypes={align:e.oneOf(["start","center","end"]),allTagsModalAriaLabel:e.string,allTagsModalSearchLabel:e.string,allTagsModalSearchPlaceholderText:e.string,allTagsModalTarget:e.node,allTagsModalTitle:e.string,className:e.string,containingElementRef:e.object,maxVisible:e.number,measurementOffset:e.number,multiline:e.bool,onOverflowClick:e.func,onOverflowTagChange:e.func,overflowAlign:e.oneOf(["top","top-left","top-right","bottom","bottom-left","bottom-right","left","left-bottom","left-top","right","right-bottom","right-top"]),overflowAutoAlign:e.bool,overflowClassName:e.string,overflowType:e.oneOf(["default","tag"]),showAllTagsLabel:e.string,tags:e.arrayOf(e.shape({...W.propTypes,label:e.string.isRequired,type:e.oneOf(se)}))};x.displayName=K;x.__docgenInfo={description:"",methods:[],displayName:"TagSet",props:{align:{required:!1,tsType:{name:"union",raw:"'start' | 'center' | 'end'",elements:[{name:"literal",value:"'start'"},{name:"literal",value:"'center'"},{name:"literal",value:"'end'"}]},description:"align the Tags displayed by the TagSet. Default start.",defaultValue:{value:"'start'",computed:!1},type:{name:"enum",value:[{value:"'start'",computed:!1},{value:"'center'",computed:!1},{value:"'end'",computed:!1}]}},allTagsModalAriaLabel:{required:!1,tsType:{name:"string"},description:"aria label for all tags modal with hasScrollingContent",type:{name:"string"}},allTagsModalSearchLabel:{required:!1,tsType:{name:"string"},description:"label text for the show all search.",defaultValue:{value:"'Search all tags'",computed:!1},type:{name:"string"}},allTagsModalSearchPlaceholderText:{required:!1,tsType:{name:"string"},description:"placeholder text for the show all search.",defaultValue:{value:"'Search all tags'",computed:!1},type:{name:"string"}},allTagsModalTarget:{required:!1,tsType:{name:"ReactNode"},description:"portal target for the all tags modal",type:{name:"node"}},allTagsModalTitle:{required:!1,tsType:{name:"string"},description:"title for the show all modal.",defaultValue:{value:"'All tags'",computed:!1},type:{name:"string"}},className:{required:!1,tsType:{name:"string"},description:"className",type:{name:"string"}},containingElementRef:{required:!1,tsType:{name:"ReactRef",raw:"React.Ref<HTMLElement>",elements:[{name:"HTMLElement"}]},description:`Optional ref for custom resize container to measure available space
Default will measure the available space of the TagSet container itself.`,type:{name:"object"}},maxVisible:{required:!1,tsType:{name:"number"},description:"maximum visible tags",type:{name:"number"}},measurementOffset:{required:!1,tsType:{name:"number"},description:"Specify offset amount for measure available space, only used when `containingElementSelector`\nis also provided",defaultValue:{value:"0",computed:!1},type:{name:"number"}},multiline:{required:!1,tsType:{name:"boolean"},description:"display tags in multiple lines",type:{name:"bool"}},onOverflowClick:{required:!1,tsType:{name:"union",raw:"((overFlowTags: ReactNode[]) => void) | undefined",elements:[{name:"unknown"},{name:"undefined"}]},description:"An optional click handler that overrides the default functionality of displaying all tags in a modal",type:{name:"func"}},onOverflowTagChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: ReactNode) => void",signature:{arguments:[{type:{name:"ReactNode"},name:"value"}],return:{name:"void"}}},description:"Handler to get overflow tags",defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},overflowAlign:{required:!1,tsType:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'left-bottom'
| 'left-top'
| 'right'
| 'right-bottom'
| 'right-top'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'left-bottom'"},{name:"literal",value:"'left-top'"},{name:"literal",value:"'right'"},{name:"literal",value:"'right-bottom'"},{name:"literal",value:"'right-top'"}]},description:"overflowAlign from the standard tooltip. Default center.",defaultValue:{value:"'bottom'",computed:!1},type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'top-left'",computed:!1},{value:"'top-right'",computed:!1},{value:"'bottom'",computed:!1},{value:"'bottom-left'",computed:!1},{value:"'bottom-right'",computed:!1},{value:"'left'",computed:!1},{value:"'left-bottom'",computed:!1},{value:"'left-top'",computed:!1},{value:"'right'",computed:!1},{value:"'right-bottom'",computed:!1},{value:"'right-top'",computed:!1}]}},overflowAutoAlign:{required:!1,tsType:{name:"boolean"},description:"Will auto-align the popover on first render if it is not visible. This prop is currently experimental and is subject to future changes.",type:{name:"bool"}},overflowClassName:{required:!1,tsType:{name:"string"},description:"overflowClassName for the tooltip popup",type:{name:"string"}},overflowType:{required:!1,tsType:{name:"union",raw:"'default' | 'tag'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'tag'"}]},description:"Type of rendering displayed inside of the tag overflow component",defaultValue:{value:"'default'",computed:!1},type:{name:"enum",value:[{value:"'default'",computed:!1},{value:"'tag'",computed:!1}]}},showAllTagsLabel:{required:!1,tsType:{name:"string"},description:"label for the overflow show all tags link.",defaultValue:{value:"'View all tags'",computed:!1},type:{name:"string"}},tags:{required:!1,tsType:{name:"Array",elements:[{name:"intersection",raw:`{
  label: string;
  type?: keyof typeof tagTypes;
  /**
   * @deprecated Use the \`onClose\` function instead to render as a DismissibleTag
   */
  filter?: boolean;
} & TagBaseProps`,elements:[{name:"signature",type:"object",raw:`{
  label: string;
  type?: keyof typeof tagTypes;
  /**
   * @deprecated Use the \`onClose\` function instead to render as a DismissibleTag
   */
  filter?: boolean;
}`,signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"type",value:{name:"unknown",required:!1}},{key:"filter",value:{name:"boolean",required:!1},description:"@deprecated Use the `onClose` function instead to render as a DismissibleTag"}]}},{name:"TagBaseProps"}]}],raw:"TagType[]"},description:`The tags to be shown in the TagSet. Each tag is specified as an object
with properties: **label**\\* (required) to supply the tag content, and
other properties will be passed to the Carbon Tag component, such as
**type**, **disabled**, **ref**, **className** , and any other Tag props.

See https://react.carbondesignsystem.com/?path=/docs/components-tag--default`,type:{name:"arrayOf",value:{name:"shape",value:{label:{name:"string",required:!0},type:{name:"enum",value:[{value:'"red"',computed:!1},{value:'"magenta"',computed:!1},{value:'"purple"',computed:!1},{value:'"blue"',computed:!1},{value:'"cyan"',computed:!1},{value:'"teal"',computed:!1},{value:'"green"',computed:!1},{value:'"gray"',computed:!1},{value:'"cool-gray"',computed:!1},{value:'"warm-gray"',computed:!1},{value:'"high-contrast"',computed:!1},{value:'"outline"',computed:!1}],required:!1}}}}}},composes:["PropsWithChildren"]};export{x as T,Ye as s};
