import{e as i,S as u,r as x}from"./iframe-CoewCovk.js";import{g}from"./getBatchActions-CB6hWEOP.js";import{s as w,m as E}from"./_storybook-styles-BFvdjGMK.js";import{D as f}from"./DatagridActions-97kAof9x.js";import{D as S}from"./DatagridPagination-csJ2lEpl.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-Cr0FB-fQ.js";import{u as h}from"./useExpandedRow-B77oLjKX.js";import{u as D}from"./useSelectRows-CzKeJSfK.js";import{u as C}from"./useStickyColumn-BsUg6Kn_.js";import{u as R}from"./usePrefix-BHhEuvuv.js";import{E as H}from"./bucket-6-CLYzFK7W.js";import{T as b}from"./bucket-18-BpzWYukX.js";import"./bucket-0-CMdbbcAW.js";import"./bucket-2-CtVldtpu.js";import"./index-CsmjhMFW.js";import"./bucket-7-Dj2rYaKi.js";import"./bucket-19-DKxd3UR5.js";import"./ComposedModal-D1Nxft6T.js";import"./index-BEhuL1MR.js";import"./index-Cyg7a7UP.js";import"./LayerContext-kuW0qxpN.js";import"./clamp--00YEiB8.js";import"./ButtonSet-Cr-Fqob5.js";import"./InlineLoading-B2eXnIkW.js";import"./mergeRefs-D4pwfk3t.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-COQpSXAY.js";import"./Text-Db5H-8py.js";import"./utils-Bp6ze_2p.js";import"./TableToolbarSearch-BoSHteu8.js";import"./wrapComponent-BjK1lnee.js";import"./Search-B8UI4Fvk.js";import"./FormContext-CPXwcYYq.js";import"./bucket-15-4skPNO3q.js";import"./Dropdown-BS8RCd8O.js";import"./index-Lu5ZCrUL.js";import"./inheritsLoose-DHKJTbHM.js";import"./MenuItem-BE_TxASK.js";import"./useControllableState-DaEX3sx9.js";import"./useAttachedMenu-DisMwIU8.js";import"./index-eE0c798V.js";import"./index-Db7cgiYO.js";import"./bucket-13-kEbwoQWW.js";import"./useOutsideClick-BjkaPmco.js";import"./OverflowMenuItem-AdOGI2xf.js";import"./useFilterContext-BujhTQ2Q.js";import"./bucket-14-BpzSdjlW.js";import"./Pagination-esX4XiS1.js";import"./Select-Ccd8k_Ot.js";import"./SelectItem-CKQ0nP1C.js";import"./MultiSelect-CfuJ0_2a.js";import"./Checkbox-DeqUwwo0.js";import"./devtools-9nvRWAoA.js";import"./TableRow-B3uq9iow.js";import"./bucket-1-y7LosGnP.js";import"./TableToolbar-CdPlZqhg.js";import"./index-Dci_9JXV.js";import"./ErrorEmptyState-BlcMRnOo.js";import"./EmptyState-CBI53Yk2.js";import"./EmptyStateV2.deprecated-rfGhLqIl.js";import"./Link-CnJKU312.js";import"./ErrorIllustration-DS0lnkhu.js";import"./useId-BX45mjmh.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-DCdnEpTU.js";import"./NoDataIllustration-VGamBxGL.js";import"./NotFoundEmptyState-xz8YSirE.js";import"./NotFoundIllustration-KMs4-bG1.js";import"./index.esm-D3tP9Ffl.js";import"./usePreviousValue-CF6xtt65.js";import"./useResizeObserver-C89b-FZh.js";import"./useIsomorphicEffect-Cawv2SLq.js";import"./getFocusableElements-BW7cf991.js";import"./index-DERjXm5w.js";import"./props-helper-BRgWXp0Z.js";import"./useClickOutside-BM2XoXOW.js";import"./AccordionItem-DRYCMcXS.js";import"./DatePicker-DaoYkBcT.js";import"./FormGroup-MledKjZ_.js";import"./NumberInput-D2QuPvpm.js";import"./useNormalizedInputProps-2OS32PD4.js";import"./documentLang-E105Y72C.js";import"./bucket-16-cGJ0KSHs.js";import"./RadioButton-DBM0lH3Y.js";import"./RadioButtonGroup-CM9aMQRf.js";import"./usePrefersReducedMotion-DdHThNqK.js";import"./usePresence-DNqmtiug.js";import"./ActionSet-d0WjR72l.js";import"./useWindowResize-DksD137R.js";import"./TagSet-BgG3tROi.js";import"./Tag-DLc7aXsJ.js";import"./DefinitionTooltip-CDCcENL2.js";import"./DismissibleTag-IWYoLcTb.js";import"./usePortalTarget-DXZ_VUkb.js";import"./OperationalTag-BaI1cL_a.js";import"./SkeletonText-ZIMzN19w.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-C_O2-Pit.js";import"./TableSelectRow-BJnFvekA.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,Ht={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const bt=["ExpandableRowStory"];export{e as ExpandableRowStory,bt as __namedExportsOrder,Ht as default};
