import{e,r as d}from"./index-DtHxqM--.js";import"./index-4poXP75K.js";import{B as c}from"./settings-Bzj6EGPa.js";import{a as u}from"./index-B-lxVbXh.js";import{S as f}from"./StoryDocsPage-wPPqGWyY.js";import{u as g}from"./index-BwG5U4EM.js";import{I as n}from"./ImportModal-Daky-p42.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-DgLvjnYm.js";import"./index-CiYgQLeJ.js";import"./events-CdfZZS3f.js";import"./v4-CtRu48qb.js";import"./story-helper-C5uq5kSZ.js";import"./iframe-Chm5YKQf.js";import"./index-Dytf1aFS.js";import"./index-DrFu-skq.js";import"./ComposedModal-CpTP8HrD.js";import"./index-BqG52EEo.js";import"./LayerContext-B9CO-6mR.js";import"./clamp--00YEiB8.js";import"./ButtonSet-A5I0_tvd.js";import"./InlineLoading-WqBhFG3p.js";import"./bucket-6-DLW23Ky6.js";import"./mergeRefs-91-mP8KM.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-jEwItT4M.js";import"./Text-Cjos7Soh.js";import"./index-CVEmjZFv.js";import"./bucket-18-338UTbBD.js";import"./utils--12iVJsW.js";import"./FileUploaderItem-B3hs5cWR.js";import"./bucket-19-D8xKEiK4.js";import"./TextInput-CBue0XF4.js";import"./useNormalizedInputProps-OpqrZ34r.js";import"./FormContext-C4Nuixum.js";import"./devtools-B69Kc3qg.js";import"./usePortalTarget-CqHjfDP8.js";import"./feature-flags-eU_vhwbI.js";import"./index-CbYM9rgX.js";import"./props-helper-57MyEezq.js";import"./uuidv4-BN2rGLQG.js";import"./bucket-0-C0XwVn_F.js";const s=()=>{const{csfFile:o}=g("meta",["meta"]);return e.createElement(f,{altGuidelinesHref:[{href:"https://pages.github.ibm.com/carbon/ibm-products/patterns/import-and-upload/usage/",label:"Usage guidelines"},{href:"https://www.carbondesignsystem.com/components/modal/usage",label:"Carbon modal usage guidelines"},{href:"https://react.carbondesignsystem.com/?path=/docs/components-modal",label:"Carbon modal documentation"}]})};s.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const pe={title:"Patterns/Prebuilt patterns/ImportModal",component:n,tags:["autodocs"],parameters:{docs:{page:s}},argTypes:{accept:{control:{type:"select",labels:{0:"image (png, jpeg or gif)",1:"document (doc or pdf)",2:"development (html, css or javascript)"}},options:[0,1,2],mapping:{0:["image/png","image/jpeg","image/gif"],1:["application/doc","application/docx","application/pdf"],2:["text/plain","text/css","text/html","text/javascript"]}},portalTarget:{control:!1}}},b={className:"test-class",defaultErrorBody:"Select a new file and try again.",defaultErrorHeader:"Import failed",description:"You can specify a file to import by either dragging it into the drag and drop area or by specifying a URL. (Maximum file size of 500KB)",fetchErrorBody:"Unable to fetch URL.",fetchErrorHeader:"Import failed",fileDropHeader:"Add files using drag and drop",fileDropLabel:"Drag and drop files here or click to upload",fileUploadLabel:"files uploaded",inputButtonIcon:!1,inputButtonText:"Add file",inputId:"test-id",inputLabel:"Add a file by specifying a URL",inputPlaceholder:"URL",invalidFileTypeErrorBody:"Invalid file type.",invalidFileTypeErrorHeader:"Import failed",invalidIconDescription:"Delete",maxFileSize:5e5,maxFileSizeErrorBody:"500kb max file size. Select a new file and try again.",maxFileSizeErrorHeader:"Import failed",onClose:u("onClose event"),onRequestSubmit:o=>console.log("file contents",o),open:!0,primaryButtonText:"Import",secondaryButtonText:"Cancel",title:"Import"},y=({...o},m)=>{const[l,r]=d.useState(m.viewMode!=="docs");return e.createElement(e.Fragment,null,e.createElement(n,{...o,open:l,onClose:()=>r(!1)}),e.createElement(c,{onClick:()=>r(!0)},"Launch modal"))},t=y.bind({});t.args={accept:0,...b};var a,i,p;t.parameters={...t.parameters,docs:{...(a=t.parameters)==null?void 0:a.docs,source:{originalSource:`({
  ...args
}, context) => {
  const [open, setOpen] = useState(context.viewMode !== 'docs');
  return <>
      <ImportModal {...args} open={open} onClose={() => setOpen(false)} />
      <Button onClick={() => setOpen(true)}>Launch modal</Button>
    </>;
}`,...(p=(i=t.parameters)==null?void 0:i.docs)==null?void 0:p.source}}};const ne=["Standard"];export{t as Standard,ne as __namedExportsOrder,pe as default};
