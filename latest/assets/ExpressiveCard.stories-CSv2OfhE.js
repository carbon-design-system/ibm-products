import{e}from"./index-DtHxqM--.js";import{b as se,aI as le}from"./index-CMVdkQrl.js";import{A as me}from"./AspectRatio-Buzs7llA.js";import{G as re}from"./Grid-BLDZi_lT.js";import{C as ne}from"./Column-DAwp7jN5.js";import{T as de,a as pe,b as ue,A as ge,c as Se}from"./index-D5LR258U.js";import{S as ze}from"./StoryDocsPage-Z4lHM_h2.js";import{a as x}from"./index-B-lxVbXh.js";import{E}from"./ExpressiveCard-BsB2bwaA.js";import{e as he}from"./bucket-9-m0gEOM1f.js";import{A as te,b as Ce}from"./bucket-0-CHtg8bFp.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-DgLvjnYm.js";import"./index-CiYgQLeJ.js";import"./index-BLvAv8yb.js";import"./settings-C3kz8lqM.js";import"./events-OVwOsPzJ.js";import"./bucket-17-BInI-cSl.js";import"./index-CK5iQhpn.js";import"./iframe-BEyU_vaq.js";import"./index-Dytf1aFS.js";import"./index-DrFu-skq.js";import"./story-helper-CmBIJVOZ.js";import"./v4-CtRu48qb.js";import"./devtools-CJD9WatR.js";import"./props-helper-3VCN3cvm.js";import"./Card-5GVaGwz5.js";import"./MenuItem-tJ9rUog4.js";import"./useControllableState-ICkXF1jW.js";import"./useAttachedMenu-C8bta719.js";import"./Text-DeLhjZ72.js";import"./bucket-2-D0m0gcwr.js";import"./index-CrpWSFad.js";import"./mergeRefs-CTUecegF.js";import"./bucket-12-sLjQv6-z.js";import"./wrapFocus-4QzkQnOM.js";import"./useOutsideClick-ChWAVyF5.js";import"./index-BUpfIj5_.js";import"./index-ly07KqNH.js";import"./LayerContext-B9CO-6mR.js";import"./clamp--00YEiB8.js";import"./bucket-6-CRocNvF-.js";const be="#root{inline-size:100%}.card-story .cds--aspect-ratio{display:flex;align-items:center;justify-content:center;background:var(--cds-layer-accent-01, #e0e0e0)}.c4p--card__media-left .c4p--card__media{inline-size:100%;max-inline-size:300px}",ae=()=>e.createElement(ze,{altGuidelinesHref:"https://pages.github.ibm.com/carbon/ibm-products/components/card/expressive-card/usage/",blocks:[{story:a},{story:d},{story:i},{story:void 0},{story:p},{story:u},{story:c},{story:s},{story:l},{story:m},{title:"With AI Label",description:"An AI Label is intended for any scenario where something is being generated by AI to reinforce AI transparency, accountability, and explainability at the UI level.",source:{language:"html",code:`
      <ExpressiveCard
  label="Label"
  primaryButtonText="Primary"
  decorator={<AILabel><AILabelContent>{renderedContent}</AILabelContent></AILabel>}
  title="Title">
  <p>
    expressive card body content block. description inviting the user to take action on the card.
  </p>
</ExpressiveCard>
          `}},{description:"Clickable tiles only accept a boolean value of true for the decorator property.",source:{language:"html",code:`
      <ExpressiveCard
  label="Label"
  primaryButtonText="Primary"
  onClick={() => {}}
  onKeyDown={() => {}}
  decorator={true}
  title="Title">
  <p>
    expressive card body content block. description inviting the user to take action on the card.
  </p>
</ExpressiveCard>
          `}}]});ae.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const ie=o=>{switch(o){case 1:return e.createElement(ge,{className:"decorator-container",size:"xs"},e.createElement(Se,null,e.createElement("div",null,e.createElement("p",{className:"secondary"},"AI Explained"),e.createElement("h1",null,"84%"),e.createElement("p",{className:"secondary bold"},"Confidence score"),e.createElement("p",{className:"secondary"},"This is not really Lorem Ipsum but the spell checker did not like the previous text with it's non-words which is why this unwieldy sentence, should one choose to call it that, here."),e.createElement("hr",null),e.createElement("p",{className:"secondary"},"Model type"),e.createElement("p",{className:"bold"},"Foundation model"))));case 2:return e.createElement(de,null,e.createElement(pe,{label:"Additional information"},e.createElement(he,null)),e.createElement(ue,null,e.createElement("p",null,"Custom content here")));default:return}},lo={title:"IBM Products/Components/Cards/ExpressiveCard",component:E,tags:["autodocs"],parameters:{styles:be,docs:{page:ae}},argTypes:{columnSizeSm:{control:{type:"select"},options:[4,8,12,16]},columnSizeMd:{control:{type:"select"},options:[4,8,12,16]},columnSizeLg:{control:{type:"select"},options:[4,8,12,16]},mediaRatio:{control:{type:"select"},options:["16x9","9x16","2x1","1x2","4x3","3x4","1x1"]},slug:{control:{type:"select",labels:{0:"No AI slug",1:"with AI Slug"},default:0},options:[!1,!0]},decorator:{control:{type:"select",labels:{0:"No AI label",1:"with AI label",2:"With non AI Label component",3:"with hollow AI label (boolean)"},default:0},options:[0,1,2,3]}},decorators:[o=>{const g=se();return e.createElement("div",{className:`${g}--grid card-story`},o())}]},r={label:"Label",title:"Title",columnSizeSm:4,columnSizeMd:8,columnSizeLg:4,children:e.createElement("p",null,"expressive card body content block. description inviting the user to take action on the card."),primaryButtonText:"Read more"},n=o=>{const{children:g,columnSizeSm:C,columnSizeMd:b,columnSizeLg:y,decorator:t,...S}=o;return e.createElement(re,null,e.createElement(ne,{sm:C,md:b,lg:y},e.createElement(E,{...S,decorator:t&&(t===3||ie(t))},g)))},ye=o=>{const{children:g,columnSizeSm:C,columnSizeMd:b,columnSizeLg:y,mediaRatio:t="1x1",decorator:S,...ce}=o;return e.createElement(re,null,e.createElement(ne,{sm:C,md:b,lg:y},e.createElement(E,{media:e.createElement(me,{ratio:t},t),decorator:S&&(S===3||ie(S)),...ce},g)))},a=n.bind({});a.args={...r,mediaRatio:null};const i=n.bind({});i.args={...r,title:"",mediaRatio:null};const c=n.bind({});c.args={...r,caption:"Description or long caption",label:"",mediaRatio:null};const s=ye.bind({});s.args={...r};const z=n.bind({});z.args={...r,actionIcons:[{id:"1",icon:o=>e.createElement(te,{size:18,...o}),iconDescription:"Visit carbon official site",onClick:x("onClick")}],primaryButtonText:"",mediaRatio:null};const h=n.bind({});h.args={...r,actionIcons:[{id:"1",icon:o=>e.createElement(te,{size:24,...o}),iconDescription:"Visit carbon official site",link:{href:"https://carbondesignsystem.com/",target:"_blank",rel:"noreferrer noopener"}}],primaryButtonText:"",mediaRatio:null};const l=n.bind({});l.args={...r,pictogram:o=>e.createElement(le,{size:32,...o}),mediaRatio:null};const m=n.bind({});m.args={...r,secondaryButtonText:"Remove",secondaryButtonKind:"ghost",mediaRatio:null};const d=n.bind({});d.args={...r,onClick:x("on click"),onKeyDown:x("on keydown"),primaryButtonText:"",mediaRatio:null};const p=n.bind({});p.args={...r,primaryButtonHref:"#",secondaryButtonHref:"#",secondaryButtonText:"Remove",secondaryButtonKind:"ghost"};const u=n.bind({});u.args={...r,primaryButtonIcon:o=>e.createElement(Ce,{size:16,...o})};var f,v,L;a.parameters={...a.parameters,docs:{...(f=a.parameters)==null?void 0:f.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(L=(v=a.parameters)==null?void 0:v.docs)==null?void 0:L.source}}};var A,I,M;i.parameters={...i.parameters,docs:{...(A=i.parameters)==null?void 0:A.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(M=(I=i.parameters)==null?void 0:I.docs)==null?void 0:M.source}}};var G,k,D;c.parameters={...c.parameters,docs:{...(G=c.parameters)==null?void 0:G.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(D=(k=c.parameters)==null?void 0:k.docs)==null?void 0:D.source}}};var B,R,T;s.parameters={...s.parameters,docs:{...(B=s.parameters)==null?void 0:B.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    mediaRatio = '1x1',
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard media={<AspectRatio ratio={mediaRatio}>{mediaRatio}</AspectRatio>} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))} {...args}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(T=(R=s.parameters)==null?void 0:R.docs)==null?void 0:T.source}}};var W,w,P;z.parameters={...z.parameters,docs:{...(W=z.parameters)==null?void 0:W.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(P=(w=z.parameters)==null?void 0:w.docs)==null?void 0:P.source}}};var N,_,H;h.parameters={...h.parameters,docs:{...(N=h.parameters)==null?void 0:N.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(H=(_=h.parameters)==null?void 0:_.docs)==null?void 0:H.source}}};var K,O,V;l.parameters={...l.parameters,docs:{...(K=l.parameters)==null?void 0:K.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(V=(O=l.parameters)==null?void 0:O.docs)==null?void 0:V.source}}};var j,F,U;m.parameters={...m.parameters,docs:{...(j=m.parameters)==null?void 0:j.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(U=(F=m.parameters)==null?void 0:F.docs)==null?void 0:U.source}}};var $,q,J;d.parameters={...d.parameters,docs:{...($=d.parameters)==null?void 0:$.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(J=(q=d.parameters)==null?void 0:q.docs)==null?void 0:J.source}}};var Q,X,Y;p.parameters={...p.parameters,docs:{...(Q=p.parameters)==null?void 0:Q.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(Y=(X=p.parameters)==null?void 0:X.docs)==null?void 0:Y.source}}};var Z,ee,oe;u.parameters={...u.parameters,docs:{...(Z=u.parameters)==null?void 0:Z.docs,source:{originalSource:`opts => {
  const {
    children,
    columnSizeSm,
    columnSizeMd,
    columnSizeLg,
    decorator,
    ...args
  } = opts;
  return <Grid>
      <Column sm={columnSizeSm} md={columnSizeMd} lg={columnSizeLg}>
        <ExpressiveCard {...args} decorator={decorator && (decorator === 3 || sampleDecorator(decorator))}>
          {children}
        </ExpressiveCard>
      </Column>
    </Grid>;
}`,...(oe=(ee=u.parameters)==null?void 0:ee.docs)==null?void 0:oe.source}}};const mo=["Default","LabelOnly","WithCaption","WithMedia","WithActionIconButton","WithActionIconLink","WithPictogram","WithSecondaryAction","Clickable","WithButtonHref","WithButtonIcon"];export{d as Clickable,a as Default,i as LabelOnly,z as WithActionIconButton,h as WithActionIconLink,p as WithButtonHref,u as WithButtonIcon,c as WithCaption,s as WithMedia,l as WithPictogram,m as WithSecondaryAction,mo as __namedExportsOrder,lo as default};
