import{e as t,S as C,r as y}from"./iframe-Bt_4wi2_.js";import{s as z,m as g}from"./_storybook-styles-CWbGVUaz.js";import{D as N}from"./DatagridActions-mbamOpu9.js";import{A as c}from"./getArgTypes-Ci8wh0IQ.js";import{D as w,u as f}from"./useDatagrid-CCIMJzFR.js";import{u as b}from"./useNestedRows-8Qnt_nCl.js";import{u as G}from"./useSelectRows-CQcJfkqG.js";import{E as _}from"./bucket-6-DqzXE5dN.js";import{T as k}from"./bucket-17-B1WDuKPt.js";import"./bucket-2-Boc44dor.js";import"./index-xWfRmBau.js";import"./bucket-18-BNKdAP26.js";import"./bucket-7-B-udVZOd.js";import"./ComposedModal-47wjLjIr.js";import"./index-BEhuL1MR.js";import"./index-Dj5IO_sl.js";import"./LayerContext-BkO66YUX.js";import"./clamp--00YEiB8.js";import"./ButtonSet-CKUC8hVh.js";import"./InlineLoading-DVx1EWEO.js";import"./mergeRefs-91-mP8KM.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-DVXZPRDf.js";import"./Text-CKKshe8_.js";import"./utils-Dx5MzUE-.js";import"./TableToolbarSearch-CkHJo2ev.js";import"./wrapComponent-IgFyV2G4.js";import"./Search-CVSTT5z7.js";import"./FormContext-DZ5Pn6PQ.js";import"./bucket-15-Ch_KyqBs.js";import"./Dropdown-DALH0kRg.js";import"./index-Z1YAyleP.js";import"./inheritsLoose-DHKJTbHM.js";import"./bucket-19-Cu112eOp.js";import"./MenuItem-D2pnsW7j.js";import"./useControllableState-DNtleL3k.js";import"./useAttachedMenu-C0yi6pnT.js";import"./index-C7wi-ghb.js";import"./index-DHyu7IcT.js";import"./bucket-12-CDc9yP7i.js";import"./useOutsideClick-D3OyQuUM.js";import"./OverflowMenuItem-ggN1m3Mj.js";import"./useFilterContext-DTR90qo_.js";import"./bucket-0-Bj1c77ki.js";import"./bucket-14-CUPfehuY.js";import"./devtools-BCl7cib1.js";import"./TableRow-C6xYuB6Q.js";import"./bucket-1-CILBsbE8.js";import"./TableToolbar-CjRb7GXR.js";import"./index-C6rFndyw.js";import"./ErrorEmptyState-zemEyeeQ.js";import"./EmptyState-O7tb8Xec.js";import"./EmptyStateV2.deprecated-CzR5da4a.js";import"./Link-BtVCBSi3.js";import"./ErrorIllustration-C20suZyp.js";import"./useId-C7vEoo7Q.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-DHayk9gF.js";import"./NoDataIllustration-CzVtwb_5.js";import"./NotFoundEmptyState-D-iN-Km6.js";import"./NotFoundIllustration-CK78gLt7.js";import"./index.esm-Cd3d2ndm.js";import"./usePreviousValue-D6jr6a1I.js";import"./useResizeObserver-B7TK2lQu.js";import"./useIsomorphicEffect-D_1zDqSu.js";import"./getFocusableElements-BW7cf991.js";import"./index-BMUscg6k.js";import"./props-helper-uQ141h4h.js";import"./useClickOutside-DTdVa_Sp.js";import"./AccordionItem-CYO3lCiP.js";import"./Checkbox-CKmGiswn.js";import"./DatePicker-C791D37O.js";import"./FormGroup-C8xiXSF6.js";import"./MultiSelect-CJqcHJtI.js";import"./NumberInput-Crv8I7dK.js";import"./useNormalizedInputProps-Bd-xcf7G.js";import"./documentLang-E105Y72C.js";import"./bucket-16-D2Z2Dhjh.js";import"./RadioButton-W7ipeTeg.js";import"./RadioButtonGroup-DuAVjpvV.js";import"./usePrefersReducedMotion-BzmCcU9p.js";import"./usePresence-CoAJwV67.js";import"./ActionSet-I4afg10P.js";import"./useWindowResize-Cg0SJ3kR.js";import"./TagSet-DlcjLTtL.js";import"./Tag-Ex8z9_ne.js";import"./DefinitionTooltip-DhipDxYz.js";import"./DismissibleTag-CgEG4X9m.js";import"./usePortalTarget-BMZMDMfJ.js";import"./OperationalTag-DwMFZI3B.js";import"./SkeletonText-XtlMg-au.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-BxptPYQA.js";import"./TableSelectRow--WiDynAN.js";const{action:x}=__STORYBOOK_MODULE_ACTIONS__,S={gridTitle:c.gridTitle,gridDescription:c.gridDescription,useDenseHeader:c.useDenseHeader,rowSize:c.rowSize,rowSizes:c.rowSizes,onRowSizeChange:c.onRowSizeChange,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},_t={title:"Deprecated/Datagrid/NestedRows",component:w,tags:["autodocs"],parameters:{styles:z,docs:{page:()=>t.createElement(C,{omitCodedExample:!0,blocks:[{title:"Nested rows",description:"Nested rows allow disclosing content in data tables progressively by displaying primary data first (parent row) and enabling users to navigate secondary information levels (child rows).\n- Include the `useNestedRows` hook\n- Make sure that any row you want to have nested rows in your data has a `subRows` property with an array of objects for each nested row. The row expander will be included by default as long as the `useNestedRows` hook is provided and it is detected that a row has `subRows` within it.\n          ",source:{code:`
const datagridState = useDatagrid(
  {
    columns,
    data,
    expanderButtonTitleExpanded: 'Collapse row',
    expanderButtonTitleCollapsed: 'Expand row',
  },
  useNestedRows
);

return <Datagrid datagridState={datagridState} />;
            `}}]})},layout:"padded"},argTypes:{featureFlags:{table:{disable:!0}}}},D=[{Header:"Row Index",accessor:(e,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],l={gridTitle:"Data table title",gridDescription:"Additional information if needed",useDenseHeader:!1,rowSize:"lg",rowSizes:[{value:"xl",labelText:"Extra large"},{value:"lg",labelText:"Large"},{value:"md",labelText:"Medium"},{value:"xs",labelText:"Small"}],onRowSizeChange:e=>{console.log("row size changed to: ",e)},rowActions:[{id:"edit",itemText:"Edit",icon:_,onClick:x("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:k,isDelete:!0,onClick:x("Clicked row action: delete")}]},R={gridTitle:l.gridTitle,gridDescription:l.gridDescription,useDenseHeader:l.useDenseHeader,rowSize:l.rowSize,rowSizes:l.rowSizes,onRowSizeChange:l.onRowSizeChange},I=({...e})=>{const o=t.useMemo(()=>D,[]),[r]=y.useState(g(10,2)),s=f({columns:o,data:r,DatagridActions:N,autoResetExpanded:!1,autoResetGlobalFilter:!1,...e.defaultGridProps,getSubRows:a=>a.subRows},b);return t.createElement(w,{datagridState:s})},U=({...e})=>t.createElement(I,{defaultGridProps:{...e}}),A="With single-level nested rows",i=U.bind({});i.storyName=A;i.argTypes={...S};i.args={...R,featureFlags:["Datagrid.useNestedRows"]};const L=({...e})=>{const o=t.useMemo(()=>D,[]),[r]=y.useState(g(10,5,2,2,{id:"testing-user-provided-id"})),s=f({columns:o,data:r,DatagridActions:N,...e.defaultGridProps,getSubRows:a=>a.subRows},b);return t.createElement(w,{datagridState:{...s}})},E=({...e})=>t.createElement(L,{defaultGridProps:{...e}}),W="With nested rows",n=E.bind({});n.storyName=W;n.argTypes={...S};n.args={...R};const M=({...e})=>{const o=t.useMemo(()=>D,[]),[r]=y.useState(g(10,5,2,2)),s=f({columns:o,data:r,DatagridActions:N,...e.defaultGridProps,getSubRows:a=>a.subRows},b,G);return t.createElement(w,{datagridState:{...s}})},B=({...e})=>t.createElement(M,{defaultGridProps:{...e}}),O="With selectable nested rows",d=B.bind({});d.storyName=O;d.argTypes={...S};d.args={...R};const F="With initially expanded nested rows",m=E.bind({});m.storyName=F;m.argTypes={...S};m.args={...R,initialState:{expandedRowIds:{"testing-user-provided-id__1":!0,3:!0}}};const Y=({...e})=>{const o=t.useMemo(()=>D,[]),[r,s]=y.useState(g(10)),a=f({columns:o,data:r,DatagridActions:N,autoResetExpanded:!1,autoResetGlobalFilter:!1,...e.defaultGridProps,getAsyncSubRows:async u=>{u.subRows.length||await new Promise(h=>{setTimeout(()=>{if(u.depth>0)return h();const H=g(2,{id:"test-id"}),T=[...r],P=T.findIndex(v=>v.id===u.original.id);T[P].subRows=H,s(T),h()},1e3)})},getSubRows:u=>u.subRows},b);return t.createElement(w,{datagridState:a})},j=({...e})=>t.createElement(Y,{defaultGridProps:{...e}}),K="Dynamic nested rows",p=j.bind({});p.storyName=K;p.argTypes={...S};p.args={...R};i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <SingleLevelNestedRows defaultGridProps={{
    ...args
  }} />;
}`,...i.parameters?.docs?.source}}};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <NestedRows defaultGridProps={{
    ...args
  }} />;
}`,...n.parameters?.docs?.source}}};d.parameters={...d.parameters,docs:{...d.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <SelectableNestedRows defaultGridProps={{
    ...args
  }} />;
}`,...d.parameters?.docs?.source}}};m.parameters={...m.parameters,docs:{...m.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <NestedRows defaultGridProps={{
    ...args
  }} />;
}`,...m.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <DynamicNestedRows defaultGridProps={{
    ...args
  }} />;
}`,...p.parameters?.docs?.source}}};const kt=["SingleLevelNestedRowsUsageStory","NestedRowsUsageStory","SelectableNestedRowsUsageStory","NestedRowsInitialUsageStory","DynamicNestedRowStory"];export{p as DynamicNestedRowStory,m as NestedRowsInitialUsageStory,n as NestedRowsUsageStory,d as SelectableNestedRowsUsageStory,i as SingleLevelNestedRowsUsageStory,kt as __namedExportsOrder,_t as default};
