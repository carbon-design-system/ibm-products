import{e,r as a,Z as x,c as C,p as y,P as t}from"./iframe-Bt_4wi2_.js";import{C as F,M as k,a as D,b as I}from"./ComposedModal-47wjLjIr.js";import{T as S}from"./index-VdyZ4e6S.js";import{g as L}from"./devtools-BCl7cib1.js";import{u as O}from"./useFocus-DrsdxZqy.js";import{u as W}from"./usePortalTarget-BMZMDMfJ.js";import{u as B}from"./uuidv4-BN2rGLQG.js";const o=`${y.prefix}--about-modal`,l="AboutModal";let r=e.forwardRef(({additionalInfo:d,className:g,closeIconDescription:h,copyrightText:c,content:m,links:n,logo:b,modalAriaLabel:v,onClose:p,open:s,portalTarget:N,title:T,version:_,...R},q)=>{const u=a.useRef(null),E=a.useRef(void 0),i=q||E,f=a.useRef(null),P=B(),M=W(N),{claimFocus:$}=O(i);return a.useEffect(()=>{u.current=f.current?.parentElement},[u]),a.useEffect(()=>{s&&$()},[i,s]),M(e.createElement(x,{enableExperimentalFocusWrapWithoutSentinels:!0},e.createElement(F,{...R,className:C(o,g),"aria-label":v,ref:i,onClose:p,open:s,...L(l)},e.createElement("div",{className:`${o}__logo`},b),e.createElement(k,{className:`${o}__header`,closeModal:p,iconDescription:h,label:T,labelClassName:`${o}__title`}),e.createElement(D,{className:`${o}__body`},e.createElement("div",{className:`${o}__body-content`,ref:f,id:P},e.createElement("div",{className:`${o}__version`},_),n&&n.length>0&&e.createElement("div",{className:`${o}__links-container`},n.map((w,A)=>e.createElement(e.Fragment,{key:A},w))),m&&e.createElement("p",{className:`${o}__content`},m),c&&e.createElement("p",{className:`${o}__copyright-text`},c))),d&&e.createElement(S,{theme:"g100"},e.createElement(I,{className:`${o}__footer`},d)))))});r=y.checkComponentEnabled(r,l);r.displayName=l;r.propTypes={additionalInfo:t.node,className:t.string,closeIconDescription:t.string.isRequired,content:t.node,copyrightText:t.string.isRequired,links:t.arrayOf(t.element),logo:t.node.isRequired,modalAriaLabel:t.string,onClose:t.func,open:t.bool,portalTarget:t.node,title:t.node.isRequired,version:t.string.isRequired};r.__docgenInfo={description:`The \`AboutModal\` component provides a way to communicate product information
to users. It is triggered by a user’s action, appears on top of the main
page content, and is persistent until dismissed. The purpose of this modal
should be immediately apparent to the user, with a clear and obvious path
to completion.`,methods:[],displayName:"AboutModal",props:{additionalInfo:{required:!1,tsType:{name:"ReactNode"},description:`Provide additional detail for the modal footer, such as logos of
technologies used in the product, legally required for some products`,type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Specify an optional className to be applied to the modal root node",type:{name:"string"}},closeIconDescription:{required:!0,tsType:{name:"string"},description:"Provide an accessible name for the close icon",type:{name:"string"}},content:{required:!1,tsType:{name:"ReactNode"},description:"Provide any relevant product disclaimers or legal information",type:{name:"node"}},copyrightText:{required:!0,tsType:{name:"string"},description:"Specify the first year of product release to the current year",type:{name:"string"}},links:{required:!1,tsType:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]"},description:"Provide an array of Carbon `Link`s for additional detail about the\nproduct",type:{name:"arrayOf",value:{name:"element"}}},logo:{required:!0,tsType:{name:"ReactNode"},description:"Provide a visual representation of the product",type:{name:"node"}},modalAriaLabel:{required:!1,tsType:{name:"string"},description:"Specify an aria-label for the modal",type:{name:"string"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void | boolean",signature:{arguments:[],return:{name:"union",raw:"void | boolean",elements:[{name:"void"},{name:"boolean"}]}}},description:"Specify an optional handler for closing modal. Returning `false`\nprevents the modal from closing",type:{name:"func"}},open:{required:!1,tsType:{name:"boolean"},description:"Specify whether the modal is currently open",type:{name:"bool"}},portalTarget:{required:!1,tsType:{name:"ReactNode"},description:"Provide the DOM node where the modal should be rendered.\nDefaults to `document.body`",type:{name:"node"}},title:{required:!0,tsType:{name:"ReactNode"},description:"Provide the product name for the modal header",type:{name:"node"}},version:{required:!0,tsType:{name:"string"},description:"Provide the product’s version number",type:{name:"string"}}}};export{r as A};
