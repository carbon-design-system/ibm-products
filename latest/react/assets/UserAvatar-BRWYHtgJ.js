import{e as t,u as P,N as $,p as v,c as U,P as e}from"./iframe-HX3uP5rF.js";import{g as _}from"./devtools-CNhWTRl7.js";import"./props-helper-BQIeo-gE.js";import{T as k}from"./TooltipTrigger-LiJntyHz.js";import{c as I}from"./bucket-18-KiX7pVM7.js";const a=`${v.prefix}--user-avatar`,i="UserAvatar";let o=t.forwardRef((l,h)=>{const{backgroundColor:y="order-1-cyan",className:b,image:s,imageDescription:T,name:m,renderIcon:p,size:n="md",tooltipText:u,tooltipAlignment:x="bottom",...E}=l,w=P(),A={sm:16,md:20,lg:24,xl:32},C=()=>{const r=m?.split(" ")||[],c=r[0].charAt(0).toUpperCase(),N=r[0].charAt(1).toUpperCase();if(r.length===1)return c+N;const g=r[r.length-1].charAt(0).toUpperCase(),f=[c];return g&&f.push(g),"".concat(...f)},q=()=>{const r={size:A[n]};return s?t.createElement("img",{alt:T,src:s,className:`${a}__photo ${a}__photo--${n}`}):p?t.createElement(p,{...r}):m?C():t.createElement(I,{...r})},d=()=>t.createElement("div",{...E,className:U(a,b,`${a}--${y}`,`${a}--${n}`,{}),ref:h,..._(i)},q());return u?t.createElement($,{align:x,label:u,className:`${a}__tooltip ${w}--icon-tooltip`},t.createElement(k,null,t.createElement(d,null))):t.createElement(d,null)});o=v.checkComponentEnabled(o,i);o.displayName=i;o.propTypes={backgroundColor:e.oneOf(["order-1-cyan","order-2-gray","order-3-green","order-4-magenta","order-5-purple","order-6-teal","order-7-cyan","order-8-gray","order-9-green","order-10-magenta","order-11-purple","order-12-teal"]),className:e.string,image:e.string,imageDescription:e.string.isRequired.if(({image:l})=>!!l),name:e.string,renderIcon:e.oneOfType([e.func,e.object,e.string]),size:e.oneOf(["xl","lg","md","sm"]),tooltipAlignment:e.oneOf(["top","top-left","top-right","bottom","bottom-left","bottom-right","left","right"]),tooltipText:e.string};o.__docgenInfo={description:"",methods:[],displayName:"UserAvatar",props:{backgroundColor:{required:!1,tsType:{name:"union",raw:`| 'order-1-cyan'
| 'order-2-gray'
| 'order-3-green'
| 'order-4-magenta'
| 'order-5-purple'
| 'order-6-teal'
| 'order-7-cyan'
| 'order-8-gray'
| 'order-9-green'
| 'order-10-magenta'
| 'order-11-purple'
| 'order-12-teal'`,elements:[{name:"literal",value:"'order-1-cyan'"},{name:"literal",value:"'order-2-gray'"},{name:"literal",value:"'order-3-green'"},{name:"literal",value:"'order-4-magenta'"},{name:"literal",value:"'order-5-purple'"},{name:"literal",value:"'order-6-teal'"},{name:"literal",value:"'order-7-cyan'"},{name:"literal",value:"'order-8-gray'"},{name:"literal",value:"'order-9-green'"},{name:"literal",value:"'order-10-magenta'"},{name:"literal",value:"'order-11-purple'"},{name:"literal",value:"'order-12-teal'"}]},description:"Provide the background color need to be set for UserAvatar.",type:{name:"enum",value:[{value:"'order-1-cyan'",computed:!1},{value:"'order-2-gray'",computed:!1},{value:"'order-3-green'",computed:!1},{value:"'order-4-magenta'",computed:!1},{value:"'order-5-purple'",computed:!1},{value:"'order-6-teal'",computed:!1},{value:"'order-7-cyan'",computed:!1},{value:"'order-8-gray'",computed:!1},{value:"'order-9-green'",computed:!1},{value:"'order-10-magenta'",computed:!1},{value:"'order-11-purple'",computed:!1},{value:"'order-12-teal'",computed:!1}]}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},name:{required:!1,tsType:{name:"string"},description:"When passing the name prop, either send the initials to be used or the user's full name. The first two capital letters of the user's name will be used as the name.",type:{name:"string"}},renderIcon:{required:!1,tsType:{name:"union",raw:"React.ElementType | string",elements:[{name:"ReactElementType",raw:"React.ElementType"},{name:"string"}]},description:"Provide a custom icon to use if you need to use an icon other than the default one",type:{name:"union",value:[{name:"func"},{name:"object"},{name:"string"}]}},size:{required:!1,tsType:{name:"union",raw:"'xl' | 'lg' | 'md' | 'sm'",elements:[{name:"literal",value:"'xl'"},{name:"literal",value:"'lg'"},{name:"literal",value:"'md'"},{name:"literal",value:"'sm'"}]},description:"Set the size of the avatar circle",type:{name:"enum",value:[{value:"'xl'",computed:!1},{value:"'lg'",computed:!1},{value:"'md'",computed:!1},{value:"'sm'",computed:!1}]}},tooltipAlignment:{required:!1,tsType:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}]},description:"Specify how the trigger should align with the tooltip",type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'top-left'",computed:!1},{value:"'top-right'",computed:!1},{value:"'bottom'",computed:!1},{value:"'bottom-left'",computed:!1},{value:"'bottom-right'",computed:!1},{value:"'left'",computed:!1},{value:"'right'",computed:!1}]}},tooltipText:{required:!1,tsType:{name:"string"},description:"Pass in the display name to have it shown on hover",type:{name:"string"}},image:{description:"When passing the image prop, supply a full path to the image to be displayed.",type:{name:"string"},required:!1},imageDescription:{description:"When passing the image prop use the imageDescription prop to describe the image for screen reader.",type:{name:"string"},required:!0}}};export{o as U};
