import{r as i,e as t}from"./index-DtHxqM--.js";import{d as v,P as e}from"./index-CMVdkQrl.js";import{T as W}from"./Tag-TnuyD0LA.js";import{D as z}from"./DismissibleTag-DlU6OkfL.js";import{C as oe,M as re,a as ne}from"./ComposedModal-DK_gDe0c.js";import{S as se}from"./Search-QqBUyI3s.js";import{p as H}from"./settings-C3kz8lqM.js";import{p as ie,i as me}from"./props-helper-3VCN3cvm.js";import{u as pe}from"./usePortalTarget-BpuhspP7.js";import{L as ue}from"./Link-C2-sHeI7.js";import{O as de}from"./OperationalTag-mvXHH_3H.js";import{P as ce,a as fe}from"./index-BLvAv8yb.js";import{u as ge}from"./useClickOutside-DnYoV4Om.js";import{g as he}from"./devtools-CJD9WatR.js";import{u as ve}from"./useOverflowItems-BBpuj22M.js";const ye={red:"Red",magenta:"Magenta",purple:"Purple",blue:"Blue",cyan:"Cyan",teal:"Teal",green:"Green",gray:"Gray","cool-gray":"Cool-Gray","warm-gray":"Warm-Gray","high-contrast":"High-Contrast",outline:"Outline"},Te="TagOverflowModal",E=`${H.prefix}--tag-overflow-modal`,Q={modalAriaLabel:"List of all tags",searchLabel:""},B=({allTags:n,className:w,title:q,modalAriaLabel:M=Q.modalAriaLabel,onClose:O,onTagClose:p,open:_,overflowType:a,portalTarget:u,searchLabel:S=Q.searchLabel,searchPlaceholder:c,...o})=>{const[N,C]=i.useState(""),A=pe(u),R=()=>_&&N&&n?n.filter(s=>{var r,d;return(d=(r=s.label)==null?void 0:r.toLocaleLowerCase())==null?void 0:d.includes(N.toLocaleLowerCase())}):n||[],$=s=>{C(s.target.value||"")};return A(t.createElement(oe,{...o,containerClassName:`${E}__container`,className:v(w,E),size:"sm","aria-label":"Search all",open:_,onClose:O},t.createElement(re,{className:`${E}__header`,closeModal:O,title:q},t.createElement(se,{"data-modal-primary-focus":!0,className:`${E}__search`,labelText:S,placeholder:c,onChange:$,size:"lg"})),t.createElement(ne,{className:`${E}__body`,hasForm:!0,hasScrollingContent:!0,"aria-label":M},R().map(({label:s,id:r,filter:d,onClose:l})=>a==="tag"&&(typeof l=="function"||d)?t.createElement(z,{key:r,text:s,onClose:()=>p==null?void 0:p({label:s,id:r})}):t.createElement(W,{key:r},s)),t.createElement("div",{className:`${E}__fade`}))))};B.propTypes={allTags:e.arrayOf(e.shape({...ie(W.propTypes,"filter"),label:e.string.isRequired})),className:e.string,onClose:e.func,onTagClose:e.func,open:e.bool,overflowType:e.oneOf(["default","tag"]),portalTarget:e.node,searchLabel:e.string,searchPlaceholder:e.string,title:e.string};B.displayName=Te;const be="TagOverflowPopover",m=`${H.prefix}--tag-overflow-popover`,F=i.forwardRef((n,w)=>{const{allTagsModalSearchThreshold:q,autoAlign:M,className:O,onShowAllClick:p,overflowAlign:_,overflowTags:a,overflowType:u,showAllTagsLabel:S,popoverOpen:c,setPopoverOpen:o,...N}=n,C=i.useRef(null),A=i.useRef(null);ge(w||C,()=>{c&&(o==null||o(!1))});const R=l=>{l.stopPropagation(),l.preventDefault(),o==null||o(!1),p==null||p()},$=l=>{const{key:y}=l;y==="Escape"&&(o==null||o(!1))},r=(()=>{const l=q??0;return a==null?void 0:a.filter((y,T)=>(a==null?void 0:a.length)>l?T<l:T<=l)})(),d=(r==null?void 0:r.length)>0;return t.createElement("span",{...N,"aria-hidden":(a==null?void 0:a.length)===0,className:v(m,{[`${m}--hidden`]:(a==null?void 0:a.length)===0}),ref:w||C},t.createElement(ce,{align:_,autoAlign:M,className:v(O,`${m}__el`),dropShadow:!0,highContrast:!0,onKeyDown:$,open:c||!1},t.createElement(de,{onClick:()=>o==null?void 0:o(!c),className:v(`${m}__trigger`),text:`+${a.length}`}),t.createElement(fe,null,t.createElement("div",{ref:A,className:`${m}__content`},t.createElement("ul",{className:`${m}__tag-list`},d&&r.map(({label:l,id:y,tagType:T,filter:G,onClose:b,...f})=>{const k=u==="tag"?"high-contrast":T,V=u==="tag"&&(typeof b=="function"||G);let L;return V?L=t.createElement(z,{...f,onClose:()=>b==null?void 0:b(),type:k,text:l}):L=t.createElement(W,{...f,type:k},l),t.createElement("li",{className:v(`${m}__tag-item`,{[`${m}__tag-item--default`]:u==="default",[`${m}__tag-item--tag`]:u==="tag"}),key:y},u==="tag"?L:l)})),((a==null?void 0:a.length)??0)>(q??0)&&t.createElement(ue,{className:`${m}__show-all-tags-link`,href:"",onClick:R,role:"button"},S)))))});F.displayName=be;F.propTypes={allTagsModalSearchThreshold:e.number,autoAlign:e.bool,className:e.string,onShowAllClick:e.func.isRequired,overflowAlign:e.oneOf(["top","top-left","top-right","bottom","bottom-left","bottom-right","left","left-bottom","left-top","right","right-bottom","right-top"]),overflowTags:e.arrayOf(e.object).isRequired,overflowType:e.oneOf(["default","tag"]),popoverOpen:e.bool,setPopoverOpen:e.func,showAllTagsLabel:e.string};F.__docgenInfo={description:"",methods:[],displayName:"TagOverflowPopover",props:{allTagsModalSearchThreshold:{required:!1,tsType:{name:"number"},description:"count of overflowTags over which a modal is offered",type:{name:"number"}},autoAlign:{required:!1,tsType:{name:"boolean"},description:"Will auto-align the popover on first render if it is not visible. This prop is currently experimental and is subject to future changes.",type:{name:"bool"}},className:{required:!1,tsType:{name:"string"},description:"className",type:{name:"string"}},onShowAllClick:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"function to execute on clicking show all",type:{name:"func"}},overflowAlign:{required:!1,tsType:{name:"PopoverAlignment"},description:"overflowAlign from the standard tooltip",type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'top-left'",computed:!1},{value:"'top-right'",computed:!1},{value:"'bottom'",computed:!1},{value:"'bottom-left'",computed:!1},{value:"'bottom-right'",computed:!1},{value:"'left'",computed:!1},{value:"'left-bottom'",computed:!1},{value:"'left-top'",computed:!1},{value:"'right'",computed:!1},{value:"'right-bottom'",computed:!1},{value:"'right-top'",computed:!1}]}},overflowTags:{required:!0,tsType:{name:"Array",elements:[{name:"TagOverflowItem"}],raw:"TagOverflowItem[]"},description:"tags shown in overflow",type:{name:"arrayOf",value:{name:"object"}}},overflowType:{required:!1,tsType:{name:"string"},description:"Type of rendering displayed inside of the tag overflow component",type:{name:"enum",value:[{value:"'default'",computed:!1},{value:"'tag'",computed:!1}]}},popoverOpen:{required:!1,tsType:{name:"boolean"},description:"Open state of the popover",type:{name:"bool"}},setPopoverOpen:{required:!1,tsType:{name:"signature",type:"function",raw:"(x: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"x"}],return:{name:"void"}}},description:"Setter function for the popoverOpen state value",type:{name:"func"}},showAllTagsLabel:{required:!1,tsType:{name:"string"},description:"label for the overflow show all tags link",type:{name:"string"}}}};const h=`${H.prefix}--tag-overflow`,K="TagOverflow",X=10;let I=i.forwardRef((n,w)=>{const{align:q="start",allTagsModalAriaLabel:M,allTagsModalSearchLabel:O,allTagsModalSearchPlaceholderText:p,allTagsModalTarget:_,allTagsModalTitle:a,autoAlign:u,className:S,items:c,maxVisible:o,overflowAlign:N="bottom",overflowClassName:C,overflowType:A="default",onOverflowTagChange:R,showAllTagsLabel:$,tagComponent:s,...r}=n,d=i.useRef(null),l=i.useRef(null),[y,T]=i.useState(!1),[G,b]=i.useState(!1),{visibleItems:f,hiddenItems:k,itemRefHandler:V}=ve(c,d,l,o,R),L=()=>{T(!0)},Z=()=>{T(!1)},ee=(g,x)=>{const{className:P,...j}=g;return i.createElement(x,{...j,className:v(`${h}__item`,P)})},te=i.useCallback((g,x)=>{g==null||g(),x<=(f==null?void 0:f.length)-1&&b(!1)},[f]);return t.createElement("div",{...r,className:v(h,S),...he(K),ref:w},t.createElement("div",{className:v(`${h}__visible-tags`,`${h}--align-${q}`),ref:d},f.map((g,x)=>{const{id:P,label:j,tagType:U,onClose:Y,filter:ae,...J}=g;return t.createElement("div",{className:`${h}__tag-container`,ref:le=>{V(P,le)},key:P},s?ee(g,s):typeof Y=="function"||ae?t.createElement(z,{...J,className:`${h}__item--tag`,type:U,onClose:()=>te(Y,x),text:j}):t.createElement(W,{...J,className:`${h}__item--tag`,type:U},j))}),k.length>0&&t.createElement("div",{className:`${h}__indicator`,ref:l},t.createElement(F,{allTagsModalSearchThreshold:X,className:C,onShowAllClick:L,overflowTags:k,overflowAlign:N,overflowType:A,showAllTagsLabel:$,key:"tag-overflow-popover",ref:l,popoverOpen:G,setPopoverOpen:b,autoAlign:u}),t.createElement(B,{allTags:c,open:y,title:a,modalAriaLabel:M,onClose:Z,overflowType:A,searchLabel:O,searchPlaceholder:p,portalTarget:_}))))});I=H.checkComponentEnabled(I,K);I.displayName=K;const we=Object.keys(ye),D=me(e.string,({items:n})=>(n==null?void 0:n.length)>X);I.propTypes={align:e.oneOf(["start","center","end"]),allTagsModalAriaLabel:e.string,allTagsModalSearchLabel:D,allTagsModalSearchPlaceholderText:D,allTagsModalTarget:e.node,allTagsModalTitle:D,autoAlign:e.bool,className:e.string,items:e.arrayOf(e.shape({id:e.string.isRequired,label:e.string.isRequired,tagType:e.oneOf(we)}).isRequired),maxVisible:e.number,measurementOffset:e.number,multiline:e.bool,onOverflowTagChange:e.func,overflowAlign:e.oneOf(["top","top-left","top-right","bottom","bottom-left","bottom-right","left","left-bottom","left-top","right","right-bottom","right-top"]),overflowClassName:e.string,overflowType:e.oneOf(["default","tag"]),showAllTagsLabel:D,tagComponent:e.elementType};I.__docgenInfo={description:"",methods:[],displayName:"TagOverflow",props:{align:{required:!1,tsType:{name:"union",raw:"'start' | 'center' | 'end'",elements:[{name:"literal",value:"'start'"},{name:"literal",value:"'center'"},{name:"literal",value:"'end'"}]},description:"align the Tags displayed by the TagSet. Default start.",type:{name:"enum",value:[{value:"'start'",computed:!1},{value:"'center'",computed:!1},{value:"'end'",computed:!1}]}},allTagsModalAriaLabel:{required:!1,tsType:{name:"string"},description:"aria label for all tags modal with hasScrollingContent",type:{name:"string"}},allTagsModalSearchLabel:{required:!1,tsType:{name:"string"},description:"label text for the show all search. **Note: Required if more than 10 tags**",type:{name:"custom",raw:`isRequiredIf(
  PropTypes.string,
  ({ items }) => items?.length > allTagsModalSearchThreshold
)`}},allTagsModalSearchPlaceholderText:{required:!1,tsType:{name:"string"},description:"placeholder text for the show all search. **Note: Required if more than 10 tags**",type:{name:"custom",raw:`isRequiredIf(
  PropTypes.string,
  ({ items }) => items?.length > allTagsModalSearchThreshold
)`}},allTagsModalTarget:{required:!1,tsType:{name:"ReactNode"},description:"portal target for the all tags modal",type:{name:"node"}},allTagsModalTitle:{required:!1,tsType:{name:"string"},description:"title for the show all modal. **Note: Required if more than 10 tags**",type:{name:"custom",raw:`isRequiredIf(
  PropTypes.string,
  ({ items }) => items?.length > allTagsModalSearchThreshold
)`}},autoAlign:{required:!1,tsType:{name:"boolean"},description:"Will auto-align the popover on first render if it is not visible. This prop is currently experimental and is subject to future changes.",type:{name:"bool"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},containingElementRef:{required:!1,tsType:{name:"RefObject",elements:[{name:"HTMLDivElement"}],raw:"RefObject<HTMLDivElement>"},description:"@deprecated The `containingElementRef` prop is no longer going to be used in favor of the forwarded ref."},items:{required:!1,tsType:{name:"Array",elements:[{name:"TagOverflowItem"}],raw:"TagOverflowItem[]"},description:`The items to be shown in the TagOverflow. Each item is specified as an object with properties:
**label**\\* (required) to supply the content,
**id**\\* (required) to uniquely identify each item.
**tagType** the type value to be passed to the Carbon Tag component.
Refer https://react.carbondesignsystem.com/?path=/docs/components-tag--default to see the possible values for tagType

If you want to render a custom component, pass it as tagComponent prop and
then pass the props required for your custom component as the properties of item object`,type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},tagType:{name:"enum",value:[{value:'"red"',computed:!1},{value:'"magenta"',computed:!1},{value:'"purple"',computed:!1},{value:'"blue"',computed:!1},{value:'"cyan"',computed:!1},{value:'"teal"',computed:!1},{value:'"green"',computed:!1},{value:'"gray"',computed:!1},{value:'"cool-gray"',computed:!1},{value:'"warm-gray"',computed:!1},{value:'"high-contrast"',computed:!1},{value:'"outline"',computed:!1}],required:!1}}}}},maxVisible:{required:!1,tsType:{name:"number"},description:"maximum visible items",type:{name:"number"}},measurementOffset:{required:!1,tsType:{name:"number"},description:"@deprecated The `measurementOffset` prop is no longer going to be used. This value will now be calculated automatically.",type:{name:"number"}},multiline:{required:!1,tsType:{name:"boolean"},description:"@deprecated The `multiline` prop is no longer going to be used. This component should only be used when you need to hide overflowing items.",type:{name:"bool"}},overflowAlign:{required:!1,tsType:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'left-bottom'
| 'left-top'
| 'right'
| 'right-bottom'
| 'right-top'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'left-bottom'"},{name:"literal",value:"'left-top'"},{name:"literal",value:"'right'"},{name:"literal",value:"'right-bottom'"},{name:"literal",value:"'right-top'"}]},description:"overflowAlign from the standard tooltip. Default center.",type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'top-left'",computed:!1},{value:"'top-right'",computed:!1},{value:"'bottom'",computed:!1},{value:"'bottom-left'",computed:!1},{value:"'bottom-right'",computed:!1},{value:"'left'",computed:!1},{value:"'left-bottom'",computed:!1},{value:"'left-top'",computed:!1},{value:"'right'",computed:!1},{value:"'right-bottom'",computed:!1},{value:"'right-top'",computed:!1}]}},overflowClassName:{required:!1,tsType:{name:"string"},description:"overflowClassName for the tooltip popup",type:{name:"string"}},overflowType:{required:!1,tsType:{name:"union",raw:"'default' | 'tag'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'tag'"}]},description:"Type of rendering displayed inside of the tag overflow component",type:{name:"enum",value:[{value:"'default'",computed:!1},{value:"'tag'",computed:!1}]}},onOverflowTagChange:{required:!1,tsType:{name:"signature",type:"function",raw:`(value: {
  hiddenItems?: TagOverflowItem[];
  minWidth?: number;
  maxWidth?: number;
}) => void`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  hiddenItems?: TagOverflowItem[];
  minWidth?: number;
  maxWidth?: number;
}`,signature:{properties:[{key:"hiddenItems",value:{name:"Array",elements:[{name:"TagOverflowItem"}],raw:"TagOverflowItem[]",required:!1}},{key:"minWidth",value:{name:"number",required:!1}},{key:"maxWidth",value:{name:"number",required:!1}}]}},name:"value"}],return:{name:"void"}}},description:"Handler to get overflow tags",type:{name:"func"}},showAllTagsLabel:{required:!1,tsType:{name:"string"},description:`label for the overflow show all tags link.

**Note:** Required if more than 10 tags`,type:{name:"custom",raw:`isRequiredIf(
  PropTypes.string,
  ({ items }) => items?.length > allTagsModalSearchThreshold
)`}},tagComponent:{required:!1,tsType:{name:"string"},description:`Component definition of the items to be rendered inside TagOverflow.
If this is not passed, items will be rendered as Tag component`,type:{name:"elementType"}}}};export{I as T,ye as a};
