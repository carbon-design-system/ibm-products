import{r as l,e as t,c,p as D,P as e,W as le,X as re}from"./iframe-DaJ7qZFz.js";import{T as H}from"./Tag-CCW5k4jG.js";import{D as z}from"./DismissibleTag-CZ0-AC-i.js";import{C as ne,M as se,a as ie}from"./ComposedModal-BzOonGp7.js";import{S as me}from"./Search-C1j5IXK_.js";import{p as pe,i as ue}from"./props-helper-CIQFiJAN.js";import{u as fe}from"./usePortalTarget-BTAgzjDA.js";import{L as ce}from"./Link-BEYL5508.js";import{O as de}from"./OperationalTag-CwEvQ1Zw.js";import{u as ge}from"./useClickOutside-Db0NgZOo.js";import{g as he}from"./devtools-fyD2yDo2.js";import{u as ve}from"./useOverflowItems--q2PMgnk.js";const Te={red:"Red",magenta:"Magenta",purple:"Purple",blue:"Blue",cyan:"Cyan",teal:"Teal",green:"Green",gray:"Gray","cool-gray":"Cool-Gray","warm-gray":"Warm-Gray","high-contrast":"High-Contrast",outline:"Outline"},ye="TagOverflowModal",N=`${D.prefix}--tag-overflow-modal`,J={modalAriaLabel:"List of all tags",searchLabel:""},B=({allTags:s,className:h,title:v,modalAriaLabel:A=J.modalAriaLabel,onClose:T,onTagClose:E,open:y,overflowType:r,portalTarget:i,searchLabel:M=J.searchLabel,searchPlaceholder:m,...p})=>{const[b,w]=l.useState(""),O=fe(i),S=()=>y&&b&&s?s.filter(o=>o.label?.toLocaleLowerCase()?.includes(b.toLocaleLowerCase())):s||[],P=o=>{w(o.target.value||"")};return O(t.createElement(ne,{...p,containerClassName:`${N}__container`,className:c(h,N),size:"sm","aria-label":"Search all",open:y,onClose:T},t.createElement(se,{className:`${N}__header`,closeModal:T,title:v},t.createElement(me,{"data-modal-primary-focus":!0,className:`${N}__search`,labelText:M,placeholder:m,onChange:P,size:"lg"})),t.createElement(ie,{className:`${N}__body`,hasForm:!0,hasScrollingContent:!0,"aria-label":A},S().map(({label:o,id:u,filter:q,onClose:a})=>r==="tag"&&(typeof a=="function"||q)?t.createElement(z,{key:u,text:o,onClose:()=>E?.({label:o,id:u})}):t.createElement(H,{key:u},o)),t.createElement("div",{className:`${N}__fade`}))))};B.propTypes={allTags:e.arrayOf(e.shape({...pe(H.propTypes,"filter"),label:e.string.isRequired})),className:e.string,onClose:e.func,onTagClose:e.func,open:e.bool,overflowType:e.oneOf(["default","tag"]),portalTarget:e.node,searchLabel:e.string,searchPlaceholder:e.string,title:e.string};B.displayName=ye;const be="TagOverflowPopover",n=`${D.prefix}--tag-overflow-popover`,F=l.forwardRef((s,h)=>{const{allTagsModalSearchThreshold:v,autoAlign:A,className:T,onShowAllClick:E,overflowAlign:y,overflowTags:r,overflowType:i,showAllTagsLabel:M,popoverOpen:m,setPopoverOpen:p,...b}=s,w=l.useRef(null),O=l.useRef(null);ge(h||w,()=>{m&&p?.(!1)});const S=a=>{a.stopPropagation(),a.preventDefault(),p?.(!1),E?.()},P=a=>{const{key:d}=a;d==="Escape"&&p?.(!1)},u=(()=>{const a=v??0;return r?.filter((d,g)=>r?.length>a?g<a:g<=a)})(),q=u?.length>0;return t.createElement("span",{...b,"aria-hidden":r?.length===0,className:c(n,{[`${n}--hidden`]:r?.length===0}),ref:h||w},t.createElement(le,{align:y,autoAlign:A,className:c(T,`${n}__el`),dropShadow:!0,highContrast:!0,onKeyDown:P,open:m||!1},t.createElement(de,{onClick:()=>p?.(!m),className:c(`${n}__trigger`),text:`+${r.length}`}),t.createElement(re,null,t.createElement("div",{ref:O,className:`${n}__content`},t.createElement("ul",{className:`${n}__tag-list`},q&&u.map(({label:a,id:d,tagType:g,filter:G,onClose:R,...C})=>{const k=i==="tag"?"high-contrast":g,V=i==="tag"&&(typeof R=="function"||G);let $;return V?$=t.createElement(z,{...C,onClose:()=>R?.(),type:k,text:a}):$=t.createElement(H,{...C,type:k},a),t.createElement("li",{className:c(`${n}__tag-item`,{[`${n}__tag-item--default`]:i==="default",[`${n}__tag-item--tag`]:i==="tag"}),key:d},i==="tag"?$:a)})),(r?.length??0)>(v??0)&&t.createElement(ce,{className:`${n}__show-all-tags-link`,href:"",onClick:S,role:"button"},M)))))});F.displayName=be;F.propTypes={allTagsModalSearchThreshold:e.number,autoAlign:e.bool,className:e.string,onShowAllClick:e.func.isRequired,overflowAlign:e.oneOf(["top","top-left","top-right","bottom","bottom-left","bottom-right","left","left-bottom","left-top","right","right-bottom","right-top"]),overflowTags:e.arrayOf(e.object).isRequired,overflowType:e.oneOf(["default","tag"]),popoverOpen:e.bool,setPopoverOpen:e.func,showAllTagsLabel:e.string};F.__docgenInfo={description:"",methods:[],displayName:"TagOverflowPopover",props:{allTagsModalSearchThreshold:{required:!1,tsType:{name:"number"},description:"count of overflowTags over which a modal is offered",type:{name:"number"}},autoAlign:{required:!1,tsType:{name:"boolean"},description:"Will auto-align the popover on first render if it is not visible. This prop is currently experimental and is subject to future changes.",type:{name:"bool"}},className:{required:!1,tsType:{name:"string"},description:"className",type:{name:"string"}},onShowAllClick:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"function to execute on clicking show all",type:{name:"func"}},overflowAlign:{required:!1,tsType:{name:"PopoverAlignment"},description:"overflowAlign from the standard tooltip",type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'top-left'",computed:!1},{value:"'top-right'",computed:!1},{value:"'bottom'",computed:!1},{value:"'bottom-left'",computed:!1},{value:"'bottom-right'",computed:!1},{value:"'left'",computed:!1},{value:"'left-bottom'",computed:!1},{value:"'left-top'",computed:!1},{value:"'right'",computed:!1},{value:"'right-bottom'",computed:!1},{value:"'right-top'",computed:!1}]}},overflowTags:{required:!0,tsType:{name:"Array",elements:[{name:"TagOverflowItem"}],raw:"TagOverflowItem[]"},description:"tags shown in overflow",type:{name:"arrayOf",value:{name:"object"}}},overflowType:{required:!1,tsType:{name:"string"},description:"Type of rendering displayed inside of the tag overflow component",type:{name:"enum",value:[{value:"'default'",computed:!1},{value:"'tag'",computed:!1}]}},popoverOpen:{required:!1,tsType:{name:"boolean"},description:"Open state of the popover",type:{name:"bool"}},setPopoverOpen:{required:!1,tsType:{name:"signature",type:"function",raw:"(x: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"x"}],return:{name:"void"}}},description:"Setter function for the popoverOpen state value",type:{name:"func"}},showAllTagsLabel:{required:!1,tsType:{name:"string"},description:"label for the overflow show all tags link",type:{name:"string"}}}};const f=`${D.prefix}--tag-overflow`,K="TagOverflow",Q=10;let L=l.forwardRef((s,h)=>{const{align:v="start",allTagsModalAriaLabel:A,allTagsModalSearchLabel:T,allTagsModalSearchPlaceholderText:E,allTagsModalTarget:y,allTagsModalTitle:r,autoAlign:i,className:M,items:m,maxVisible:p,overflowAlign:b="bottom",overflowClassName:w,overflowType:O="default",onOverflowTagChange:S,showAllTagsLabel:P,tagComponent:o,...u}=s,q=l.useRef(null),a=l.useRef(null),[d,g]=l.useState(!1),[G,R]=l.useState(!1),{visibleItems:C,hiddenItems:k,itemRefHandler:V}=ve(m,q,a,p,S),$=()=>{g(!0)},Z=()=>{g(!1)},ee=(_,I)=>{const{className:x,...j}=_;return l.createElement(I,{...j,className:c(`${f}__item`,x)})},te=l.useCallback((_,I)=>{_?.(),I<=C?.length-1&&R(!1)},[C]);return t.createElement("div",{...u,className:c(f,M),...he(K),ref:h},t.createElement("div",{className:c(`${f}__visible-tags`,`${f}--align-${v}`),ref:q},C.map((_,I)=>{const{id:x,label:j,tagType:U,onClose:X,filter:ae,...Y}=_;return t.createElement("div",{className:`${f}__tag-container`,ref:oe=>{V(x,oe)},key:x},o?ee(_,o):typeof X=="function"||ae?t.createElement(z,{...Y,className:`${f}__item--tag`,type:U,onClose:()=>te(X,I),text:j}):t.createElement(H,{...Y,className:`${f}__item--tag`,type:U},j))}),k.length>0&&t.createElement("div",{className:`${f}__indicator`,ref:a},t.createElement(F,{allTagsModalSearchThreshold:Q,className:w,onShowAllClick:$,overflowTags:k,overflowAlign:b,overflowType:O,showAllTagsLabel:P,key:"tag-overflow-popover",ref:a,popoverOpen:G,setPopoverOpen:R,autoAlign:i}),t.createElement(B,{allTags:m,open:d,title:r,modalAriaLabel:A,onClose:Z,overflowType:O,searchLabel:T,searchPlaceholder:E,portalTarget:y}))))});L=D.checkComponentEnabled(L,K);L.displayName=K;const we=Object.keys(Te),W=ue(e.string,({items:s})=>s?.length>Q);L.propTypes={align:e.oneOf(["start","center","end"]),allTagsModalAriaLabel:e.string,allTagsModalSearchLabel:W,allTagsModalSearchPlaceholderText:W,allTagsModalTarget:e.node,allTagsModalTitle:W,autoAlign:e.bool,className:e.string,items:e.arrayOf(e.shape({id:e.string.isRequired,label:e.string.isRequired,tagType:e.oneOf(we)}).isRequired),maxVisible:e.number,measurementOffset:e.number,multiline:e.bool,onOverflowTagChange:e.func,overflowAlign:e.oneOf(["top","top-left","top-right","bottom","bottom-left","bottom-right","left","left-bottom","left-top","right","right-bottom","right-top"]),overflowClassName:e.string,overflowType:e.oneOf(["default","tag"]),showAllTagsLabel:W,tagComponent:e.elementType};L.__docgenInfo={description:"",methods:[],displayName:"TagOverflow",props:{align:{required:!1,tsType:{name:"union",raw:"'start' | 'center' | 'end'",elements:[{name:"literal",value:"'start'"},{name:"literal",value:"'center'"},{name:"literal",value:"'end'"}]},description:"align the Tags displayed by the TagSet. Default start.",type:{name:"enum",value:[{value:"'start'",computed:!1},{value:"'center'",computed:!1},{value:"'end'",computed:!1}]}},allTagsModalAriaLabel:{required:!1,tsType:{name:"string"},description:"aria label for all tags modal with hasScrollingContent",type:{name:"string"}},allTagsModalSearchLabel:{required:!1,tsType:{name:"string"},description:"label text for the show all search. **Note: Required if more than 10 tags**",type:{name:"custom",raw:`isRequiredIf(
  PropTypes.string,
  ({ items }) => items?.length > allTagsModalSearchThreshold
)`}},allTagsModalSearchPlaceholderText:{required:!1,tsType:{name:"string"},description:"placeholder text for the show all search. **Note: Required if more than 10 tags**",type:{name:"custom",raw:`isRequiredIf(
  PropTypes.string,
  ({ items }) => items?.length > allTagsModalSearchThreshold
)`}},allTagsModalTarget:{required:!1,tsType:{name:"ReactNode"},description:"portal target for the all tags modal",type:{name:"node"}},allTagsModalTitle:{required:!1,tsType:{name:"string"},description:"title for the show all modal. **Note: Required if more than 10 tags**",type:{name:"custom",raw:`isRequiredIf(
  PropTypes.string,
  ({ items }) => items?.length > allTagsModalSearchThreshold
)`}},autoAlign:{required:!1,tsType:{name:"boolean"},description:"Will auto-align the popover on first render if it is not visible. This prop is currently experimental and is subject to future changes.",type:{name:"bool"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},containingElementRef:{required:!1,tsType:{name:"RefObject",elements:[{name:"HTMLDivElement"}],raw:"RefObject<HTMLDivElement>"},description:"@deprecated The `containingElementRef` prop is no longer going to be used in favor of the forwarded ref."},items:{required:!1,tsType:{name:"Array",elements:[{name:"TagOverflowItem"}],raw:"TagOverflowItem[]"},description:`The items to be shown in the TagOverflow. Each item is specified as an object with properties:
**label**\\* (required) to supply the content,
**id**\\* (required) to uniquely identify each item.
**tagType** the type value to be passed to the Carbon Tag component.
Refer https://react.carbondesignsystem.com/?path=/docs/components-tag--default to see the possible values for tagType

If you want to render a custom component, pass it as tagComponent prop and
then pass the props required for your custom component as the properties of item object`,type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},tagType:{name:"enum",value:[{value:'"red"',computed:!1},{value:'"magenta"',computed:!1},{value:'"purple"',computed:!1},{value:'"blue"',computed:!1},{value:'"cyan"',computed:!1},{value:'"teal"',computed:!1},{value:'"green"',computed:!1},{value:'"gray"',computed:!1},{value:'"cool-gray"',computed:!1},{value:'"warm-gray"',computed:!1},{value:'"high-contrast"',computed:!1},{value:'"outline"',computed:!1}],required:!1}}}}},maxVisible:{required:!1,tsType:{name:"number"},description:"maximum visible items",type:{name:"number"}},measurementOffset:{required:!1,tsType:{name:"number"},description:"@deprecated The `measurementOffset` prop is no longer going to be used. This value will now be calculated automatically.",type:{name:"number"}},multiline:{required:!1,tsType:{name:"boolean"},description:"@deprecated The `multiline` prop is no longer going to be used. This component should only be used when you need to hide overflowing items.",type:{name:"bool"}},overflowAlign:{required:!1,tsType:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'left-bottom'
| 'left-top'
| 'right'
| 'right-bottom'
| 'right-top'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'left-bottom'"},{name:"literal",value:"'left-top'"},{name:"literal",value:"'right'"},{name:"literal",value:"'right-bottom'"},{name:"literal",value:"'right-top'"}]},description:"overflowAlign from the standard tooltip. Default center.",type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'top-left'",computed:!1},{value:"'top-right'",computed:!1},{value:"'bottom'",computed:!1},{value:"'bottom-left'",computed:!1},{value:"'bottom-right'",computed:!1},{value:"'left'",computed:!1},{value:"'left-bottom'",computed:!1},{value:"'left-top'",computed:!1},{value:"'right'",computed:!1},{value:"'right-bottom'",computed:!1},{value:"'right-top'",computed:!1}]}},overflowClassName:{required:!1,tsType:{name:"string"},description:"overflowClassName for the tooltip popup",type:{name:"string"}},overflowType:{required:!1,tsType:{name:"union",raw:"'default' | 'tag'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'tag'"}]},description:"Type of rendering displayed inside of the tag overflow component",type:{name:"enum",value:[{value:"'default'",computed:!1},{value:"'tag'",computed:!1}]}},onOverflowTagChange:{required:!1,tsType:{name:"signature",type:"function",raw:`(value: {
  hiddenItems?: TagOverflowItem[];
  minWidth?: number;
  maxWidth?: number;
}) => void`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  hiddenItems?: TagOverflowItem[];
  minWidth?: number;
  maxWidth?: number;
}`,signature:{properties:[{key:"hiddenItems",value:{name:"Array",elements:[{name:"TagOverflowItem"}],raw:"TagOverflowItem[]",required:!1}},{key:"minWidth",value:{name:"number",required:!1}},{key:"maxWidth",value:{name:"number",required:!1}}]}},name:"value"}],return:{name:"void"}}},description:"Handler to get overflow tags",type:{name:"func"}},showAllTagsLabel:{required:!1,tsType:{name:"string"},description:`label for the overflow show all tags link.

**Note:** Required if more than 10 tags`,type:{name:"custom",raw:`isRequiredIf(
  PropTypes.string,
  ({ items }) => items?.length > allTagsModalSearchThreshold
)`}},tagComponent:{required:!1,tsType:{name:"string"},description:`Component definition of the items to be rendered inside TagOverflow.
If this is not passed, items will be rendered as Tag component`,type:{name:"elementType"}}}};export{Te as T,L as a};
