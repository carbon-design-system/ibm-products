import{e as i,S as u,r as x}from"./iframe-D7eStwkL.js";import{g}from"./getBatchActions-BK4DguTY.js";import{s as w,m as E}from"./_storybook-styles-CrIbyvWE.js";import{D as f}from"./DatagridActions-CaHXUpNT.js";import{D as S}from"./DatagridPagination-CGsSgxSb.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-BaTG9-YH.js";import{u as h}from"./useExpandedRow-C7Qjt3rv.js";import{u as D}from"./useSelectRows-DmD7T-i0.js";import{u as C}from"./useStickyColumn-C7H9523F.js";import{u as R}from"./usePrefix-DfpUWzIu.js";import{E as H}from"./bucket-6-VqTa2pt7.js";import{T as b}from"./bucket-17-D8BvaLsm.js";import"./bucket-0-L01MYrbT.js";import"./bucket-2-B5tEtBVG.js";import"./index-DtlUN_qQ.js";import"./bucket-18-BuJkdNpM.js";import"./bucket-7-DwZZBlSx.js";import"./ComposedModal-Dj2JxVd0.js";import"./index-BEhuL1MR.js";import"./index-BwtNW634.js";import"./LayerContext-CYpz3aOG.js";import"./clamp--00YEiB8.js";import"./ButtonSet-DFPcwcVc.js";import"./InlineLoading-D_3KuMGG.js";import"./mergeRefs-91-mP8KM.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-BaNPWWSx.js";import"./Text-CX3SBrnk.js";import"./utils-DEi-HpEF.js";import"./TableToolbarSearch-GvzW7hS3.js";import"./wrapComponent-DyImDxEd.js";import"./Search-DgqxHkqe.js";import"./FormContext-DZrds_Pd.js";import"./bucket-15-CglRR68z.js";import"./Dropdown-CrE-YZp3.js";import"./index-7ZA3mLov.js";import"./inheritsLoose-DHKJTbHM.js";import"./bucket-19-CU-7ragV.js";import"./MenuItem-DyqZFAAw.js";import"./useControllableState-Nc8tGw_d.js";import"./useAttachedMenu-B_FBdv8W.js";import"./index-C9AI0Q5Z.js";import"./index-mKbH19hl.js";import"./bucket-12-CmVKm9rs.js";import"./useOutsideClick-C7cVWqUY.js";import"./OverflowMenuItem-UPp1xDAY.js";import"./useFilterContext-CK7Dedg3.js";import"./bucket-14-Dc70y2tn.js";import"./Pagination-iNpxVDXO.js";import"./Select-Cm6hXOBL.js";import"./SelectItem-DwOyyrs1.js";import"./MultiSelect-C82-1bLi.js";import"./Checkbox-Bb4PbV8H.js";import"./devtools-Df6KS5y3.js";import"./TableRow-BgdWJQw4.js";import"./bucket-1-Br50AaUq.js";import"./TableToolbar-E8Ueg5WG.js";import"./index-D6e51nWM.js";import"./ErrorEmptyState-CfEhXZwo.js";import"./EmptyState-y4UqLOac.js";import"./EmptyStateV2-BAe4fjrU.js";import"./Link-C9tp-_WB.js";import"./ErrorIllustration-DYxlcaFP.js";import"./useId-Df4HKPCr.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-DoR7awrm.js";import"./NoDataIllustration-DyB9Ji-a.js";import"./NotFoundEmptyState-B5TfFXfG.js";import"./NotFoundIllustration-BV8LbgcU.js";import"./index.esm-Bl_iVLFX.js";import"./usePreviousValue-BasY3WUO.js";import"./useResizeObserver-BMrbGDWb.js";import"./useIsomorphicEffect-DXbKZHyj.js";import"./getFocusableElements-BW7cf991.js";import"./index-D-rF9mbQ.js";import"./props-helper-CnDIRZfz.js";import"./useClickOutside-DM83YkYK.js";import"./AccordionItem-DuCHsT_A.js";import"./DatePicker-BsVq3iuW.js";import"./FormGroup-b4GVl1RU.js";import"./NumberInput-Df4ifTAi.js";import"./useNormalizedInputProps-OBtWfA41.js";import"./documentLang-E105Y72C.js";import"./bucket-16-B9n8vlra.js";import"./RadioButton-DGTJQI38.js";import"./RadioButtonGroup-dywnGiko.js";import"./usePrefersReducedMotion-DrOjculO.js";import"./usePresence-Dip6Bx8l.js";import"./ActionSet-CudTZLam.js";import"./useWindowResize-VotVidr5.js";import"./TagSet-CcDGL_ZN.js";import"./Tag-DTggSZHJ.js";import"./DefinitionTooltip-8CBhbmfn.js";import"./DismissibleTag-BIGbYbYR.js";import"./usePortalTarget-B_qSnmJh.js";import"./OperationalTag-C9kChyHW.js";import"./SkeletonText-BzbRo6y5.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-BagXOmld.js";import"./TableSelectRow-DxRL5j3I.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,bt={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const Bt=["ExpandableRowStory"];export{e as ExpandableRowStory,Bt as __namedExportsOrder,bt as default};
