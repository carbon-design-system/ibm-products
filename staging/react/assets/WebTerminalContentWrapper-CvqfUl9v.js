import{r as a,e as n,p as f,P as e,c as k,B as g,n as j}from"./iframe-YKw9nL_F.js";import{O as V}from"./index-BF8Zf0QK.js";import{O as W}from"./OverflowMenuItem-tgqxnhno.js";import{T as B}from"./index-DjKGj5xQ.js";import{g as G}from"./devtools-DSZ92uOv.js";import{u as H}from"./usePrefersReducedMotion-BYGYFI31.js";import{aM as U}from"./bucket-7-DiHxbQPt.js";const R=a.createContext({}),F="WebTerminalProvider";let y=({children:l})=>{const[o,r]=a.useState(!1),c=a.useCallback(()=>r(!0),[]),m=a.useCallback(()=>r(!1),[]),b=a.useCallback(()=>r(!o),[o]);return n.createElement(R.Provider,{value:{open:o,openWebTerminal:c,closeWebTerminal:m,toggleWebTerminal:b}},l)};y=f.checkComponentEnabled(y,F);y.propTypes={children:e.oneOfType([e.arrayOf(e.node),e.node]).isRequired};const C=()=>a.useContext(R);y.__docgenInfo={description:"",methods:[],displayName:"WebTerminalProvider",props:{children:{required:!0,tsType:{name:"union",raw:"ReactNode | ReactNode[]",elements:[{name:"ReactNode"},{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]"}]},description:"Provide your own terminal component as children to show up in the web terminal",type:{name:"union",value:[{name:"arrayOf",value:{name:"node"}},{name:"node"}]}}}};const w="WebTerminal",i=`${f.prefix}--web-terminal`,p={actions:Object.freeze([]),documentationLinks:Object.freeze([]),documentationLinksIconDescription:"Show documentation links",isInitiallyOpen:!1,webTerminalAriaLabel:"Web terminal header"};let d=n.forwardRef(({actions:l=p.actions,children:o,className:r,closeIconDescription:c,documentationLinks:m=p.documentationLinks,documentationLinksIconDescription:b=p.documentationLinksIconDescription,isInitiallyOpen:I=p.isInitiallyOpen,webTerminalAriaLabel:N=p.webTerminalAriaLabel,...q},_)=>{const P=a.useRef(null),$=_??P,{open:s,closeWebTerminal:D,openWebTerminal:L}=C(),[A,h]=a.useState(s),x=H(),z=a.useMemo(()=>m.length>0,[m]);a.useEffect(()=>{s&&h(!0)},[s]),a.useEffect(()=>{I&&L?.()},[]);const M=()=>{s||h(!1)},S=()=>{x&&h(!1),D?.()};return A?n.createElement("div",{...q,...G(w),ref:$,className:k([i,r,{[`${i}--open`]:s,[`${i}--closed`]:!s}]),onAnimationEnd:M},n.createElement("header",{"aria-label":N,className:`${i}__bar`},n.createElement("div",{className:`${i}__actions`},z&&n.createElement(V,{renderIcon:t=>n.createElement(U,{size:16,...t}),iconDescription:b,"aria-label":b,menuOptionsClass:`${i}__documentation-overflow`,size:"lg"},m.map(({...t},T)=>n.createElement(W,{key:T,...t}))),l.map(({renderIcon:t,onClick:T,iconDescription:v})=>n.createElement(g,{key:v,hasIconOnly:!0,renderIcon:t,onClick:T,iconDescription:v,kind:"ghost","aria-label":v}))),n.createElement(g,{hasIconOnly:!0,renderIcon:t=>n.createElement(j,{size:16,...t}),kind:"ghost",iconDescription:c,onClick:S,onAnimationEnd:t=>t.stopPropagation()})),n.createElement(B,{theme:"g100"},n.createElement("div",{className:`${i}__body`},o))):null});d=f.checkComponentEnabled(d,w);d.displayName=w;d.propTypes={actions:e.arrayOf(e.shape({renderIcon:e.func.isRequired,onClick:e.func.isRequired,iconDescription:e.string.isRequired})),children:e.oneOfType([e.arrayOf(e.node),e.node]).isRequired,className:e.string,closeIconDescription:e.string.isRequired,documentationLinks:e.arrayOf(e.shape({...W.propTypes})),documentationLinksIconDescription:e.string,isInitiallyOpen:e.bool,webTerminalAriaLabel:e.string};d.__docgenInfo={description:"The `WebTerminal` is prompted by the user and is persistent until dismissed. The purpose of a web terminal is to provide users with the ability to type commands manually instead of using the GUI.",methods:[],displayName:"WebTerminal",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Provide your own terminal component as children to show up in the web terminal",type:{name:"union",value:[{name:"arrayOf",value:{name:"node"}},{name:"node"}]}},actions:{required:!1,tsType:{name:"unknown"},description:"An array of actions to be displayed in the web terminal header bar",defaultValue:{value:"Object.freeze([])",computed:!0},type:{name:"arrayOf",value:{name:"shape",value:{renderIcon:{name:"func",required:!0},onClick:{name:"func",required:!0},iconDescription:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Custom classname for additional styling of the web terminal",type:{name:"string"}},closeIconDescription:{required:!0,tsType:{name:"string"},description:"Icon description for the close button",type:{name:"string"}},documentationLinks:{required:!1,tsType:{name:"unknown"},description:"Array of objects for each documentation link. Each documentation link uses the prop types of OverflowMenuItems. See more: https://react.carbondesignsystem.com/?path=/docs/components-overflowmenu--default",defaultValue:{value:"Object.freeze([])",computed:!0},type:{name:"arrayOf",value:{name:"shape",value:{}}}},documentationLinksIconDescription:{required:!1,tsType:{name:"string"},description:"Description for the documentation link overflow menu tooltip",defaultValue:{value:"'Show documentation links'",computed:!1},type:{name:"string"}},isInitiallyOpen:{required:!1,tsType:{name:"boolean"},description:"Optionally pass if the web terminal should be open by default",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},webTerminalAriaLabel:{required:!1,tsType:{name:"string"},description:"Specifies aria label for Web terminal",defaultValue:{value:"'Web terminal header'",computed:!1},type:{name:"string"}}},composes:["PropsWithChildren"]};const E="WebTerminalContentWrapper",O=`${f.prefix}--web-terminal-content-wrapper`;let u=n.forwardRef(({children:l,...o},r)=>{const{open:c}=C();return n.createElement("div",{ref:r,className:k([O,{[`${O}--open`]:c}]),...o},l)});u=f.checkComponentEnabled(u,E);u.displayName=E;u.propTypes={children:e.oneOfType([e.arrayOf(e.node),e.node]).isRequired};u.__docgenInfo={description:"",methods:[],displayName:"WebTerminalContentWrapper",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Pass in content as children.",type:{name:"union",value:[{name:"arrayOf",value:{name:"node"}},{name:"node"}]}}}};export{d as W,u as a,y as b,C as u};
