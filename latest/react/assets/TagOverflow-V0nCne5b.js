import{r as l,e as t,c as f,p as R,P as e,L as ae,N as oe}from"./iframe-B06X_oSn.js";import{T as D}from"./Tag-WKxTmgqK.js";import{D as G}from"./DismissibleTag-BfWHynv2.js";import{C as le,M as re,a as ne}from"./ComposedModal-CwZ0Pnju.js";import{S as se}from"./Search-Do8DlnXk.js";import{p as ie}from"./props-helper-CTf-A1om.js";import{u as me}from"./usePortalTarget-Dhd837UD.js";import{L as pe}from"./Link-DbpUCrpK.js";import{O as ue}from"./OperationalTag-BxaTSISh.js";import{u as fe}from"./useClickOutside-BCXEJHNU.js";import{g as ce}from"./devtools-BYTU908B.js";import{u as de}from"./useOverflowItems-DMnIHmGw.js";const ge={red:"Red",magenta:"Magenta",purple:"Purple",blue:"Blue",cyan:"Cyan",teal:"Teal",green:"Green",gray:"Gray","cool-gray":"Cool-Gray","warm-gray":"Warm-Gray","high-contrast":"High-Contrast",outline:"Outline"},he="TagOverflowModal",_=`${R.prefix}--tag-overflow-modal`,Y={modalAriaLabel:"List of all tags",searchLabel:""},V=({allTags:c,className:h,title:v,modalAriaLabel:A=Y.modalAriaLabel,onClose:y,onTagClose:E,open:T,overflowType:r,portalTarget:i,searchLabel:M=Y.searchLabel,searchPlaceholder:n,...m})=>{const[b,w]=l.useState(""),O=me(i),$=()=>T&&b&&c?c.filter(o=>o.label?.toLocaleLowerCase()?.includes(b.toLocaleLowerCase())):c||[],S=o=>{w(o.target.value||"")};return O(t.createElement(le,{...m,containerClassName:`${_}__container`,className:f(h,_),size:"sm","aria-label":"Search all",open:T,onClose:y},t.createElement(re,{className:`${_}__header`,closeModal:y,title:v},t.createElement(se,{"data-modal-primary-focus":!0,className:`${_}__search`,labelText:M,placeholder:n,onChange:S,size:"lg"})),t.createElement(ne,{className:`${_}__body`,hasForm:!0,hasScrollingContent:!0,"aria-label":A},$().map(({label:o,id:p,filter:C,onClose:a})=>r==="tag"&&(typeof a=="function"||C)?t.createElement(G,{key:p,text:o,onClose:()=>E?.({label:o,id:p})}):t.createElement(D,{key:p},o)),t.createElement("div",{className:`${_}__fade`}))))};V.propTypes={allTags:e.arrayOf(e.shape({...ie(D.propTypes,"filter"),label:e.string.isRequired})),className:e.string,onClose:e.func,onTagClose:e.func,open:e.bool,overflowType:e.oneOf(["default","tag"]),portalTarget:e.node,searchLabel:e.string,searchPlaceholder:e.string,title:e.string};V.displayName=he;const ve="TagOverflowPopover",s=`${R.prefix}--tag-overflow-popover`,W=l.forwardRef((c,h)=>{const{allTagsModalSearchThreshold:v,autoAlign:A,className:y,onShowAllClick:E,overflowAlign:T,overflowTags:r,overflowType:i,showAllTagsLabel:M,popoverOpen:n,setPopoverOpen:m,...b}=c,w=l.useRef(null),O=l.useRef(null);fe(h||w,()=>{n&&m?.(!1)});const $=a=>{a.stopPropagation(),a.preventDefault(),m?.(!1),E?.()},S=a=>{const{key:d}=a;d==="Escape"&&m?.(!1)},p=(()=>{const a=v??0;return r?.filter((d,g)=>r?.length>a?g<a:g<=a)})(),C=p?.length>0;return t.createElement("span",{...b,"aria-hidden":r?.length===0,className:f(s,{[`${s}--hidden`]:r?.length===0}),ref:h||w},t.createElement(ae,{align:T,autoAlign:A,className:f(y,`${s}__el`),dropShadow:!0,highContrast:!0,onKeyDown:S,open:n||!1},t.createElement(ue,{onClick:()=>m?.(!n),className:f(`${s}__trigger`),text:`+${r.length}`,"aria-expanded":n,"aria-controls":`${R.prefix}-overflow-content`}),t.createElement(oe,{id:`${R.prefix}-overflow-content`,"aria-hidden":!n},t.createElement("div",{ref:O,className:`${s}__content`},t.createElement("ul",{className:`${s}__tag-list`},C&&p.map(({label:a,id:d,tagType:g,filter:H,onClose:x,...q})=>{const k=i==="tag"?"high-contrast":g,F=i==="tag"&&(typeof x=="function"||H);let L;return F?L=t.createElement(G,{...q,onClose:()=>x?.(),type:k,text:a}):L=t.createElement(D,{...q,type:k},a),t.createElement("li",{className:f(`${s}__tag-item`,{[`${s}__tag-item--default`]:i==="default",[`${s}__tag-item--tag`]:i==="tag"}),key:d},i==="tag"?L:a)})),(r?.length??0)>(v??0)&&t.createElement(pe,{className:`${s}__show-all-tags-link`,href:"",onClick:$,role:"button"},M)))))});W.displayName=ve;W.propTypes={allTagsModalSearchThreshold:e.number,autoAlign:e.bool,className:e.string,onShowAllClick:e.func.isRequired,overflowAlign:e.oneOf(["top","top-left","top-right","bottom","bottom-left","bottom-right","left","left-bottom","left-top","right","right-bottom","right-top"]),overflowTags:e.arrayOf(e.object).isRequired,overflowType:e.oneOf(["default","tag"]),popoverOpen:e.bool,setPopoverOpen:e.func,showAllTagsLabel:e.string};W.__docgenInfo={description:"",methods:[],displayName:"TagOverflowPopover",props:{allTagsModalSearchThreshold:{required:!1,tsType:{name:"number"},description:"count of overflowTags over which a modal is offered",type:{name:"number"}},autoAlign:{required:!1,tsType:{name:"boolean"},description:"Will auto-align the popover on first render if it is not visible. This prop is currently experimental and is subject to future changes.",type:{name:"bool"}},className:{required:!1,tsType:{name:"string"},description:"className",type:{name:"string"}},onShowAllClick:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"function to execute on clicking show all",type:{name:"func"}},overflowAlign:{required:!1,tsType:{name:"PopoverAlignment"},description:"overflowAlign from the standard tooltip",type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'top-left'",computed:!1},{value:"'top-right'",computed:!1},{value:"'bottom'",computed:!1},{value:"'bottom-left'",computed:!1},{value:"'bottom-right'",computed:!1},{value:"'left'",computed:!1},{value:"'left-bottom'",computed:!1},{value:"'left-top'",computed:!1},{value:"'right'",computed:!1},{value:"'right-bottom'",computed:!1},{value:"'right-top'",computed:!1}]}},overflowTags:{required:!0,tsType:{name:"Array",elements:[{name:"TagOverflowItem"}],raw:"TagOverflowItem[]"},description:"tags shown in overflow",type:{name:"arrayOf",value:{name:"object"}}},overflowType:{required:!1,tsType:{name:"string"},description:"Type of rendering displayed inside of the tag overflow component",type:{name:"enum",value:[{value:"'default'",computed:!1},{value:"'tag'",computed:!1}]}},popoverOpen:{required:!1,tsType:{name:"boolean"},description:"Open state of the popover",type:{name:"bool"}},setPopoverOpen:{required:!1,tsType:{name:"signature",type:"function",raw:"(x: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"x"}],return:{name:"void"}}},description:"Setter function for the popoverOpen state value",type:{name:"func"}},showAllTagsLabel:{required:!1,tsType:{name:"string"},description:"label for the overflow show all tags link",type:{name:"string"}}}};const u=`${R.prefix}--tag-overflow`,J="TagOverflow",ye=10,z=l.forwardRef((c,h)=>{const{align:v="start",allTagsModalAriaLabel:A,allTagsModalSearchLabel:y,allTagsModalSearchPlaceholderText:E,allTagsModalTarget:T,allTagsModalTitle:r,autoAlign:i,className:M,items:n,maxVisible:m,overflowAlign:b="bottom",overflowClassName:w,overflowType:O="default",onOverflowTagChange:$,showAllTagsLabel:S,tagComponent:o,...p}=c,C=l.useRef(null),a=l.useRef(null),[d,g]=l.useState(!1),[H,x]=l.useState(!1),{visibleItems:q,hiddenItems:k,itemRefHandler:F}=de(n,C,a,m,$),L=()=>{g(!0)},Q=()=>{g(!1)},X=(N,P)=>{const{className:I,...j}=N;return l.createElement(P,{...j,className:f(`${u}__item`,I)})},Z=l.useCallback((N,P)=>{N?.(),P<=q?.length-1&&x(!1)},[q]);return t.createElement("div",{...p,className:f(u,M),...ce(J),ref:h},t.createElement("div",{className:f(`${u}__visible-tags`,`${u}--align-${v}`),ref:C},q.map((N,P)=>{const{id:I,label:j,tagType:B,onClose:K,filter:ee,...U}=N;return t.createElement("div",{className:`${u}__tag-container`,ref:te=>{F(I,te)},key:I},o?X(N,o):typeof K=="function"||ee?t.createElement(G,{...U,className:`${u}__item--tag`,type:B,onClose:()=>Z(K,P),text:j}):t.createElement(D,{...U,className:`${u}__item--tag`,type:B},j))}),k.length>0&&t.createElement("div",{className:`${u}__indicator`,ref:a},t.createElement(W,{allTagsModalSearchThreshold:ye,className:w,onShowAllClick:L,overflowTags:k,overflowAlign:b,overflowType:O,showAllTagsLabel:S,key:"tag-overflow-popover",ref:a,popoverOpen:H,setPopoverOpen:x,autoAlign:i}),t.createElement(V,{allTags:n,open:d,title:r,modalAriaLabel:A,onClose:Q,overflowType:O,searchLabel:y,searchPlaceholder:E,portalTarget:T}))))});z.displayName=J;const Te=Object.keys(ge);z.propTypes={align:e.oneOf(["start","center","end"]),allTagsModalAriaLabel:e.string,allTagsModalSearchLabel:e.string,allTagsModalSearchPlaceholderText:e.string,allTagsModalTarget:e.node,allTagsModalTitle:e.string,autoAlign:e.bool,className:e.string,items:e.arrayOf(e.shape({id:e.string.isRequired,label:e.string.isRequired,tagType:e.oneOf(Te)}).isRequired),maxVisible:e.number,measurementOffset:e.number,multiline:e.bool,onOverflowTagChange:e.func,overflowAlign:e.oneOf(["top","top-left","top-right","bottom","bottom-left","bottom-right","left","left-bottom","left-top","right","right-bottom","right-top"]),overflowClassName:e.string,overflowType:e.oneOf(["default","tag"]),showAllTagsLabel:e.string,tagComponent:e.elementType};z.__docgenInfo={description:"",methods:[],displayName:"TagOverflow",props:{align:{required:!1,tsType:{name:"union",raw:"'start' | 'center' | 'end'",elements:[{name:"literal",value:"'start'"},{name:"literal",value:"'center'"},{name:"literal",value:"'end'"}]},description:"align the Tags displayed by the TagSet. Default start.",type:{name:"enum",value:[{value:"'start'",computed:!1},{value:"'center'",computed:!1},{value:"'end'",computed:!1}]}},allTagsModalAriaLabel:{required:!1,tsType:{name:"string"},description:"aria label for all tags modal with hasScrollingContent",type:{name:"string"}},allTagsModalSearchLabel:{required:!1,tsType:{name:"string"},description:"label text for the show all search. **Note: Required if more than 10 tags**",type:{name:"string"}},allTagsModalSearchPlaceholderText:{required:!1,tsType:{name:"string"},description:"placeholder text for the show all search. **Note: Required if more than 10 tags**",type:{name:"string"}},allTagsModalTarget:{required:!1,tsType:{name:"ReactNode"},description:"portal target for the all tags modal",type:{name:"node"}},allTagsModalTitle:{required:!1,tsType:{name:"string"},description:"title for the show all modal. **Note: Required if more than 10 tags**",type:{name:"string"}},autoAlign:{required:!1,tsType:{name:"boolean"},description:"Will auto-align the popover on first render if it is not visible. This prop is currently experimental and is subject to future changes.",type:{name:"bool"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},containingElementRef:{required:!1,tsType:{name:"RefObject",elements:[{name:"HTMLDivElement"}],raw:"RefObject<HTMLDivElement>"},description:"@deprecated The `containingElementRef` prop is no longer going to be used in favor of the forwarded ref."},items:{required:!1,tsType:{name:"Array",elements:[{name:"TagOverflowItem"}],raw:"TagOverflowItem[]"},description:`The items to be shown in the TagOverflow. Each item is specified as an object with properties:
**label**\\* (required) to supply the content,
**id**\\* (required) to uniquely identify each item.
**tagType** the type value to be passed to the Carbon Tag component.
Refer https://react.carbondesignsystem.com/?path=/docs/components-tag--default to see the possible values for tagType

If you want to render a custom component, pass it as tagComponent prop and
then pass the props required for your custom component as the properties of item object`,type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!0},label:{name:"string",required:!0},tagType:{name:"enum",value:[{value:'"red"',computed:!1},{value:'"magenta"',computed:!1},{value:'"purple"',computed:!1},{value:'"blue"',computed:!1},{value:'"cyan"',computed:!1},{value:'"teal"',computed:!1},{value:'"green"',computed:!1},{value:'"gray"',computed:!1},{value:'"cool-gray"',computed:!1},{value:'"warm-gray"',computed:!1},{value:'"high-contrast"',computed:!1},{value:'"outline"',computed:!1}],required:!1}}}}},maxVisible:{required:!1,tsType:{name:"number"},description:"maximum visible items",type:{name:"number"}},measurementOffset:{required:!1,tsType:{name:"number"},description:"@deprecated The `measurementOffset` prop is no longer going to be used. This value will now be calculated automatically.",type:{name:"number"}},multiline:{required:!1,tsType:{name:"boolean"},description:"@deprecated The `multiline` prop is no longer going to be used. This component should only be used when you need to hide overflowing items.",type:{name:"bool"}},overflowAlign:{required:!1,tsType:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'left-bottom'
| 'left-top'
| 'right'
| 'right-bottom'
| 'right-top'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'left-bottom'"},{name:"literal",value:"'left-top'"},{name:"literal",value:"'right'"},{name:"literal",value:"'right-bottom'"},{name:"literal",value:"'right-top'"}]},description:"overflowAlign from the standard tooltip. Default center.",type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'top-left'",computed:!1},{value:"'top-right'",computed:!1},{value:"'bottom'",computed:!1},{value:"'bottom-left'",computed:!1},{value:"'bottom-right'",computed:!1},{value:"'left'",computed:!1},{value:"'left-bottom'",computed:!1},{value:"'left-top'",computed:!1},{value:"'right'",computed:!1},{value:"'right-bottom'",computed:!1},{value:"'right-top'",computed:!1}]}},overflowClassName:{required:!1,tsType:{name:"string"},description:"overflowClassName for the tooltip popup",type:{name:"string"}},overflowType:{required:!1,tsType:{name:"union",raw:"'default' | 'tag'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'tag'"}]},description:"Type of rendering displayed inside of the tag overflow component",type:{name:"enum",value:[{value:"'default'",computed:!1},{value:"'tag'",computed:!1}]}},onOverflowTagChange:{required:!1,tsType:{name:"signature",type:"function",raw:`(value: {
  hiddenItems?: TagOverflowItem[];
  minWidth?: number;
  maxWidth?: number;
}) => void`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  hiddenItems?: TagOverflowItem[];
  minWidth?: number;
  maxWidth?: number;
}`,signature:{properties:[{key:"hiddenItems",value:{name:"Array",elements:[{name:"TagOverflowItem"}],raw:"TagOverflowItem[]",required:!1}},{key:"minWidth",value:{name:"number",required:!1}},{key:"maxWidth",value:{name:"number",required:!1}}]}},name:"value"}],return:{name:"void"}}},description:"Handler to get overflow tags",type:{name:"func"}},showAllTagsLabel:{required:!1,tsType:{name:"string"},description:`label for the overflow show all tags link.

**Note:** Required if more than 10 tags`,type:{name:"string"}},tagComponent:{required:!1,tsType:{name:"string"},description:`Component definition of the items to be rendered inside TagOverflow.
If this is not passed, items will be rendered as Tag component`,type:{name:"elementType"}}}};export{ge as T,z as a};
