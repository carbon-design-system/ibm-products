import{r as a,e as n,P as e,c as v,p as g,B as T,m as S}from"./iframe-BfCV3bOI.js";import{O as j}from"./index-Dgw2jygY.js";import{O}from"./OverflowMenuItem-CxOBAhX2.js";import{T as V}from"./index-Cog7owmr.js";import{g as B}from"./devtools-mGs0wnY2.js";import{u as U}from"./usePrefersReducedMotion-BjFD9GIF.js";import{aU as G}from"./bucket-7-BlpeiSNu.js";const k=a.createContext({}),W=({children:l})=>{const[o,r]=a.useState(!1),c=a.useCallback(()=>r(!0),[]),m=a.useCallback(()=>r(!1),[]),d=a.useCallback(()=>r(!o),[o]);return n.createElement(k.Provider,{value:{open:o,openWebTerminal:c,closeWebTerminal:m,toggleWebTerminal:d}},l)};W.propTypes={children:e.oneOfType([e.arrayOf(e.node),e.node]).isRequired};const R=()=>a.useContext(k);W.__docgenInfo={description:"",methods:[],displayName:"WebTerminalProvider",props:{children:{required:!0,tsType:{name:"union",raw:"ReactNode | ReactNode[]",elements:[{name:"ReactNode"},{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]"}]},description:"Provide your own terminal component as children to show up in the web terminal",type:{name:"union",value:[{name:"arrayOf",value:{name:"node"}},{name:"node"}]}}}};const I="WebTerminal",i=`${g.prefix}--web-terminal`,p={actions:Object.freeze([]),documentationLinks:Object.freeze([]),documentationLinksIconDescription:"Show documentation links",isInitiallyOpen:!1,webTerminalAriaLabel:"Web terminal header"},b=n.forwardRef(({actions:l=p.actions,children:o,className:r,closeIconDescription:c,documentationLinks:m=p.documentationLinks,documentationLinksIconDescription:d=p.documentationLinksIconDescription,isInitiallyOpen:N=p.isInitiallyOpen,webTerminalAriaLabel:q=p.webTerminalAriaLabel,...C},E)=>{const _=a.useRef(null),P=E??_,{open:s,closeWebTerminal:$,openWebTerminal:D}=R(),[L,u]=a.useState(s),A=U(),x=a.useMemo(()=>m.length>0,[m]);a.useEffect(()=>{s&&u(!0)},[s]),a.useEffect(()=>{N&&D?.()},[]);const z=()=>{s||u(!1)},M=()=>{A&&u(!1),$?.()};return L?n.createElement("div",{...C,...B(I),ref:P,className:v([i,r,{[`${i}--open`]:s,[`${i}--closed`]:!s}]),onAnimationEnd:z},n.createElement("header",{"aria-label":q,className:`${i}__bar`},n.createElement("div",{className:`${i}__actions`},x&&n.createElement(j,{renderIcon:t=>n.createElement(G,{size:16,...t}),iconDescription:d,"aria-label":d,menuOptionsClass:`${i}__documentation-overflow`,size:"lg"},m.map(({...t},f)=>n.createElement(O,{key:f,...t}))),l.map(({renderIcon:t,onClick:f,iconDescription:y})=>n.createElement(T,{key:y,hasIconOnly:!0,renderIcon:t,onClick:f,iconDescription:y,kind:"ghost","aria-label":y}))),n.createElement(T,{hasIconOnly:!0,renderIcon:t=>n.createElement(S,{size:16,...t}),kind:"ghost",iconDescription:c,onClick:M,onAnimationEnd:t=>t.stopPropagation()})),n.createElement(V,{theme:"g100"},n.createElement("div",{className:`${i}__body`},o))):null});b.displayName=I;b.propTypes={actions:e.arrayOf(e.shape({renderIcon:e.func.isRequired,onClick:e.func.isRequired,iconDescription:e.string.isRequired})),children:e.oneOfType([e.arrayOf(e.node),e.node]).isRequired,className:e.string,closeIconDescription:e.string.isRequired,documentationLinks:e.arrayOf(e.shape({...O.propTypes})),documentationLinksIconDescription:e.string,isInitiallyOpen:e.bool,webTerminalAriaLabel:e.string};b.__docgenInfo={description:"The `WebTerminal` is prompted by the user and is persistent until dismissed. The purpose of a web terminal is to provide users with the ability to type commands manually instead of using the GUI.",methods:[],displayName:"WebTerminal",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Provide your own terminal component as children to show up in the web terminal",type:{name:"union",value:[{name:"arrayOf",value:{name:"node"}},{name:"node"}]}},actions:{required:!1,tsType:{name:"unknown"},description:"An array of actions to be displayed in the web terminal header bar",defaultValue:{value:"Object.freeze([])",computed:!0},type:{name:"arrayOf",value:{name:"shape",value:{renderIcon:{name:"func",required:!0},onClick:{name:"func",required:!0},iconDescription:{name:"string",required:!0}}}}},className:{required:!1,tsType:{name:"string"},description:"Custom classname for additional styling of the web terminal",type:{name:"string"}},closeIconDescription:{required:!0,tsType:{name:"string"},description:"Icon description for the close button",type:{name:"string"}},documentationLinks:{required:!1,tsType:{name:"unknown"},description:"Array of objects for each documentation link. Each documentation link uses the prop types of OverflowMenuItems. See more: https://react.carbondesignsystem.com/?path=/docs/components-overflowmenu--default",defaultValue:{value:"Object.freeze([])",computed:!0},type:{name:"arrayOf",value:{name:"shape",value:{}}}},documentationLinksIconDescription:{required:!1,tsType:{name:"string"},description:"Description for the documentation link overflow menu tooltip",defaultValue:{value:"'Show documentation links'",computed:!1},type:{name:"string"}},isInitiallyOpen:{required:!1,tsType:{name:"boolean"},description:"Optionally pass if the web terminal should be open by default",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},webTerminalAriaLabel:{required:!1,tsType:{name:"string"},description:"Specifies aria label for Web terminal",defaultValue:{value:"'Web terminal header'",computed:!1},type:{name:"string"}}},composes:["PropsWithChildren"]};const H="WebTerminalContentWrapper",w=`${g.prefix}--web-terminal-content-wrapper`,h=n.forwardRef(({children:l,...o},r)=>{const{open:c}=R();return n.createElement("div",{ref:r,className:v([w,{[`${w}--open`]:c}]),...o},l)});h.displayName=H;h.propTypes={children:e.oneOfType([e.arrayOf(e.node),e.node]).isRequired};h.__docgenInfo={description:"",methods:[],displayName:"WebTerminalContentWrapper",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Pass in content as children.",type:{name:"union",value:[{name:"arrayOf",value:{name:"node"}},{name:"node"}]}}}};export{b as W,h as a,W as b,R as u};
