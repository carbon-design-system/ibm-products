import{e as d,r as _,c as E,p as F,P as i}from"./iframe-BixY_nzU.js";import{g as M}from"./devtools-BgBiig7t.js";import{D as N}from"./DefinitionTooltip-C5zZShyp.js";import{a as w}from"./props-helper-nJuZcXxg.js";import{u as B}from"./useIsomorphicEffect-BzCQADVB.js";const t={TOP:"top",TOP_LEFT:"top-left",TOP_RIGHT:"top-right",BOTTOM:"bottom",BOTTOM_LEFT:"bottom-left",BOTTOM_RIGHT:"bottom-right",LEFT:"left",LEFT_BOTTOM:"left-bottom",LEFT_TOP:"left-top",RIGHT:"right",RIGHT_BOTTOM:"right-bottom",RIGHT_TOP:"right-top"},e={TOP:"top",TOP_START:"top-start",TOP_END:"top-end",BOTTOM:"bottom",BOTTOM_START:"bottom-start",BOTTOM_END:"bottom-end",LEFT:"left",LEFT_END:"left-end",LEFT_START:"left-start",RIGHT:"right",RIGHT_END:"right-end",RIGHT_START:"right-start"},D=a=>({[t.TOP_LEFT]:e.TOP_START,[t.TOP_RIGHT]:e.TOP_END,[t.BOTTOM_LEFT]:e.BOTTOM_START,[t.BOTTOM_RIGHT]:e.BOTTOM_END,[t.LEFT_BOTTOM]:e.LEFT_END,[t.LEFT_TOP]:e.LEFT_START,[t.RIGHT_BOTTOM]:e.RIGHT_END,[t.RIGHT_START]:e.RIGHT_START})[a],f=`${F.prefix}--string-formatter`,h="StringFormatter",p={autoAlign:!1,lines:1,tooltipDirection:e.BOTTOM_START,truncate:!1,width:null};let o=d.forwardRef(({className:a,autoAlign:l=p.autoAlign,lines:s=p.lines,tooltipDirection:c=p.tooltipDirection,truncate:T=p.truncate,width:u=p.width,value:O,...A},m)=>{const g=_.useRef(null),b=_.useRef(null),[S,y]=_.useState(!1),P=n=>{g.current=n,typeof m=="function"?m(n):m&&(m.current=n)};B(()=>{const n=()=>{const r=b.current;if(r){r.style.webkitLineClamp=T?s:void 0,r.style.maxWidth=u;const H=r.clientHeight/(2*s),I=r.scrollHeight>r.clientHeight+H;y(I)}},v=new ResizeObserver(n);return g.current&&(v.observe(g.current),n()),()=>{v.disconnect()}},[s,O,u,T]);const R=d.createElement("span",{ref:b,className:E(`${f}--content`,{[`${f}--truncate`]:T})},O);return d.createElement("span",{...A,className:E(f,a),ref:P,...M(h)},T&&S?d.createElement(N,{className:`${f}__tooltip`,align:c,autoAlign:l,definition:O,openOnHover:!0},R):R)});o=F.checkComponentEnabled(o,h);o.displayName=h;o.validateAlignment=()=>(a,l,s)=>{const c=a[l];if(Object.values(t).includes(c)){const u=D(c);console.warn(`"${c}" is a deprecated value for the "${l}" prop on the "${s}" component. Use "${u}" instead. Allowable values are: ${Object.values(e).join(", ")}.`)}};o.propTypes={className:i.string,lines:i.number,tooltipDirection:w([o.validateAlignment(),i.oneOf(Object.values(t),Object.values(e))]),truncate:i.bool,value:i.string.isRequired,width:i.string};o.__docgenInfo={description:`StringFormatter allows for truncating text while displaying a tooltip
overlay on hover or focus with the entirety of the provided copy.`,methods:[{name:"validateAlignment",docblock:null,modifiers:["static"],params:[],returns:null}],displayName:"StringFormatter",props:{autoAlign:{defaultValue:{value:"false",computed:!1},required:!1},lines:{defaultValue:{value:"1",computed:!1},description:"Number of lines to clamp value.",type:{name:"number"},required:!1},tooltipDirection:{defaultValue:{value:"'bottom-start'",computed:!1},description:"Specify the direction of the tooltip. Can be either top or bottom.",type:{name:"custom",raw:`allPropTypes([
  StringFormatter.validateAlignment(),
  PropTypes.oneOf(
    Object.values(deprecated_StringFormatterAlignment),
    Object.values(StringFormatterAlignment)
  ),
])`},required:!1},truncate:{defaultValue:{value:"false",computed:!1},description:"Whether or not the value should be truncated. if it exceeds lines.",type:{name:"bool"},required:!1},width:{defaultValue:{value:"null",computed:!1},description:"Maximum width of value which should include",type:{name:"string"},required:!1},className:{description:"Provide an optional class to be applied to the containing node.",type:{name:"string"},required:!1},value:{description:"Value to format.",type:{name:"string"},required:!0}}};export{o as S};
