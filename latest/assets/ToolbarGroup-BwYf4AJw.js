import{r as t,e as i}from"./index-DzvNrmz8.js";import{d as w,O as r}from"./index-5As4T26e.js";import{p as N,I}from"./settings-DbzZchXt.js";import{g as A}from"./getFocusableElements-BW7cf991.js";import{g as B}from"./devtools-CskDVa8y.js";const{checkComponentEnabled:F,prefix:G}=N,g=`${G}--toolbar`,x=t.createContext({});let f=t.forwardRef(({children:p,className:d,vertical:a,...m},y)=>{const u=t.useRef(void 0),s=t.useCallback(()=>u.current,[u]),T=t.useRef(null),c=y||T,[n,v]=t.useState(-1);t.useEffect(()=>{var e;u.current=A(c==null?void 0:c.current),n!==-1&&((e=s())==null||e.forEach((o,l)=>{o[l!==n?"setAttribute":"removeAttribute"]("tabindex","-1")}))}),t.useEffect(()=>{var e;n!==-1&&((e=s())==null||e[n].focus())},[n,s]);const[P,$]=a?["ArrowDown","ArrowUp"]:["ArrowRight","ArrowLeft"];function q(e){var l;const o=n+e;(l=s())!=null&&l[o]&&v(o)}function C({target:e}){const o=s();o!=null&&o.includes(e)&&v(o.indexOf(e))}function D({key:e,target:o}){var l;if((l=s())!=null&&l.includes(o))switch(e){case P:q(1);break;case $:q(-1);break}}return i.createElement("div",{...m,ref:c,className:w(g,d,{[`${g}--vertical`]:a}),onFocus:C,onKeyDown:D,...a&&{"aria-orientation":"vertical"},...B(E),role:"toolbar"},i.createElement(x.Provider,{value:{vertical:a}},p))});const E="Toolbar";f.displayName=E;f.propTypes={children:r.node.isRequired,className:r.string,vertical:r.bool};f=F(f,E);f.__docgenInfo={description:"Toolbars are a collection of action items that organize a programâ€™s interaction patterns into a series of closely related commands.",methods:[],displayName:"Toolbar",props:{className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node",type:{name:"custom",raw:"string"}},vertical:{required:!1,tsType:{name:"boolean"},description:"Determines whether the `Toolbar` is rendered vertically",type:{name:"custom",raw:"bool"}},children:{description:"Provide the content of the `Toolbar`",type:{name:"node"},required:!0}}};const R=`${g}__button`;let b=t.forwardRef(({caret:p=!1,children:d,className:a,renderIcon:m,iconDescription:y="",label:u,...s},T)=>{var n;const c=m;return i.createElement(I,{align:(n=t.useContext(x))!=null&&n.vertical?"right":"top",...s,label:u??y,ref:T,className:w(a,{[`${R}--caret`]:p}),kind:"ghost",size:"md"},i.createElement(i.Fragment,null,c?i.createElement(c,null):null,d,p&&i.createElement("span",{className:`${R}__caret`})))});const _="ToolbarButton";b.displayName=_;const S={iconDescription:r.string};b.propTypes={caret:r.bool,children:r.node,className:r.string,label:r.string.isRequired,renderIcon:r.func.isRequired,...S};b=N.checkComponentEnabled(b,_);b.__docgenInfo={description:"Toolbar buttons are common functions performed as part of a products interface or an open window.",methods:[],displayName:"ToolbarButton",props:{caret:{required:!1,tsType:{name:"boolean"},description:"Determines whether the caret is rendered",defaultValue:{value:"false",computed:!1},type:{name:"custom",raw:"bool"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node",type:{name:"custom",raw:"string"}},iconDescription:{required:!1,tsType:{name:"string"},description:"@deprecated use `label` instead\nSpecifies the label for the icon button",defaultValue:{value:"''",computed:!1},type:{name:"custom",raw:"string"}},label:{required:!0,tsType:{name:"string"},description:"Specifies the label for the icon button",type:{name:"string"}},renderIcon:{required:!0,tsType:{name:"ReactElementType",raw:"React.ElementType"},description:"Specifies the icon to be used by the ToolbarButton component",type:{name:"func"}},children:{description:"Provide the content of the `ToolbarButton`",type:{name:"custom",raw:"node"},required:!1}}};let h=t.forwardRef(({className:p,children:d,...a},m)=>i.createElement("div",{...a,ref:m,className:w(`${g}__group`,p)},d));const k="ToolbarGroup";h.displayName=k;h.propTypes={children:r.node.isRequired,className:r.string};h=N.checkComponentEnabled(h,k);h.__docgenInfo={description:"Toolbar groups organize the commands within a toolbar into related groups.",methods:[],displayName:"ToolbarGroup",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Provide the content of the `ToolbarGroup`",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node",type:{name:"custom",raw:"string"}}}};export{f as T,h as a,b};
