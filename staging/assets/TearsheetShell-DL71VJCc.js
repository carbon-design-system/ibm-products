import{e as n,r as c}from"./index-DxDX2vOa.js";import{u as he}from"./useResizeObserver-DUmvKY5Q.js";import{P as e,b as ue,F as fe,c as g}from"./index-B_euquWE.js";import{p as ye,B as K}from"./settings-0ThqPtR3.js";import{g as ge}from"./getNodeTextContent-C8IeKkUQ.js";import{d as be}from"./props-helper-DmbAnr2a.js";import{C as we,M as ve}from"./ComposedModal-BsLCo1xi.js";import{L as Te}from"./index-B1YmXwfC.js";import{u as _e}from"./usePortalTarget-BfZpr1XQ.js";import{u as Ne,c as G}from"./useFocus-57u9QJvZ.js";import{u as $e}from"./usePreviousValue-CLgSY5iR.js";import{A as qe}from"./ActionSet-0Lk-L5n-.js";const J=a=>{let i=!0;return n.Children.forEach(a,d=>{var b,w;d&&i&&(i=((b=d==null?void 0:d.type)==null?void 0:b.displayName)==="Wrap"&&J((w=d==null?void 0:d.props)==null?void 0:w.children))}),i},o=n.forwardRef(({alwaysRender:a,children:i,element:d="div",neverRender:b,className:w,title:x,..._},O)=>(b||J(i))&&!a?null:n.createElement(d,{className:w,..._,ref:O,title:x},i));o.displayName="Wrap";o.propTypes={alwaysRender:e.bool,children:e.node,className:e.string,element:e.elementType,neverRender:e.bool,title:e.string};o.__docgenInfo={description:`A simple conditional wrapper that encloses its children in a <div> (or other
element if specified), passing any supplied attributes to the <div> (or other
element). The component renders nothing at all if there are no children or
the children are empty/falsy, or if all the non-falsy children are themselves
Wrap components that do not wish to render. This behavior can be overridden
by setting neverRender or alwaysRender to true. Note that if a ref is passed,
the ref.current will be set to the wrapper element if it renders, and will
remain undefined if it does not render.`,methods:[],displayName:"Wrap",props:{alwaysRender:{required:!1,tsType:{name:"union",raw:"boolean | null",elements:[{name:"boolean"},{name:"null"}]},description:`Specify whether the wrapper element should render even if there are no
children or the children are themselves empty wrappers. Useful if there
are some conditions in which the wrapper element is still required. Note
that this prop takes precedence over neverRender if both are set to true.`,type:{name:"bool"}},element:{required:!1,tsType:{name:"union",raw:"(() => ReactNode) | string | ElementType",elements:[{name:"unknown"},{name:"string"},{name:"ElementType"}]},description:"The element name or component to use as a wrapper for the content.",defaultValue:{value:"'div'",computed:!1},type:{name:"elementType"}},neverRender:{required:!1,tsType:{name:"boolean"},description:`Specify whether nothing should be rendered even if there are children
in the content. Useful if there are some circumstances in which the
component should not render at all. Note that if alwaysRender is also
set to true then it will take precedence and the wrapper element and
content will be rendered.`,type:{name:"bool"}},className:{required:!1,tsType:{name:"string"},description:"",type:{name:"string"}},tabIndex:{required:!1,tsType:{name:"number"},description:"Tab index for the wrapper div"},title:{required:!1,tsType:{name:"string"},description:"The title attribute the content.",type:{name:"string"}},children:{description:`The content of the wrapper element. If no children are supplied, or the
resulting value(s) are falsy, or if all the non-falsy children are Wrap
components that decide not to render, nothing will be rendered in the DOM.`,type:{name:"node"},required:!1}},composes:["PropsWithChildren"]};const t=`${ye.prefix}--tearsheet`,Ee="TearsheetShell",Re=3,r={open:[],all:[],sizes:[]},je=["headerActions","influencer","influencerPosition","influencerWidth","navigation"],Q=a=>!a||!(a!=null&&a.length),X=(a,i)=>i??Q(a),z=n.forwardRef(({actions:a,aiLabel:i,ariaLabel:d,children:b,className:w,closeIconDescription:x,description:_,hasCloseIcon:O,headerActions:W,influencer:C,influencerPosition:P,influencerWidth:F,label:D,navigation:A,onClose:B,open:l,portalTarget:Y,selectorPrimaryFocus:u,selectorsFloatingMenus:Z=[],size:$,slug:L,title:I,verticalPosition:ee,launcherButtonRef:M,...te},ne)=>{const q=ue(),j=`${q}--modal-header`,ae=_e(Y),oe=c.useRef(void 0),H=c.useRef(null),re=c.useRef(null),v=ne||oe,{width:E}=he(H),V=$e(l),{firstElement:f,keyDownListener:se,specifiedElement:R}=Ne(v,u),U=v.current,ie=c.useCallback(p=>p.replace(/<\/?[^>]+(>|$)/g,""),[])(String(_)),N=$==="wide",[m,le]=c.useState(0),[T,ce]=c.useState(0),S=c.useRef(void 0);c.useEffect(()=>{S.current=m});const de=Q(a),k=X(a,O);function y(p,s){le(p),ce(s)}y.checkFocus=function(){l&&T===m&&U&&!U.contains(document.activeElement)&&y.claimFocus()},y.claimFocus=function(){G(f,v,u)},c.useEffect(()=>{l&&G(f,v,u)},[f,v,l,u]),c.useEffect(()=>{V&&!l&&M&&setTimeout(()=>{M.current.focus()},0)},[M,l,V]),c.useEffect(()=>{l&&T!==m&&setTimeout(()=>{if(u)return R==null?void 0:R.focus();f==null||f.focus()},0)},[T,m,f,l,R,u]),c.useEffect(()=>{const p=()=>r.all.forEach(s=>{var h;s(Math.min(r.open.length,Re),r.open.indexOf(s)+1),(h=s.checkFocus)==null||h.call(s)});return r.all.push(y),r.sizes.push($),l&&(r.open.push(y),p()),function(){r.all.splice(r.all.indexOf(y),1),r.sizes.splice(r.sizes.indexOf($),1);const h=r.open.indexOf(y);h>=0&&(r.open.splice(h,1),p())}},[l,$]);function pe(){var p,s;T<m&&((s=(p=r.open[r.open.length-1]).claimFocus)==null||s.call(p))}if(T<=m){const p=D||I||_||W||A||k,s=a&&(a==null?void 0:a.length)>0,h=()=>new Set(r.sizes).size===1,me=()=>h()?{[`--${t}--stacking-scale-factor-single`]:(E-32)/E,[`--${t}--stacking-scale-factor-double`]:(E-64)/E}:{[`--${t}--stacking-scale-factor-single`]:1,[`--${t}--stacking-scale-factor-double`]:1};return ae(n.createElement(fe,{enableExperimentalFocusWrapWithoutSentinels:!0},n.createElement(we,{...te,"aria-label":d||ge(I),className:g(t,w,{[`${t}--stacked-${T}-of-${m}`]:m>1||m===1&&((S==null?void 0:S.current)??0)>1,[`${t}--wide`]:N,[`${t}--narrow`]:!N,[`${t}--has-slug`]:L,[`${t}--has-ai-label`]:i,[`${t}--has-close`]:k}),slug:i||L,style:me(),containerClassName:g(`${t}__container`,{[`${t}__container--lower`]:ee==="lower",[`${t}__container--mixed-size-stacking`]:!h()}),onClose:B,open:l,selectorPrimaryFocus:u,onFocus:pe,onKeyDown:se,preventCloseOnClickOutside:!de,ref:v,selectorsFloatingMenus:[`.${q}--overflow-menu-options`,`.${q}--tooltip`,".flatpickr-calendar",`.${t}__container`,...Z],size:"sm"},p&&n.createElement(ve,{className:g(`${t}__header`,{[`${t}__header--with-close-icon`]:k,[`${t}__header--with-nav`]:A}),closeClassName:g({[`${t}__header--no-close-icon`]:!k}),closeModal:B,iconDescription:x},n.createElement(o,{className:`${t}__header-content`,element:N?Te:void 0},n.createElement(o,{className:`${t}__header-fields`},n.createElement(o,{element:"h2",className:`${j}__label`},D),n.createElement(o,{element:"h3",className:g(`${j}__heading`,`${t}__heading`)},I),n.createElement(o,{className:`${t}__header-description`,title:ie},_)),n.createElement(o,{className:`${t}__header-actions`},W)),n.createElement(o,{className:`${t}__header-navigation`},A)),n.createElement(o,{ref:re,className:`${q}--modal-content ${t}__body`},n.createElement(o,{className:g({[`${t}__influencer`]:!0,[`${t}__influencer--wide`]:F==="wide"}),neverRender:P==="right"},C),n.createElement(o,{className:`${t}__right`},n.createElement(o,{className:`${t}__main`,alwaysRender:s},n.createElement(o,{className:`${t}__content`,alwaysRender:!!(C&&P==="right"),tabIndex:-1},b),n.createElement(o,{className:g({[`${t}__influencer`]:!0,[`${t}__influencer--wide`]:F==="wide"}),neverRender:P!=="right"},C)),s&&n.createElement(o,{className:`${t}__button-container`},n.createElement(qe,{actions:a,buttonSize:N?"2xl":void 0,className:`${t}__buttons`,size:N?"2xl":"lg","aria-hidden":!l})))),n.createElement("div",{className:`${t}__resize-detector`,ref:H}))))}else return null});z.displayName=Ee;const Se=typeof Element>"u"?e.object:e.instanceOf(Element),ke={slug:be(e.node),verticalPosition:e.oneOf(["normal","lower"])};z.propTypes={actions:e.arrayOf(e.shape({...K.propTypes,kind:e.oneOf(["ghost","danger--ghost","secondary","danger","primary"]),label:e.string,loading:e.bool,onClick:K.propTypes.onClick})),aiLabel:e.oneOfType([e.node,e.bool]),children:e.node,className:e.string,closeIconDescription:e.string.isRequired.if(({actions:a,hasCloseIcon:i})=>X(a,i)),description:e.node,hasCloseIcon:e.bool,headerActions:e.element,influencer:e.element,influencerPosition:e.oneOf(["left","right"]),influencerWidth:e.oneOf(["narrow","wide"]),label:e.node,launcherButtonRef:e.any,navigation:e.element,onClose:e.func,open:e.bool,portalTarget:Se,selectorPrimaryFocus:e.string,selectorsFloatingMenus:e.arrayOf(e.string),size:e.oneOf(["narrow","wide"]).isRequired,title:e.node,...ke};z.__docgenInfo={description:`TearSheetShell is used internally by TearSheet and TearSheetNarrow

The component is not public.

See the canvas tab for the component API details.`,methods:[],displayName:"TearsheetShell",props:{actions:{required:!1,tsType:{name:"Array",elements:[{name:"TearsheetAction"}],raw:"TearsheetAction[]"},description:`The actions to be shown as buttons in the action area at the bottom of the
tearsheet. Each action is specified as an object with optional fields
'label' to supply the button label, 'kind' to select the button kind (must
be 'primary', 'secondary' or 'ghost'), 'loading' to display a loading
indicator, and 'onClick' to receive notifications when the button is
clicked. Additional fields in the object will be passed to the Button
component, and these can include 'disabled', 'ref', 'className', and any
other Button props. Any other fields in the object will be passed through
to the button element as HTML attributes.

See https://react.carbondesignsystem.com/?path=/docs/components-button--default#component-api`,type:{name:"arrayOf",value:{name:"shape",value:{kind:{name:"enum",value:[{value:"'ghost'",computed:!1},{value:"'danger--ghost'",computed:!1},{value:"'secondary'",computed:!1},{value:"'danger'",computed:!1},{value:"'primary'",computed:!1}],required:!1},label:{name:"string",required:!1},loading:{name:"bool",required:!1},onClick:{name:"custom",raw:"Button.propTypes.onClick",required:!1}}}}},aiLabel:{required:!1,tsType:{name:"ReactNode"},description:`Optional prop that is intended for any scenario where something is being generated by AI to reinforce AI transparency,
accountability, and explainability at the UI level.`,type:{name:"union",value:[{name:"node"},{name:"bool"}]}},ariaLabel:{required:!1,tsType:{name:"string"},description:""},className:{required:!1,tsType:{name:"string"},description:"An optional class or classes to be added to the outermost element.",type:{name:"string"}},description:{required:!1,tsType:{name:"ReactNode"},description:"A description of the flow, displayed in the header area of the tearsheet.",type:{name:"node"}},hasCloseIcon:{required:!1,tsType:{name:"boolean"},description:`Enable a close icon ('x') in the header area of the tearsheet. By default,
(when this prop is omitted, or undefined or null) a tearsheet does not
display a close icon if there are navigation actions ("transactional
tearsheet") and displays one if there are no navigation actions ("passive
tearsheet"), and that behavior can be overridden if required by setting
this prop to either true or false.`,type:{name:"bool"}},headerActions:{required:!1,tsType:{name:"ReactNode"},description:`The content for the header actions area, displayed alongside the title in
the header area of the tearsheet. This is typically a drop-down, or a set
of small buttons, or similar. NB the headerActions is only applicable for
wide tearsheets.`,type:{name:"element"}},influencer:{required:!1,tsType:{name:"ReactNode"},description:`The content for the influencer section of the tearsheet, displayed
alongside the main content. This is typically a menu, or filter, or
progress indicator, or similar. NB the influencer is only applicable for
wide tearsheets.`,type:{name:"element"}},influencerPosition:{required:!1,tsType:{name:"union",raw:"'left' | 'right'",elements:[{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}]},description:"The position of the influencer section, 'left' or 'right'.",type:{name:"enum",value:[{value:"'left'",computed:!1},{value:"'right'",computed:!1}]}},influencerWidth:{required:!1,tsType:{name:"union",raw:"'narrow' | 'wide'",elements:[{name:"literal",value:"'narrow'"},{name:"literal",value:"'wide'"}]},description:`The width of the influencer: 'narrow' (the default) is 256px, and 'wide'
is 320px.`,type:{name:"enum",value:[{value:"'narrow'",computed:!1},{value:"'wide'",computed:!1}]}},label:{required:!1,tsType:{name:"ReactNode"},description:`A label for the tearsheet, displayed in the header area of the tearsheet
to maintain context for the tearsheet (e.g. as the title changes from page
to page of a multi-page task).`,type:{name:"node"}},launcherButtonRef:{required:!1,tsType:{name:"RefObject",elements:[{name:"any"}],raw:"RefObject<any>"},description:"Provide a ref to return focus to once the tearsheet is closed.",type:{name:"any"}},navigation:{required:!1,tsType:{name:"ReactNode"},description:`Navigation content, such as a set of tabs, to be displayed at the bottom
of the header area of the tearsheet. NB the navigation is only applicable
for wide tearsheets.`,type:{name:"element"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"An optional handler that is called when the user closes the tearsheet (by\nclicking the close button, if enabled, or clicking outside, if enabled).\nReturning `false` here prevents the modal from closing.",type:{name:"func"}},open:{required:!1,tsType:{name:"boolean"},description:"Specifies whether the tearsheet is currently open.",type:{name:"bool"}},portalTarget:{required:!1,tsType:{name:"HTMLElement"},description:"The DOM element that the tearsheet should be rendered within. Defaults to document.body.",type:{name:"custom",raw:`typeof Element === 'undefined'
? PropTypes.object
: // eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope
  PropTypes.instanceOf(Element)`}},selectorPrimaryFocus:{required:!1,tsType:{name:"string"},description:`Specify a CSS selector that matches the DOM element that should be
focused when the Modal opens.`,type:{name:"string"}},selectorsFloatingMenus:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:`Specify the CSS selectors that match the floating menus.

See https://react.carbondesignsystem.com/?path=/docs/components-composedmodal--overview#focus-management`,defaultValue:{value:"[]",computed:!1},type:{name:"arrayOf",value:{name:"string"}}},size:{required:!0,tsType:{name:"union",raw:"'narrow' | 'wide'",elements:[{name:"literal",value:"'narrow'"},{name:"literal",value:"'wide'"}]},description:"Specifies the width of the tearsheet, 'narrow' or 'wide'.",type:{name:"enum",value:[{value:"'narrow'",computed:!1},{value:"'wide'",computed:!1}]}},title:{required:!1,tsType:{name:"ReactNode"},description:"The main title of the tearsheet, displayed in the header area.",type:{name:"node"}},verticalPosition:{required:!1,tsType:{name:"union",raw:"'normal' | 'lower'",elements:[{name:"literal",value:"'normal'"},{name:"literal",value:"'lower'"}]},description:`**Deprecated**

The position of the top of tearsheet in the viewport. The 'normal'
position is a short distance down from the top of the
viewport, leaving room at the top for a global header bar to show through
from below. The 'lower' position (the default) provides a little extra room at the top
to allow an action bar navigation or breadcrumbs to also show through.`,type:{name:"enum",value:[{value:"'normal'",computed:!1},{value:"'lower'",computed:!1}]}},slug:{required:!1,tsType:{name:"ReactNode"},description:"@deprecated Property replaced by `aiLabel`",type:{name:"custom",raw:"deprecateProp(PropTypes.node, 'Property replaced by `aiLabel`')"}},children:{description:"The main content of the tearsheet.",type:{name:"node"},required:!1},closeIconDescription:{description:`The accessibility title for the close icon (if shown).

**Note:** This prop is only required if a close icon is shown, i.e. if
there are a no navigation actions and/or hasCloseIcon is true.`,type:{name:"string"},required:!0}},composes:["PropsWithChildren"]};export{z as T,je as a,Se as p,X as t};
