import{e as i,S as u,r as x}from"./iframe-Cbdf71kV.js";import{g}from"./getBatchActions-B1Dp6TZS.js";import{s as w,m as E}from"./_storybook-styles-Dcp-q267.js";import{D as f}from"./DatagridActions-Csl207B4.js";import{D as S}from"./DatagridPagination-DlBWx9ED.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as s,u as T}from"./useDatagrid-CCUBBHiu.js";import{u as h}from"./useExpandedRow-Cd7CO7Q_.js";import{u as D}from"./useSelectRows-BRRChLgf.js";import{u as C}from"./useStickyColumn-Cu9SVymX.js";import{u as R}from"./usePrefix-B1Vk3SEl.js";import{E as H}from"./bucket-6-BiOweKob.js";import{T as b}from"./bucket-17-EDub3a_N.js";import"./bucket-0-DLaAcJTT.js";import"./bucket-2-D5C3PV8a.js";import"./index-DgPdVJKo.js";import"./bucket-18-DV2Au_NX.js";import"./bucket-7-PHG--wod.js";import"./ComposedModal-Bq5ZjMWK.js";import"./index-BEhuL1MR.js";import"./index-QS6KczTe.js";import"./LayerContext-CszjMr56.js";import"./clamp--00YEiB8.js";import"./ButtonSet-BMY4CLjn.js";import"./InlineLoading-DLaaz_4f.js";import"./mergeRefs-91-mP8KM.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-bi0LZfCr.js";import"./Text-ByKyVd5E.js";import"./utils-Rl5Zs1h-.js";import"./TableToolbarSearch-BeU5cYwb.js";import"./wrapComponent-6pCNybjM.js";import"./Search-C7JQKTZg.js";import"./FormContext-ChOR-8Xx.js";import"./bucket-15-ChlaTHT7.js";import"./Dropdown-CaUv9lOM.js";import"./index-BhC_9JVN.js";import"./inheritsLoose-DHKJTbHM.js";import"./bucket-19-CLDj7gXe.js";import"./MenuItem-Bo2vpwwn.js";import"./useControllableState-DbGBZOCF.js";import"./useAttachedMenu-C1kZRlVt.js";import"./index-B-ZGWXBA.js";import"./index-C0spF9CE.js";import"./bucket-12-Bk4MPs7x.js";import"./useOutsideClick-CMmEFlbp.js";import"./OverflowMenuItem-DMIMlpdR.js";import"./useFilterContext-BdhZNmTC.js";import"./bucket-14-DJq4_6YR.js";import"./Pagination-C3fCWnbg.js";import"./Select-ChCzqSeb.js";import"./SelectItem-DAKeJuiX.js";import"./MultiSelect-BrY82tK2.js";import"./Checkbox-BvGpbVrt.js";import"./devtools-BsT0_Owc.js";import"./TableRow-8kxUzvw7.js";import"./bucket-1-UwX97pQm.js";import"./TableToolbar-CA0WFVAE.js";import"./index-C7uzh38o.js";import"./ErrorEmptyState-Fvwsskak.js";import"./EmptyState-a2h_WSAg.js";import"./props-helper-DqfsKzpa.js";import"./Link-CCRD-roz.js";import"./EmptyStateV2-B_pFntri.js";import"./ErrorIllustration-voXf930C.js";import"./useId-DuEKhUSL.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-Dxz0XsqI.js";import"./NoDataIllustration-aAGauCbj.js";import"./NotFoundEmptyState-gX1ruwky.js";import"./NotFoundIllustration-O2rP2xrO.js";import"./index.esm-Drl2VZFI.js";import"./usePreviousValue-DaZSyAQn.js";import"./useResizeObserver-CHiKmAS_.js";import"./useIsomorphicEffect-BHn7yZvq.js";import"./getFocusableElements-BW7cf991.js";import"./index-B1vwz3bX.js";import"./useClickOutside-2vuCWMc6.js";import"./AccordionItem-BVcrCqLd.js";import"./DatePicker-B3Vhtj2N.js";import"./FormGroup-Cn0kfrVG.js";import"./NumberInput-CKIdJc9G.js";import"./useNormalizedInputProps-BAp2UTAQ.js";import"./documentLang-E105Y72C.js";import"./bucket-16-DhadWLG_.js";import"./RadioButton-BQbGm97X.js";import"./RadioButtonGroup-CNJR6wJv.js";import"./usePrefersReducedMotion-DIJT2YR_.js";import"./usePresence-DNY-Q6Ev.js";import"./ActionSet-DUU_jnHS.js";import"./useWindowResize-E5YOh0xP.js";import"./TagSet-JPt6FeBY.js";import"./Tag-nqTZA0wF.js";import"./DefinitionTooltip-CJlV5yRZ.js";import"./DismissibleTag-BEWryI1z.js";import"./usePortalTarget-D9BcsXEH.js";import"./OperationalTag-DJ9vnd-a.js";import"./SkeletonText-C9cAPVd3.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-CqVyzEAB.js";import"./TableSelectRow-DG3Gk9ks.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:p}=__STORYBOOK_MODULE_ACTIONS__,bt={title:"Deprecated/Datagrid/ExpandableRow",component:s,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:p("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:p("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(s,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const Bt=["ExpandableRowStory"];export{e as ExpandableRowStory,Bt as __namedExportsOrder,bt as default};
