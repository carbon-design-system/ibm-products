import{e as i,S as u,r as x}from"./iframe-B06X_oSn.js";import{g}from"./getBatchActions-Bn8DP4RD.js";import{s as w,m as E}from"./_storybook-styles-DN99CvGS.js";import{D as f}from"./DatagridActions-Dpy64I61.js";import{D as S}from"./DatagridPagination-JKYkt6Zq.js";import{A as r}from"./getArgTypes-Ci8wh0IQ.js";import{D as p,u as T}from"./useDatagrid-Bnex4JxP.js";import{u as h}from"./useExpandedRow-zQ41DqUz.js";import{u as D}from"./useSelectRows-BL_ErnUS.js";import{u as C}from"./useStickyColumn-CbdGeV-D.js";import{u as R}from"./usePrefix-Czqp5O0u.js";import{E as H}from"./bucket-6-CXHwg_52.js";import{T as b}from"./bucket-18-hOSj86Ex.js";import"./bucket-0-BPVGxoL3.js";import"./bucket-2-DTaJ0mg9.js";import"./index-BYuspRHq.js";import"./bucket-7-mkInqmAK.js";import"./bucket-19-DIBHTWkV.js";import"./ComposedModal-CwZ0Pnju.js";import"./index-B0VEw6cB.js";import"./LayerContext-CMp3yckT.js";import"./clamp--00YEiB8.js";import"./ButtonSet-oAVNqJ7O.js";import"./InlineLoading-DpNzirJ0.js";import"./mergeRefs-D4pwfk3t.js";import"./requiredIfGivenPropIsTruthy-VsRXdxiC.js";import"./wrapFocus-BbzW8Hks.js";import"./Text-BNZPVZMz.js";import"./utils-CAn8HyWE.js";import"./TableToolbarSearch-hhU8_V7h.js";import"./wrapComponent-D9H0lsxi.js";import"./Search-Do8DlnXk.js";import"./FormContext-CV1tIC8k.js";import"./bucket-15-uKcem5Zx.js";import"./Dropdown-D9S0rVlu.js";import"./index-BRivBB8X.js";import"./inheritsLoose-DHKJTbHM.js";import"./MenuItem-C094aA21.js";import"./useControllableState-CVLdOTaw.js";import"./useAttachedMenu-BK1NY8rH.js";import"./index-DmBxKwuV.js";import"./index-C-Kp80_u.js";import"./bucket-13-Cf4diNHv.js";import"./useOutsideClick-CyPXp_NH.js";import"./OverflowMenuItem-6k5kdran.js";import"./useFilterContext-eVZccNjG.js";import"./bucket-14-Br7jBy00.js";import"./Pagination-C1t3RgCW.js";import"./Select-CrEhUMck.js";import"./SelectItem-PRLr1IO0.js";import"./MultiSelect-C4X_Ukqa.js";import"./Checkbox-9HmCQOfr.js";import"./devtools-BYTU908B.js";import"./TableRow-DpROseOI.js";import"./bucket-1-bKXnQraS.js";import"./TableToolbar-CqEl6zxh.js";import"./index-Bo2paA6_.js";import"./ErrorEmptyState-CmrgEayk.js";import"./EmptyState-8hsF-QY9.js";import"./EmptyStateV2.deprecated-BkZ-C1N-.js";import"./Link-DbpUCrpK.js";import"./ErrorIllustration-BH-HImzj.js";import"./useId-BAfT9MjJ.js";import"./uuidv4-BN2rGLQG.js";import"./NoDataEmptyState-B4lhXCHd.js";import"./NoDataIllustration-DisLshay.js";import"./NotFoundEmptyState-HgaMVIcv.js";import"./NotFoundIllustration-CEZMgiBE.js";import"./index.esm-CvkSHfno.js";import"./usePreviousValue-CKJ1yiIZ.js";import"./useResizeObserver-CDwlcMV3.js";import"./useIsomorphicEffect-Cw3FTHuQ.js";import"./getFocusableElements-BW7cf991.js";import"./index-K6A31R8p.js";import"./props-helper-CTf-A1om.js";import"./useClickOutside-BCXEJHNU.js";import"./AccordionItem-CfOaNMpL.js";import"./DatePicker-Ca5kmlmY.js";import"./FormGroup-CcdXe4xs.js";import"./NumberInput-B79ztScf.js";import"./useNormalizedInputProps-CZEJUS1l.js";import"./documentLang-E105Y72C.js";import"./bucket-16-BLpQeLrN.js";import"./RadioButton-C6Qt3oJ6.js";import"./RadioButtonGroup-SOVGOyBi.js";import"./usePrefersReducedMotion-R7cmgpMo.js";import"./usePresence-CYrAcx58.js";import"./ActionSet-jRuZbZ14.js";import"./useWindowResize-LvSsTceT.js";import"./TagSet-Bs6O-vdy.js";import"./Tag-WKxTmgqK.js";import"./DefinitionTooltip-PpE6ZZSr.js";import"./DismissibleTag-BfWHynv2.js";import"./usePortalTarget-Dhd837UD.js";import"./OperationalTag-BxaTSISh.js";import"./SkeletonText-Cl4iQ8tB.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./useFocusRowExpander-CDcLOcOn.js";import"./TableSelectRow-kgpT8G2R.js";const n=()=>i.createElement(u,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});n.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const{action:s}=__STORYBOOK_MODULE_ACTIONS__,Rt={title:"Deprecated/Datagrid/ExpandableRow",component:p,tags:["autodocs"],parameters:{styles:w,docs:{page:n},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},B=[{Header:"Row Index",accessor:(t,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={gridTitle:"Data table title",gridDescription:"Additional information if needed",rowActions:[{id:"edit",itemText:"Edit",icon:H,onClick:s("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:b,isDelete:!0,onClick:s("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},y=({row:t})=>{const o=R();return i.createElement("div",{className:`${o}__test-class-with-prefix-hook`},"Content for row index: ",t.id)},_=({...t})=>{const o=i.useMemo(()=>[...B],[]),[d]=x.useState(E(10)),m=T({columns:o,data:d,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:f,DatagridPagination:S,ExpandedRowContentComponent:y,tags:["autodocs"],batchActions:!0,toolbarBatchActions:g(),onRowExpand:(c,l)=>console.log(c,l),...t.defaultGridProps},C,D,h);return i.createElement(p,{datagridState:m})},k=({...t})=>i.createElement(_,{defaultGridProps:{...t}}),A={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},P="With expandable row",e=k.bind({});e.storyName=P;e.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};e.args={...A};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...e.parameters?.docs?.source}}};const Ht=["ExpandableRowStory"];export{e as ExpandableRowStory,Ht as __namedExportsOrder,Rt as default};
